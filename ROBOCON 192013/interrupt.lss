
interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b02  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000b56  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000053  00000000  00000000  00000b76  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000362  00000000  00000000  00000bc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000104  00000000  00000000  00000f2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000003b8  00000000  00000000  0000102f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000060  00000000  00000000  000013e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000104  00000000  00000000  00001448  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 02 03 	jmp	0x604	; 0x604 <__vector_11>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 70 02 	call	0x4e0	; 0x4e0 <main>
  64:	0c 94 7f 05 	jmp	0xafe	; 0xafe <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <delay>:
		__ticks = (uint16_t)__tmp;
	_delay_loop_2(__ticks);
}

void delay(double seconds)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	64 97       	sbiw	r28, 0x14	; 20
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	69 8b       	std	Y+17, r22	; 0x11
  82:	7a 8b       	std	Y+18, r23	; 0x12
  84:	8b 8b       	std	Y+19, r24	; 0x13
  86:	9c 8b       	std	Y+20, r25	; 0x14
  88:	90 c0       	rjmp	.+288    	; 0x1aa <delay+0x13e>

	int i;
	for(;seconds;seconds--)
	for(i=0;i<100;i++)
  8a:	18 8a       	std	Y+16, r1	; 0x10
  8c:	1f 86       	std	Y+15, r1	; 0x0f
  8e:	77 c0       	rjmp	.+238    	; 0x17e <delay+0x112>
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	a0 e2       	ldi	r26, 0x20	; 32
  96:	b1 e4       	ldi	r27, 0x41	; 65
  98:	8b 87       	std	Y+11, r24	; 0x0b
  9a:	9c 87       	std	Y+12, r25	; 0x0c
  9c:	ad 87       	std	Y+13, r26	; 0x0d
  9e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  a0:	6b 85       	ldd	r22, Y+11	; 0x0b
  a2:	7c 85       	ldd	r23, Y+12	; 0x0c
  a4:	8d 85       	ldd	r24, Y+13	; 0x0d
  a6:	9e 85       	ldd	r25, Y+14	; 0x0e
  a8:	20 e0       	ldi	r18, 0x00	; 0
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	4a e7       	ldi	r20, 0x7A	; 122
  ae:	55 e4       	ldi	r21, 0x45	; 69
  b0:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
  b4:	dc 01       	movw	r26, r24
  b6:	cb 01       	movw	r24, r22
  b8:	8f 83       	std	Y+7, r24	; 0x07
  ba:	98 87       	std	Y+8, r25	; 0x08
  bc:	a9 87       	std	Y+9, r26	; 0x09
  be:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
  c0:	6f 81       	ldd	r22, Y+7	; 0x07
  c2:	78 85       	ldd	r23, Y+8	; 0x08
  c4:	89 85       	ldd	r24, Y+9	; 0x09
  c6:	9a 85       	ldd	r25, Y+10	; 0x0a
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	40 e8       	ldi	r20, 0x80	; 128
  ce:	5f e3       	ldi	r21, 0x3F	; 63
  d0:	0e 94 0b 04 	call	0x816	; 0x816 <__cmpsf2>
  d4:	88 23       	and	r24, r24
  d6:	2c f4       	brge	.+10     	; 0xe2 <delay+0x76>
		__ticks = 1;
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	9e 83       	std	Y+6, r25	; 0x06
  de:	8d 83       	std	Y+5, r24	; 0x05
  e0:	3f c0       	rjmp	.+126    	; 0x160 <delay+0xf4>
	else if (__tmp > 65535)
  e2:	6f 81       	ldd	r22, Y+7	; 0x07
  e4:	78 85       	ldd	r23, Y+8	; 0x08
  e6:	89 85       	ldd	r24, Y+9	; 0x09
  e8:	9a 85       	ldd	r25, Y+10	; 0x0a
  ea:	20 e0       	ldi	r18, 0x00	; 0
  ec:	3f ef       	ldi	r19, 0xFF	; 255
  ee:	4f e7       	ldi	r20, 0x7F	; 127
  f0:	57 e4       	ldi	r21, 0x47	; 71
  f2:	0e 94 18 05 	call	0xa30	; 0xa30 <__gesf2>
  f6:	18 16       	cp	r1, r24
  f8:	4c f5       	brge	.+82     	; 0x14c <delay+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
  fa:	6b 85       	ldd	r22, Y+11	; 0x0b
  fc:	7c 85       	ldd	r23, Y+12	; 0x0c
  fe:	8d 85       	ldd	r24, Y+13	; 0x0d
 100:	9e 85       	ldd	r25, Y+14	; 0x0e
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	40 e2       	ldi	r20, 0x20	; 32
 108:	51 e4       	ldi	r21, 0x41	; 65
 10a:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 10e:	dc 01       	movw	r26, r24
 110:	cb 01       	movw	r24, r22
 112:	bc 01       	movw	r22, r24
 114:	cd 01       	movw	r24, r26
 116:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 11a:	dc 01       	movw	r26, r24
 11c:	cb 01       	movw	r24, r22
 11e:	9e 83       	std	Y+6, r25	; 0x06
 120:	8d 83       	std	Y+5, r24	; 0x05
 122:	0f c0       	rjmp	.+30     	; 0x142 <delay+0xd6>
 124:	80 e9       	ldi	r24, 0x90	; 144
 126:	91 e0       	ldi	r25, 0x01	; 1
 128:	9c 83       	std	Y+4, r25	; 0x04
 12a:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 12c:	8b 81       	ldd	r24, Y+3	; 0x03
 12e:	9c 81       	ldd	r25, Y+4	; 0x04
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <delay+0xc4>
 134:	9c 83       	std	Y+4, r25	; 0x04
 136:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 138:	8d 81       	ldd	r24, Y+5	; 0x05
 13a:	9e 81       	ldd	r25, Y+6	; 0x06
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	9e 83       	std	Y+6, r25	; 0x06
 140:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 142:	8d 81       	ldd	r24, Y+5	; 0x05
 144:	9e 81       	ldd	r25, Y+6	; 0x06
 146:	00 97       	sbiw	r24, 0x00	; 0
 148:	69 f7       	brne	.-38     	; 0x124 <delay+0xb8>
 14a:	14 c0       	rjmp	.+40     	; 0x174 <delay+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 14c:	6f 81       	ldd	r22, Y+7	; 0x07
 14e:	78 85       	ldd	r23, Y+8	; 0x08
 150:	89 85       	ldd	r24, Y+9	; 0x09
 152:	9a 85       	ldd	r25, Y+10	; 0x0a
 154:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 158:	dc 01       	movw	r26, r24
 15a:	cb 01       	movw	r24, r22
 15c:	9e 83       	std	Y+6, r25	; 0x06
 15e:	8d 83       	std	Y+5, r24	; 0x05
 160:	8d 81       	ldd	r24, Y+5	; 0x05
 162:	9e 81       	ldd	r25, Y+6	; 0x06
 164:	9a 83       	std	Y+2, r25	; 0x02
 166:	89 83       	std	Y+1, r24	; 0x01
 168:	89 81       	ldd	r24, Y+1	; 0x01
 16a:	9a 81       	ldd	r25, Y+2	; 0x02
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <delay+0x100>
 170:	9a 83       	std	Y+2, r25	; 0x02
 172:	89 83       	std	Y+1, r24	; 0x01
void delay(double seconds)
{

	int i;
	for(;seconds;seconds--)
	for(i=0;i<100;i++)
 174:	8f 85       	ldd	r24, Y+15	; 0x0f
 176:	98 89       	ldd	r25, Y+16	; 0x10
 178:	01 96       	adiw	r24, 0x01	; 1
 17a:	98 8b       	std	Y+16, r25	; 0x10
 17c:	8f 87       	std	Y+15, r24	; 0x0f
 17e:	8f 85       	ldd	r24, Y+15	; 0x0f
 180:	98 89       	ldd	r25, Y+16	; 0x10
 182:	84 36       	cpi	r24, 0x64	; 100
 184:	91 05       	cpc	r25, r1
 186:	0c f4       	brge	.+2      	; 0x18a <delay+0x11e>
 188:	83 cf       	rjmp	.-250    	; 0x90 <delay+0x24>

void delay(double seconds)
{

	int i;
	for(;seconds;seconds--)
 18a:	69 89       	ldd	r22, Y+17	; 0x11
 18c:	7a 89       	ldd	r23, Y+18	; 0x12
 18e:	8b 89       	ldd	r24, Y+19	; 0x13
 190:	9c 89       	ldd	r25, Y+20	; 0x14
 192:	20 e0       	ldi	r18, 0x00	; 0
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	40 e8       	ldi	r20, 0x80	; 128
 198:	5f e3       	ldi	r21, 0x3F	; 63
 19a:	0e 94 a6 03 	call	0x74c	; 0x74c <__subsf3>
 19e:	dc 01       	movw	r26, r24
 1a0:	cb 01       	movw	r24, r22
 1a2:	89 8b       	std	Y+17, r24	; 0x11
 1a4:	9a 8b       	std	Y+18, r25	; 0x12
 1a6:	ab 8b       	std	Y+19, r26	; 0x13
 1a8:	bc 8b       	std	Y+20, r27	; 0x14
 1aa:	69 89       	ldd	r22, Y+17	; 0x11
 1ac:	7a 89       	ldd	r23, Y+18	; 0x12
 1ae:	8b 89       	ldd	r24, Y+19	; 0x13
 1b0:	9c 89       	ldd	r25, Y+20	; 0x14
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	50 e0       	ldi	r21, 0x00	; 0
 1ba:	0e 94 0b 04 	call	0x816	; 0x816 <__cmpsf2>
 1be:	88 23       	and	r24, r24
 1c0:	09 f0       	breq	.+2      	; 0x1c4 <delay+0x158>
 1c2:	63 cf       	rjmp	.-314    	; 0x8a <delay+0x1e>
	for(i=0;i<100;i++)
		_delay_ms(10);
}
 1c4:	64 96       	adiw	r28, 0x14	; 20
 1c6:	0f b6       	in	r0, 0x3f	; 63
 1c8:	f8 94       	cli
 1ca:	de bf       	out	0x3e, r29	; 62
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	cd bf       	out	0x3d, r28	; 61
 1d0:	cf 91       	pop	r28
 1d2:	df 91       	pop	r29
 1d4:	08 95       	ret

000001d6 <delay_10ms>:


void delay_10ms(double seconds)
{
 1d6:	df 93       	push	r29
 1d8:	cf 93       	push	r28
 1da:	cd b7       	in	r28, 0x3d	; 61
 1dc:	de b7       	in	r29, 0x3e	; 62
 1de:	62 97       	sbiw	r28, 0x12	; 18
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	f8 94       	cli
 1e4:	de bf       	out	0x3e, r29	; 62
 1e6:	0f be       	out	0x3f, r0	; 63
 1e8:	cd bf       	out	0x3d, r28	; 61
 1ea:	6f 87       	std	Y+15, r22	; 0x0f
 1ec:	78 8b       	std	Y+16, r23	; 0x10
 1ee:	89 8b       	std	Y+17, r24	; 0x11
 1f0:	9a 8b       	std	Y+18, r25	; 0x12
 1f2:	82 c0       	rjmp	.+260    	; 0x2f8 <delay_10ms+0x122>

	for(;seconds;seconds--)
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	a0 e2       	ldi	r26, 0x20	; 32
 1fa:	b1 e4       	ldi	r27, 0x41	; 65
 1fc:	8b 87       	std	Y+11, r24	; 0x0b
 1fe:	9c 87       	std	Y+12, r25	; 0x0c
 200:	ad 87       	std	Y+13, r26	; 0x0d
 202:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 204:	6b 85       	ldd	r22, Y+11	; 0x0b
 206:	7c 85       	ldd	r23, Y+12	; 0x0c
 208:	8d 85       	ldd	r24, Y+13	; 0x0d
 20a:	9e 85       	ldd	r25, Y+14	; 0x0e
 20c:	20 e0       	ldi	r18, 0x00	; 0
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	4a e7       	ldi	r20, 0x7A	; 122
 212:	55 e4       	ldi	r21, 0x45	; 69
 214:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 218:	dc 01       	movw	r26, r24
 21a:	cb 01       	movw	r24, r22
 21c:	8f 83       	std	Y+7, r24	; 0x07
 21e:	98 87       	std	Y+8, r25	; 0x08
 220:	a9 87       	std	Y+9, r26	; 0x09
 222:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 224:	6f 81       	ldd	r22, Y+7	; 0x07
 226:	78 85       	ldd	r23, Y+8	; 0x08
 228:	89 85       	ldd	r24, Y+9	; 0x09
 22a:	9a 85       	ldd	r25, Y+10	; 0x0a
 22c:	20 e0       	ldi	r18, 0x00	; 0
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	40 e8       	ldi	r20, 0x80	; 128
 232:	5f e3       	ldi	r21, 0x3F	; 63
 234:	0e 94 0b 04 	call	0x816	; 0x816 <__cmpsf2>
 238:	88 23       	and	r24, r24
 23a:	2c f4       	brge	.+10     	; 0x246 <delay_10ms+0x70>
		__ticks = 1;
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	9e 83       	std	Y+6, r25	; 0x06
 242:	8d 83       	std	Y+5, r24	; 0x05
 244:	3f c0       	rjmp	.+126    	; 0x2c4 <delay_10ms+0xee>
	else if (__tmp > 65535)
 246:	6f 81       	ldd	r22, Y+7	; 0x07
 248:	78 85       	ldd	r23, Y+8	; 0x08
 24a:	89 85       	ldd	r24, Y+9	; 0x09
 24c:	9a 85       	ldd	r25, Y+10	; 0x0a
 24e:	20 e0       	ldi	r18, 0x00	; 0
 250:	3f ef       	ldi	r19, 0xFF	; 255
 252:	4f e7       	ldi	r20, 0x7F	; 127
 254:	57 e4       	ldi	r21, 0x47	; 71
 256:	0e 94 18 05 	call	0xa30	; 0xa30 <__gesf2>
 25a:	18 16       	cp	r1, r24
 25c:	4c f5       	brge	.+82     	; 0x2b0 <delay_10ms+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 25e:	6b 85       	ldd	r22, Y+11	; 0x0b
 260:	7c 85       	ldd	r23, Y+12	; 0x0c
 262:	8d 85       	ldd	r24, Y+13	; 0x0d
 264:	9e 85       	ldd	r25, Y+14	; 0x0e
 266:	20 e0       	ldi	r18, 0x00	; 0
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	40 e2       	ldi	r20, 0x20	; 32
 26c:	51 e4       	ldi	r21, 0x41	; 65
 26e:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 272:	dc 01       	movw	r26, r24
 274:	cb 01       	movw	r24, r22
 276:	bc 01       	movw	r22, r24
 278:	cd 01       	movw	r24, r26
 27a:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 27e:	dc 01       	movw	r26, r24
 280:	cb 01       	movw	r24, r22
 282:	9e 83       	std	Y+6, r25	; 0x06
 284:	8d 83       	std	Y+5, r24	; 0x05
 286:	0f c0       	rjmp	.+30     	; 0x2a6 <delay_10ms+0xd0>
 288:	80 e9       	ldi	r24, 0x90	; 144
 28a:	91 e0       	ldi	r25, 0x01	; 1
 28c:	9c 83       	std	Y+4, r25	; 0x04
 28e:	8b 83       	std	Y+3, r24	; 0x03
 290:	8b 81       	ldd	r24, Y+3	; 0x03
 292:	9c 81       	ldd	r25, Y+4	; 0x04
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <delay_10ms+0xbe>
 298:	9c 83       	std	Y+4, r25	; 0x04
 29a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 29c:	8d 81       	ldd	r24, Y+5	; 0x05
 29e:	9e 81       	ldd	r25, Y+6	; 0x06
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	9e 83       	std	Y+6, r25	; 0x06
 2a4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2a6:	8d 81       	ldd	r24, Y+5	; 0x05
 2a8:	9e 81       	ldd	r25, Y+6	; 0x06
 2aa:	00 97       	sbiw	r24, 0x00	; 0
 2ac:	69 f7       	brne	.-38     	; 0x288 <delay_10ms+0xb2>
 2ae:	14 c0       	rjmp	.+40     	; 0x2d8 <delay_10ms+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2b0:	6f 81       	ldd	r22, Y+7	; 0x07
 2b2:	78 85       	ldd	r23, Y+8	; 0x08
 2b4:	89 85       	ldd	r24, Y+9	; 0x09
 2b6:	9a 85       	ldd	r25, Y+10	; 0x0a
 2b8:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 2bc:	dc 01       	movw	r26, r24
 2be:	cb 01       	movw	r24, r22
 2c0:	9e 83       	std	Y+6, r25	; 0x06
 2c2:	8d 83       	std	Y+5, r24	; 0x05
 2c4:	8d 81       	ldd	r24, Y+5	; 0x05
 2c6:	9e 81       	ldd	r25, Y+6	; 0x06
 2c8:	9a 83       	std	Y+2, r25	; 0x02
 2ca:	89 83       	std	Y+1, r24	; 0x01
 2cc:	89 81       	ldd	r24, Y+1	; 0x01
 2ce:	9a 81       	ldd	r25, Y+2	; 0x02
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <delay_10ms+0xfa>
 2d4:	9a 83       	std	Y+2, r25	; 0x02
 2d6:	89 83       	std	Y+1, r24	; 0x01


void delay_10ms(double seconds)
{

	for(;seconds;seconds--)
 2d8:	6f 85       	ldd	r22, Y+15	; 0x0f
 2da:	78 89       	ldd	r23, Y+16	; 0x10
 2dc:	89 89       	ldd	r24, Y+17	; 0x11
 2de:	9a 89       	ldd	r25, Y+18	; 0x12
 2e0:	20 e0       	ldi	r18, 0x00	; 0
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	40 e8       	ldi	r20, 0x80	; 128
 2e6:	5f e3       	ldi	r21, 0x3F	; 63
 2e8:	0e 94 a6 03 	call	0x74c	; 0x74c <__subsf3>
 2ec:	dc 01       	movw	r26, r24
 2ee:	cb 01       	movw	r24, r22
 2f0:	8f 87       	std	Y+15, r24	; 0x0f
 2f2:	98 8b       	std	Y+16, r25	; 0x10
 2f4:	a9 8b       	std	Y+17, r26	; 0x11
 2f6:	ba 8b       	std	Y+18, r27	; 0x12
 2f8:	6f 85       	ldd	r22, Y+15	; 0x0f
 2fa:	78 89       	ldd	r23, Y+16	; 0x10
 2fc:	89 89       	ldd	r24, Y+17	; 0x11
 2fe:	9a 89       	ldd	r25, Y+18	; 0x12
 300:	20 e0       	ldi	r18, 0x00	; 0
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	0e 94 0b 04 	call	0x816	; 0x816 <__cmpsf2>
 30c:	88 23       	and	r24, r24
 30e:	09 f0       	breq	.+2      	; 0x312 <delay_10ms+0x13c>
 310:	71 cf       	rjmp	.-286    	; 0x1f4 <delay_10ms+0x1e>
	_delay_ms(10);
}
 312:	62 96       	adiw	r28, 0x12	; 18
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
 31e:	cf 91       	pop	r28
 320:	df 91       	pop	r29
 322:	08 95       	ret

00000324 <delay_10us>:

void delay_10us(int seconds)
{
 324:	df 93       	push	r29
 326:	cf 93       	push	r28
 328:	cd b7       	in	r28, 0x3d	; 61
 32a:	de b7       	in	r29, 0x3e	; 62
 32c:	6a 97       	sbiw	r28, 0x1a	; 26
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	f8 94       	cli
 332:	de bf       	out	0x3e, r29	; 62
 334:	0f be       	out	0x3f, r0	; 63
 336:	cd bf       	out	0x3d, r28	; 61
 338:	9a 8f       	std	Y+26, r25	; 0x1a
 33a:	89 8f       	std	Y+25, r24	; 0x19
 33c:	c3 c0       	rjmp	.+390    	; 0x4c4 <delay_10us+0x1a0>

	for(;seconds;seconds--)
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	a0 e2       	ldi	r26, 0x20	; 32
 344:	b1 e4       	ldi	r27, 0x41	; 65
 346:	8d 8b       	std	Y+21, r24	; 0x15
 348:	9e 8b       	std	Y+22, r25	; 0x16
 34a:	af 8b       	std	Y+23, r26	; 0x17
 34c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
 34e:	6d 89       	ldd	r22, Y+21	; 0x15
 350:	7e 89       	ldd	r23, Y+22	; 0x16
 352:	8f 89       	ldd	r24, Y+23	; 0x17
 354:	98 8d       	ldd	r25, Y+24	; 0x18
 356:	2b ea       	ldi	r18, 0xAB	; 171
 358:	3a ea       	ldi	r19, 0xAA	; 170
 35a:	4a ea       	ldi	r20, 0xAA	; 170
 35c:	50 e4       	ldi	r21, 0x40	; 64
 35e:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 362:	dc 01       	movw	r26, r24
 364:	cb 01       	movw	r24, r22
 366:	89 8b       	std	Y+17, r24	; 0x11
 368:	9a 8b       	std	Y+18, r25	; 0x12
 36a:	ab 8b       	std	Y+19, r26	; 0x13
 36c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
 36e:	69 89       	ldd	r22, Y+17	; 0x11
 370:	7a 89       	ldd	r23, Y+18	; 0x12
 372:	8b 89       	ldd	r24, Y+19	; 0x13
 374:	9c 89       	ldd	r25, Y+20	; 0x14
 376:	20 e0       	ldi	r18, 0x00	; 0
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	40 e8       	ldi	r20, 0x80	; 128
 37c:	5f e3       	ldi	r21, 0x3F	; 63
 37e:	0e 94 0b 04 	call	0x816	; 0x816 <__cmpsf2>
 382:	88 23       	and	r24, r24
 384:	1c f4       	brge	.+6      	; 0x38c <delay_10us+0x68>
		__ticks = 1;
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	88 8b       	std	Y+16, r24	; 0x10
 38a:	91 c0       	rjmp	.+290    	; 0x4ae <delay_10us+0x18a>
	else if (__tmp > 255)
 38c:	69 89       	ldd	r22, Y+17	; 0x11
 38e:	7a 89       	ldd	r23, Y+18	; 0x12
 390:	8b 89       	ldd	r24, Y+19	; 0x13
 392:	9c 89       	ldd	r25, Y+20	; 0x14
 394:	20 e0       	ldi	r18, 0x00	; 0
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	4f e7       	ldi	r20, 0x7F	; 127
 39a:	53 e4       	ldi	r21, 0x43	; 67
 39c:	0e 94 18 05 	call	0xa30	; 0xa30 <__gesf2>
 3a0:	18 16       	cp	r1, r24
 3a2:	0c f0       	brlt	.+2      	; 0x3a6 <delay_10us+0x82>
 3a4:	7b c0       	rjmp	.+246    	; 0x49c <delay_10us+0x178>
	{
		_delay_ms(__us / 1000.0);
 3a6:	6d 89       	ldd	r22, Y+21	; 0x15
 3a8:	7e 89       	ldd	r23, Y+22	; 0x16
 3aa:	8f 89       	ldd	r24, Y+23	; 0x17
 3ac:	98 8d       	ldd	r25, Y+24	; 0x18
 3ae:	20 e0       	ldi	r18, 0x00	; 0
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	4a e7       	ldi	r20, 0x7A	; 122
 3b4:	54 e4       	ldi	r21, 0x44	; 68
 3b6:	0e 94 0f 04 	call	0x81e	; 0x81e <__divsf3>
 3ba:	dc 01       	movw	r26, r24
 3bc:	cb 01       	movw	r24, r22
 3be:	8c 87       	std	Y+12, r24	; 0x0c
 3c0:	9d 87       	std	Y+13, r25	; 0x0d
 3c2:	ae 87       	std	Y+14, r26	; 0x0e
 3c4:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 3c6:	6c 85       	ldd	r22, Y+12	; 0x0c
 3c8:	7d 85       	ldd	r23, Y+13	; 0x0d
 3ca:	8e 85       	ldd	r24, Y+14	; 0x0e
 3cc:	9f 85       	ldd	r25, Y+15	; 0x0f
 3ce:	20 e0       	ldi	r18, 0x00	; 0
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	4a e7       	ldi	r20, 0x7A	; 122
 3d4:	55 e4       	ldi	r21, 0x45	; 69
 3d6:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 3da:	dc 01       	movw	r26, r24
 3dc:	cb 01       	movw	r24, r22
 3de:	88 87       	std	Y+8, r24	; 0x08
 3e0:	99 87       	std	Y+9, r25	; 0x09
 3e2:	aa 87       	std	Y+10, r26	; 0x0a
 3e4:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
 3e6:	68 85       	ldd	r22, Y+8	; 0x08
 3e8:	79 85       	ldd	r23, Y+9	; 0x09
 3ea:	8a 85       	ldd	r24, Y+10	; 0x0a
 3ec:	9b 85       	ldd	r25, Y+11	; 0x0b
 3ee:	20 e0       	ldi	r18, 0x00	; 0
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	40 e8       	ldi	r20, 0x80	; 128
 3f4:	5f e3       	ldi	r21, 0x3F	; 63
 3f6:	0e 94 0b 04 	call	0x816	; 0x816 <__cmpsf2>
 3fa:	88 23       	and	r24, r24
 3fc:	2c f4       	brge	.+10     	; 0x408 <delay_10us+0xe4>
		__ticks = 1;
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	9f 83       	std	Y+7, r25	; 0x07
 404:	8e 83       	std	Y+6, r24	; 0x06
 406:	3f c0       	rjmp	.+126    	; 0x486 <delay_10us+0x162>
	else if (__tmp > 65535)
 408:	68 85       	ldd	r22, Y+8	; 0x08
 40a:	79 85       	ldd	r23, Y+9	; 0x09
 40c:	8a 85       	ldd	r24, Y+10	; 0x0a
 40e:	9b 85       	ldd	r25, Y+11	; 0x0b
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	3f ef       	ldi	r19, 0xFF	; 255
 414:	4f e7       	ldi	r20, 0x7F	; 127
 416:	57 e4       	ldi	r21, 0x47	; 71
 418:	0e 94 18 05 	call	0xa30	; 0xa30 <__gesf2>
 41c:	18 16       	cp	r1, r24
 41e:	4c f5       	brge	.+82     	; 0x472 <delay_10us+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 420:	6c 85       	ldd	r22, Y+12	; 0x0c
 422:	7d 85       	ldd	r23, Y+13	; 0x0d
 424:	8e 85       	ldd	r24, Y+14	; 0x0e
 426:	9f 85       	ldd	r25, Y+15	; 0x0f
 428:	20 e0       	ldi	r18, 0x00	; 0
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	40 e2       	ldi	r20, 0x20	; 32
 42e:	51 e4       	ldi	r21, 0x41	; 65
 430:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 434:	dc 01       	movw	r26, r24
 436:	cb 01       	movw	r24, r22
 438:	bc 01       	movw	r22, r24
 43a:	cd 01       	movw	r24, r26
 43c:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 440:	dc 01       	movw	r26, r24
 442:	cb 01       	movw	r24, r22
 444:	9f 83       	std	Y+7, r25	; 0x07
 446:	8e 83       	std	Y+6, r24	; 0x06
 448:	0f c0       	rjmp	.+30     	; 0x468 <delay_10us+0x144>
 44a:	80 e9       	ldi	r24, 0x90	; 144
 44c:	91 e0       	ldi	r25, 0x01	; 1
 44e:	9d 83       	std	Y+5, r25	; 0x05
 450:	8c 83       	std	Y+4, r24	; 0x04
 452:	8c 81       	ldd	r24, Y+4	; 0x04
 454:	9d 81       	ldd	r25, Y+5	; 0x05
 456:	01 97       	sbiw	r24, 0x01	; 1
 458:	f1 f7       	brne	.-4      	; 0x456 <delay_10us+0x132>
 45a:	9d 83       	std	Y+5, r25	; 0x05
 45c:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 45e:	8e 81       	ldd	r24, Y+6	; 0x06
 460:	9f 81       	ldd	r25, Y+7	; 0x07
 462:	01 97       	sbiw	r24, 0x01	; 1
 464:	9f 83       	std	Y+7, r25	; 0x07
 466:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 468:	8e 81       	ldd	r24, Y+6	; 0x06
 46a:	9f 81       	ldd	r25, Y+7	; 0x07
 46c:	00 97       	sbiw	r24, 0x00	; 0
 46e:	69 f7       	brne	.-38     	; 0x44a <delay_10us+0x126>
 470:	24 c0       	rjmp	.+72     	; 0x4ba <delay_10us+0x196>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 472:	68 85       	ldd	r22, Y+8	; 0x08
 474:	79 85       	ldd	r23, Y+9	; 0x09
 476:	8a 85       	ldd	r24, Y+10	; 0x0a
 478:	9b 85       	ldd	r25, Y+11	; 0x0b
 47a:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 47e:	dc 01       	movw	r26, r24
 480:	cb 01       	movw	r24, r22
 482:	9f 83       	std	Y+7, r25	; 0x07
 484:	8e 83       	std	Y+6, r24	; 0x06
 486:	8e 81       	ldd	r24, Y+6	; 0x06
 488:	9f 81       	ldd	r25, Y+7	; 0x07
 48a:	9b 83       	std	Y+3, r25	; 0x03
 48c:	8a 83       	std	Y+2, r24	; 0x02
 48e:	8a 81       	ldd	r24, Y+2	; 0x02
 490:	9b 81       	ldd	r25, Y+3	; 0x03
 492:	01 97       	sbiw	r24, 0x01	; 1
 494:	f1 f7       	brne	.-4      	; 0x492 <delay_10us+0x16e>
 496:	9b 83       	std	Y+3, r25	; 0x03
 498:	8a 83       	std	Y+2, r24	; 0x02
 49a:	0f c0       	rjmp	.+30     	; 0x4ba <delay_10us+0x196>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
 49c:	69 89       	ldd	r22, Y+17	; 0x11
 49e:	7a 89       	ldd	r23, Y+18	; 0x12
 4a0:	8b 89       	ldd	r24, Y+19	; 0x13
 4a2:	9c 89       	ldd	r25, Y+20	; 0x14
 4a4:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 4a8:	dc 01       	movw	r26, r24
 4aa:	cb 01       	movw	r24, r22
 4ac:	88 8b       	std	Y+16, r24	; 0x10
 4ae:	88 89       	ldd	r24, Y+16	; 0x10
 4b0:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 4b2:	89 81       	ldd	r24, Y+1	; 0x01
 4b4:	8a 95       	dec	r24
 4b6:	f1 f7       	brne	.-4      	; 0x4b4 <delay_10us+0x190>
 4b8:	89 83       	std	Y+1, r24	; 0x01
}

void delay_10us(int seconds)
{

	for(;seconds;seconds--)
 4ba:	89 8d       	ldd	r24, Y+25	; 0x19
 4bc:	9a 8d       	ldd	r25, Y+26	; 0x1a
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	9a 8f       	std	Y+26, r25	; 0x1a
 4c2:	89 8f       	std	Y+25, r24	; 0x19
 4c4:	89 8d       	ldd	r24, Y+25	; 0x19
 4c6:	9a 8d       	ldd	r25, Y+26	; 0x1a
 4c8:	00 97       	sbiw	r24, 0x00	; 0
 4ca:	09 f0       	breq	.+2      	; 0x4ce <delay_10us+0x1aa>
 4cc:	38 cf       	rjmp	.-400    	; 0x33e <delay_10us+0x1a>
	_delay_us(10);
}
 4ce:	6a 96       	adiw	r28, 0x1a	; 26
 4d0:	0f b6       	in	r0, 0x3f	; 63
 4d2:	f8 94       	cli
 4d4:	de bf       	out	0x3e, r29	; 62
 4d6:	0f be       	out	0x3f, r0	; 63
 4d8:	cd bf       	out	0x3d, r28	; 61
 4da:	cf 91       	pop	r28
 4dc:	df 91       	pop	r29
 4de:	08 95       	ret

000004e0 <main>:
#include<avr/io.h>
#include<avr/interrupt.h>
#include<util/delay.h>
int main()
{
 4e0:	df 93       	push	r29
 4e2:	cf 93       	push	r28
 4e4:	cd b7       	in	r28, 0x3d	; 61
 4e6:	de b7       	in	r29, 0x3e	; 62
 4e8:	2e 97       	sbiw	r28, 0x0e	; 14
 4ea:	0f b6       	in	r0, 0x3f	; 63
 4ec:	f8 94       	cli
 4ee:	de bf       	out	0x3e, r29	; 62
 4f0:	0f be       	out	0x3f, r0	; 63
 4f2:	cd bf       	out	0x3d, r28	; 61
DDRA = 0xFF;
 4f4:	ea e3       	ldi	r30, 0x3A	; 58
 4f6:	f0 e0       	ldi	r31, 0x00	; 0
 4f8:	8f ef       	ldi	r24, 0xFF	; 255
 4fa:	80 83       	st	Z, r24
PORTA = 0xFF;
 4fc:	eb e3       	ldi	r30, 0x3B	; 59
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	8f ef       	ldi	r24, 0xFF	; 255
 502:	80 83       	st	Z, r24
SREG = 0x80;
 504:	ef e5       	ldi	r30, 0x5F	; 95
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	80 e8       	ldi	r24, 0x80	; 128
 50a:	80 83       	st	Z, r24
sei();
 50c:	78 94       	sei
TCCR0 = 0x45;
 50e:	e3 e5       	ldi	r30, 0x53	; 83
 510:	f0 e0       	ldi	r31, 0x00	; 0
 512:	85 e4       	ldi	r24, 0x45	; 69
 514:	80 83       	st	Z, r24
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	aa e7       	ldi	r26, 0x7A	; 122
 51c:	b4 e4       	ldi	r27, 0x44	; 68
 51e:	8b 87       	std	Y+11, r24	; 0x0b
 520:	9c 87       	std	Y+12, r25	; 0x0c
 522:	ad 87       	std	Y+13, r26	; 0x0d
 524:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 526:	6b 85       	ldd	r22, Y+11	; 0x0b
 528:	7c 85       	ldd	r23, Y+12	; 0x0c
 52a:	8d 85       	ldd	r24, Y+13	; 0x0d
 52c:	9e 85       	ldd	r25, Y+14	; 0x0e
 52e:	20 e0       	ldi	r18, 0x00	; 0
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	4a e7       	ldi	r20, 0x7A	; 122
 534:	55 e4       	ldi	r21, 0x45	; 69
 536:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 53a:	dc 01       	movw	r26, r24
 53c:	cb 01       	movw	r24, r22
 53e:	8f 83       	std	Y+7, r24	; 0x07
 540:	98 87       	std	Y+8, r25	; 0x08
 542:	a9 87       	std	Y+9, r26	; 0x09
 544:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 546:	6f 81       	ldd	r22, Y+7	; 0x07
 548:	78 85       	ldd	r23, Y+8	; 0x08
 54a:	89 85       	ldd	r24, Y+9	; 0x09
 54c:	9a 85       	ldd	r25, Y+10	; 0x0a
 54e:	20 e0       	ldi	r18, 0x00	; 0
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	40 e8       	ldi	r20, 0x80	; 128
 554:	5f e3       	ldi	r21, 0x3F	; 63
 556:	0e 94 0b 04 	call	0x816	; 0x816 <__cmpsf2>
 55a:	88 23       	and	r24, r24
 55c:	2c f4       	brge	.+10     	; 0x568 <main+0x88>
		__ticks = 1;
 55e:	81 e0       	ldi	r24, 0x01	; 1
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	9e 83       	std	Y+6, r25	; 0x06
 564:	8d 83       	std	Y+5, r24	; 0x05
 566:	3f c0       	rjmp	.+126    	; 0x5e6 <main+0x106>
	else if (__tmp > 65535)
 568:	6f 81       	ldd	r22, Y+7	; 0x07
 56a:	78 85       	ldd	r23, Y+8	; 0x08
 56c:	89 85       	ldd	r24, Y+9	; 0x09
 56e:	9a 85       	ldd	r25, Y+10	; 0x0a
 570:	20 e0       	ldi	r18, 0x00	; 0
 572:	3f ef       	ldi	r19, 0xFF	; 255
 574:	4f e7       	ldi	r20, 0x7F	; 127
 576:	57 e4       	ldi	r21, 0x47	; 71
 578:	0e 94 18 05 	call	0xa30	; 0xa30 <__gesf2>
 57c:	18 16       	cp	r1, r24
 57e:	4c f5       	brge	.+82     	; 0x5d2 <main+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 580:	6b 85       	ldd	r22, Y+11	; 0x0b
 582:	7c 85       	ldd	r23, Y+12	; 0x0c
 584:	8d 85       	ldd	r24, Y+13	; 0x0d
 586:	9e 85       	ldd	r25, Y+14	; 0x0e
 588:	20 e0       	ldi	r18, 0x00	; 0
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	40 e2       	ldi	r20, 0x20	; 32
 58e:	51 e4       	ldi	r21, 0x41	; 65
 590:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 594:	dc 01       	movw	r26, r24
 596:	cb 01       	movw	r24, r22
 598:	bc 01       	movw	r22, r24
 59a:	cd 01       	movw	r24, r26
 59c:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 5a0:	dc 01       	movw	r26, r24
 5a2:	cb 01       	movw	r24, r22
 5a4:	9e 83       	std	Y+6, r25	; 0x06
 5a6:	8d 83       	std	Y+5, r24	; 0x05
 5a8:	0f c0       	rjmp	.+30     	; 0x5c8 <main+0xe8>
 5aa:	80 e9       	ldi	r24, 0x90	; 144
 5ac:	91 e0       	ldi	r25, 0x01	; 1
 5ae:	9c 83       	std	Y+4, r25	; 0x04
 5b0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 5b2:	8b 81       	ldd	r24, Y+3	; 0x03
 5b4:	9c 81       	ldd	r25, Y+4	; 0x04
 5b6:	01 97       	sbiw	r24, 0x01	; 1
 5b8:	f1 f7       	brne	.-4      	; 0x5b6 <main+0xd6>
 5ba:	9c 83       	std	Y+4, r25	; 0x04
 5bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 5be:	8d 81       	ldd	r24, Y+5	; 0x05
 5c0:	9e 81       	ldd	r25, Y+6	; 0x06
 5c2:	01 97       	sbiw	r24, 0x01	; 1
 5c4:	9e 83       	std	Y+6, r25	; 0x06
 5c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 5c8:	8d 81       	ldd	r24, Y+5	; 0x05
 5ca:	9e 81       	ldd	r25, Y+6	; 0x06
 5cc:	00 97       	sbiw	r24, 0x00	; 0
 5ce:	69 f7       	brne	.-38     	; 0x5aa <main+0xca>
 5d0:	14 c0       	rjmp	.+40     	; 0x5fa <main+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 5d2:	6f 81       	ldd	r22, Y+7	; 0x07
 5d4:	78 85       	ldd	r23, Y+8	; 0x08
 5d6:	89 85       	ldd	r24, Y+9	; 0x09
 5d8:	9a 85       	ldd	r25, Y+10	; 0x0a
 5da:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 5de:	dc 01       	movw	r26, r24
 5e0:	cb 01       	movw	r24, r22
 5e2:	9e 83       	std	Y+6, r25	; 0x06
 5e4:	8d 83       	std	Y+5, r24	; 0x05
 5e6:	8d 81       	ldd	r24, Y+5	; 0x05
 5e8:	9e 81       	ldd	r25, Y+6	; 0x06
 5ea:	9a 83       	std	Y+2, r25	; 0x02
 5ec:	89 83       	std	Y+1, r24	; 0x01
 5ee:	89 81       	ldd	r24, Y+1	; 0x01
 5f0:	9a 81       	ldd	r25, Y+2	; 0x02
 5f2:	01 97       	sbiw	r24, 0x01	; 1
 5f4:	f1 f7       	brne	.-4      	; 0x5f2 <main+0x112>
 5f6:	9a 83       	std	Y+2, r25	; 0x02
 5f8:	89 83       	std	Y+1, r24	; 0x01
while(1)
	{
	_delay_ms(1000);
	TIMSK = 0x01;
 5fa:	e9 e5       	ldi	r30, 0x59	; 89
 5fc:	f0 e0       	ldi	r31, 0x00	; 0
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	80 83       	st	Z, r24
 602:	89 cf       	rjmp	.-238    	; 0x516 <main+0x36>

00000604 <__vector_11>:
	
	}
}

ISR(TIMER0_OVF_vect)
{
 604:	1f 92       	push	r1
 606:	0f 92       	push	r0
 608:	0f b6       	in	r0, 0x3f	; 63
 60a:	0f 92       	push	r0
 60c:	11 24       	eor	r1, r1
 60e:	2f 93       	push	r18
 610:	3f 93       	push	r19
 612:	4f 93       	push	r20
 614:	5f 93       	push	r21
 616:	6f 93       	push	r22
 618:	7f 93       	push	r23
 61a:	8f 93       	push	r24
 61c:	9f 93       	push	r25
 61e:	af 93       	push	r26
 620:	bf 93       	push	r27
 622:	ef 93       	push	r30
 624:	ff 93       	push	r31
 626:	df 93       	push	r29
 628:	cf 93       	push	r28
 62a:	cd b7       	in	r28, 0x3d	; 61
 62c:	de b7       	in	r29, 0x3e	; 62
 62e:	2e 97       	sbiw	r28, 0x0e	; 14
 630:	de bf       	out	0x3e, r29	; 62
 632:	cd bf       	out	0x3d, r28	; 61
PORTA = 0xAA;
 634:	eb e3       	ldi	r30, 0x3B	; 59
 636:	f0 e0       	ldi	r31, 0x00	; 0
 638:	8a ea       	ldi	r24, 0xAA	; 170
 63a:	80 83       	st	Z, r24
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	a8 ec       	ldi	r26, 0xC8	; 200
 642:	b3 e4       	ldi	r27, 0x43	; 67
 644:	8b 87       	std	Y+11, r24	; 0x0b
 646:	9c 87       	std	Y+12, r25	; 0x0c
 648:	ad 87       	std	Y+13, r26	; 0x0d
 64a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 64c:	6b 85       	ldd	r22, Y+11	; 0x0b
 64e:	7c 85       	ldd	r23, Y+12	; 0x0c
 650:	8d 85       	ldd	r24, Y+13	; 0x0d
 652:	9e 85       	ldd	r25, Y+14	; 0x0e
 654:	20 e0       	ldi	r18, 0x00	; 0
 656:	30 e0       	ldi	r19, 0x00	; 0
 658:	4a e7       	ldi	r20, 0x7A	; 122
 65a:	55 e4       	ldi	r21, 0x45	; 69
 65c:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 660:	dc 01       	movw	r26, r24
 662:	cb 01       	movw	r24, r22
 664:	8f 83       	std	Y+7, r24	; 0x07
 666:	98 87       	std	Y+8, r25	; 0x08
 668:	a9 87       	std	Y+9, r26	; 0x09
 66a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 66c:	6f 81       	ldd	r22, Y+7	; 0x07
 66e:	78 85       	ldd	r23, Y+8	; 0x08
 670:	89 85       	ldd	r24, Y+9	; 0x09
 672:	9a 85       	ldd	r25, Y+10	; 0x0a
 674:	20 e0       	ldi	r18, 0x00	; 0
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	40 e8       	ldi	r20, 0x80	; 128
 67a:	5f e3       	ldi	r21, 0x3F	; 63
 67c:	0e 94 0b 04 	call	0x816	; 0x816 <__cmpsf2>
 680:	88 23       	and	r24, r24
 682:	2c f4       	brge	.+10     	; 0x68e <__vector_11+0x8a>
		__ticks = 1;
 684:	81 e0       	ldi	r24, 0x01	; 1
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	9e 83       	std	Y+6, r25	; 0x06
 68a:	8d 83       	std	Y+5, r24	; 0x05
 68c:	3f c0       	rjmp	.+126    	; 0x70c <__vector_11+0x108>
	else if (__tmp > 65535)
 68e:	6f 81       	ldd	r22, Y+7	; 0x07
 690:	78 85       	ldd	r23, Y+8	; 0x08
 692:	89 85       	ldd	r24, Y+9	; 0x09
 694:	9a 85       	ldd	r25, Y+10	; 0x0a
 696:	20 e0       	ldi	r18, 0x00	; 0
 698:	3f ef       	ldi	r19, 0xFF	; 255
 69a:	4f e7       	ldi	r20, 0x7F	; 127
 69c:	57 e4       	ldi	r21, 0x47	; 71
 69e:	0e 94 18 05 	call	0xa30	; 0xa30 <__gesf2>
 6a2:	18 16       	cp	r1, r24
 6a4:	4c f5       	brge	.+82     	; 0x6f8 <__vector_11+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 6a6:	6b 85       	ldd	r22, Y+11	; 0x0b
 6a8:	7c 85       	ldd	r23, Y+12	; 0x0c
 6aa:	8d 85       	ldd	r24, Y+13	; 0x0d
 6ac:	9e 85       	ldd	r25, Y+14	; 0x0e
 6ae:	20 e0       	ldi	r18, 0x00	; 0
 6b0:	30 e0       	ldi	r19, 0x00	; 0
 6b2:	40 e2       	ldi	r20, 0x20	; 32
 6b4:	51 e4       	ldi	r21, 0x41	; 65
 6b6:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
 6ba:	dc 01       	movw	r26, r24
 6bc:	cb 01       	movw	r24, r22
 6be:	bc 01       	movw	r22, r24
 6c0:	cd 01       	movw	r24, r26
 6c2:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 6c6:	dc 01       	movw	r26, r24
 6c8:	cb 01       	movw	r24, r22
 6ca:	9e 83       	std	Y+6, r25	; 0x06
 6cc:	8d 83       	std	Y+5, r24	; 0x05
 6ce:	0f c0       	rjmp	.+30     	; 0x6ee <__vector_11+0xea>
 6d0:	80 e9       	ldi	r24, 0x90	; 144
 6d2:	91 e0       	ldi	r25, 0x01	; 1
 6d4:	9c 83       	std	Y+4, r25	; 0x04
 6d6:	8b 83       	std	Y+3, r24	; 0x03
 6d8:	8b 81       	ldd	r24, Y+3	; 0x03
 6da:	9c 81       	ldd	r25, Y+4	; 0x04
 6dc:	01 97       	sbiw	r24, 0x01	; 1
 6de:	f1 f7       	brne	.-4      	; 0x6dc <__vector_11+0xd8>
 6e0:	9c 83       	std	Y+4, r25	; 0x04
 6e2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 6e4:	8d 81       	ldd	r24, Y+5	; 0x05
 6e6:	9e 81       	ldd	r25, Y+6	; 0x06
 6e8:	01 97       	sbiw	r24, 0x01	; 1
 6ea:	9e 83       	std	Y+6, r25	; 0x06
 6ec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 6ee:	8d 81       	ldd	r24, Y+5	; 0x05
 6f0:	9e 81       	ldd	r25, Y+6	; 0x06
 6f2:	00 97       	sbiw	r24, 0x00	; 0
 6f4:	69 f7       	brne	.-38     	; 0x6d0 <__vector_11+0xcc>
 6f6:	14 c0       	rjmp	.+40     	; 0x720 <__vector_11+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 6f8:	6f 81       	ldd	r22, Y+7	; 0x07
 6fa:	78 85       	ldd	r23, Y+8	; 0x08
 6fc:	89 85       	ldd	r24, Y+9	; 0x09
 6fe:	9a 85       	ldd	r25, Y+10	; 0x0a
 700:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fixunssfsi>
 704:	dc 01       	movw	r26, r24
 706:	cb 01       	movw	r24, r22
 708:	9e 83       	std	Y+6, r25	; 0x06
 70a:	8d 83       	std	Y+5, r24	; 0x05
 70c:	8d 81       	ldd	r24, Y+5	; 0x05
 70e:	9e 81       	ldd	r25, Y+6	; 0x06
 710:	9a 83       	std	Y+2, r25	; 0x02
 712:	89 83       	std	Y+1, r24	; 0x01
 714:	89 81       	ldd	r24, Y+1	; 0x01
 716:	9a 81       	ldd	r25, Y+2	; 0x02
 718:	01 97       	sbiw	r24, 0x01	; 1
 71a:	f1 f7       	brne	.-4      	; 0x718 <__vector_11+0x114>
 71c:	9a 83       	std	Y+2, r25	; 0x02
 71e:	89 83       	std	Y+1, r24	; 0x01
_delay_ms(400);
 720:	2e 96       	adiw	r28, 0x0e	; 14
 722:	de bf       	out	0x3e, r29	; 62
 724:	cd bf       	out	0x3d, r28	; 61
 726:	cf 91       	pop	r28
 728:	df 91       	pop	r29
 72a:	ff 91       	pop	r31
 72c:	ef 91       	pop	r30
 72e:	bf 91       	pop	r27
 730:	af 91       	pop	r26
 732:	9f 91       	pop	r25
 734:	8f 91       	pop	r24
 736:	7f 91       	pop	r23
 738:	6f 91       	pop	r22
 73a:	5f 91       	pop	r21
 73c:	4f 91       	pop	r20
 73e:	3f 91       	pop	r19
 740:	2f 91       	pop	r18
 742:	0f 90       	pop	r0
 744:	0f be       	out	0x3f, r0	; 63
 746:	0f 90       	pop	r0
 748:	1f 90       	pop	r1
 74a:	18 95       	reti

0000074c <__subsf3>:
 74c:	50 58       	subi	r21, 0x80	; 128

0000074e <__addsf3>:
 74e:	bb 27       	eor	r27, r27
 750:	aa 27       	eor	r26, r26
 752:	0e d0       	rcall	.+28     	; 0x770 <__addsf3x>
 754:	33 c1       	rjmp	.+614    	; 0x9bc <__fp_round>
 756:	24 d1       	rcall	.+584    	; 0x9a0 <__fp_pscA>
 758:	30 f0       	brcs	.+12     	; 0x766 <__addsf3+0x18>
 75a:	29 d1       	rcall	.+594    	; 0x9ae <__fp_pscB>
 75c:	20 f0       	brcs	.+8      	; 0x766 <__addsf3+0x18>
 75e:	31 f4       	brne	.+12     	; 0x76c <__addsf3+0x1e>
 760:	9f 3f       	cpi	r25, 0xFF	; 255
 762:	11 f4       	brne	.+4      	; 0x768 <__addsf3+0x1a>
 764:	1e f4       	brtc	.+6      	; 0x76c <__addsf3+0x1e>
 766:	19 c1       	rjmp	.+562    	; 0x99a <__fp_nan>
 768:	0e f4       	brtc	.+2      	; 0x76c <__addsf3+0x1e>
 76a:	e0 95       	com	r30
 76c:	e7 fb       	bst	r30, 7
 76e:	0f c1       	rjmp	.+542    	; 0x98e <__fp_inf>

00000770 <__addsf3x>:
 770:	e9 2f       	mov	r30, r25
 772:	35 d1       	rcall	.+618    	; 0x9de <__fp_split3>
 774:	80 f3       	brcs	.-32     	; 0x756 <__addsf3+0x8>
 776:	ba 17       	cp	r27, r26
 778:	62 07       	cpc	r22, r18
 77a:	73 07       	cpc	r23, r19
 77c:	84 07       	cpc	r24, r20
 77e:	95 07       	cpc	r25, r21
 780:	18 f0       	brcs	.+6      	; 0x788 <__addsf3x+0x18>
 782:	71 f4       	brne	.+28     	; 0x7a0 <__addsf3x+0x30>
 784:	9e f5       	brtc	.+102    	; 0x7ec <__addsf3x+0x7c>
 786:	4d c1       	rjmp	.+666    	; 0xa22 <__fp_zero>
 788:	0e f4       	brtc	.+2      	; 0x78c <__addsf3x+0x1c>
 78a:	e0 95       	com	r30
 78c:	0b 2e       	mov	r0, r27
 78e:	ba 2f       	mov	r27, r26
 790:	a0 2d       	mov	r26, r0
 792:	0b 01       	movw	r0, r22
 794:	b9 01       	movw	r22, r18
 796:	90 01       	movw	r18, r0
 798:	0c 01       	movw	r0, r24
 79a:	ca 01       	movw	r24, r20
 79c:	a0 01       	movw	r20, r0
 79e:	11 24       	eor	r1, r1
 7a0:	ff 27       	eor	r31, r31
 7a2:	59 1b       	sub	r21, r25
 7a4:	99 f0       	breq	.+38     	; 0x7cc <__addsf3x+0x5c>
 7a6:	59 3f       	cpi	r21, 0xF9	; 249
 7a8:	50 f4       	brcc	.+20     	; 0x7be <__addsf3x+0x4e>
 7aa:	50 3e       	cpi	r21, 0xE0	; 224
 7ac:	68 f1       	brcs	.+90     	; 0x808 <__addsf3x+0x98>
 7ae:	1a 16       	cp	r1, r26
 7b0:	f0 40       	sbci	r31, 0x00	; 0
 7b2:	a2 2f       	mov	r26, r18
 7b4:	23 2f       	mov	r18, r19
 7b6:	34 2f       	mov	r19, r20
 7b8:	44 27       	eor	r20, r20
 7ba:	58 5f       	subi	r21, 0xF8	; 248
 7bc:	f3 cf       	rjmp	.-26     	; 0x7a4 <__addsf3x+0x34>
 7be:	46 95       	lsr	r20
 7c0:	37 95       	ror	r19
 7c2:	27 95       	ror	r18
 7c4:	a7 95       	ror	r26
 7c6:	f0 40       	sbci	r31, 0x00	; 0
 7c8:	53 95       	inc	r21
 7ca:	c9 f7       	brne	.-14     	; 0x7be <__addsf3x+0x4e>
 7cc:	7e f4       	brtc	.+30     	; 0x7ec <__addsf3x+0x7c>
 7ce:	1f 16       	cp	r1, r31
 7d0:	ba 0b       	sbc	r27, r26
 7d2:	62 0b       	sbc	r22, r18
 7d4:	73 0b       	sbc	r23, r19
 7d6:	84 0b       	sbc	r24, r20
 7d8:	ba f0       	brmi	.+46     	; 0x808 <__addsf3x+0x98>
 7da:	91 50       	subi	r25, 0x01	; 1
 7dc:	a1 f0       	breq	.+40     	; 0x806 <__addsf3x+0x96>
 7de:	ff 0f       	add	r31, r31
 7e0:	bb 1f       	adc	r27, r27
 7e2:	66 1f       	adc	r22, r22
 7e4:	77 1f       	adc	r23, r23
 7e6:	88 1f       	adc	r24, r24
 7e8:	c2 f7       	brpl	.-16     	; 0x7da <__addsf3x+0x6a>
 7ea:	0e c0       	rjmp	.+28     	; 0x808 <__addsf3x+0x98>
 7ec:	ba 0f       	add	r27, r26
 7ee:	62 1f       	adc	r22, r18
 7f0:	73 1f       	adc	r23, r19
 7f2:	84 1f       	adc	r24, r20
 7f4:	48 f4       	brcc	.+18     	; 0x808 <__addsf3x+0x98>
 7f6:	87 95       	ror	r24
 7f8:	77 95       	ror	r23
 7fa:	67 95       	ror	r22
 7fc:	b7 95       	ror	r27
 7fe:	f7 95       	ror	r31
 800:	9e 3f       	cpi	r25, 0xFE	; 254
 802:	08 f0       	brcs	.+2      	; 0x806 <__addsf3x+0x96>
 804:	b3 cf       	rjmp	.-154    	; 0x76c <__addsf3+0x1e>
 806:	93 95       	inc	r25
 808:	88 0f       	add	r24, r24
 80a:	08 f0       	brcs	.+2      	; 0x80e <__addsf3x+0x9e>
 80c:	99 27       	eor	r25, r25
 80e:	ee 0f       	add	r30, r30
 810:	97 95       	ror	r25
 812:	87 95       	ror	r24
 814:	08 95       	ret

00000816 <__cmpsf2>:
 816:	97 d0       	rcall	.+302    	; 0x946 <__fp_cmp>
 818:	08 f4       	brcc	.+2      	; 0x81c <__cmpsf2+0x6>
 81a:	81 e0       	ldi	r24, 0x01	; 1
 81c:	08 95       	ret

0000081e <__divsf3>:
 81e:	0c d0       	rcall	.+24     	; 0x838 <__divsf3x>
 820:	cd c0       	rjmp	.+410    	; 0x9bc <__fp_round>
 822:	c5 d0       	rcall	.+394    	; 0x9ae <__fp_pscB>
 824:	40 f0       	brcs	.+16     	; 0x836 <__divsf3+0x18>
 826:	bc d0       	rcall	.+376    	; 0x9a0 <__fp_pscA>
 828:	30 f0       	brcs	.+12     	; 0x836 <__divsf3+0x18>
 82a:	21 f4       	brne	.+8      	; 0x834 <__divsf3+0x16>
 82c:	5f 3f       	cpi	r21, 0xFF	; 255
 82e:	19 f0       	breq	.+6      	; 0x836 <__divsf3+0x18>
 830:	ae c0       	rjmp	.+348    	; 0x98e <__fp_inf>
 832:	51 11       	cpse	r21, r1
 834:	f7 c0       	rjmp	.+494    	; 0xa24 <__fp_szero>
 836:	b1 c0       	rjmp	.+354    	; 0x99a <__fp_nan>

00000838 <__divsf3x>:
 838:	d2 d0       	rcall	.+420    	; 0x9de <__fp_split3>
 83a:	98 f3       	brcs	.-26     	; 0x822 <__divsf3+0x4>

0000083c <__divsf3_pse>:
 83c:	99 23       	and	r25, r25
 83e:	c9 f3       	breq	.-14     	; 0x832 <__divsf3+0x14>
 840:	55 23       	and	r21, r21
 842:	b1 f3       	breq	.-20     	; 0x830 <__divsf3+0x12>
 844:	95 1b       	sub	r25, r21
 846:	55 0b       	sbc	r21, r21
 848:	bb 27       	eor	r27, r27
 84a:	aa 27       	eor	r26, r26
 84c:	62 17       	cp	r22, r18
 84e:	73 07       	cpc	r23, r19
 850:	84 07       	cpc	r24, r20
 852:	38 f0       	brcs	.+14     	; 0x862 <__stack+0x3>
 854:	9f 5f       	subi	r25, 0xFF	; 255
 856:	5f 4f       	sbci	r21, 0xFF	; 255
 858:	22 0f       	add	r18, r18
 85a:	33 1f       	adc	r19, r19
 85c:	44 1f       	adc	r20, r20
 85e:	aa 1f       	adc	r26, r26
 860:	a9 f3       	breq	.-22     	; 0x84c <__divsf3_pse+0x10>
 862:	33 d0       	rcall	.+102    	; 0x8ca <__stack+0x6b>
 864:	0e 2e       	mov	r0, r30
 866:	3a f0       	brmi	.+14     	; 0x876 <__stack+0x17>
 868:	e0 e8       	ldi	r30, 0x80	; 128
 86a:	30 d0       	rcall	.+96     	; 0x8cc <__stack+0x6d>
 86c:	91 50       	subi	r25, 0x01	; 1
 86e:	50 40       	sbci	r21, 0x00	; 0
 870:	e6 95       	lsr	r30
 872:	00 1c       	adc	r0, r0
 874:	ca f7       	brpl	.-14     	; 0x868 <__stack+0x9>
 876:	29 d0       	rcall	.+82     	; 0x8ca <__stack+0x6b>
 878:	fe 2f       	mov	r31, r30
 87a:	27 d0       	rcall	.+78     	; 0x8ca <__stack+0x6b>
 87c:	66 0f       	add	r22, r22
 87e:	77 1f       	adc	r23, r23
 880:	88 1f       	adc	r24, r24
 882:	bb 1f       	adc	r27, r27
 884:	26 17       	cp	r18, r22
 886:	37 07       	cpc	r19, r23
 888:	48 07       	cpc	r20, r24
 88a:	ab 07       	cpc	r26, r27
 88c:	b0 e8       	ldi	r27, 0x80	; 128
 88e:	09 f0       	breq	.+2      	; 0x892 <__stack+0x33>
 890:	bb 0b       	sbc	r27, r27
 892:	80 2d       	mov	r24, r0
 894:	bf 01       	movw	r22, r30
 896:	ff 27       	eor	r31, r31
 898:	93 58       	subi	r25, 0x83	; 131
 89a:	5f 4f       	sbci	r21, 0xFF	; 255
 89c:	2a f0       	brmi	.+10     	; 0x8a8 <__stack+0x49>
 89e:	9e 3f       	cpi	r25, 0xFE	; 254
 8a0:	51 05       	cpc	r21, r1
 8a2:	68 f0       	brcs	.+26     	; 0x8be <__stack+0x5f>
 8a4:	74 c0       	rjmp	.+232    	; 0x98e <__fp_inf>
 8a6:	be c0       	rjmp	.+380    	; 0xa24 <__fp_szero>
 8a8:	5f 3f       	cpi	r21, 0xFF	; 255
 8aa:	ec f3       	brlt	.-6      	; 0x8a6 <__stack+0x47>
 8ac:	98 3e       	cpi	r25, 0xE8	; 232
 8ae:	dc f3       	brlt	.-10     	; 0x8a6 <__stack+0x47>
 8b0:	86 95       	lsr	r24
 8b2:	77 95       	ror	r23
 8b4:	67 95       	ror	r22
 8b6:	b7 95       	ror	r27
 8b8:	f7 95       	ror	r31
 8ba:	9f 5f       	subi	r25, 0xFF	; 255
 8bc:	c9 f7       	brne	.-14     	; 0x8b0 <__stack+0x51>
 8be:	88 0f       	add	r24, r24
 8c0:	91 1d       	adc	r25, r1
 8c2:	96 95       	lsr	r25
 8c4:	87 95       	ror	r24
 8c6:	97 f9       	bld	r25, 7
 8c8:	08 95       	ret
 8ca:	e1 e0       	ldi	r30, 0x01	; 1
 8cc:	66 0f       	add	r22, r22
 8ce:	77 1f       	adc	r23, r23
 8d0:	88 1f       	adc	r24, r24
 8d2:	bb 1f       	adc	r27, r27
 8d4:	62 17       	cp	r22, r18
 8d6:	73 07       	cpc	r23, r19
 8d8:	84 07       	cpc	r24, r20
 8da:	ba 07       	cpc	r27, r26
 8dc:	20 f0       	brcs	.+8      	; 0x8e6 <__stack+0x87>
 8de:	62 1b       	sub	r22, r18
 8e0:	73 0b       	sbc	r23, r19
 8e2:	84 0b       	sbc	r24, r20
 8e4:	ba 0b       	sbc	r27, r26
 8e6:	ee 1f       	adc	r30, r30
 8e8:	88 f7       	brcc	.-30     	; 0x8cc <__stack+0x6d>
 8ea:	e0 95       	com	r30
 8ec:	08 95       	ret

000008ee <__fixunssfsi>:
 8ee:	7f d0       	rcall	.+254    	; 0x9ee <__fp_splitA>
 8f0:	88 f0       	brcs	.+34     	; 0x914 <__fixunssfsi+0x26>
 8f2:	9f 57       	subi	r25, 0x7F	; 127
 8f4:	90 f0       	brcs	.+36     	; 0x91a <__fixunssfsi+0x2c>
 8f6:	b9 2f       	mov	r27, r25
 8f8:	99 27       	eor	r25, r25
 8fa:	b7 51       	subi	r27, 0x17	; 23
 8fc:	a0 f0       	brcs	.+40     	; 0x926 <__fixunssfsi+0x38>
 8fe:	d1 f0       	breq	.+52     	; 0x934 <__fixunssfsi+0x46>
 900:	66 0f       	add	r22, r22
 902:	77 1f       	adc	r23, r23
 904:	88 1f       	adc	r24, r24
 906:	99 1f       	adc	r25, r25
 908:	1a f0       	brmi	.+6      	; 0x910 <__fixunssfsi+0x22>
 90a:	ba 95       	dec	r27
 90c:	c9 f7       	brne	.-14     	; 0x900 <__fixunssfsi+0x12>
 90e:	12 c0       	rjmp	.+36     	; 0x934 <__fixunssfsi+0x46>
 910:	b1 30       	cpi	r27, 0x01	; 1
 912:	81 f0       	breq	.+32     	; 0x934 <__fixunssfsi+0x46>
 914:	86 d0       	rcall	.+268    	; 0xa22 <__fp_zero>
 916:	b1 e0       	ldi	r27, 0x01	; 1
 918:	08 95       	ret
 91a:	83 c0       	rjmp	.+262    	; 0xa22 <__fp_zero>
 91c:	67 2f       	mov	r22, r23
 91e:	78 2f       	mov	r23, r24
 920:	88 27       	eor	r24, r24
 922:	b8 5f       	subi	r27, 0xF8	; 248
 924:	39 f0       	breq	.+14     	; 0x934 <__fixunssfsi+0x46>
 926:	b9 3f       	cpi	r27, 0xF9	; 249
 928:	cc f3       	brlt	.-14     	; 0x91c <__fixunssfsi+0x2e>
 92a:	86 95       	lsr	r24
 92c:	77 95       	ror	r23
 92e:	67 95       	ror	r22
 930:	b3 95       	inc	r27
 932:	d9 f7       	brne	.-10     	; 0x92a <__fixunssfsi+0x3c>
 934:	3e f4       	brtc	.+14     	; 0x944 <__fixunssfsi+0x56>
 936:	90 95       	com	r25
 938:	80 95       	com	r24
 93a:	70 95       	com	r23
 93c:	61 95       	neg	r22
 93e:	7f 4f       	sbci	r23, 0xFF	; 255
 940:	8f 4f       	sbci	r24, 0xFF	; 255
 942:	9f 4f       	sbci	r25, 0xFF	; 255
 944:	08 95       	ret

00000946 <__fp_cmp>:
 946:	99 0f       	add	r25, r25
 948:	00 08       	sbc	r0, r0
 94a:	55 0f       	add	r21, r21
 94c:	aa 0b       	sbc	r26, r26
 94e:	e0 e8       	ldi	r30, 0x80	; 128
 950:	fe ef       	ldi	r31, 0xFE	; 254
 952:	16 16       	cp	r1, r22
 954:	17 06       	cpc	r1, r23
 956:	e8 07       	cpc	r30, r24
 958:	f9 07       	cpc	r31, r25
 95a:	c0 f0       	brcs	.+48     	; 0x98c <__fp_cmp+0x46>
 95c:	12 16       	cp	r1, r18
 95e:	13 06       	cpc	r1, r19
 960:	e4 07       	cpc	r30, r20
 962:	f5 07       	cpc	r31, r21
 964:	98 f0       	brcs	.+38     	; 0x98c <__fp_cmp+0x46>
 966:	62 1b       	sub	r22, r18
 968:	73 0b       	sbc	r23, r19
 96a:	84 0b       	sbc	r24, r20
 96c:	95 0b       	sbc	r25, r21
 96e:	39 f4       	brne	.+14     	; 0x97e <__fp_cmp+0x38>
 970:	0a 26       	eor	r0, r26
 972:	61 f0       	breq	.+24     	; 0x98c <__fp_cmp+0x46>
 974:	23 2b       	or	r18, r19
 976:	24 2b       	or	r18, r20
 978:	25 2b       	or	r18, r21
 97a:	21 f4       	brne	.+8      	; 0x984 <__fp_cmp+0x3e>
 97c:	08 95       	ret
 97e:	0a 26       	eor	r0, r26
 980:	09 f4       	brne	.+2      	; 0x984 <__fp_cmp+0x3e>
 982:	a1 40       	sbci	r26, 0x01	; 1
 984:	a6 95       	lsr	r26
 986:	8f ef       	ldi	r24, 0xFF	; 255
 988:	81 1d       	adc	r24, r1
 98a:	81 1d       	adc	r24, r1
 98c:	08 95       	ret

0000098e <__fp_inf>:
 98e:	97 f9       	bld	r25, 7
 990:	9f 67       	ori	r25, 0x7F	; 127
 992:	80 e8       	ldi	r24, 0x80	; 128
 994:	70 e0       	ldi	r23, 0x00	; 0
 996:	60 e0       	ldi	r22, 0x00	; 0
 998:	08 95       	ret

0000099a <__fp_nan>:
 99a:	9f ef       	ldi	r25, 0xFF	; 255
 99c:	80 ec       	ldi	r24, 0xC0	; 192
 99e:	08 95       	ret

000009a0 <__fp_pscA>:
 9a0:	00 24       	eor	r0, r0
 9a2:	0a 94       	dec	r0
 9a4:	16 16       	cp	r1, r22
 9a6:	17 06       	cpc	r1, r23
 9a8:	18 06       	cpc	r1, r24
 9aa:	09 06       	cpc	r0, r25
 9ac:	08 95       	ret

000009ae <__fp_pscB>:
 9ae:	00 24       	eor	r0, r0
 9b0:	0a 94       	dec	r0
 9b2:	12 16       	cp	r1, r18
 9b4:	13 06       	cpc	r1, r19
 9b6:	14 06       	cpc	r1, r20
 9b8:	05 06       	cpc	r0, r21
 9ba:	08 95       	ret

000009bc <__fp_round>:
 9bc:	09 2e       	mov	r0, r25
 9be:	03 94       	inc	r0
 9c0:	00 0c       	add	r0, r0
 9c2:	11 f4       	brne	.+4      	; 0x9c8 <__fp_round+0xc>
 9c4:	88 23       	and	r24, r24
 9c6:	52 f0       	brmi	.+20     	; 0x9dc <__fp_round+0x20>
 9c8:	bb 0f       	add	r27, r27
 9ca:	40 f4       	brcc	.+16     	; 0x9dc <__fp_round+0x20>
 9cc:	bf 2b       	or	r27, r31
 9ce:	11 f4       	brne	.+4      	; 0x9d4 <__fp_round+0x18>
 9d0:	60 ff       	sbrs	r22, 0
 9d2:	04 c0       	rjmp	.+8      	; 0x9dc <__fp_round+0x20>
 9d4:	6f 5f       	subi	r22, 0xFF	; 255
 9d6:	7f 4f       	sbci	r23, 0xFF	; 255
 9d8:	8f 4f       	sbci	r24, 0xFF	; 255
 9da:	9f 4f       	sbci	r25, 0xFF	; 255
 9dc:	08 95       	ret

000009de <__fp_split3>:
 9de:	57 fd       	sbrc	r21, 7
 9e0:	90 58       	subi	r25, 0x80	; 128
 9e2:	44 0f       	add	r20, r20
 9e4:	55 1f       	adc	r21, r21
 9e6:	59 f0       	breq	.+22     	; 0x9fe <__fp_splitA+0x10>
 9e8:	5f 3f       	cpi	r21, 0xFF	; 255
 9ea:	71 f0       	breq	.+28     	; 0xa08 <__fp_splitA+0x1a>
 9ec:	47 95       	ror	r20

000009ee <__fp_splitA>:
 9ee:	88 0f       	add	r24, r24
 9f0:	97 fb       	bst	r25, 7
 9f2:	99 1f       	adc	r25, r25
 9f4:	61 f0       	breq	.+24     	; 0xa0e <__fp_splitA+0x20>
 9f6:	9f 3f       	cpi	r25, 0xFF	; 255
 9f8:	79 f0       	breq	.+30     	; 0xa18 <__fp_splitA+0x2a>
 9fa:	87 95       	ror	r24
 9fc:	08 95       	ret
 9fe:	12 16       	cp	r1, r18
 a00:	13 06       	cpc	r1, r19
 a02:	14 06       	cpc	r1, r20
 a04:	55 1f       	adc	r21, r21
 a06:	f2 cf       	rjmp	.-28     	; 0x9ec <__fp_split3+0xe>
 a08:	46 95       	lsr	r20
 a0a:	f1 df       	rcall	.-30     	; 0x9ee <__fp_splitA>
 a0c:	08 c0       	rjmp	.+16     	; 0xa1e <__fp_splitA+0x30>
 a0e:	16 16       	cp	r1, r22
 a10:	17 06       	cpc	r1, r23
 a12:	18 06       	cpc	r1, r24
 a14:	99 1f       	adc	r25, r25
 a16:	f1 cf       	rjmp	.-30     	; 0x9fa <__fp_splitA+0xc>
 a18:	86 95       	lsr	r24
 a1a:	71 05       	cpc	r23, r1
 a1c:	61 05       	cpc	r22, r1
 a1e:	08 94       	sec
 a20:	08 95       	ret

00000a22 <__fp_zero>:
 a22:	e8 94       	clt

00000a24 <__fp_szero>:
 a24:	bb 27       	eor	r27, r27
 a26:	66 27       	eor	r22, r22
 a28:	77 27       	eor	r23, r23
 a2a:	cb 01       	movw	r24, r22
 a2c:	97 f9       	bld	r25, 7
 a2e:	08 95       	ret

00000a30 <__gesf2>:
 a30:	8a df       	rcall	.-236    	; 0x946 <__fp_cmp>
 a32:	08 f4       	brcc	.+2      	; 0xa36 <__gesf2+0x6>
 a34:	8f ef       	ldi	r24, 0xFF	; 255
 a36:	08 95       	ret

00000a38 <__mulsf3>:
 a38:	0b d0       	rcall	.+22     	; 0xa50 <__mulsf3x>
 a3a:	c0 cf       	rjmp	.-128    	; 0x9bc <__fp_round>
 a3c:	b1 df       	rcall	.-158    	; 0x9a0 <__fp_pscA>
 a3e:	28 f0       	brcs	.+10     	; 0xa4a <__mulsf3+0x12>
 a40:	b6 df       	rcall	.-148    	; 0x9ae <__fp_pscB>
 a42:	18 f0       	brcs	.+6      	; 0xa4a <__mulsf3+0x12>
 a44:	95 23       	and	r25, r21
 a46:	09 f0       	breq	.+2      	; 0xa4a <__mulsf3+0x12>
 a48:	a2 cf       	rjmp	.-188    	; 0x98e <__fp_inf>
 a4a:	a7 cf       	rjmp	.-178    	; 0x99a <__fp_nan>
 a4c:	11 24       	eor	r1, r1
 a4e:	ea cf       	rjmp	.-44     	; 0xa24 <__fp_szero>

00000a50 <__mulsf3x>:
 a50:	c6 df       	rcall	.-116    	; 0x9de <__fp_split3>
 a52:	a0 f3       	brcs	.-24     	; 0xa3c <__mulsf3+0x4>

00000a54 <__mulsf3_pse>:
 a54:	95 9f       	mul	r25, r21
 a56:	d1 f3       	breq	.-12     	; 0xa4c <__mulsf3+0x14>
 a58:	95 0f       	add	r25, r21
 a5a:	50 e0       	ldi	r21, 0x00	; 0
 a5c:	55 1f       	adc	r21, r21
 a5e:	62 9f       	mul	r22, r18
 a60:	f0 01       	movw	r30, r0
 a62:	72 9f       	mul	r23, r18
 a64:	bb 27       	eor	r27, r27
 a66:	f0 0d       	add	r31, r0
 a68:	b1 1d       	adc	r27, r1
 a6a:	63 9f       	mul	r22, r19
 a6c:	aa 27       	eor	r26, r26
 a6e:	f0 0d       	add	r31, r0
 a70:	b1 1d       	adc	r27, r1
 a72:	aa 1f       	adc	r26, r26
 a74:	64 9f       	mul	r22, r20
 a76:	66 27       	eor	r22, r22
 a78:	b0 0d       	add	r27, r0
 a7a:	a1 1d       	adc	r26, r1
 a7c:	66 1f       	adc	r22, r22
 a7e:	82 9f       	mul	r24, r18
 a80:	22 27       	eor	r18, r18
 a82:	b0 0d       	add	r27, r0
 a84:	a1 1d       	adc	r26, r1
 a86:	62 1f       	adc	r22, r18
 a88:	73 9f       	mul	r23, r19
 a8a:	b0 0d       	add	r27, r0
 a8c:	a1 1d       	adc	r26, r1
 a8e:	62 1f       	adc	r22, r18
 a90:	83 9f       	mul	r24, r19
 a92:	a0 0d       	add	r26, r0
 a94:	61 1d       	adc	r22, r1
 a96:	22 1f       	adc	r18, r18
 a98:	74 9f       	mul	r23, r20
 a9a:	33 27       	eor	r19, r19
 a9c:	a0 0d       	add	r26, r0
 a9e:	61 1d       	adc	r22, r1
 aa0:	23 1f       	adc	r18, r19
 aa2:	84 9f       	mul	r24, r20
 aa4:	60 0d       	add	r22, r0
 aa6:	21 1d       	adc	r18, r1
 aa8:	82 2f       	mov	r24, r18
 aaa:	76 2f       	mov	r23, r22
 aac:	6a 2f       	mov	r22, r26
 aae:	11 24       	eor	r1, r1
 ab0:	9f 57       	subi	r25, 0x7F	; 127
 ab2:	50 40       	sbci	r21, 0x00	; 0
 ab4:	8a f0       	brmi	.+34     	; 0xad8 <__mulsf3_pse+0x84>
 ab6:	e1 f0       	breq	.+56     	; 0xaf0 <__mulsf3_pse+0x9c>
 ab8:	88 23       	and	r24, r24
 aba:	4a f0       	brmi	.+18     	; 0xace <__mulsf3_pse+0x7a>
 abc:	ee 0f       	add	r30, r30
 abe:	ff 1f       	adc	r31, r31
 ac0:	bb 1f       	adc	r27, r27
 ac2:	66 1f       	adc	r22, r22
 ac4:	77 1f       	adc	r23, r23
 ac6:	88 1f       	adc	r24, r24
 ac8:	91 50       	subi	r25, 0x01	; 1
 aca:	50 40       	sbci	r21, 0x00	; 0
 acc:	a9 f7       	brne	.-22     	; 0xab8 <__mulsf3_pse+0x64>
 ace:	9e 3f       	cpi	r25, 0xFE	; 254
 ad0:	51 05       	cpc	r21, r1
 ad2:	70 f0       	brcs	.+28     	; 0xaf0 <__mulsf3_pse+0x9c>
 ad4:	5c cf       	rjmp	.-328    	; 0x98e <__fp_inf>
 ad6:	a6 cf       	rjmp	.-180    	; 0xa24 <__fp_szero>
 ad8:	5f 3f       	cpi	r21, 0xFF	; 255
 ada:	ec f3       	brlt	.-6      	; 0xad6 <__mulsf3_pse+0x82>
 adc:	98 3e       	cpi	r25, 0xE8	; 232
 ade:	dc f3       	brlt	.-10     	; 0xad6 <__mulsf3_pse+0x82>
 ae0:	86 95       	lsr	r24
 ae2:	77 95       	ror	r23
 ae4:	67 95       	ror	r22
 ae6:	b7 95       	ror	r27
 ae8:	f7 95       	ror	r31
 aea:	e7 95       	ror	r30
 aec:	9f 5f       	subi	r25, 0xFF	; 255
 aee:	c1 f7       	brne	.-16     	; 0xae0 <__mulsf3_pse+0x8c>
 af0:	fe 2b       	or	r31, r30
 af2:	88 0f       	add	r24, r24
 af4:	91 1d       	adc	r25, r1
 af6:	96 95       	lsr	r25
 af8:	87 95       	ror	r24
 afa:	97 f9       	bld	r25, 7
 afc:	08 95       	ret

00000afe <_exit>:
 afe:	f8 94       	cli

00000b00 <__stop_program>:
 b00:	ff cf       	rjmp	.-2      	; 0xb00 <__stop_program>
