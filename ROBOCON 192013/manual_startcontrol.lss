
manual_startcontrol.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000072cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000000b  00800060  00800060  00007340  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  00007340  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000000b7  00000000  00000000  00007360  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001b54  00000000  00000000  00007417  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000115  00000000  00000000  00008f6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00002420  00000000  00000000  00009080  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000050  00000000  00000000  0000b4a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000014d  00000000  00000000  0000b4f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
       8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
       c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ab 36       	cpi	r26, 0x6B	; 107
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
      70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
      74:	0c 94 64 39 	jmp	0x72c8	; 0x72c8 <_exit>

00000078 <__bad_interrupt>:
      78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#define ps2in PINC
void config(void);
void analog(void);
void readgamepad(void);
int main(void)
{	
      7c:	0f 93       	push	r16
      7e:	1f 93       	push	r17
      80:	df 93       	push	r29
      82:	cf 93       	push	r28
      84:	cd b7       	in	r28, 0x3d	; 61
      86:	de b7       	in	r29, 0x3e	; 62
      88:	c8 57       	subi	r28, 0x78	; 120
      8a:	d0 40       	sbci	r29, 0x00	; 0
      8c:	0f b6       	in	r0, 0x3f	; 63
      8e:	f8 94       	cli
      90:	de bf       	out	0x3e, r29	; 62
      92:	0f be       	out	0x3f, r0	; 63
      94:	cd bf       	out	0x3d, r28	; 61
DDRC = 0xFD;
      96:	e4 e3       	ldi	r30, 0x34	; 52
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	8d ef       	ldi	r24, 0xFD	; 253
      9c:	80 83       	st	Z, r24
	UCSRB = 0x08;
      9e:	ea e2       	ldi	r30, 0x2A	; 42
      a0:	f0 e0       	ldi	r31, 0x00	; 0
      a2:	88 e0       	ldi	r24, 0x08	; 8
      a4:	80 83       	st	Z, r24
	UCSRC = 0x86;
      a6:	e0 e4       	ldi	r30, 0x40	; 64
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	86 e8       	ldi	r24, 0x86	; 134
      ac:	80 83       	st	Z, r24
	UBRRL = 207;
      ae:	e9 e2       	ldi	r30, 0x29	; 41
      b0:	f0 e0       	ldi	r31, 0x00	; 0
      b2:	8f ec       	ldi	r24, 0xCF	; 207
      b4:	80 83       	st	Z, r24
_delay_us(10);
analog();
_delay_us(10);*/
	while(1)
	{
	readgamepad();
      b6:	0e 94 b4 1f 	call	0x3f68	; 0x3f68 <readgamepad>
      ba:	fe 01       	movw	r30, r28
      bc:	eb 58       	subi	r30, 0x8B	; 139
      be:	ff 4f       	sbci	r31, 0xFF	; 255
      c0:	80 e0       	ldi	r24, 0x00	; 0
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	a0 e2       	ldi	r26, 0x20	; 32
      c6:	b1 e4       	ldi	r27, 0x41	; 65
      c8:	80 83       	st	Z, r24
      ca:	91 83       	std	Z+1, r25	; 0x01
      cc:	a2 83       	std	Z+2, r26	; 0x02
      ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
      d0:	8e 01       	movw	r16, r28
      d2:	0f 58       	subi	r16, 0x8F	; 143
      d4:	1f 4f       	sbci	r17, 0xFF	; 255
      d6:	fe 01       	movw	r30, r28
      d8:	eb 58       	subi	r30, 0x8B	; 139
      da:	ff 4f       	sbci	r31, 0xFF	; 255
      dc:	60 81       	ld	r22, Z
      de:	71 81       	ldd	r23, Z+1	; 0x01
      e0:	82 81       	ldd	r24, Z+2	; 0x02
      e2:	93 81       	ldd	r25, Z+3	; 0x03
      e4:	2b ea       	ldi	r18, 0xAB	; 171
      e6:	3a ea       	ldi	r19, 0xAA	; 170
      e8:	4a ea       	ldi	r20, 0xAA	; 170
      ea:	50 e4       	ldi	r21, 0x40	; 64
      ec:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
      f0:	dc 01       	movw	r26, r24
      f2:	cb 01       	movw	r24, r22
      f4:	f8 01       	movw	r30, r16
      f6:	80 83       	st	Z, r24
      f8:	91 83       	std	Z+1, r25	; 0x01
      fa:	a2 83       	std	Z+2, r26	; 0x02
      fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
      fe:	fe 01       	movw	r30, r28
     100:	ef 58       	subi	r30, 0x8F	; 143
     102:	ff 4f       	sbci	r31, 0xFF	; 255
     104:	60 81       	ld	r22, Z
     106:	71 81       	ldd	r23, Z+1	; 0x01
     108:	82 81       	ldd	r24, Z+2	; 0x02
     10a:	93 81       	ldd	r25, Z+3	; 0x03
     10c:	20 e0       	ldi	r18, 0x00	; 0
     10e:	30 e0       	ldi	r19, 0x00	; 0
     110:	40 e8       	ldi	r20, 0x80	; 128
     112:	5f e3       	ldi	r21, 0x3F	; 63
     114:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     118:	88 23       	and	r24, r24
     11a:	34 f4       	brge	.+12     	; 0x128 <main+0xac>
		__ticks = 1;
     11c:	fe 01       	movw	r30, r28
     11e:	e0 59       	subi	r30, 0x90	; 144
     120:	ff 4f       	sbci	r31, 0xFF	; 255
     122:	81 e0       	ldi	r24, 0x01	; 1
     124:	80 83       	st	Z, r24
     126:	e0 c0       	rjmp	.+448    	; 0x2e8 <main+0x26c>
	else if (__tmp > 255)
     128:	fe 01       	movw	r30, r28
     12a:	ef 58       	subi	r30, 0x8F	; 143
     12c:	ff 4f       	sbci	r31, 0xFF	; 255
     12e:	60 81       	ld	r22, Z
     130:	71 81       	ldd	r23, Z+1	; 0x01
     132:	82 81       	ldd	r24, Z+2	; 0x02
     134:	93 81       	ldd	r25, Z+3	; 0x03
     136:	20 e0       	ldi	r18, 0x00	; 0
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	4f e7       	ldi	r20, 0x7F	; 127
     13c:	53 e4       	ldi	r21, 0x43	; 67
     13e:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     142:	18 16       	cp	r1, r24
     144:	0c f0       	brlt	.+2      	; 0x148 <main+0xcc>
     146:	c0 c0       	rjmp	.+384    	; 0x2c8 <main+0x24c>
	{
		_delay_ms(__us / 1000.0);
     148:	fe 01       	movw	r30, r28
     14a:	eb 58       	subi	r30, 0x8B	; 139
     14c:	ff 4f       	sbci	r31, 0xFF	; 255
     14e:	60 81       	ld	r22, Z
     150:	71 81       	ldd	r23, Z+1	; 0x01
     152:	82 81       	ldd	r24, Z+2	; 0x02
     154:	93 81       	ldd	r25, Z+3	; 0x03
     156:	20 e0       	ldi	r18, 0x00	; 0
     158:	30 e0       	ldi	r19, 0x00	; 0
     15a:	4a e7       	ldi	r20, 0x7A	; 122
     15c:	54 e4       	ldi	r21, 0x44	; 68
     15e:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
     162:	dc 01       	movw	r26, r24
     164:	cb 01       	movw	r24, r22
     166:	fe 01       	movw	r30, r28
     168:	e4 59       	subi	r30, 0x94	; 148
     16a:	ff 4f       	sbci	r31, 0xFF	; 255
     16c:	80 83       	st	Z, r24
     16e:	91 83       	std	Z+1, r25	; 0x01
     170:	a2 83       	std	Z+2, r26	; 0x02
     172:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     174:	8e 01       	movw	r16, r28
     176:	08 59       	subi	r16, 0x98	; 152
     178:	1f 4f       	sbci	r17, 0xFF	; 255
     17a:	fe 01       	movw	r30, r28
     17c:	e4 59       	subi	r30, 0x94	; 148
     17e:	ff 4f       	sbci	r31, 0xFF	; 255
     180:	60 81       	ld	r22, Z
     182:	71 81       	ldd	r23, Z+1	; 0x01
     184:	82 81       	ldd	r24, Z+2	; 0x02
     186:	93 81       	ldd	r25, Z+3	; 0x03
     188:	20 e0       	ldi	r18, 0x00	; 0
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	4a e7       	ldi	r20, 0x7A	; 122
     18e:	55 e4       	ldi	r21, 0x45	; 69
     190:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     194:	dc 01       	movw	r26, r24
     196:	cb 01       	movw	r24, r22
     198:	f8 01       	movw	r30, r16
     19a:	80 83       	st	Z, r24
     19c:	91 83       	std	Z+1, r25	; 0x01
     19e:	a2 83       	std	Z+2, r26	; 0x02
     1a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     1a2:	fe 01       	movw	r30, r28
     1a4:	e8 59       	subi	r30, 0x98	; 152
     1a6:	ff 4f       	sbci	r31, 0xFF	; 255
     1a8:	60 81       	ld	r22, Z
     1aa:	71 81       	ldd	r23, Z+1	; 0x01
     1ac:	82 81       	ldd	r24, Z+2	; 0x02
     1ae:	93 81       	ldd	r25, Z+3	; 0x03
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e8       	ldi	r20, 0x80	; 128
     1b6:	5f e3       	ldi	r21, 0x3F	; 63
     1b8:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     1bc:	88 23       	and	r24, r24
     1be:	44 f4       	brge	.+16     	; 0x1d0 <main+0x154>
		__ticks = 1;
     1c0:	fe 01       	movw	r30, r28
     1c2:	ea 59       	subi	r30, 0x9A	; 154
     1c4:	ff 4f       	sbci	r31, 0xFF	; 255
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	91 83       	std	Z+1, r25	; 0x01
     1cc:	80 83       	st	Z, r24
     1ce:	64 c0       	rjmp	.+200    	; 0x298 <main+0x21c>
	else if (__tmp > 65535)
     1d0:	fe 01       	movw	r30, r28
     1d2:	e8 59       	subi	r30, 0x98	; 152
     1d4:	ff 4f       	sbci	r31, 0xFF	; 255
     1d6:	60 81       	ld	r22, Z
     1d8:	71 81       	ldd	r23, Z+1	; 0x01
     1da:	82 81       	ldd	r24, Z+2	; 0x02
     1dc:	93 81       	ldd	r25, Z+3	; 0x03
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	3f ef       	ldi	r19, 0xFF	; 255
     1e2:	4f e7       	ldi	r20, 0x7F	; 127
     1e4:	57 e4       	ldi	r21, 0x47	; 71
     1e6:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     1ea:	18 16       	cp	r1, r24
     1ec:	0c f0       	brlt	.+2      	; 0x1f0 <main+0x174>
     1ee:	43 c0       	rjmp	.+134    	; 0x276 <main+0x1fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1f0:	fe 01       	movw	r30, r28
     1f2:	e4 59       	subi	r30, 0x94	; 148
     1f4:	ff 4f       	sbci	r31, 0xFF	; 255
     1f6:	60 81       	ld	r22, Z
     1f8:	71 81       	ldd	r23, Z+1	; 0x01
     1fa:	82 81       	ldd	r24, Z+2	; 0x02
     1fc:	93 81       	ldd	r25, Z+3	; 0x03
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	40 e2       	ldi	r20, 0x20	; 32
     204:	51 e4       	ldi	r21, 0x41	; 65
     206:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     20a:	dc 01       	movw	r26, r24
     20c:	cb 01       	movw	r24, r22
     20e:	8e 01       	movw	r16, r28
     210:	0a 59       	subi	r16, 0x9A	; 154
     212:	1f 4f       	sbci	r17, 0xFF	; 255
     214:	bc 01       	movw	r22, r24
     216:	cd 01       	movw	r24, r26
     218:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     21c:	dc 01       	movw	r26, r24
     21e:	cb 01       	movw	r24, r22
     220:	f8 01       	movw	r30, r16
     222:	91 83       	std	Z+1, r25	; 0x01
     224:	80 83       	st	Z, r24
     226:	1f c0       	rjmp	.+62     	; 0x266 <main+0x1ea>
     228:	fe 01       	movw	r30, r28
     22a:	ec 59       	subi	r30, 0x9C	; 156
     22c:	ff 4f       	sbci	r31, 0xFF	; 255
     22e:	80 e9       	ldi	r24, 0x90	; 144
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	91 83       	std	Z+1, r25	; 0x01
     234:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     236:	fe 01       	movw	r30, r28
     238:	ec 59       	subi	r30, 0x9C	; 156
     23a:	ff 4f       	sbci	r31, 0xFF	; 255
     23c:	80 81       	ld	r24, Z
     23e:	91 81       	ldd	r25, Z+1	; 0x01
     240:	01 97       	sbiw	r24, 0x01	; 1
     242:	f1 f7       	brne	.-4      	; 0x240 <main+0x1c4>
     244:	fe 01       	movw	r30, r28
     246:	ec 59       	subi	r30, 0x9C	; 156
     248:	ff 4f       	sbci	r31, 0xFF	; 255
     24a:	91 83       	std	Z+1, r25	; 0x01
     24c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     24e:	de 01       	movw	r26, r28
     250:	aa 59       	subi	r26, 0x9A	; 154
     252:	bf 4f       	sbci	r27, 0xFF	; 255
     254:	fe 01       	movw	r30, r28
     256:	ea 59       	subi	r30, 0x9A	; 154
     258:	ff 4f       	sbci	r31, 0xFF	; 255
     25a:	80 81       	ld	r24, Z
     25c:	91 81       	ldd	r25, Z+1	; 0x01
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	11 96       	adiw	r26, 0x01	; 1
     262:	9c 93       	st	X, r25
     264:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     266:	fe 01       	movw	r30, r28
     268:	ea 59       	subi	r30, 0x9A	; 154
     26a:	ff 4f       	sbci	r31, 0xFF	; 255
     26c:	80 81       	ld	r24, Z
     26e:	91 81       	ldd	r25, Z+1	; 0x01
     270:	00 97       	sbiw	r24, 0x00	; 0
     272:	d1 f6       	brne	.-76     	; 0x228 <main+0x1ac>
     274:	4b c0       	rjmp	.+150    	; 0x30c <main+0x290>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     276:	8e 01       	movw	r16, r28
     278:	0a 59       	subi	r16, 0x9A	; 154
     27a:	1f 4f       	sbci	r17, 0xFF	; 255
     27c:	fe 01       	movw	r30, r28
     27e:	e8 59       	subi	r30, 0x98	; 152
     280:	ff 4f       	sbci	r31, 0xFF	; 255
     282:	60 81       	ld	r22, Z
     284:	71 81       	ldd	r23, Z+1	; 0x01
     286:	82 81       	ldd	r24, Z+2	; 0x02
     288:	93 81       	ldd	r25, Z+3	; 0x03
     28a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     28e:	dc 01       	movw	r26, r24
     290:	cb 01       	movw	r24, r22
     292:	f8 01       	movw	r30, r16
     294:	91 83       	std	Z+1, r25	; 0x01
     296:	80 83       	st	Z, r24
     298:	de 01       	movw	r26, r28
     29a:	ae 59       	subi	r26, 0x9E	; 158
     29c:	bf 4f       	sbci	r27, 0xFF	; 255
     29e:	fe 01       	movw	r30, r28
     2a0:	ea 59       	subi	r30, 0x9A	; 154
     2a2:	ff 4f       	sbci	r31, 0xFF	; 255
     2a4:	80 81       	ld	r24, Z
     2a6:	91 81       	ldd	r25, Z+1	; 0x01
     2a8:	11 96       	adiw	r26, 0x01	; 1
     2aa:	9c 93       	st	X, r25
     2ac:	8e 93       	st	-X, r24
     2ae:	fe 01       	movw	r30, r28
     2b0:	ee 59       	subi	r30, 0x9E	; 158
     2b2:	ff 4f       	sbci	r31, 0xFF	; 255
     2b4:	80 81       	ld	r24, Z
     2b6:	91 81       	ldd	r25, Z+1	; 0x01
     2b8:	01 97       	sbiw	r24, 0x01	; 1
     2ba:	f1 f7       	brne	.-4      	; 0x2b8 <main+0x23c>
     2bc:	fe 01       	movw	r30, r28
     2be:	ee 59       	subi	r30, 0x9E	; 158
     2c0:	ff 4f       	sbci	r31, 0xFF	; 255
     2c2:	91 83       	std	Z+1, r25	; 0x01
     2c4:	80 83       	st	Z, r24
     2c6:	22 c0       	rjmp	.+68     	; 0x30c <main+0x290>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2c8:	8e 01       	movw	r16, r28
     2ca:	00 59       	subi	r16, 0x90	; 144
     2cc:	1f 4f       	sbci	r17, 0xFF	; 255
     2ce:	fe 01       	movw	r30, r28
     2d0:	ef 58       	subi	r30, 0x8F	; 143
     2d2:	ff 4f       	sbci	r31, 0xFF	; 255
     2d4:	60 81       	ld	r22, Z
     2d6:	71 81       	ldd	r23, Z+1	; 0x01
     2d8:	82 81       	ldd	r24, Z+2	; 0x02
     2da:	93 81       	ldd	r25, Z+3	; 0x03
     2dc:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     2e0:	dc 01       	movw	r26, r24
     2e2:	cb 01       	movw	r24, r22
     2e4:	f8 01       	movw	r30, r16
     2e6:	80 83       	st	Z, r24
     2e8:	de 01       	movw	r26, r28
     2ea:	af 59       	subi	r26, 0x9F	; 159
     2ec:	bf 4f       	sbci	r27, 0xFF	; 255
     2ee:	fe 01       	movw	r30, r28
     2f0:	e0 59       	subi	r30, 0x90	; 144
     2f2:	ff 4f       	sbci	r31, 0xFF	; 255
     2f4:	80 81       	ld	r24, Z
     2f6:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2f8:	fe 01       	movw	r30, r28
     2fa:	ef 59       	subi	r30, 0x9F	; 159
     2fc:	ff 4f       	sbci	r31, 0xFF	; 255
     2fe:	80 81       	ld	r24, Z
     300:	8a 95       	dec	r24
     302:	f1 f7       	brne	.-4      	; 0x300 <main+0x284>
     304:	fe 01       	movw	r30, r28
     306:	ef 59       	subi	r30, 0x9F	; 159
     308:	ff 4f       	sbci	r31, 0xFF	; 255
     30a:	80 83       	st	Z, r24
	_delay_us(10);
while(!(UCSRA & (1<<UDRE)))
     30c:	eb e2       	ldi	r30, 0x2B	; 43
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	80 81       	ld	r24, Z
     312:	88 2f       	mov	r24, r24
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	80 72       	andi	r24, 0x20	; 32
     318:	90 70       	andi	r25, 0x00	; 0
     31a:	00 97       	sbiw	r24, 0x00	; 0
     31c:	b9 f3       	breq	.-18     	; 0x30c <main+0x290>
	;
	UDR = 0x01 ;
     31e:	ec e2       	ldi	r30, 0x2C	; 44
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	81 e0       	ldi	r24, 0x01	; 1
     324:	80 83       	st	Z, r24
     326:	fe 01       	movw	r30, r28
     328:	e3 5a       	subi	r30, 0xA3	; 163
     32a:	ff 4f       	sbci	r31, 0xFF	; 255
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	a0 e8       	ldi	r26, 0x80	; 128
     332:	bf e3       	ldi	r27, 0x3F	; 63
     334:	80 83       	st	Z, r24
     336:	91 83       	std	Z+1, r25	; 0x01
     338:	a2 83       	std	Z+2, r26	; 0x02
     33a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     33c:	8e 01       	movw	r16, r28
     33e:	07 5a       	subi	r16, 0xA7	; 167
     340:	1f 4f       	sbci	r17, 0xFF	; 255
     342:	fe 01       	movw	r30, r28
     344:	e3 5a       	subi	r30, 0xA3	; 163
     346:	ff 4f       	sbci	r31, 0xFF	; 255
     348:	60 81       	ld	r22, Z
     34a:	71 81       	ldd	r23, Z+1	; 0x01
     34c:	82 81       	ldd	r24, Z+2	; 0x02
     34e:	93 81       	ldd	r25, Z+3	; 0x03
     350:	2b ea       	ldi	r18, 0xAB	; 171
     352:	3a ea       	ldi	r19, 0xAA	; 170
     354:	4a ea       	ldi	r20, 0xAA	; 170
     356:	50 e4       	ldi	r21, 0x40	; 64
     358:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     35c:	dc 01       	movw	r26, r24
     35e:	cb 01       	movw	r24, r22
     360:	f8 01       	movw	r30, r16
     362:	80 83       	st	Z, r24
     364:	91 83       	std	Z+1, r25	; 0x01
     366:	a2 83       	std	Z+2, r26	; 0x02
     368:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     36a:	fe 01       	movw	r30, r28
     36c:	e7 5a       	subi	r30, 0xA7	; 167
     36e:	ff 4f       	sbci	r31, 0xFF	; 255
     370:	60 81       	ld	r22, Z
     372:	71 81       	ldd	r23, Z+1	; 0x01
     374:	82 81       	ldd	r24, Z+2	; 0x02
     376:	93 81       	ldd	r25, Z+3	; 0x03
     378:	20 e0       	ldi	r18, 0x00	; 0
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	40 e8       	ldi	r20, 0x80	; 128
     37e:	5f e3       	ldi	r21, 0x3F	; 63
     380:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     384:	88 23       	and	r24, r24
     386:	34 f4       	brge	.+12     	; 0x394 <main+0x318>
		__ticks = 1;
     388:	fe 01       	movw	r30, r28
     38a:	e8 5a       	subi	r30, 0xA8	; 168
     38c:	ff 4f       	sbci	r31, 0xFF	; 255
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	80 83       	st	Z, r24
     392:	e0 c0       	rjmp	.+448    	; 0x554 <main+0x4d8>
	else if (__tmp > 255)
     394:	fe 01       	movw	r30, r28
     396:	e7 5a       	subi	r30, 0xA7	; 167
     398:	ff 4f       	sbci	r31, 0xFF	; 255
     39a:	60 81       	ld	r22, Z
     39c:	71 81       	ldd	r23, Z+1	; 0x01
     39e:	82 81       	ldd	r24, Z+2	; 0x02
     3a0:	93 81       	ldd	r25, Z+3	; 0x03
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	4f e7       	ldi	r20, 0x7F	; 127
     3a8:	53 e4       	ldi	r21, 0x43	; 67
     3aa:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     3ae:	18 16       	cp	r1, r24
     3b0:	0c f0       	brlt	.+2      	; 0x3b4 <main+0x338>
     3b2:	c0 c0       	rjmp	.+384    	; 0x534 <main+0x4b8>
	{
		_delay_ms(__us / 1000.0);
     3b4:	fe 01       	movw	r30, r28
     3b6:	e3 5a       	subi	r30, 0xA3	; 163
     3b8:	ff 4f       	sbci	r31, 0xFF	; 255
     3ba:	60 81       	ld	r22, Z
     3bc:	71 81       	ldd	r23, Z+1	; 0x01
     3be:	82 81       	ldd	r24, Z+2	; 0x02
     3c0:	93 81       	ldd	r25, Z+3	; 0x03
     3c2:	20 e0       	ldi	r18, 0x00	; 0
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	4a e7       	ldi	r20, 0x7A	; 122
     3c8:	54 e4       	ldi	r21, 0x44	; 68
     3ca:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
     3ce:	dc 01       	movw	r26, r24
     3d0:	cb 01       	movw	r24, r22
     3d2:	fe 01       	movw	r30, r28
     3d4:	ec 5a       	subi	r30, 0xAC	; 172
     3d6:	ff 4f       	sbci	r31, 0xFF	; 255
     3d8:	80 83       	st	Z, r24
     3da:	91 83       	std	Z+1, r25	; 0x01
     3dc:	a2 83       	std	Z+2, r26	; 0x02
     3de:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3e0:	8e 01       	movw	r16, r28
     3e2:	00 5b       	subi	r16, 0xB0	; 176
     3e4:	1f 4f       	sbci	r17, 0xFF	; 255
     3e6:	fe 01       	movw	r30, r28
     3e8:	ec 5a       	subi	r30, 0xAC	; 172
     3ea:	ff 4f       	sbci	r31, 0xFF	; 255
     3ec:	60 81       	ld	r22, Z
     3ee:	71 81       	ldd	r23, Z+1	; 0x01
     3f0:	82 81       	ldd	r24, Z+2	; 0x02
     3f2:	93 81       	ldd	r25, Z+3	; 0x03
     3f4:	20 e0       	ldi	r18, 0x00	; 0
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	4a e7       	ldi	r20, 0x7A	; 122
     3fa:	55 e4       	ldi	r21, 0x45	; 69
     3fc:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     400:	dc 01       	movw	r26, r24
     402:	cb 01       	movw	r24, r22
     404:	f8 01       	movw	r30, r16
     406:	80 83       	st	Z, r24
     408:	91 83       	std	Z+1, r25	; 0x01
     40a:	a2 83       	std	Z+2, r26	; 0x02
     40c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     40e:	fe 01       	movw	r30, r28
     410:	e0 5b       	subi	r30, 0xB0	; 176
     412:	ff 4f       	sbci	r31, 0xFF	; 255
     414:	60 81       	ld	r22, Z
     416:	71 81       	ldd	r23, Z+1	; 0x01
     418:	82 81       	ldd	r24, Z+2	; 0x02
     41a:	93 81       	ldd	r25, Z+3	; 0x03
     41c:	20 e0       	ldi	r18, 0x00	; 0
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	40 e8       	ldi	r20, 0x80	; 128
     422:	5f e3       	ldi	r21, 0x3F	; 63
     424:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     428:	88 23       	and	r24, r24
     42a:	44 f4       	brge	.+16     	; 0x43c <main+0x3c0>
		__ticks = 1;
     42c:	fe 01       	movw	r30, r28
     42e:	e2 5b       	subi	r30, 0xB2	; 178
     430:	ff 4f       	sbci	r31, 0xFF	; 255
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	91 83       	std	Z+1, r25	; 0x01
     438:	80 83       	st	Z, r24
     43a:	64 c0       	rjmp	.+200    	; 0x504 <main+0x488>
	else if (__tmp > 65535)
     43c:	fe 01       	movw	r30, r28
     43e:	e0 5b       	subi	r30, 0xB0	; 176
     440:	ff 4f       	sbci	r31, 0xFF	; 255
     442:	60 81       	ld	r22, Z
     444:	71 81       	ldd	r23, Z+1	; 0x01
     446:	82 81       	ldd	r24, Z+2	; 0x02
     448:	93 81       	ldd	r25, Z+3	; 0x03
     44a:	20 e0       	ldi	r18, 0x00	; 0
     44c:	3f ef       	ldi	r19, 0xFF	; 255
     44e:	4f e7       	ldi	r20, 0x7F	; 127
     450:	57 e4       	ldi	r21, 0x47	; 71
     452:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     456:	18 16       	cp	r1, r24
     458:	0c f0       	brlt	.+2      	; 0x45c <main+0x3e0>
     45a:	43 c0       	rjmp	.+134    	; 0x4e2 <main+0x466>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     45c:	fe 01       	movw	r30, r28
     45e:	ec 5a       	subi	r30, 0xAC	; 172
     460:	ff 4f       	sbci	r31, 0xFF	; 255
     462:	60 81       	ld	r22, Z
     464:	71 81       	ldd	r23, Z+1	; 0x01
     466:	82 81       	ldd	r24, Z+2	; 0x02
     468:	93 81       	ldd	r25, Z+3	; 0x03
     46a:	20 e0       	ldi	r18, 0x00	; 0
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	40 e2       	ldi	r20, 0x20	; 32
     470:	51 e4       	ldi	r21, 0x41	; 65
     472:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     476:	dc 01       	movw	r26, r24
     478:	cb 01       	movw	r24, r22
     47a:	8e 01       	movw	r16, r28
     47c:	02 5b       	subi	r16, 0xB2	; 178
     47e:	1f 4f       	sbci	r17, 0xFF	; 255
     480:	bc 01       	movw	r22, r24
     482:	cd 01       	movw	r24, r26
     484:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     488:	dc 01       	movw	r26, r24
     48a:	cb 01       	movw	r24, r22
     48c:	f8 01       	movw	r30, r16
     48e:	91 83       	std	Z+1, r25	; 0x01
     490:	80 83       	st	Z, r24
     492:	1f c0       	rjmp	.+62     	; 0x4d2 <main+0x456>
     494:	fe 01       	movw	r30, r28
     496:	e4 5b       	subi	r30, 0xB4	; 180
     498:	ff 4f       	sbci	r31, 0xFF	; 255
     49a:	80 e9       	ldi	r24, 0x90	; 144
     49c:	91 e0       	ldi	r25, 0x01	; 1
     49e:	91 83       	std	Z+1, r25	; 0x01
     4a0:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4a2:	fe 01       	movw	r30, r28
     4a4:	e4 5b       	subi	r30, 0xB4	; 180
     4a6:	ff 4f       	sbci	r31, 0xFF	; 255
     4a8:	80 81       	ld	r24, Z
     4aa:	91 81       	ldd	r25, Z+1	; 0x01
     4ac:	01 97       	sbiw	r24, 0x01	; 1
     4ae:	f1 f7       	brne	.-4      	; 0x4ac <main+0x430>
     4b0:	fe 01       	movw	r30, r28
     4b2:	e4 5b       	subi	r30, 0xB4	; 180
     4b4:	ff 4f       	sbci	r31, 0xFF	; 255
     4b6:	91 83       	std	Z+1, r25	; 0x01
     4b8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4ba:	de 01       	movw	r26, r28
     4bc:	a2 5b       	subi	r26, 0xB2	; 178
     4be:	bf 4f       	sbci	r27, 0xFF	; 255
     4c0:	fe 01       	movw	r30, r28
     4c2:	e2 5b       	subi	r30, 0xB2	; 178
     4c4:	ff 4f       	sbci	r31, 0xFF	; 255
     4c6:	80 81       	ld	r24, Z
     4c8:	91 81       	ldd	r25, Z+1	; 0x01
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	11 96       	adiw	r26, 0x01	; 1
     4ce:	9c 93       	st	X, r25
     4d0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4d2:	fe 01       	movw	r30, r28
     4d4:	e2 5b       	subi	r30, 0xB2	; 178
     4d6:	ff 4f       	sbci	r31, 0xFF	; 255
     4d8:	80 81       	ld	r24, Z
     4da:	91 81       	ldd	r25, Z+1	; 0x01
     4dc:	00 97       	sbiw	r24, 0x00	; 0
     4de:	d1 f6       	brne	.-76     	; 0x494 <main+0x418>
     4e0:	4b c0       	rjmp	.+150    	; 0x578 <main+0x4fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4e2:	8e 01       	movw	r16, r28
     4e4:	02 5b       	subi	r16, 0xB2	; 178
     4e6:	1f 4f       	sbci	r17, 0xFF	; 255
     4e8:	fe 01       	movw	r30, r28
     4ea:	e0 5b       	subi	r30, 0xB0	; 176
     4ec:	ff 4f       	sbci	r31, 0xFF	; 255
     4ee:	60 81       	ld	r22, Z
     4f0:	71 81       	ldd	r23, Z+1	; 0x01
     4f2:	82 81       	ldd	r24, Z+2	; 0x02
     4f4:	93 81       	ldd	r25, Z+3	; 0x03
     4f6:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     4fa:	dc 01       	movw	r26, r24
     4fc:	cb 01       	movw	r24, r22
     4fe:	f8 01       	movw	r30, r16
     500:	91 83       	std	Z+1, r25	; 0x01
     502:	80 83       	st	Z, r24
     504:	de 01       	movw	r26, r28
     506:	a6 5b       	subi	r26, 0xB6	; 182
     508:	bf 4f       	sbci	r27, 0xFF	; 255
     50a:	fe 01       	movw	r30, r28
     50c:	e2 5b       	subi	r30, 0xB2	; 178
     50e:	ff 4f       	sbci	r31, 0xFF	; 255
     510:	80 81       	ld	r24, Z
     512:	91 81       	ldd	r25, Z+1	; 0x01
     514:	11 96       	adiw	r26, 0x01	; 1
     516:	9c 93       	st	X, r25
     518:	8e 93       	st	-X, r24
     51a:	fe 01       	movw	r30, r28
     51c:	e6 5b       	subi	r30, 0xB6	; 182
     51e:	ff 4f       	sbci	r31, 0xFF	; 255
     520:	80 81       	ld	r24, Z
     522:	91 81       	ldd	r25, Z+1	; 0x01
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <main+0x4a8>
     528:	fe 01       	movw	r30, r28
     52a:	e6 5b       	subi	r30, 0xB6	; 182
     52c:	ff 4f       	sbci	r31, 0xFF	; 255
     52e:	91 83       	std	Z+1, r25	; 0x01
     530:	80 83       	st	Z, r24
     532:	22 c0       	rjmp	.+68     	; 0x578 <main+0x4fc>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     534:	8e 01       	movw	r16, r28
     536:	08 5a       	subi	r16, 0xA8	; 168
     538:	1f 4f       	sbci	r17, 0xFF	; 255
     53a:	fe 01       	movw	r30, r28
     53c:	e7 5a       	subi	r30, 0xA7	; 167
     53e:	ff 4f       	sbci	r31, 0xFF	; 255
     540:	60 81       	ld	r22, Z
     542:	71 81       	ldd	r23, Z+1	; 0x01
     544:	82 81       	ldd	r24, Z+2	; 0x02
     546:	93 81       	ldd	r25, Z+3	; 0x03
     548:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     54c:	dc 01       	movw	r26, r24
     54e:	cb 01       	movw	r24, r22
     550:	f8 01       	movw	r30, r16
     552:	80 83       	st	Z, r24
     554:	de 01       	movw	r26, r28
     556:	a7 5b       	subi	r26, 0xB7	; 183
     558:	bf 4f       	sbci	r27, 0xFF	; 255
     55a:	fe 01       	movw	r30, r28
     55c:	e8 5a       	subi	r30, 0xA8	; 168
     55e:	ff 4f       	sbci	r31, 0xFF	; 255
     560:	80 81       	ld	r24, Z
     562:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     564:	fe 01       	movw	r30, r28
     566:	e7 5b       	subi	r30, 0xB7	; 183
     568:	ff 4f       	sbci	r31, 0xFF	; 255
     56a:	80 81       	ld	r24, Z
     56c:	8a 95       	dec	r24
     56e:	f1 f7       	brne	.-4      	; 0x56c <main+0x4f0>
     570:	fe 01       	movw	r30, r28
     572:	e7 5b       	subi	r30, 0xB7	; 183
     574:	ff 4f       	sbci	r31, 0xFF	; 255
     576:	80 83       	st	Z, r24
_delay_us(1);
	while(!(UCSRA & (1<<UDRE)))
     578:	eb e2       	ldi	r30, 0x2B	; 43
     57a:	f0 e0       	ldi	r31, 0x00	; 0
     57c:	80 81       	ld	r24, Z
     57e:	88 2f       	mov	r24, r24
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	80 72       	andi	r24, 0x20	; 32
     584:	90 70       	andi	r25, 0x00	; 0
     586:	00 97       	sbiw	r24, 0x00	; 0
     588:	b9 f3       	breq	.-18     	; 0x578 <main+0x4fc>
	;
	UDR = ps2data6 ;
     58a:	ec e2       	ldi	r30, 0x2C	; 44
     58c:	f0 e0       	ldi	r31, 0x00	; 0
     58e:	80 91 68 00 	lds	r24, 0x0068
     592:	80 83       	st	Z, r24
     594:	fe 01       	movw	r30, r28
     596:	eb 5b       	subi	r30, 0xBB	; 187
     598:	ff 4f       	sbci	r31, 0xFF	; 255
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	a0 e8       	ldi	r26, 0x80	; 128
     5a0:	bf e3       	ldi	r27, 0x3F	; 63
     5a2:	80 83       	st	Z, r24
     5a4:	91 83       	std	Z+1, r25	; 0x01
     5a6:	a2 83       	std	Z+2, r26	; 0x02
     5a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     5aa:	8e 01       	movw	r16, r28
     5ac:	0f 5b       	subi	r16, 0xBF	; 191
     5ae:	1f 4f       	sbci	r17, 0xFF	; 255
     5b0:	fe 01       	movw	r30, r28
     5b2:	eb 5b       	subi	r30, 0xBB	; 187
     5b4:	ff 4f       	sbci	r31, 0xFF	; 255
     5b6:	60 81       	ld	r22, Z
     5b8:	71 81       	ldd	r23, Z+1	; 0x01
     5ba:	82 81       	ldd	r24, Z+2	; 0x02
     5bc:	93 81       	ldd	r25, Z+3	; 0x03
     5be:	2b ea       	ldi	r18, 0xAB	; 171
     5c0:	3a ea       	ldi	r19, 0xAA	; 170
     5c2:	4a ea       	ldi	r20, 0xAA	; 170
     5c4:	50 e4       	ldi	r21, 0x40	; 64
     5c6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     5ca:	dc 01       	movw	r26, r24
     5cc:	cb 01       	movw	r24, r22
     5ce:	f8 01       	movw	r30, r16
     5d0:	80 83       	st	Z, r24
     5d2:	91 83       	std	Z+1, r25	; 0x01
     5d4:	a2 83       	std	Z+2, r26	; 0x02
     5d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5d8:	fe 01       	movw	r30, r28
     5da:	ef 5b       	subi	r30, 0xBF	; 191
     5dc:	ff 4f       	sbci	r31, 0xFF	; 255
     5de:	60 81       	ld	r22, Z
     5e0:	71 81       	ldd	r23, Z+1	; 0x01
     5e2:	82 81       	ldd	r24, Z+2	; 0x02
     5e4:	93 81       	ldd	r25, Z+3	; 0x03
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	40 e8       	ldi	r20, 0x80	; 128
     5ec:	5f e3       	ldi	r21, 0x3F	; 63
     5ee:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     5f2:	88 23       	and	r24, r24
     5f4:	34 f4       	brge	.+12     	; 0x602 <main+0x586>
		__ticks = 1;
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	fe 01       	movw	r30, r28
     5fa:	e0 5c       	subi	r30, 0xC0	; 192
     5fc:	ff 4f       	sbci	r31, 0xFF	; 255
     5fe:	80 83       	st	Z, r24
     600:	9d c0       	rjmp	.+314    	; 0x73c <main+0x6c0>
	else if (__tmp > 255)
     602:	fe 01       	movw	r30, r28
     604:	ef 5b       	subi	r30, 0xBF	; 191
     606:	ff 4f       	sbci	r31, 0xFF	; 255
     608:	60 81       	ld	r22, Z
     60a:	71 81       	ldd	r23, Z+1	; 0x01
     60c:	82 81       	ldd	r24, Z+2	; 0x02
     60e:	93 81       	ldd	r25, Z+3	; 0x03
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	4f e7       	ldi	r20, 0x7F	; 127
     616:	53 e4       	ldi	r21, 0x43	; 67
     618:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     61c:	18 16       	cp	r1, r24
     61e:	0c f0       	brlt	.+2      	; 0x622 <main+0x5a6>
     620:	7e c0       	rjmp	.+252    	; 0x71e <main+0x6a2>
	{
		_delay_ms(__us / 1000.0);
     622:	fe 01       	movw	r30, r28
     624:	eb 5b       	subi	r30, 0xBB	; 187
     626:	ff 4f       	sbci	r31, 0xFF	; 255
     628:	60 81       	ld	r22, Z
     62a:	71 81       	ldd	r23, Z+1	; 0x01
     62c:	82 81       	ldd	r24, Z+2	; 0x02
     62e:	93 81       	ldd	r25, Z+3	; 0x03
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	4a e7       	ldi	r20, 0x7A	; 122
     636:	54 e4       	ldi	r21, 0x44	; 68
     638:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
     63c:	dc 01       	movw	r26, r24
     63e:	cb 01       	movw	r24, r22
     640:	8c af       	std	Y+60, r24	; 0x3c
     642:	9d af       	std	Y+61, r25	; 0x3d
     644:	ae af       	std	Y+62, r26	; 0x3e
     646:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     648:	6c ad       	ldd	r22, Y+60	; 0x3c
     64a:	7d ad       	ldd	r23, Y+61	; 0x3d
     64c:	8e ad       	ldd	r24, Y+62	; 0x3e
     64e:	9f ad       	ldd	r25, Y+63	; 0x3f
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	4a e7       	ldi	r20, 0x7A	; 122
     656:	55 e4       	ldi	r21, 0x45	; 69
     658:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     65c:	dc 01       	movw	r26, r24
     65e:	cb 01       	movw	r24, r22
     660:	88 af       	std	Y+56, r24	; 0x38
     662:	99 af       	std	Y+57, r25	; 0x39
     664:	aa af       	std	Y+58, r26	; 0x3a
     666:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
     668:	68 ad       	ldd	r22, Y+56	; 0x38
     66a:	79 ad       	ldd	r23, Y+57	; 0x39
     66c:	8a ad       	ldd	r24, Y+58	; 0x3a
     66e:	9b ad       	ldd	r25, Y+59	; 0x3b
     670:	20 e0       	ldi	r18, 0x00	; 0
     672:	30 e0       	ldi	r19, 0x00	; 0
     674:	40 e8       	ldi	r20, 0x80	; 128
     676:	5f e3       	ldi	r21, 0x3F	; 63
     678:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     67c:	88 23       	and	r24, r24
     67e:	2c f4       	brge	.+10     	; 0x68a <main+0x60e>
		__ticks = 1;
     680:	81 e0       	ldi	r24, 0x01	; 1
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	9f ab       	std	Y+55, r25	; 0x37
     686:	8e ab       	std	Y+54, r24	; 0x36
     688:	3f c0       	rjmp	.+126    	; 0x708 <main+0x68c>
	else if (__tmp > 65535)
     68a:	68 ad       	ldd	r22, Y+56	; 0x38
     68c:	79 ad       	ldd	r23, Y+57	; 0x39
     68e:	8a ad       	ldd	r24, Y+58	; 0x3a
     690:	9b ad       	ldd	r25, Y+59	; 0x3b
     692:	20 e0       	ldi	r18, 0x00	; 0
     694:	3f ef       	ldi	r19, 0xFF	; 255
     696:	4f e7       	ldi	r20, 0x7F	; 127
     698:	57 e4       	ldi	r21, 0x47	; 71
     69a:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     69e:	18 16       	cp	r1, r24
     6a0:	4c f5       	brge	.+82     	; 0x6f4 <main+0x678>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6a2:	6c ad       	ldd	r22, Y+60	; 0x3c
     6a4:	7d ad       	ldd	r23, Y+61	; 0x3d
     6a6:	8e ad       	ldd	r24, Y+62	; 0x3e
     6a8:	9f ad       	ldd	r25, Y+63	; 0x3f
     6aa:	20 e0       	ldi	r18, 0x00	; 0
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	40 e2       	ldi	r20, 0x20	; 32
     6b0:	51 e4       	ldi	r21, 0x41	; 65
     6b2:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     6b6:	dc 01       	movw	r26, r24
     6b8:	cb 01       	movw	r24, r22
     6ba:	bc 01       	movw	r22, r24
     6bc:	cd 01       	movw	r24, r26
     6be:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     6c2:	dc 01       	movw	r26, r24
     6c4:	cb 01       	movw	r24, r22
     6c6:	9f ab       	std	Y+55, r25	; 0x37
     6c8:	8e ab       	std	Y+54, r24	; 0x36
     6ca:	0f c0       	rjmp	.+30     	; 0x6ea <main+0x66e>
     6cc:	80 e9       	ldi	r24, 0x90	; 144
     6ce:	91 e0       	ldi	r25, 0x01	; 1
     6d0:	9d ab       	std	Y+53, r25	; 0x35
     6d2:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     6d4:	8c a9       	ldd	r24, Y+52	; 0x34
     6d6:	9d a9       	ldd	r25, Y+53	; 0x35
     6d8:	01 97       	sbiw	r24, 0x01	; 1
     6da:	f1 f7       	brne	.-4      	; 0x6d8 <main+0x65c>
     6dc:	9d ab       	std	Y+53, r25	; 0x35
     6de:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6e0:	8e a9       	ldd	r24, Y+54	; 0x36
     6e2:	9f a9       	ldd	r25, Y+55	; 0x37
     6e4:	01 97       	sbiw	r24, 0x01	; 1
     6e6:	9f ab       	std	Y+55, r25	; 0x37
     6e8:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6ea:	8e a9       	ldd	r24, Y+54	; 0x36
     6ec:	9f a9       	ldd	r25, Y+55	; 0x37
     6ee:	00 97       	sbiw	r24, 0x00	; 0
     6f0:	69 f7       	brne	.-38     	; 0x6cc <main+0x650>
     6f2:	2d c0       	rjmp	.+90     	; 0x74e <main+0x6d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6f4:	68 ad       	ldd	r22, Y+56	; 0x38
     6f6:	79 ad       	ldd	r23, Y+57	; 0x39
     6f8:	8a ad       	ldd	r24, Y+58	; 0x3a
     6fa:	9b ad       	ldd	r25, Y+59	; 0x3b
     6fc:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     700:	dc 01       	movw	r26, r24
     702:	cb 01       	movw	r24, r22
     704:	9f ab       	std	Y+55, r25	; 0x37
     706:	8e ab       	std	Y+54, r24	; 0x36
     708:	8e a9       	ldd	r24, Y+54	; 0x36
     70a:	9f a9       	ldd	r25, Y+55	; 0x37
     70c:	9b ab       	std	Y+51, r25	; 0x33
     70e:	8a ab       	std	Y+50, r24	; 0x32
     710:	8a a9       	ldd	r24, Y+50	; 0x32
     712:	9b a9       	ldd	r25, Y+51	; 0x33
     714:	01 97       	sbiw	r24, 0x01	; 1
     716:	f1 f7       	brne	.-4      	; 0x714 <main+0x698>
     718:	9b ab       	std	Y+51, r25	; 0x33
     71a:	8a ab       	std	Y+50, r24	; 0x32
     71c:	18 c0       	rjmp	.+48     	; 0x74e <main+0x6d2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     71e:	fe 01       	movw	r30, r28
     720:	ef 5b       	subi	r30, 0xBF	; 191
     722:	ff 4f       	sbci	r31, 0xFF	; 255
     724:	60 81       	ld	r22, Z
     726:	71 81       	ldd	r23, Z+1	; 0x01
     728:	82 81       	ldd	r24, Z+2	; 0x02
     72a:	93 81       	ldd	r25, Z+3	; 0x03
     72c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     730:	dc 01       	movw	r26, r24
     732:	cb 01       	movw	r24, r22
     734:	fe 01       	movw	r30, r28
     736:	e0 5c       	subi	r30, 0xC0	; 192
     738:	ff 4f       	sbci	r31, 0xFF	; 255
     73a:	80 83       	st	Z, r24
     73c:	fe 01       	movw	r30, r28
     73e:	e0 5c       	subi	r30, 0xC0	; 192
     740:	ff 4f       	sbci	r31, 0xFF	; 255
     742:	80 81       	ld	r24, Z
     744:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     746:	89 a9       	ldd	r24, Y+49	; 0x31
     748:	8a 95       	dec	r24
     74a:	f1 f7       	brne	.-4      	; 0x748 <main+0x6cc>
     74c:	89 ab       	std	Y+49, r24	; 0x31
	_delay_us(1);
	while(!(UCSRA & (1<<UDRE)))
     74e:	eb e2       	ldi	r30, 0x2B	; 43
     750:	f0 e0       	ldi	r31, 0x00	; 0
     752:	80 81       	ld	r24, Z
     754:	88 2f       	mov	r24, r24
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	80 72       	andi	r24, 0x20	; 32
     75a:	90 70       	andi	r25, 0x00	; 0
     75c:	00 97       	sbiw	r24, 0x00	; 0
     75e:	b9 f3       	breq	.-18     	; 0x74e <main+0x6d2>
	;
	UDR = ps2data9;
     760:	ec e2       	ldi	r30, 0x2C	; 44
     762:	f0 e0       	ldi	r31, 0x00	; 0
     764:	80 91 60 00 	lds	r24, 0x0060
     768:	80 83       	st	Z, r24
     76a:	80 e0       	ldi	r24, 0x00	; 0
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	a0 e8       	ldi	r26, 0x80	; 128
     770:	bf e3       	ldi	r27, 0x3F	; 63
     772:	8d a7       	std	Y+45, r24	; 0x2d
     774:	9e a7       	std	Y+46, r25	; 0x2e
     776:	af a7       	std	Y+47, r26	; 0x2f
     778:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     77a:	6d a5       	ldd	r22, Y+45	; 0x2d
     77c:	7e a5       	ldd	r23, Y+46	; 0x2e
     77e:	8f a5       	ldd	r24, Y+47	; 0x2f
     780:	98 a9       	ldd	r25, Y+48	; 0x30
     782:	2b ea       	ldi	r18, 0xAB	; 171
     784:	3a ea       	ldi	r19, 0xAA	; 170
     786:	4a ea       	ldi	r20, 0xAA	; 170
     788:	50 e4       	ldi	r21, 0x40	; 64
     78a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     78e:	dc 01       	movw	r26, r24
     790:	cb 01       	movw	r24, r22
     792:	89 a7       	std	Y+41, r24	; 0x29
     794:	9a a7       	std	Y+42, r25	; 0x2a
     796:	ab a7       	std	Y+43, r26	; 0x2b
     798:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
     79a:	69 a5       	ldd	r22, Y+41	; 0x29
     79c:	7a a5       	ldd	r23, Y+42	; 0x2a
     79e:	8b a5       	ldd	r24, Y+43	; 0x2b
     7a0:	9c a5       	ldd	r25, Y+44	; 0x2c
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	40 e8       	ldi	r20, 0x80	; 128
     7a8:	5f e3       	ldi	r21, 0x3F	; 63
     7aa:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     7ae:	88 23       	and	r24, r24
     7b0:	1c f4       	brge	.+6      	; 0x7b8 <main+0x73c>
		__ticks = 1;
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	88 a7       	std	Y+40, r24	; 0x28
     7b6:	91 c0       	rjmp	.+290    	; 0x8da <__stack+0x7b>
	else if (__tmp > 255)
     7b8:	69 a5       	ldd	r22, Y+41	; 0x29
     7ba:	7a a5       	ldd	r23, Y+42	; 0x2a
     7bc:	8b a5       	ldd	r24, Y+43	; 0x2b
     7be:	9c a5       	ldd	r25, Y+44	; 0x2c
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	4f e7       	ldi	r20, 0x7F	; 127
     7c6:	53 e4       	ldi	r21, 0x43	; 67
     7c8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     7cc:	18 16       	cp	r1, r24
     7ce:	0c f0       	brlt	.+2      	; 0x7d2 <main+0x756>
     7d0:	7b c0       	rjmp	.+246    	; 0x8c8 <__stack+0x69>
	{
		_delay_ms(__us / 1000.0);
     7d2:	6d a5       	ldd	r22, Y+45	; 0x2d
     7d4:	7e a5       	ldd	r23, Y+46	; 0x2e
     7d6:	8f a5       	ldd	r24, Y+47	; 0x2f
     7d8:	98 a9       	ldd	r25, Y+48	; 0x30
     7da:	20 e0       	ldi	r18, 0x00	; 0
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	4a e7       	ldi	r20, 0x7A	; 122
     7e0:	54 e4       	ldi	r21, 0x44	; 68
     7e2:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
     7e6:	dc 01       	movw	r26, r24
     7e8:	cb 01       	movw	r24, r22
     7ea:	8c a3       	std	Y+36, r24	; 0x24
     7ec:	9d a3       	std	Y+37, r25	; 0x25
     7ee:	ae a3       	std	Y+38, r26	; 0x26
     7f0:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     7f2:	6c a1       	ldd	r22, Y+36	; 0x24
     7f4:	7d a1       	ldd	r23, Y+37	; 0x25
     7f6:	8e a1       	ldd	r24, Y+38	; 0x26
     7f8:	9f a1       	ldd	r25, Y+39	; 0x27
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	4a e7       	ldi	r20, 0x7A	; 122
     800:	55 e4       	ldi	r21, 0x45	; 69
     802:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     806:	dc 01       	movw	r26, r24
     808:	cb 01       	movw	r24, r22
     80a:	88 a3       	std	Y+32, r24	; 0x20
     80c:	99 a3       	std	Y+33, r25	; 0x21
     80e:	aa a3       	std	Y+34, r26	; 0x22
     810:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
     812:	68 a1       	ldd	r22, Y+32	; 0x20
     814:	79 a1       	ldd	r23, Y+33	; 0x21
     816:	8a a1       	ldd	r24, Y+34	; 0x22
     818:	9b a1       	ldd	r25, Y+35	; 0x23
     81a:	20 e0       	ldi	r18, 0x00	; 0
     81c:	30 e0       	ldi	r19, 0x00	; 0
     81e:	40 e8       	ldi	r20, 0x80	; 128
     820:	5f e3       	ldi	r21, 0x3F	; 63
     822:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     826:	88 23       	and	r24, r24
     828:	2c f4       	brge	.+10     	; 0x834 <main+0x7b8>
		__ticks = 1;
     82a:	81 e0       	ldi	r24, 0x01	; 1
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	9f 8f       	std	Y+31, r25	; 0x1f
     830:	8e 8f       	std	Y+30, r24	; 0x1e
     832:	3f c0       	rjmp	.+126    	; 0x8b2 <__stack+0x53>
	else if (__tmp > 65535)
     834:	68 a1       	ldd	r22, Y+32	; 0x20
     836:	79 a1       	ldd	r23, Y+33	; 0x21
     838:	8a a1       	ldd	r24, Y+34	; 0x22
     83a:	9b a1       	ldd	r25, Y+35	; 0x23
     83c:	20 e0       	ldi	r18, 0x00	; 0
     83e:	3f ef       	ldi	r19, 0xFF	; 255
     840:	4f e7       	ldi	r20, 0x7F	; 127
     842:	57 e4       	ldi	r21, 0x47	; 71
     844:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     848:	18 16       	cp	r1, r24
     84a:	4c f5       	brge	.+82     	; 0x89e <__stack+0x3f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     84c:	6c a1       	ldd	r22, Y+36	; 0x24
     84e:	7d a1       	ldd	r23, Y+37	; 0x25
     850:	8e a1       	ldd	r24, Y+38	; 0x26
     852:	9f a1       	ldd	r25, Y+39	; 0x27
     854:	20 e0       	ldi	r18, 0x00	; 0
     856:	30 e0       	ldi	r19, 0x00	; 0
     858:	40 e2       	ldi	r20, 0x20	; 32
     85a:	51 e4       	ldi	r21, 0x41	; 65
     85c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     860:	dc 01       	movw	r26, r24
     862:	cb 01       	movw	r24, r22
     864:	bc 01       	movw	r22, r24
     866:	cd 01       	movw	r24, r26
     868:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     86c:	dc 01       	movw	r26, r24
     86e:	cb 01       	movw	r24, r22
     870:	9f 8f       	std	Y+31, r25	; 0x1f
     872:	8e 8f       	std	Y+30, r24	; 0x1e
     874:	0f c0       	rjmp	.+30     	; 0x894 <__stack+0x35>
     876:	80 e9       	ldi	r24, 0x90	; 144
     878:	91 e0       	ldi	r25, 0x01	; 1
     87a:	9d 8f       	std	Y+29, r25	; 0x1d
     87c:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     87e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     880:	9d 8d       	ldd	r25, Y+29	; 0x1d
     882:	01 97       	sbiw	r24, 0x01	; 1
     884:	f1 f7       	brne	.-4      	; 0x882 <__stack+0x23>
     886:	9d 8f       	std	Y+29, r25	; 0x1d
     888:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     88a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     88c:	9f 8d       	ldd	r25, Y+31	; 0x1f
     88e:	01 97       	sbiw	r24, 0x01	; 1
     890:	9f 8f       	std	Y+31, r25	; 0x1f
     892:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     894:	8e 8d       	ldd	r24, Y+30	; 0x1e
     896:	9f 8d       	ldd	r25, Y+31	; 0x1f
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	69 f7       	brne	.-38     	; 0x876 <__stack+0x17>
     89c:	24 c0       	rjmp	.+72     	; 0x8e6 <__stack+0x87>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     89e:	68 a1       	ldd	r22, Y+32	; 0x20
     8a0:	79 a1       	ldd	r23, Y+33	; 0x21
     8a2:	8a a1       	ldd	r24, Y+34	; 0x22
     8a4:	9b a1       	ldd	r25, Y+35	; 0x23
     8a6:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     8aa:	dc 01       	movw	r26, r24
     8ac:	cb 01       	movw	r24, r22
     8ae:	9f 8f       	std	Y+31, r25	; 0x1f
     8b0:	8e 8f       	std	Y+30, r24	; 0x1e
     8b2:	8e 8d       	ldd	r24, Y+30	; 0x1e
     8b4:	9f 8d       	ldd	r25, Y+31	; 0x1f
     8b6:	9b 8f       	std	Y+27, r25	; 0x1b
     8b8:	8a 8f       	std	Y+26, r24	; 0x1a
     8ba:	8a 8d       	ldd	r24, Y+26	; 0x1a
     8bc:	9b 8d       	ldd	r25, Y+27	; 0x1b
     8be:	01 97       	sbiw	r24, 0x01	; 1
     8c0:	f1 f7       	brne	.-4      	; 0x8be <__stack+0x5f>
     8c2:	9b 8f       	std	Y+27, r25	; 0x1b
     8c4:	8a 8f       	std	Y+26, r24	; 0x1a
     8c6:	0f c0       	rjmp	.+30     	; 0x8e6 <__stack+0x87>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     8c8:	69 a5       	ldd	r22, Y+41	; 0x29
     8ca:	7a a5       	ldd	r23, Y+42	; 0x2a
     8cc:	8b a5       	ldd	r24, Y+43	; 0x2b
     8ce:	9c a5       	ldd	r25, Y+44	; 0x2c
     8d0:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     8d4:	dc 01       	movw	r26, r24
     8d6:	cb 01       	movw	r24, r22
     8d8:	88 a7       	std	Y+40, r24	; 0x28
     8da:	88 a5       	ldd	r24, Y+40	; 0x28
     8dc:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     8de:	89 8d       	ldd	r24, Y+25	; 0x19
     8e0:	8a 95       	dec	r24
     8e2:	f1 f7       	brne	.-4      	; 0x8e0 <__stack+0x81>
     8e4:	89 8f       	std	Y+25, r24	; 0x19
	_delay_us(1);

	while(!(UCSRA & (1<<UDRE)))
     8e6:	eb e2       	ldi	r30, 0x2B	; 43
     8e8:	f0 e0       	ldi	r31, 0x00	; 0
     8ea:	80 81       	ld	r24, Z
     8ec:	88 2f       	mov	r24, r24
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	80 72       	andi	r24, 0x20	; 32
     8f2:	90 70       	andi	r25, 0x00	; 0
     8f4:	00 97       	sbiw	r24, 0x00	; 0
     8f6:	b9 f3       	breq	.-18     	; 0x8e6 <__stack+0x87>
	;
	UDR = ps2data5;
     8f8:	ec e2       	ldi	r30, 0x2C	; 44
     8fa:	f0 e0       	ldi	r31, 0x00	; 0
     8fc:	80 91 6a 00 	lds	r24, 0x006A
     900:	80 83       	st	Z, r24
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	a0 e8       	ldi	r26, 0x80	; 128
     908:	bf e3       	ldi	r27, 0x3F	; 63
     90a:	8d 8b       	std	Y+21, r24	; 0x15
     90c:	9e 8b       	std	Y+22, r25	; 0x16
     90e:	af 8b       	std	Y+23, r26	; 0x17
     910:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     912:	6d 89       	ldd	r22, Y+21	; 0x15
     914:	7e 89       	ldd	r23, Y+22	; 0x16
     916:	8f 89       	ldd	r24, Y+23	; 0x17
     918:	98 8d       	ldd	r25, Y+24	; 0x18
     91a:	2b ea       	ldi	r18, 0xAB	; 171
     91c:	3a ea       	ldi	r19, 0xAA	; 170
     91e:	4a ea       	ldi	r20, 0xAA	; 170
     920:	50 e4       	ldi	r21, 0x40	; 64
     922:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     926:	dc 01       	movw	r26, r24
     928:	cb 01       	movw	r24, r22
     92a:	89 8b       	std	Y+17, r24	; 0x11
     92c:	9a 8b       	std	Y+18, r25	; 0x12
     92e:	ab 8b       	std	Y+19, r26	; 0x13
     930:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     932:	69 89       	ldd	r22, Y+17	; 0x11
     934:	7a 89       	ldd	r23, Y+18	; 0x12
     936:	8b 89       	ldd	r24, Y+19	; 0x13
     938:	9c 89       	ldd	r25, Y+20	; 0x14
     93a:	20 e0       	ldi	r18, 0x00	; 0
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	40 e8       	ldi	r20, 0x80	; 128
     940:	5f e3       	ldi	r21, 0x3F	; 63
     942:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     946:	88 23       	and	r24, r24
     948:	1c f4       	brge	.+6      	; 0x950 <__stack+0xf1>
		__ticks = 1;
     94a:	81 e0       	ldi	r24, 0x01	; 1
     94c:	88 8b       	std	Y+16, r24	; 0x10
     94e:	91 c0       	rjmp	.+290    	; 0xa72 <__stack+0x213>
	else if (__tmp > 255)
     950:	69 89       	ldd	r22, Y+17	; 0x11
     952:	7a 89       	ldd	r23, Y+18	; 0x12
     954:	8b 89       	ldd	r24, Y+19	; 0x13
     956:	9c 89       	ldd	r25, Y+20	; 0x14
     958:	20 e0       	ldi	r18, 0x00	; 0
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	4f e7       	ldi	r20, 0x7F	; 127
     95e:	53 e4       	ldi	r21, 0x43	; 67
     960:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     964:	18 16       	cp	r1, r24
     966:	0c f0       	brlt	.+2      	; 0x96a <__stack+0x10b>
     968:	7b c0       	rjmp	.+246    	; 0xa60 <__stack+0x201>
	{
		_delay_ms(__us / 1000.0);
     96a:	6d 89       	ldd	r22, Y+21	; 0x15
     96c:	7e 89       	ldd	r23, Y+22	; 0x16
     96e:	8f 89       	ldd	r24, Y+23	; 0x17
     970:	98 8d       	ldd	r25, Y+24	; 0x18
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	4a e7       	ldi	r20, 0x7A	; 122
     978:	54 e4       	ldi	r21, 0x44	; 68
     97a:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
     97e:	dc 01       	movw	r26, r24
     980:	cb 01       	movw	r24, r22
     982:	8c 87       	std	Y+12, r24	; 0x0c
     984:	9d 87       	std	Y+13, r25	; 0x0d
     986:	ae 87       	std	Y+14, r26	; 0x0e
     988:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     98a:	6c 85       	ldd	r22, Y+12	; 0x0c
     98c:	7d 85       	ldd	r23, Y+13	; 0x0d
     98e:	8e 85       	ldd	r24, Y+14	; 0x0e
     990:	9f 85       	ldd	r25, Y+15	; 0x0f
     992:	20 e0       	ldi	r18, 0x00	; 0
     994:	30 e0       	ldi	r19, 0x00	; 0
     996:	4a e7       	ldi	r20, 0x7A	; 122
     998:	55 e4       	ldi	r21, 0x45	; 69
     99a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     99e:	dc 01       	movw	r26, r24
     9a0:	cb 01       	movw	r24, r22
     9a2:	88 87       	std	Y+8, r24	; 0x08
     9a4:	99 87       	std	Y+9, r25	; 0x09
     9a6:	aa 87       	std	Y+10, r26	; 0x0a
     9a8:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     9aa:	68 85       	ldd	r22, Y+8	; 0x08
     9ac:	79 85       	ldd	r23, Y+9	; 0x09
     9ae:	8a 85       	ldd	r24, Y+10	; 0x0a
     9b0:	9b 85       	ldd	r25, Y+11	; 0x0b
     9b2:	20 e0       	ldi	r18, 0x00	; 0
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	40 e8       	ldi	r20, 0x80	; 128
     9b8:	5f e3       	ldi	r21, 0x3F	; 63
     9ba:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     9be:	88 23       	and	r24, r24
     9c0:	2c f4       	brge	.+10     	; 0x9cc <__stack+0x16d>
		__ticks = 1;
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	9f 83       	std	Y+7, r25	; 0x07
     9c8:	8e 83       	std	Y+6, r24	; 0x06
     9ca:	3f c0       	rjmp	.+126    	; 0xa4a <__stack+0x1eb>
	else if (__tmp > 65535)
     9cc:	68 85       	ldd	r22, Y+8	; 0x08
     9ce:	79 85       	ldd	r23, Y+9	; 0x09
     9d0:	8a 85       	ldd	r24, Y+10	; 0x0a
     9d2:	9b 85       	ldd	r25, Y+11	; 0x0b
     9d4:	20 e0       	ldi	r18, 0x00	; 0
     9d6:	3f ef       	ldi	r19, 0xFF	; 255
     9d8:	4f e7       	ldi	r20, 0x7F	; 127
     9da:	57 e4       	ldi	r21, 0x47	; 71
     9dc:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     9e0:	18 16       	cp	r1, r24
     9e2:	4c f5       	brge	.+82     	; 0xa36 <__stack+0x1d7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9e4:	6c 85       	ldd	r22, Y+12	; 0x0c
     9e6:	7d 85       	ldd	r23, Y+13	; 0x0d
     9e8:	8e 85       	ldd	r24, Y+14	; 0x0e
     9ea:	9f 85       	ldd	r25, Y+15	; 0x0f
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	40 e2       	ldi	r20, 0x20	; 32
     9f2:	51 e4       	ldi	r21, 0x41	; 65
     9f4:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     9f8:	dc 01       	movw	r26, r24
     9fa:	cb 01       	movw	r24, r22
     9fc:	bc 01       	movw	r22, r24
     9fe:	cd 01       	movw	r24, r26
     a00:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     a04:	dc 01       	movw	r26, r24
     a06:	cb 01       	movw	r24, r22
     a08:	9f 83       	std	Y+7, r25	; 0x07
     a0a:	8e 83       	std	Y+6, r24	; 0x06
     a0c:	0f c0       	rjmp	.+30     	; 0xa2c <__stack+0x1cd>
     a0e:	80 e9       	ldi	r24, 0x90	; 144
     a10:	91 e0       	ldi	r25, 0x01	; 1
     a12:	9d 83       	std	Y+5, r25	; 0x05
     a14:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     a16:	8c 81       	ldd	r24, Y+4	; 0x04
     a18:	9d 81       	ldd	r25, Y+5	; 0x05
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	f1 f7       	brne	.-4      	; 0xa1a <__stack+0x1bb>
     a1e:	9d 83       	std	Y+5, r25	; 0x05
     a20:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a22:	8e 81       	ldd	r24, Y+6	; 0x06
     a24:	9f 81       	ldd	r25, Y+7	; 0x07
     a26:	01 97       	sbiw	r24, 0x01	; 1
     a28:	9f 83       	std	Y+7, r25	; 0x07
     a2a:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a2c:	8e 81       	ldd	r24, Y+6	; 0x06
     a2e:	9f 81       	ldd	r25, Y+7	; 0x07
     a30:	00 97       	sbiw	r24, 0x00	; 0
     a32:	69 f7       	brne	.-38     	; 0xa0e <__stack+0x1af>
     a34:	40 cb       	rjmp	.-2432   	; 0xb6 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a36:	68 85       	ldd	r22, Y+8	; 0x08
     a38:	79 85       	ldd	r23, Y+9	; 0x09
     a3a:	8a 85       	ldd	r24, Y+10	; 0x0a
     a3c:	9b 85       	ldd	r25, Y+11	; 0x0b
     a3e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     a42:	dc 01       	movw	r26, r24
     a44:	cb 01       	movw	r24, r22
     a46:	9f 83       	std	Y+7, r25	; 0x07
     a48:	8e 83       	std	Y+6, r24	; 0x06
     a4a:	8e 81       	ldd	r24, Y+6	; 0x06
     a4c:	9f 81       	ldd	r25, Y+7	; 0x07
     a4e:	9b 83       	std	Y+3, r25	; 0x03
     a50:	8a 83       	std	Y+2, r24	; 0x02
     a52:	8a 81       	ldd	r24, Y+2	; 0x02
     a54:	9b 81       	ldd	r25, Y+3	; 0x03
     a56:	01 97       	sbiw	r24, 0x01	; 1
     a58:	f1 f7       	brne	.-4      	; 0xa56 <__stack+0x1f7>
     a5a:	9b 83       	std	Y+3, r25	; 0x03
     a5c:	8a 83       	std	Y+2, r24	; 0x02
     a5e:	2b cb       	rjmp	.-2474   	; 0xb6 <main+0x3a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     a60:	69 89       	ldd	r22, Y+17	; 0x11
     a62:	7a 89       	ldd	r23, Y+18	; 0x12
     a64:	8b 89       	ldd	r24, Y+19	; 0x13
     a66:	9c 89       	ldd	r25, Y+20	; 0x14
     a68:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     a6c:	dc 01       	movw	r26, r24
     a6e:	cb 01       	movw	r24, r22
     a70:	88 8b       	std	Y+16, r24	; 0x10
     a72:	88 89       	ldd	r24, Y+16	; 0x10
     a74:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     a76:	89 81       	ldd	r24, Y+1	; 0x01
     a78:	8a 95       	dec	r24
     a7a:	f1 f7       	brne	.-4      	; 0xa78 <__stack+0x219>
     a7c:	89 83       	std	Y+1, r24	; 0x01
     a7e:	1b cb       	rjmp	.-2506   	; 0xb6 <main+0x3a>

00000a80 <config>:
	_delay_us(1);
	}	
}
	
void config()	//enter config mode
{
     a80:	0f 93       	push	r16
     a82:	1f 93       	push	r17
     a84:	df 93       	push	r29
     a86:	cf 93       	push	r28
     a88:	cd b7       	in	r28, 0x3d	; 61
     a8a:	de b7       	in	r29, 0x3e	; 62
     a8c:	c8 50       	subi	r28, 0x08	; 8
     a8e:	d1 40       	sbci	r29, 0x01	; 1
     a90:	0f b6       	in	r0, 0x3f	; 63
     a92:	f8 94       	cli
     a94:	de bf       	out	0x3e, r29	; 62
     a96:	0f be       	out	0x3f, r0	; 63
     a98:	cd bf       	out	0x3d, r28	; 61
	sbi(ps2port,ps2cmd);
     a9a:	a5 e3       	ldi	r26, 0x35	; 53
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e5 e3       	ldi	r30, 0x35	; 53
     aa0:	f0 e0       	ldi	r31, 0x00	; 0
     aa2:	80 81       	ld	r24, Z
     aa4:	84 60       	ori	r24, 0x04	; 4
     aa6:	8c 93       	st	X, r24
	sbi(ps2port,ps2clk);
     aa8:	a5 e3       	ldi	r26, 0x35	; 53
     aaa:	b0 e0       	ldi	r27, 0x00	; 0
     aac:	e5 e3       	ldi	r30, 0x35	; 53
     aae:	f0 e0       	ldi	r31, 0x00	; 0
     ab0:	80 81       	ld	r24, Z
     ab2:	81 60       	ori	r24, 0x01	; 1
     ab4:	8c 93       	st	X, r24
	cbi(ps2port,ps2att);
     ab6:	a5 e3       	ldi	r26, 0x35	; 53
     ab8:	b0 e0       	ldi	r27, 0x00	; 0
     aba:	e5 e3       	ldi	r30, 0x35	; 53
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	80 81       	ld	r24, Z
     ac0:	8f 7e       	andi	r24, 0xEF	; 239
     ac2:	8c 93       	st	X, r24
     ac4:	fe 01       	movw	r30, r28
     ac6:	eb 5f       	subi	r30, 0xFB	; 251
     ac8:	fe 4f       	sbci	r31, 0xFE	; 254
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	a0 ef       	ldi	r26, 0xF0	; 240
     ad0:	b1 e4       	ldi	r27, 0x41	; 65
     ad2:	80 83       	st	Z, r24
     ad4:	91 83       	std	Z+1, r25	; 0x01
     ad6:	a2 83       	std	Z+2, r26	; 0x02
     ad8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     ada:	8e 01       	movw	r16, r28
     adc:	0f 5f       	subi	r16, 0xFF	; 255
     ade:	1e 4f       	sbci	r17, 0xFE	; 254
     ae0:	fe 01       	movw	r30, r28
     ae2:	eb 5f       	subi	r30, 0xFB	; 251
     ae4:	fe 4f       	sbci	r31, 0xFE	; 254
     ae6:	60 81       	ld	r22, Z
     ae8:	71 81       	ldd	r23, Z+1	; 0x01
     aea:	82 81       	ldd	r24, Z+2	; 0x02
     aec:	93 81       	ldd	r25, Z+3	; 0x03
     aee:	2b ea       	ldi	r18, 0xAB	; 171
     af0:	3a ea       	ldi	r19, 0xAA	; 170
     af2:	4a ea       	ldi	r20, 0xAA	; 170
     af4:	50 e4       	ldi	r21, 0x40	; 64
     af6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     afa:	dc 01       	movw	r26, r24
     afc:	cb 01       	movw	r24, r22
     afe:	f8 01       	movw	r30, r16
     b00:	80 83       	st	Z, r24
     b02:	91 83       	std	Z+1, r25	; 0x01
     b04:	a2 83       	std	Z+2, r26	; 0x02
     b06:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b08:	fe 01       	movw	r30, r28
     b0a:	ef 5f       	subi	r30, 0xFF	; 255
     b0c:	fe 4f       	sbci	r31, 0xFE	; 254
     b0e:	60 81       	ld	r22, Z
     b10:	71 81       	ldd	r23, Z+1	; 0x01
     b12:	82 81       	ldd	r24, Z+2	; 0x02
     b14:	93 81       	ldd	r25, Z+3	; 0x03
     b16:	20 e0       	ldi	r18, 0x00	; 0
     b18:	30 e0       	ldi	r19, 0x00	; 0
     b1a:	40 e8       	ldi	r20, 0x80	; 128
     b1c:	5f e3       	ldi	r21, 0x3F	; 63
     b1e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     b22:	88 23       	and	r24, r24
     b24:	34 f4       	brge	.+12     	; 0xb32 <config+0xb2>
		__ticks = 1;
     b26:	fe 01       	movw	r30, r28
     b28:	e0 50       	subi	r30, 0x00	; 0
     b2a:	ff 4f       	sbci	r31, 0xFF	; 255
     b2c:	81 e0       	ldi	r24, 0x01	; 1
     b2e:	80 83       	st	Z, r24
     b30:	e0 c0       	rjmp	.+448    	; 0xcf2 <config+0x272>
	else if (__tmp > 255)
     b32:	fe 01       	movw	r30, r28
     b34:	ef 5f       	subi	r30, 0xFF	; 255
     b36:	fe 4f       	sbci	r31, 0xFE	; 254
     b38:	60 81       	ld	r22, Z
     b3a:	71 81       	ldd	r23, Z+1	; 0x01
     b3c:	82 81       	ldd	r24, Z+2	; 0x02
     b3e:	93 81       	ldd	r25, Z+3	; 0x03
     b40:	20 e0       	ldi	r18, 0x00	; 0
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	4f e7       	ldi	r20, 0x7F	; 127
     b46:	53 e4       	ldi	r21, 0x43	; 67
     b48:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     b4c:	18 16       	cp	r1, r24
     b4e:	0c f0       	brlt	.+2      	; 0xb52 <config+0xd2>
     b50:	c0 c0       	rjmp	.+384    	; 0xcd2 <config+0x252>
	{
		_delay_ms(__us / 1000.0);
     b52:	fe 01       	movw	r30, r28
     b54:	eb 5f       	subi	r30, 0xFB	; 251
     b56:	fe 4f       	sbci	r31, 0xFE	; 254
     b58:	60 81       	ld	r22, Z
     b5a:	71 81       	ldd	r23, Z+1	; 0x01
     b5c:	82 81       	ldd	r24, Z+2	; 0x02
     b5e:	93 81       	ldd	r25, Z+3	; 0x03
     b60:	20 e0       	ldi	r18, 0x00	; 0
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	4a e7       	ldi	r20, 0x7A	; 122
     b66:	54 e4       	ldi	r21, 0x44	; 68
     b68:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
     b6c:	dc 01       	movw	r26, r24
     b6e:	cb 01       	movw	r24, r22
     b70:	fe 01       	movw	r30, r28
     b72:	e4 50       	subi	r30, 0x04	; 4
     b74:	ff 4f       	sbci	r31, 0xFF	; 255
     b76:	80 83       	st	Z, r24
     b78:	91 83       	std	Z+1, r25	; 0x01
     b7a:	a2 83       	std	Z+2, r26	; 0x02
     b7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b7e:	8e 01       	movw	r16, r28
     b80:	08 50       	subi	r16, 0x08	; 8
     b82:	1f 4f       	sbci	r17, 0xFF	; 255
     b84:	fe 01       	movw	r30, r28
     b86:	e4 50       	subi	r30, 0x04	; 4
     b88:	ff 4f       	sbci	r31, 0xFF	; 255
     b8a:	60 81       	ld	r22, Z
     b8c:	71 81       	ldd	r23, Z+1	; 0x01
     b8e:	82 81       	ldd	r24, Z+2	; 0x02
     b90:	93 81       	ldd	r25, Z+3	; 0x03
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	4a e7       	ldi	r20, 0x7A	; 122
     b98:	55 e4       	ldi	r21, 0x45	; 69
     b9a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     b9e:	dc 01       	movw	r26, r24
     ba0:	cb 01       	movw	r24, r22
     ba2:	f8 01       	movw	r30, r16
     ba4:	80 83       	st	Z, r24
     ba6:	91 83       	std	Z+1, r25	; 0x01
     ba8:	a2 83       	std	Z+2, r26	; 0x02
     baa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     bac:	fe 01       	movw	r30, r28
     bae:	e8 50       	subi	r30, 0x08	; 8
     bb0:	ff 4f       	sbci	r31, 0xFF	; 255
     bb2:	60 81       	ld	r22, Z
     bb4:	71 81       	ldd	r23, Z+1	; 0x01
     bb6:	82 81       	ldd	r24, Z+2	; 0x02
     bb8:	93 81       	ldd	r25, Z+3	; 0x03
     bba:	20 e0       	ldi	r18, 0x00	; 0
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	40 e8       	ldi	r20, 0x80	; 128
     bc0:	5f e3       	ldi	r21, 0x3F	; 63
     bc2:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     bc6:	88 23       	and	r24, r24
     bc8:	44 f4       	brge	.+16     	; 0xbda <config+0x15a>
		__ticks = 1;
     bca:	fe 01       	movw	r30, r28
     bcc:	ea 50       	subi	r30, 0x0A	; 10
     bce:	ff 4f       	sbci	r31, 0xFF	; 255
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	91 83       	std	Z+1, r25	; 0x01
     bd6:	80 83       	st	Z, r24
     bd8:	64 c0       	rjmp	.+200    	; 0xca2 <config+0x222>
	else if (__tmp > 65535)
     bda:	fe 01       	movw	r30, r28
     bdc:	e8 50       	subi	r30, 0x08	; 8
     bde:	ff 4f       	sbci	r31, 0xFF	; 255
     be0:	60 81       	ld	r22, Z
     be2:	71 81       	ldd	r23, Z+1	; 0x01
     be4:	82 81       	ldd	r24, Z+2	; 0x02
     be6:	93 81       	ldd	r25, Z+3	; 0x03
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	3f ef       	ldi	r19, 0xFF	; 255
     bec:	4f e7       	ldi	r20, 0x7F	; 127
     bee:	57 e4       	ldi	r21, 0x47	; 71
     bf0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     bf4:	18 16       	cp	r1, r24
     bf6:	0c f0       	brlt	.+2      	; 0xbfa <config+0x17a>
     bf8:	43 c0       	rjmp	.+134    	; 0xc80 <config+0x200>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bfa:	fe 01       	movw	r30, r28
     bfc:	e4 50       	subi	r30, 0x04	; 4
     bfe:	ff 4f       	sbci	r31, 0xFF	; 255
     c00:	60 81       	ld	r22, Z
     c02:	71 81       	ldd	r23, Z+1	; 0x01
     c04:	82 81       	ldd	r24, Z+2	; 0x02
     c06:	93 81       	ldd	r25, Z+3	; 0x03
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	40 e2       	ldi	r20, 0x20	; 32
     c0e:	51 e4       	ldi	r21, 0x41	; 65
     c10:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     c14:	dc 01       	movw	r26, r24
     c16:	cb 01       	movw	r24, r22
     c18:	8e 01       	movw	r16, r28
     c1a:	0a 50       	subi	r16, 0x0A	; 10
     c1c:	1f 4f       	sbci	r17, 0xFF	; 255
     c1e:	bc 01       	movw	r22, r24
     c20:	cd 01       	movw	r24, r26
     c22:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     c26:	dc 01       	movw	r26, r24
     c28:	cb 01       	movw	r24, r22
     c2a:	f8 01       	movw	r30, r16
     c2c:	91 83       	std	Z+1, r25	; 0x01
     c2e:	80 83       	st	Z, r24
     c30:	1f c0       	rjmp	.+62     	; 0xc70 <config+0x1f0>
     c32:	fe 01       	movw	r30, r28
     c34:	ec 50       	subi	r30, 0x0C	; 12
     c36:	ff 4f       	sbci	r31, 0xFF	; 255
     c38:	80 e9       	ldi	r24, 0x90	; 144
     c3a:	91 e0       	ldi	r25, 0x01	; 1
     c3c:	91 83       	std	Z+1, r25	; 0x01
     c3e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c40:	fe 01       	movw	r30, r28
     c42:	ec 50       	subi	r30, 0x0C	; 12
     c44:	ff 4f       	sbci	r31, 0xFF	; 255
     c46:	80 81       	ld	r24, Z
     c48:	91 81       	ldd	r25, Z+1	; 0x01
     c4a:	01 97       	sbiw	r24, 0x01	; 1
     c4c:	f1 f7       	brne	.-4      	; 0xc4a <config+0x1ca>
     c4e:	fe 01       	movw	r30, r28
     c50:	ec 50       	subi	r30, 0x0C	; 12
     c52:	ff 4f       	sbci	r31, 0xFF	; 255
     c54:	91 83       	std	Z+1, r25	; 0x01
     c56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c58:	de 01       	movw	r26, r28
     c5a:	aa 50       	subi	r26, 0x0A	; 10
     c5c:	bf 4f       	sbci	r27, 0xFF	; 255
     c5e:	fe 01       	movw	r30, r28
     c60:	ea 50       	subi	r30, 0x0A	; 10
     c62:	ff 4f       	sbci	r31, 0xFF	; 255
     c64:	80 81       	ld	r24, Z
     c66:	91 81       	ldd	r25, Z+1	; 0x01
     c68:	01 97       	sbiw	r24, 0x01	; 1
     c6a:	11 96       	adiw	r26, 0x01	; 1
     c6c:	9c 93       	st	X, r25
     c6e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c70:	fe 01       	movw	r30, r28
     c72:	ea 50       	subi	r30, 0x0A	; 10
     c74:	ff 4f       	sbci	r31, 0xFF	; 255
     c76:	80 81       	ld	r24, Z
     c78:	91 81       	ldd	r25, Z+1	; 0x01
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	d1 f6       	brne	.-76     	; 0xc32 <config+0x1b2>
     c7e:	4b c0       	rjmp	.+150    	; 0xd16 <config+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c80:	8e 01       	movw	r16, r28
     c82:	0a 50       	subi	r16, 0x0A	; 10
     c84:	1f 4f       	sbci	r17, 0xFF	; 255
     c86:	fe 01       	movw	r30, r28
     c88:	e8 50       	subi	r30, 0x08	; 8
     c8a:	ff 4f       	sbci	r31, 0xFF	; 255
     c8c:	60 81       	ld	r22, Z
     c8e:	71 81       	ldd	r23, Z+1	; 0x01
     c90:	82 81       	ldd	r24, Z+2	; 0x02
     c92:	93 81       	ldd	r25, Z+3	; 0x03
     c94:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     c98:	dc 01       	movw	r26, r24
     c9a:	cb 01       	movw	r24, r22
     c9c:	f8 01       	movw	r30, r16
     c9e:	91 83       	std	Z+1, r25	; 0x01
     ca0:	80 83       	st	Z, r24
     ca2:	de 01       	movw	r26, r28
     ca4:	ae 50       	subi	r26, 0x0E	; 14
     ca6:	bf 4f       	sbci	r27, 0xFF	; 255
     ca8:	fe 01       	movw	r30, r28
     caa:	ea 50       	subi	r30, 0x0A	; 10
     cac:	ff 4f       	sbci	r31, 0xFF	; 255
     cae:	80 81       	ld	r24, Z
     cb0:	91 81       	ldd	r25, Z+1	; 0x01
     cb2:	11 96       	adiw	r26, 0x01	; 1
     cb4:	9c 93       	st	X, r25
     cb6:	8e 93       	st	-X, r24
     cb8:	fe 01       	movw	r30, r28
     cba:	ee 50       	subi	r30, 0x0E	; 14
     cbc:	ff 4f       	sbci	r31, 0xFF	; 255
     cbe:	80 81       	ld	r24, Z
     cc0:	91 81       	ldd	r25, Z+1	; 0x01
     cc2:	01 97       	sbiw	r24, 0x01	; 1
     cc4:	f1 f7       	brne	.-4      	; 0xcc2 <config+0x242>
     cc6:	fe 01       	movw	r30, r28
     cc8:	ee 50       	subi	r30, 0x0E	; 14
     cca:	ff 4f       	sbci	r31, 0xFF	; 255
     ccc:	91 83       	std	Z+1, r25	; 0x01
     cce:	80 83       	st	Z, r24
     cd0:	22 c0       	rjmp	.+68     	; 0xd16 <config+0x296>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     cd2:	8e 01       	movw	r16, r28
     cd4:	00 50       	subi	r16, 0x00	; 0
     cd6:	1f 4f       	sbci	r17, 0xFF	; 255
     cd8:	fe 01       	movw	r30, r28
     cda:	ef 5f       	subi	r30, 0xFF	; 255
     cdc:	fe 4f       	sbci	r31, 0xFE	; 254
     cde:	60 81       	ld	r22, Z
     ce0:	71 81       	ldd	r23, Z+1	; 0x01
     ce2:	82 81       	ldd	r24, Z+2	; 0x02
     ce4:	93 81       	ldd	r25, Z+3	; 0x03
     ce6:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     cea:	dc 01       	movw	r26, r24
     cec:	cb 01       	movw	r24, r22
     cee:	f8 01       	movw	r30, r16
     cf0:	80 83       	st	Z, r24
     cf2:	de 01       	movw	r26, r28
     cf4:	af 50       	subi	r26, 0x0F	; 15
     cf6:	bf 4f       	sbci	r27, 0xFF	; 255
     cf8:	fe 01       	movw	r30, r28
     cfa:	e0 50       	subi	r30, 0x00	; 0
     cfc:	ff 4f       	sbci	r31, 0xFF	; 255
     cfe:	80 81       	ld	r24, Z
     d00:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     d02:	fe 01       	movw	r30, r28
     d04:	ef 50       	subi	r30, 0x0F	; 15
     d06:	ff 4f       	sbci	r31, 0xFF	; 255
     d08:	80 81       	ld	r24, Z
     d0a:	8a 95       	dec	r24
     d0c:	f1 f7       	brne	.-4      	; 0xd0a <config+0x28a>
     d0e:	fe 01       	movw	r30, r28
     d10:	ef 50       	subi	r30, 0x0F	; 15
     d12:	ff 4f       	sbci	r31, 0xFF	; 255
     d14:	80 83       	st	Z, r24
	
	_delay_us(30);
	
	ps2byte = 0x01;			//byte1
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)		
     d1c:	10 92 67 00 	sts	0x0067, r1
     d20:	10 92 66 00 	sts	0x0066, r1
     d24:	8b c2       	rjmp	.+1302   	; 0x123c <config+0x7bc>
	{
		if(ps2byte&(_BV(i)))
     d26:	80 91 61 00 	lds	r24, 0x0061
     d2a:	28 2f       	mov	r18, r24
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	80 91 66 00 	lds	r24, 0x0066
     d32:	90 91 67 00 	lds	r25, 0x0067
     d36:	a9 01       	movw	r20, r18
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <config+0x2be>
     d3a:	55 95       	asr	r21
     d3c:	47 95       	ror	r20
     d3e:	8a 95       	dec	r24
     d40:	e2 f7       	brpl	.-8      	; 0xd3a <config+0x2ba>
     d42:	ca 01       	movw	r24, r20
     d44:	81 70       	andi	r24, 0x01	; 1
     d46:	90 70       	andi	r25, 0x00	; 0
     d48:	88 23       	and	r24, r24
     d4a:	41 f0       	breq	.+16     	; 0xd5c <config+0x2dc>
			sbi(ps2port,ps2cmd);
     d4c:	a5 e3       	ldi	r26, 0x35	; 53
     d4e:	b0 e0       	ldi	r27, 0x00	; 0
     d50:	e5 e3       	ldi	r30, 0x35	; 53
     d52:	f0 e0       	ldi	r31, 0x00	; 0
     d54:	80 81       	ld	r24, Z
     d56:	84 60       	ori	r24, 0x04	; 4
     d58:	8c 93       	st	X, r24
     d5a:	07 c0       	rjmp	.+14     	; 0xd6a <config+0x2ea>
		else 
			cbi(ps2port,ps2cmd);
     d5c:	a5 e3       	ldi	r26, 0x35	; 53
     d5e:	b0 e0       	ldi	r27, 0x00	; 0
     d60:	e5 e3       	ldi	r30, 0x35	; 53
     d62:	f0 e0       	ldi	r31, 0x00	; 0
     d64:	80 81       	ld	r24, Z
     d66:	8b 7f       	andi	r24, 0xFB	; 251
     d68:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
     d6a:	a5 e3       	ldi	r26, 0x35	; 53
     d6c:	b0 e0       	ldi	r27, 0x00	; 0
     d6e:	e5 e3       	ldi	r30, 0x35	; 53
     d70:	f0 e0       	ldi	r31, 0x00	; 0
     d72:	80 81       	ld	r24, Z
     d74:	8e 7f       	andi	r24, 0xFE	; 254
     d76:	8c 93       	st	X, r24
     d78:	fe 01       	movw	r30, r28
     d7a:	e3 51       	subi	r30, 0x13	; 19
     d7c:	ff 4f       	sbci	r31, 0xFF	; 255
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	a0 e8       	ldi	r26, 0x80	; 128
     d84:	bf e3       	ldi	r27, 0x3F	; 63
     d86:	80 83       	st	Z, r24
     d88:	91 83       	std	Z+1, r25	; 0x01
     d8a:	a2 83       	std	Z+2, r26	; 0x02
     d8c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     d8e:	8e 01       	movw	r16, r28
     d90:	07 51       	subi	r16, 0x17	; 23
     d92:	1f 4f       	sbci	r17, 0xFF	; 255
     d94:	fe 01       	movw	r30, r28
     d96:	e3 51       	subi	r30, 0x13	; 19
     d98:	ff 4f       	sbci	r31, 0xFF	; 255
     d9a:	60 81       	ld	r22, Z
     d9c:	71 81       	ldd	r23, Z+1	; 0x01
     d9e:	82 81       	ldd	r24, Z+2	; 0x02
     da0:	93 81       	ldd	r25, Z+3	; 0x03
     da2:	2b ea       	ldi	r18, 0xAB	; 171
     da4:	3a ea       	ldi	r19, 0xAA	; 170
     da6:	4a ea       	ldi	r20, 0xAA	; 170
     da8:	50 e4       	ldi	r21, 0x40	; 64
     daa:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     dae:	dc 01       	movw	r26, r24
     db0:	cb 01       	movw	r24, r22
     db2:	f8 01       	movw	r30, r16
     db4:	80 83       	st	Z, r24
     db6:	91 83       	std	Z+1, r25	; 0x01
     db8:	a2 83       	std	Z+2, r26	; 0x02
     dba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     dbc:	fe 01       	movw	r30, r28
     dbe:	e7 51       	subi	r30, 0x17	; 23
     dc0:	ff 4f       	sbci	r31, 0xFF	; 255
     dc2:	60 81       	ld	r22, Z
     dc4:	71 81       	ldd	r23, Z+1	; 0x01
     dc6:	82 81       	ldd	r24, Z+2	; 0x02
     dc8:	93 81       	ldd	r25, Z+3	; 0x03
     dca:	20 e0       	ldi	r18, 0x00	; 0
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	40 e8       	ldi	r20, 0x80	; 128
     dd0:	5f e3       	ldi	r21, 0x3F	; 63
     dd2:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     dd6:	88 23       	and	r24, r24
     dd8:	34 f4       	brge	.+12     	; 0xde6 <config+0x366>
		__ticks = 1;
     dda:	fe 01       	movw	r30, r28
     ddc:	e8 51       	subi	r30, 0x18	; 24
     dde:	ff 4f       	sbci	r31, 0xFF	; 255
     de0:	81 e0       	ldi	r24, 0x01	; 1
     de2:	80 83       	st	Z, r24
     de4:	e0 c0       	rjmp	.+448    	; 0xfa6 <config+0x526>
	else if (__tmp > 255)
     de6:	fe 01       	movw	r30, r28
     de8:	e7 51       	subi	r30, 0x17	; 23
     dea:	ff 4f       	sbci	r31, 0xFF	; 255
     dec:	60 81       	ld	r22, Z
     dee:	71 81       	ldd	r23, Z+1	; 0x01
     df0:	82 81       	ldd	r24, Z+2	; 0x02
     df2:	93 81       	ldd	r25, Z+3	; 0x03
     df4:	20 e0       	ldi	r18, 0x00	; 0
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	4f e7       	ldi	r20, 0x7F	; 127
     dfa:	53 e4       	ldi	r21, 0x43	; 67
     dfc:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     e00:	18 16       	cp	r1, r24
     e02:	0c f0       	brlt	.+2      	; 0xe06 <config+0x386>
     e04:	c0 c0       	rjmp	.+384    	; 0xf86 <config+0x506>
	{
		_delay_ms(__us / 1000.0);
     e06:	fe 01       	movw	r30, r28
     e08:	e3 51       	subi	r30, 0x13	; 19
     e0a:	ff 4f       	sbci	r31, 0xFF	; 255
     e0c:	60 81       	ld	r22, Z
     e0e:	71 81       	ldd	r23, Z+1	; 0x01
     e10:	82 81       	ldd	r24, Z+2	; 0x02
     e12:	93 81       	ldd	r25, Z+3	; 0x03
     e14:	20 e0       	ldi	r18, 0x00	; 0
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	4a e7       	ldi	r20, 0x7A	; 122
     e1a:	54 e4       	ldi	r21, 0x44	; 68
     e1c:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
     e20:	dc 01       	movw	r26, r24
     e22:	cb 01       	movw	r24, r22
     e24:	fe 01       	movw	r30, r28
     e26:	ec 51       	subi	r30, 0x1C	; 28
     e28:	ff 4f       	sbci	r31, 0xFF	; 255
     e2a:	80 83       	st	Z, r24
     e2c:	91 83       	std	Z+1, r25	; 0x01
     e2e:	a2 83       	std	Z+2, r26	; 0x02
     e30:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e32:	8e 01       	movw	r16, r28
     e34:	00 52       	subi	r16, 0x20	; 32
     e36:	1f 4f       	sbci	r17, 0xFF	; 255
     e38:	fe 01       	movw	r30, r28
     e3a:	ec 51       	subi	r30, 0x1C	; 28
     e3c:	ff 4f       	sbci	r31, 0xFF	; 255
     e3e:	60 81       	ld	r22, Z
     e40:	71 81       	ldd	r23, Z+1	; 0x01
     e42:	82 81       	ldd	r24, Z+2	; 0x02
     e44:	93 81       	ldd	r25, Z+3	; 0x03
     e46:	20 e0       	ldi	r18, 0x00	; 0
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	4a e7       	ldi	r20, 0x7A	; 122
     e4c:	55 e4       	ldi	r21, 0x45	; 69
     e4e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     e52:	dc 01       	movw	r26, r24
     e54:	cb 01       	movw	r24, r22
     e56:	f8 01       	movw	r30, r16
     e58:	80 83       	st	Z, r24
     e5a:	91 83       	std	Z+1, r25	; 0x01
     e5c:	a2 83       	std	Z+2, r26	; 0x02
     e5e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e60:	fe 01       	movw	r30, r28
     e62:	e0 52       	subi	r30, 0x20	; 32
     e64:	ff 4f       	sbci	r31, 0xFF	; 255
     e66:	60 81       	ld	r22, Z
     e68:	71 81       	ldd	r23, Z+1	; 0x01
     e6a:	82 81       	ldd	r24, Z+2	; 0x02
     e6c:	93 81       	ldd	r25, Z+3	; 0x03
     e6e:	20 e0       	ldi	r18, 0x00	; 0
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	40 e8       	ldi	r20, 0x80	; 128
     e74:	5f e3       	ldi	r21, 0x3F	; 63
     e76:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
     e7a:	88 23       	and	r24, r24
     e7c:	44 f4       	brge	.+16     	; 0xe8e <config+0x40e>
		__ticks = 1;
     e7e:	fe 01       	movw	r30, r28
     e80:	e2 52       	subi	r30, 0x22	; 34
     e82:	ff 4f       	sbci	r31, 0xFF	; 255
     e84:	81 e0       	ldi	r24, 0x01	; 1
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	91 83       	std	Z+1, r25	; 0x01
     e8a:	80 83       	st	Z, r24
     e8c:	64 c0       	rjmp	.+200    	; 0xf56 <config+0x4d6>
	else if (__tmp > 65535)
     e8e:	fe 01       	movw	r30, r28
     e90:	e0 52       	subi	r30, 0x20	; 32
     e92:	ff 4f       	sbci	r31, 0xFF	; 255
     e94:	60 81       	ld	r22, Z
     e96:	71 81       	ldd	r23, Z+1	; 0x01
     e98:	82 81       	ldd	r24, Z+2	; 0x02
     e9a:	93 81       	ldd	r25, Z+3	; 0x03
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	3f ef       	ldi	r19, 0xFF	; 255
     ea0:	4f e7       	ldi	r20, 0x7F	; 127
     ea2:	57 e4       	ldi	r21, 0x47	; 71
     ea4:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
     ea8:	18 16       	cp	r1, r24
     eaa:	0c f0       	brlt	.+2      	; 0xeae <config+0x42e>
     eac:	43 c0       	rjmp	.+134    	; 0xf34 <config+0x4b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eae:	fe 01       	movw	r30, r28
     eb0:	ec 51       	subi	r30, 0x1C	; 28
     eb2:	ff 4f       	sbci	r31, 0xFF	; 255
     eb4:	60 81       	ld	r22, Z
     eb6:	71 81       	ldd	r23, Z+1	; 0x01
     eb8:	82 81       	ldd	r24, Z+2	; 0x02
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	20 e0       	ldi	r18, 0x00	; 0
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	40 e2       	ldi	r20, 0x20	; 32
     ec2:	51 e4       	ldi	r21, 0x41	; 65
     ec4:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
     ec8:	dc 01       	movw	r26, r24
     eca:	cb 01       	movw	r24, r22
     ecc:	8e 01       	movw	r16, r28
     ece:	02 52       	subi	r16, 0x22	; 34
     ed0:	1f 4f       	sbci	r17, 0xFF	; 255
     ed2:	bc 01       	movw	r22, r24
     ed4:	cd 01       	movw	r24, r26
     ed6:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     eda:	dc 01       	movw	r26, r24
     edc:	cb 01       	movw	r24, r22
     ede:	f8 01       	movw	r30, r16
     ee0:	91 83       	std	Z+1, r25	; 0x01
     ee2:	80 83       	st	Z, r24
     ee4:	1f c0       	rjmp	.+62     	; 0xf24 <config+0x4a4>
     ee6:	fe 01       	movw	r30, r28
     ee8:	e4 52       	subi	r30, 0x24	; 36
     eea:	ff 4f       	sbci	r31, 0xFF	; 255
     eec:	80 e9       	ldi	r24, 0x90	; 144
     eee:	91 e0       	ldi	r25, 0x01	; 1
     ef0:	91 83       	std	Z+1, r25	; 0x01
     ef2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     ef4:	fe 01       	movw	r30, r28
     ef6:	e4 52       	subi	r30, 0x24	; 36
     ef8:	ff 4f       	sbci	r31, 0xFF	; 255
     efa:	80 81       	ld	r24, Z
     efc:	91 81       	ldd	r25, Z+1	; 0x01
     efe:	01 97       	sbiw	r24, 0x01	; 1
     f00:	f1 f7       	brne	.-4      	; 0xefe <config+0x47e>
     f02:	fe 01       	movw	r30, r28
     f04:	e4 52       	subi	r30, 0x24	; 36
     f06:	ff 4f       	sbci	r31, 0xFF	; 255
     f08:	91 83       	std	Z+1, r25	; 0x01
     f0a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f0c:	de 01       	movw	r26, r28
     f0e:	a2 52       	subi	r26, 0x22	; 34
     f10:	bf 4f       	sbci	r27, 0xFF	; 255
     f12:	fe 01       	movw	r30, r28
     f14:	e2 52       	subi	r30, 0x22	; 34
     f16:	ff 4f       	sbci	r31, 0xFF	; 255
     f18:	80 81       	ld	r24, Z
     f1a:	91 81       	ldd	r25, Z+1	; 0x01
     f1c:	01 97       	sbiw	r24, 0x01	; 1
     f1e:	11 96       	adiw	r26, 0x01	; 1
     f20:	9c 93       	st	X, r25
     f22:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f24:	fe 01       	movw	r30, r28
     f26:	e2 52       	subi	r30, 0x22	; 34
     f28:	ff 4f       	sbci	r31, 0xFF	; 255
     f2a:	80 81       	ld	r24, Z
     f2c:	91 81       	ldd	r25, Z+1	; 0x01
     f2e:	00 97       	sbiw	r24, 0x00	; 0
     f30:	d1 f6       	brne	.-76     	; 0xee6 <config+0x466>
     f32:	4b c0       	rjmp	.+150    	; 0xfca <config+0x54a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f34:	8e 01       	movw	r16, r28
     f36:	02 52       	subi	r16, 0x22	; 34
     f38:	1f 4f       	sbci	r17, 0xFF	; 255
     f3a:	fe 01       	movw	r30, r28
     f3c:	e0 52       	subi	r30, 0x20	; 32
     f3e:	ff 4f       	sbci	r31, 0xFF	; 255
     f40:	60 81       	ld	r22, Z
     f42:	71 81       	ldd	r23, Z+1	; 0x01
     f44:	82 81       	ldd	r24, Z+2	; 0x02
     f46:	93 81       	ldd	r25, Z+3	; 0x03
     f48:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     f4c:	dc 01       	movw	r26, r24
     f4e:	cb 01       	movw	r24, r22
     f50:	f8 01       	movw	r30, r16
     f52:	91 83       	std	Z+1, r25	; 0x01
     f54:	80 83       	st	Z, r24
     f56:	de 01       	movw	r26, r28
     f58:	a6 52       	subi	r26, 0x26	; 38
     f5a:	bf 4f       	sbci	r27, 0xFF	; 255
     f5c:	fe 01       	movw	r30, r28
     f5e:	e2 52       	subi	r30, 0x22	; 34
     f60:	ff 4f       	sbci	r31, 0xFF	; 255
     f62:	80 81       	ld	r24, Z
     f64:	91 81       	ldd	r25, Z+1	; 0x01
     f66:	11 96       	adiw	r26, 0x01	; 1
     f68:	9c 93       	st	X, r25
     f6a:	8e 93       	st	-X, r24
     f6c:	fe 01       	movw	r30, r28
     f6e:	e6 52       	subi	r30, 0x26	; 38
     f70:	ff 4f       	sbci	r31, 0xFF	; 255
     f72:	80 81       	ld	r24, Z
     f74:	91 81       	ldd	r25, Z+1	; 0x01
     f76:	01 97       	sbiw	r24, 0x01	; 1
     f78:	f1 f7       	brne	.-4      	; 0xf76 <config+0x4f6>
     f7a:	fe 01       	movw	r30, r28
     f7c:	e6 52       	subi	r30, 0x26	; 38
     f7e:	ff 4f       	sbci	r31, 0xFF	; 255
     f80:	91 83       	std	Z+1, r25	; 0x01
     f82:	80 83       	st	Z, r24
     f84:	22 c0       	rjmp	.+68     	; 0xfca <config+0x54a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     f86:	8e 01       	movw	r16, r28
     f88:	08 51       	subi	r16, 0x18	; 24
     f8a:	1f 4f       	sbci	r17, 0xFF	; 255
     f8c:	fe 01       	movw	r30, r28
     f8e:	e7 51       	subi	r30, 0x17	; 23
     f90:	ff 4f       	sbci	r31, 0xFF	; 255
     f92:	60 81       	ld	r22, Z
     f94:	71 81       	ldd	r23, Z+1	; 0x01
     f96:	82 81       	ldd	r24, Z+2	; 0x02
     f98:	93 81       	ldd	r25, Z+3	; 0x03
     f9a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
     f9e:	dc 01       	movw	r26, r24
     fa0:	cb 01       	movw	r24, r22
     fa2:	f8 01       	movw	r30, r16
     fa4:	80 83       	st	Z, r24
     fa6:	de 01       	movw	r26, r28
     fa8:	a7 52       	subi	r26, 0x27	; 39
     faa:	bf 4f       	sbci	r27, 0xFF	; 255
     fac:	fe 01       	movw	r30, r28
     fae:	e8 51       	subi	r30, 0x18	; 24
     fb0:	ff 4f       	sbci	r31, 0xFF	; 255
     fb2:	80 81       	ld	r24, Z
     fb4:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     fb6:	fe 01       	movw	r30, r28
     fb8:	e7 52       	subi	r30, 0x27	; 39
     fba:	ff 4f       	sbci	r31, 0xFF	; 255
     fbc:	80 81       	ld	r24, Z
     fbe:	8a 95       	dec	r24
     fc0:	f1 f7       	brne	.-4      	; 0xfbe <config+0x53e>
     fc2:	fe 01       	movw	r30, r28
     fc4:	e7 52       	subi	r30, 0x27	; 39
     fc6:	ff 4f       	sbci	r31, 0xFF	; 255
     fc8:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
     fca:	a5 e3       	ldi	r26, 0x35	; 53
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	e5 e3       	ldi	r30, 0x35	; 53
     fd0:	f0 e0       	ldi	r31, 0x00	; 0
     fd2:	80 81       	ld	r24, Z
     fd4:	81 60       	ori	r24, 0x01	; 1
     fd6:	8c 93       	st	X, r24
     fd8:	fe 01       	movw	r30, r28
     fda:	eb 52       	subi	r30, 0x2B	; 43
     fdc:	ff 4f       	sbci	r31, 0xFF	; 255
     fde:	80 e0       	ldi	r24, 0x00	; 0
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	a0 e8       	ldi	r26, 0x80	; 128
     fe4:	bf e3       	ldi	r27, 0x3F	; 63
     fe6:	80 83       	st	Z, r24
     fe8:	91 83       	std	Z+1, r25	; 0x01
     fea:	a2 83       	std	Z+2, r26	; 0x02
     fec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     fee:	8e 01       	movw	r16, r28
     ff0:	0f 52       	subi	r16, 0x2F	; 47
     ff2:	1f 4f       	sbci	r17, 0xFF	; 255
     ff4:	fe 01       	movw	r30, r28
     ff6:	eb 52       	subi	r30, 0x2B	; 43
     ff8:	ff 4f       	sbci	r31, 0xFF	; 255
     ffa:	60 81       	ld	r22, Z
     ffc:	71 81       	ldd	r23, Z+1	; 0x01
     ffe:	82 81       	ldd	r24, Z+2	; 0x02
    1000:	93 81       	ldd	r25, Z+3	; 0x03
    1002:	2b ea       	ldi	r18, 0xAB	; 171
    1004:	3a ea       	ldi	r19, 0xAA	; 170
    1006:	4a ea       	ldi	r20, 0xAA	; 170
    1008:	50 e4       	ldi	r21, 0x40	; 64
    100a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    100e:	dc 01       	movw	r26, r24
    1010:	cb 01       	movw	r24, r22
    1012:	f8 01       	movw	r30, r16
    1014:	80 83       	st	Z, r24
    1016:	91 83       	std	Z+1, r25	; 0x01
    1018:	a2 83       	std	Z+2, r26	; 0x02
    101a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    101c:	fe 01       	movw	r30, r28
    101e:	ef 52       	subi	r30, 0x2F	; 47
    1020:	ff 4f       	sbci	r31, 0xFF	; 255
    1022:	60 81       	ld	r22, Z
    1024:	71 81       	ldd	r23, Z+1	; 0x01
    1026:	82 81       	ldd	r24, Z+2	; 0x02
    1028:	93 81       	ldd	r25, Z+3	; 0x03
    102a:	20 e0       	ldi	r18, 0x00	; 0
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	40 e8       	ldi	r20, 0x80	; 128
    1030:	5f e3       	ldi	r21, 0x3F	; 63
    1032:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    1036:	88 23       	and	r24, r24
    1038:	34 f4       	brge	.+12     	; 0x1046 <config+0x5c6>
		__ticks = 1;
    103a:	fe 01       	movw	r30, r28
    103c:	e0 53       	subi	r30, 0x30	; 48
    103e:	ff 4f       	sbci	r31, 0xFF	; 255
    1040:	81 e0       	ldi	r24, 0x01	; 1
    1042:	80 83       	st	Z, r24
    1044:	e0 c0       	rjmp	.+448    	; 0x1206 <config+0x786>
	else if (__tmp > 255)
    1046:	fe 01       	movw	r30, r28
    1048:	ef 52       	subi	r30, 0x2F	; 47
    104a:	ff 4f       	sbci	r31, 0xFF	; 255
    104c:	60 81       	ld	r22, Z
    104e:	71 81       	ldd	r23, Z+1	; 0x01
    1050:	82 81       	ldd	r24, Z+2	; 0x02
    1052:	93 81       	ldd	r25, Z+3	; 0x03
    1054:	20 e0       	ldi	r18, 0x00	; 0
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	4f e7       	ldi	r20, 0x7F	; 127
    105a:	53 e4       	ldi	r21, 0x43	; 67
    105c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    1060:	18 16       	cp	r1, r24
    1062:	0c f0       	brlt	.+2      	; 0x1066 <config+0x5e6>
    1064:	c0 c0       	rjmp	.+384    	; 0x11e6 <config+0x766>
	{
		_delay_ms(__us / 1000.0);
    1066:	fe 01       	movw	r30, r28
    1068:	eb 52       	subi	r30, 0x2B	; 43
    106a:	ff 4f       	sbci	r31, 0xFF	; 255
    106c:	60 81       	ld	r22, Z
    106e:	71 81       	ldd	r23, Z+1	; 0x01
    1070:	82 81       	ldd	r24, Z+2	; 0x02
    1072:	93 81       	ldd	r25, Z+3	; 0x03
    1074:	20 e0       	ldi	r18, 0x00	; 0
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	4a e7       	ldi	r20, 0x7A	; 122
    107a:	54 e4       	ldi	r21, 0x44	; 68
    107c:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    1080:	dc 01       	movw	r26, r24
    1082:	cb 01       	movw	r24, r22
    1084:	fe 01       	movw	r30, r28
    1086:	e4 53       	subi	r30, 0x34	; 52
    1088:	ff 4f       	sbci	r31, 0xFF	; 255
    108a:	80 83       	st	Z, r24
    108c:	91 83       	std	Z+1, r25	; 0x01
    108e:	a2 83       	std	Z+2, r26	; 0x02
    1090:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1092:	8e 01       	movw	r16, r28
    1094:	08 53       	subi	r16, 0x38	; 56
    1096:	1f 4f       	sbci	r17, 0xFF	; 255
    1098:	fe 01       	movw	r30, r28
    109a:	e4 53       	subi	r30, 0x34	; 52
    109c:	ff 4f       	sbci	r31, 0xFF	; 255
    109e:	60 81       	ld	r22, Z
    10a0:	71 81       	ldd	r23, Z+1	; 0x01
    10a2:	82 81       	ldd	r24, Z+2	; 0x02
    10a4:	93 81       	ldd	r25, Z+3	; 0x03
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	4a e7       	ldi	r20, 0x7A	; 122
    10ac:	55 e4       	ldi	r21, 0x45	; 69
    10ae:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    10b2:	dc 01       	movw	r26, r24
    10b4:	cb 01       	movw	r24, r22
    10b6:	f8 01       	movw	r30, r16
    10b8:	80 83       	st	Z, r24
    10ba:	91 83       	std	Z+1, r25	; 0x01
    10bc:	a2 83       	std	Z+2, r26	; 0x02
    10be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10c0:	fe 01       	movw	r30, r28
    10c2:	e8 53       	subi	r30, 0x38	; 56
    10c4:	ff 4f       	sbci	r31, 0xFF	; 255
    10c6:	60 81       	ld	r22, Z
    10c8:	71 81       	ldd	r23, Z+1	; 0x01
    10ca:	82 81       	ldd	r24, Z+2	; 0x02
    10cc:	93 81       	ldd	r25, Z+3	; 0x03
    10ce:	20 e0       	ldi	r18, 0x00	; 0
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	40 e8       	ldi	r20, 0x80	; 128
    10d4:	5f e3       	ldi	r21, 0x3F	; 63
    10d6:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    10da:	88 23       	and	r24, r24
    10dc:	44 f4       	brge	.+16     	; 0x10ee <config+0x66e>
		__ticks = 1;
    10de:	fe 01       	movw	r30, r28
    10e0:	ea 53       	subi	r30, 0x3A	; 58
    10e2:	ff 4f       	sbci	r31, 0xFF	; 255
    10e4:	81 e0       	ldi	r24, 0x01	; 1
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	91 83       	std	Z+1, r25	; 0x01
    10ea:	80 83       	st	Z, r24
    10ec:	64 c0       	rjmp	.+200    	; 0x11b6 <config+0x736>
	else if (__tmp > 65535)
    10ee:	fe 01       	movw	r30, r28
    10f0:	e8 53       	subi	r30, 0x38	; 56
    10f2:	ff 4f       	sbci	r31, 0xFF	; 255
    10f4:	60 81       	ld	r22, Z
    10f6:	71 81       	ldd	r23, Z+1	; 0x01
    10f8:	82 81       	ldd	r24, Z+2	; 0x02
    10fa:	93 81       	ldd	r25, Z+3	; 0x03
    10fc:	20 e0       	ldi	r18, 0x00	; 0
    10fe:	3f ef       	ldi	r19, 0xFF	; 255
    1100:	4f e7       	ldi	r20, 0x7F	; 127
    1102:	57 e4       	ldi	r21, 0x47	; 71
    1104:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    1108:	18 16       	cp	r1, r24
    110a:	0c f0       	brlt	.+2      	; 0x110e <config+0x68e>
    110c:	43 c0       	rjmp	.+134    	; 0x1194 <config+0x714>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    110e:	fe 01       	movw	r30, r28
    1110:	e4 53       	subi	r30, 0x34	; 52
    1112:	ff 4f       	sbci	r31, 0xFF	; 255
    1114:	60 81       	ld	r22, Z
    1116:	71 81       	ldd	r23, Z+1	; 0x01
    1118:	82 81       	ldd	r24, Z+2	; 0x02
    111a:	93 81       	ldd	r25, Z+3	; 0x03
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	40 e2       	ldi	r20, 0x20	; 32
    1122:	51 e4       	ldi	r21, 0x41	; 65
    1124:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1128:	dc 01       	movw	r26, r24
    112a:	cb 01       	movw	r24, r22
    112c:	8e 01       	movw	r16, r28
    112e:	0a 53       	subi	r16, 0x3A	; 58
    1130:	1f 4f       	sbci	r17, 0xFF	; 255
    1132:	bc 01       	movw	r22, r24
    1134:	cd 01       	movw	r24, r26
    1136:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    113a:	dc 01       	movw	r26, r24
    113c:	cb 01       	movw	r24, r22
    113e:	f8 01       	movw	r30, r16
    1140:	91 83       	std	Z+1, r25	; 0x01
    1142:	80 83       	st	Z, r24
    1144:	1f c0       	rjmp	.+62     	; 0x1184 <config+0x704>
    1146:	fe 01       	movw	r30, r28
    1148:	ec 53       	subi	r30, 0x3C	; 60
    114a:	ff 4f       	sbci	r31, 0xFF	; 255
    114c:	80 e9       	ldi	r24, 0x90	; 144
    114e:	91 e0       	ldi	r25, 0x01	; 1
    1150:	91 83       	std	Z+1, r25	; 0x01
    1152:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1154:	fe 01       	movw	r30, r28
    1156:	ec 53       	subi	r30, 0x3C	; 60
    1158:	ff 4f       	sbci	r31, 0xFF	; 255
    115a:	80 81       	ld	r24, Z
    115c:	91 81       	ldd	r25, Z+1	; 0x01
    115e:	01 97       	sbiw	r24, 0x01	; 1
    1160:	f1 f7       	brne	.-4      	; 0x115e <config+0x6de>
    1162:	fe 01       	movw	r30, r28
    1164:	ec 53       	subi	r30, 0x3C	; 60
    1166:	ff 4f       	sbci	r31, 0xFF	; 255
    1168:	91 83       	std	Z+1, r25	; 0x01
    116a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    116c:	de 01       	movw	r26, r28
    116e:	aa 53       	subi	r26, 0x3A	; 58
    1170:	bf 4f       	sbci	r27, 0xFF	; 255
    1172:	fe 01       	movw	r30, r28
    1174:	ea 53       	subi	r30, 0x3A	; 58
    1176:	ff 4f       	sbci	r31, 0xFF	; 255
    1178:	80 81       	ld	r24, Z
    117a:	91 81       	ldd	r25, Z+1	; 0x01
    117c:	01 97       	sbiw	r24, 0x01	; 1
    117e:	11 96       	adiw	r26, 0x01	; 1
    1180:	9c 93       	st	X, r25
    1182:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1184:	fe 01       	movw	r30, r28
    1186:	ea 53       	subi	r30, 0x3A	; 58
    1188:	ff 4f       	sbci	r31, 0xFF	; 255
    118a:	80 81       	ld	r24, Z
    118c:	91 81       	ldd	r25, Z+1	; 0x01
    118e:	00 97       	sbiw	r24, 0x00	; 0
    1190:	d1 f6       	brne	.-76     	; 0x1146 <config+0x6c6>
    1192:	4b c0       	rjmp	.+150    	; 0x122a <config+0x7aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1194:	8e 01       	movw	r16, r28
    1196:	0a 53       	subi	r16, 0x3A	; 58
    1198:	1f 4f       	sbci	r17, 0xFF	; 255
    119a:	fe 01       	movw	r30, r28
    119c:	e8 53       	subi	r30, 0x38	; 56
    119e:	ff 4f       	sbci	r31, 0xFF	; 255
    11a0:	60 81       	ld	r22, Z
    11a2:	71 81       	ldd	r23, Z+1	; 0x01
    11a4:	82 81       	ldd	r24, Z+2	; 0x02
    11a6:	93 81       	ldd	r25, Z+3	; 0x03
    11a8:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    11ac:	dc 01       	movw	r26, r24
    11ae:	cb 01       	movw	r24, r22
    11b0:	f8 01       	movw	r30, r16
    11b2:	91 83       	std	Z+1, r25	; 0x01
    11b4:	80 83       	st	Z, r24
    11b6:	de 01       	movw	r26, r28
    11b8:	ae 53       	subi	r26, 0x3E	; 62
    11ba:	bf 4f       	sbci	r27, 0xFF	; 255
    11bc:	fe 01       	movw	r30, r28
    11be:	ea 53       	subi	r30, 0x3A	; 58
    11c0:	ff 4f       	sbci	r31, 0xFF	; 255
    11c2:	80 81       	ld	r24, Z
    11c4:	91 81       	ldd	r25, Z+1	; 0x01
    11c6:	11 96       	adiw	r26, 0x01	; 1
    11c8:	9c 93       	st	X, r25
    11ca:	8e 93       	st	-X, r24
    11cc:	fe 01       	movw	r30, r28
    11ce:	ee 53       	subi	r30, 0x3E	; 62
    11d0:	ff 4f       	sbci	r31, 0xFF	; 255
    11d2:	80 81       	ld	r24, Z
    11d4:	91 81       	ldd	r25, Z+1	; 0x01
    11d6:	01 97       	sbiw	r24, 0x01	; 1
    11d8:	f1 f7       	brne	.-4      	; 0x11d6 <config+0x756>
    11da:	fe 01       	movw	r30, r28
    11dc:	ee 53       	subi	r30, 0x3E	; 62
    11de:	ff 4f       	sbci	r31, 0xFF	; 255
    11e0:	91 83       	std	Z+1, r25	; 0x01
    11e2:	80 83       	st	Z, r24
    11e4:	22 c0       	rjmp	.+68     	; 0x122a <config+0x7aa>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    11e6:	8e 01       	movw	r16, r28
    11e8:	00 53       	subi	r16, 0x30	; 48
    11ea:	1f 4f       	sbci	r17, 0xFF	; 255
    11ec:	fe 01       	movw	r30, r28
    11ee:	ef 52       	subi	r30, 0x2F	; 47
    11f0:	ff 4f       	sbci	r31, 0xFF	; 255
    11f2:	60 81       	ld	r22, Z
    11f4:	71 81       	ldd	r23, Z+1	; 0x01
    11f6:	82 81       	ldd	r24, Z+2	; 0x02
    11f8:	93 81       	ldd	r25, Z+3	; 0x03
    11fa:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    11fe:	dc 01       	movw	r26, r24
    1200:	cb 01       	movw	r24, r22
    1202:	f8 01       	movw	r30, r16
    1204:	80 83       	st	Z, r24
    1206:	de 01       	movw	r26, r28
    1208:	af 53       	subi	r26, 0x3F	; 63
    120a:	bf 4f       	sbci	r27, 0xFF	; 255
    120c:	fe 01       	movw	r30, r28
    120e:	e0 53       	subi	r30, 0x30	; 48
    1210:	ff 4f       	sbci	r31, 0xFF	; 255
    1212:	80 81       	ld	r24, Z
    1214:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1216:	fe 01       	movw	r30, r28
    1218:	ef 53       	subi	r30, 0x3F	; 63
    121a:	ff 4f       	sbci	r31, 0xFF	; 255
    121c:	80 81       	ld	r24, Z
    121e:	8a 95       	dec	r24
    1220:	f1 f7       	brne	.-4      	; 0x121e <config+0x79e>
    1222:	fe 01       	movw	r30, r28
    1224:	ef 53       	subi	r30, 0x3F	; 63
    1226:	ff 4f       	sbci	r31, 0xFF	; 255
    1228:	80 83       	st	Z, r24
	
	_delay_us(30);
	
	ps2byte = 0x01;			//byte1
	
	for(i=0;i<8;i++)		
    122a:	80 91 66 00 	lds	r24, 0x0066
    122e:	90 91 67 00 	lds	r25, 0x0067
    1232:	01 96       	adiw	r24, 0x01	; 1
    1234:	90 93 67 00 	sts	0x0067, r25
    1238:	80 93 66 00 	sts	0x0066, r24
    123c:	80 91 66 00 	lds	r24, 0x0066
    1240:	90 91 67 00 	lds	r25, 0x0067
    1244:	88 30       	cpi	r24, 0x08	; 8
    1246:	91 05       	cpc	r25, r1
    1248:	0c f4       	brge	.+2      	; 0x124c <config+0x7cc>
    124a:	6d cd       	rjmp	.-1318   	; 0xd26 <config+0x2a6>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    124c:	a5 e3       	ldi	r26, 0x35	; 53
    124e:	b0 e0       	ldi	r27, 0x00	; 0
    1250:	e5 e3       	ldi	r30, 0x35	; 53
    1252:	f0 e0       	ldi	r31, 0x00	; 0
    1254:	80 81       	ld	r24, Z
    1256:	84 60       	ori	r24, 0x04	; 4
    1258:	8c 93       	st	X, r24


	
	
	ps2byte = 0x43;			//byte2
    125a:	83 e4       	ldi	r24, 0x43	; 67
    125c:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)
    1260:	10 92 67 00 	sts	0x0067, r1
    1264:	10 92 66 00 	sts	0x0066, r1
    1268:	8b c2       	rjmp	.+1302   	; 0x1780 <config+0xd00>
	{
		if(ps2byte&(_BV(i)))
    126a:	80 91 61 00 	lds	r24, 0x0061
    126e:	28 2f       	mov	r18, r24
    1270:	30 e0       	ldi	r19, 0x00	; 0
    1272:	80 91 66 00 	lds	r24, 0x0066
    1276:	90 91 67 00 	lds	r25, 0x0067
    127a:	a9 01       	movw	r20, r18
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <config+0x802>
    127e:	55 95       	asr	r21
    1280:	47 95       	ror	r20
    1282:	8a 95       	dec	r24
    1284:	e2 f7       	brpl	.-8      	; 0x127e <config+0x7fe>
    1286:	ca 01       	movw	r24, r20
    1288:	81 70       	andi	r24, 0x01	; 1
    128a:	90 70       	andi	r25, 0x00	; 0
    128c:	88 23       	and	r24, r24
    128e:	41 f0       	breq	.+16     	; 0x12a0 <config+0x820>
			sbi(ps2port,ps2cmd);
    1290:	a5 e3       	ldi	r26, 0x35	; 53
    1292:	b0 e0       	ldi	r27, 0x00	; 0
    1294:	e5 e3       	ldi	r30, 0x35	; 53
    1296:	f0 e0       	ldi	r31, 0x00	; 0
    1298:	80 81       	ld	r24, Z
    129a:	84 60       	ori	r24, 0x04	; 4
    129c:	8c 93       	st	X, r24
    129e:	07 c0       	rjmp	.+14     	; 0x12ae <config+0x82e>
		else 
			cbi(ps2port,ps2cmd);
    12a0:	a5 e3       	ldi	r26, 0x35	; 53
    12a2:	b0 e0       	ldi	r27, 0x00	; 0
    12a4:	e5 e3       	ldi	r30, 0x35	; 53
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	80 81       	ld	r24, Z
    12aa:	8b 7f       	andi	r24, 0xFB	; 251
    12ac:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    12ae:	a5 e3       	ldi	r26, 0x35	; 53
    12b0:	b0 e0       	ldi	r27, 0x00	; 0
    12b2:	e5 e3       	ldi	r30, 0x35	; 53
    12b4:	f0 e0       	ldi	r31, 0x00	; 0
    12b6:	80 81       	ld	r24, Z
    12b8:	8e 7f       	andi	r24, 0xFE	; 254
    12ba:	8c 93       	st	X, r24
    12bc:	fe 01       	movw	r30, r28
    12be:	e3 54       	subi	r30, 0x43	; 67
    12c0:	ff 4f       	sbci	r31, 0xFF	; 255
    12c2:	80 e0       	ldi	r24, 0x00	; 0
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	a0 e8       	ldi	r26, 0x80	; 128
    12c8:	bf e3       	ldi	r27, 0x3F	; 63
    12ca:	80 83       	st	Z, r24
    12cc:	91 83       	std	Z+1, r25	; 0x01
    12ce:	a2 83       	std	Z+2, r26	; 0x02
    12d0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    12d2:	8e 01       	movw	r16, r28
    12d4:	07 54       	subi	r16, 0x47	; 71
    12d6:	1f 4f       	sbci	r17, 0xFF	; 255
    12d8:	fe 01       	movw	r30, r28
    12da:	e3 54       	subi	r30, 0x43	; 67
    12dc:	ff 4f       	sbci	r31, 0xFF	; 255
    12de:	60 81       	ld	r22, Z
    12e0:	71 81       	ldd	r23, Z+1	; 0x01
    12e2:	82 81       	ldd	r24, Z+2	; 0x02
    12e4:	93 81       	ldd	r25, Z+3	; 0x03
    12e6:	2b ea       	ldi	r18, 0xAB	; 171
    12e8:	3a ea       	ldi	r19, 0xAA	; 170
    12ea:	4a ea       	ldi	r20, 0xAA	; 170
    12ec:	50 e4       	ldi	r21, 0x40	; 64
    12ee:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    12f2:	dc 01       	movw	r26, r24
    12f4:	cb 01       	movw	r24, r22
    12f6:	f8 01       	movw	r30, r16
    12f8:	80 83       	st	Z, r24
    12fa:	91 83       	std	Z+1, r25	; 0x01
    12fc:	a2 83       	std	Z+2, r26	; 0x02
    12fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1300:	fe 01       	movw	r30, r28
    1302:	e7 54       	subi	r30, 0x47	; 71
    1304:	ff 4f       	sbci	r31, 0xFF	; 255
    1306:	60 81       	ld	r22, Z
    1308:	71 81       	ldd	r23, Z+1	; 0x01
    130a:	82 81       	ldd	r24, Z+2	; 0x02
    130c:	93 81       	ldd	r25, Z+3	; 0x03
    130e:	20 e0       	ldi	r18, 0x00	; 0
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	40 e8       	ldi	r20, 0x80	; 128
    1314:	5f e3       	ldi	r21, 0x3F	; 63
    1316:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    131a:	88 23       	and	r24, r24
    131c:	34 f4       	brge	.+12     	; 0x132a <config+0x8aa>
		__ticks = 1;
    131e:	fe 01       	movw	r30, r28
    1320:	e8 54       	subi	r30, 0x48	; 72
    1322:	ff 4f       	sbci	r31, 0xFF	; 255
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	80 83       	st	Z, r24
    1328:	e0 c0       	rjmp	.+448    	; 0x14ea <config+0xa6a>
	else if (__tmp > 255)
    132a:	fe 01       	movw	r30, r28
    132c:	e7 54       	subi	r30, 0x47	; 71
    132e:	ff 4f       	sbci	r31, 0xFF	; 255
    1330:	60 81       	ld	r22, Z
    1332:	71 81       	ldd	r23, Z+1	; 0x01
    1334:	82 81       	ldd	r24, Z+2	; 0x02
    1336:	93 81       	ldd	r25, Z+3	; 0x03
    1338:	20 e0       	ldi	r18, 0x00	; 0
    133a:	30 e0       	ldi	r19, 0x00	; 0
    133c:	4f e7       	ldi	r20, 0x7F	; 127
    133e:	53 e4       	ldi	r21, 0x43	; 67
    1340:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    1344:	18 16       	cp	r1, r24
    1346:	0c f0       	brlt	.+2      	; 0x134a <config+0x8ca>
    1348:	c0 c0       	rjmp	.+384    	; 0x14ca <config+0xa4a>
	{
		_delay_ms(__us / 1000.0);
    134a:	fe 01       	movw	r30, r28
    134c:	e3 54       	subi	r30, 0x43	; 67
    134e:	ff 4f       	sbci	r31, 0xFF	; 255
    1350:	60 81       	ld	r22, Z
    1352:	71 81       	ldd	r23, Z+1	; 0x01
    1354:	82 81       	ldd	r24, Z+2	; 0x02
    1356:	93 81       	ldd	r25, Z+3	; 0x03
    1358:	20 e0       	ldi	r18, 0x00	; 0
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	4a e7       	ldi	r20, 0x7A	; 122
    135e:	54 e4       	ldi	r21, 0x44	; 68
    1360:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    1364:	dc 01       	movw	r26, r24
    1366:	cb 01       	movw	r24, r22
    1368:	fe 01       	movw	r30, r28
    136a:	ec 54       	subi	r30, 0x4C	; 76
    136c:	ff 4f       	sbci	r31, 0xFF	; 255
    136e:	80 83       	st	Z, r24
    1370:	91 83       	std	Z+1, r25	; 0x01
    1372:	a2 83       	std	Z+2, r26	; 0x02
    1374:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1376:	8e 01       	movw	r16, r28
    1378:	00 55       	subi	r16, 0x50	; 80
    137a:	1f 4f       	sbci	r17, 0xFF	; 255
    137c:	fe 01       	movw	r30, r28
    137e:	ec 54       	subi	r30, 0x4C	; 76
    1380:	ff 4f       	sbci	r31, 0xFF	; 255
    1382:	60 81       	ld	r22, Z
    1384:	71 81       	ldd	r23, Z+1	; 0x01
    1386:	82 81       	ldd	r24, Z+2	; 0x02
    1388:	93 81       	ldd	r25, Z+3	; 0x03
    138a:	20 e0       	ldi	r18, 0x00	; 0
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	4a e7       	ldi	r20, 0x7A	; 122
    1390:	55 e4       	ldi	r21, 0x45	; 69
    1392:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1396:	dc 01       	movw	r26, r24
    1398:	cb 01       	movw	r24, r22
    139a:	f8 01       	movw	r30, r16
    139c:	80 83       	st	Z, r24
    139e:	91 83       	std	Z+1, r25	; 0x01
    13a0:	a2 83       	std	Z+2, r26	; 0x02
    13a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13a4:	fe 01       	movw	r30, r28
    13a6:	e0 55       	subi	r30, 0x50	; 80
    13a8:	ff 4f       	sbci	r31, 0xFF	; 255
    13aa:	60 81       	ld	r22, Z
    13ac:	71 81       	ldd	r23, Z+1	; 0x01
    13ae:	82 81       	ldd	r24, Z+2	; 0x02
    13b0:	93 81       	ldd	r25, Z+3	; 0x03
    13b2:	20 e0       	ldi	r18, 0x00	; 0
    13b4:	30 e0       	ldi	r19, 0x00	; 0
    13b6:	40 e8       	ldi	r20, 0x80	; 128
    13b8:	5f e3       	ldi	r21, 0x3F	; 63
    13ba:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    13be:	88 23       	and	r24, r24
    13c0:	44 f4       	brge	.+16     	; 0x13d2 <config+0x952>
		__ticks = 1;
    13c2:	fe 01       	movw	r30, r28
    13c4:	e2 55       	subi	r30, 0x52	; 82
    13c6:	ff 4f       	sbci	r31, 0xFF	; 255
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	91 83       	std	Z+1, r25	; 0x01
    13ce:	80 83       	st	Z, r24
    13d0:	64 c0       	rjmp	.+200    	; 0x149a <config+0xa1a>
	else if (__tmp > 65535)
    13d2:	fe 01       	movw	r30, r28
    13d4:	e0 55       	subi	r30, 0x50	; 80
    13d6:	ff 4f       	sbci	r31, 0xFF	; 255
    13d8:	60 81       	ld	r22, Z
    13da:	71 81       	ldd	r23, Z+1	; 0x01
    13dc:	82 81       	ldd	r24, Z+2	; 0x02
    13de:	93 81       	ldd	r25, Z+3	; 0x03
    13e0:	20 e0       	ldi	r18, 0x00	; 0
    13e2:	3f ef       	ldi	r19, 0xFF	; 255
    13e4:	4f e7       	ldi	r20, 0x7F	; 127
    13e6:	57 e4       	ldi	r21, 0x47	; 71
    13e8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    13ec:	18 16       	cp	r1, r24
    13ee:	0c f0       	brlt	.+2      	; 0x13f2 <config+0x972>
    13f0:	43 c0       	rjmp	.+134    	; 0x1478 <config+0x9f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13f2:	fe 01       	movw	r30, r28
    13f4:	ec 54       	subi	r30, 0x4C	; 76
    13f6:	ff 4f       	sbci	r31, 0xFF	; 255
    13f8:	60 81       	ld	r22, Z
    13fa:	71 81       	ldd	r23, Z+1	; 0x01
    13fc:	82 81       	ldd	r24, Z+2	; 0x02
    13fe:	93 81       	ldd	r25, Z+3	; 0x03
    1400:	20 e0       	ldi	r18, 0x00	; 0
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	40 e2       	ldi	r20, 0x20	; 32
    1406:	51 e4       	ldi	r21, 0x41	; 65
    1408:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	8e 01       	movw	r16, r28
    1412:	02 55       	subi	r16, 0x52	; 82
    1414:	1f 4f       	sbci	r17, 0xFF	; 255
    1416:	bc 01       	movw	r22, r24
    1418:	cd 01       	movw	r24, r26
    141a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	f8 01       	movw	r30, r16
    1424:	91 83       	std	Z+1, r25	; 0x01
    1426:	80 83       	st	Z, r24
    1428:	1f c0       	rjmp	.+62     	; 0x1468 <config+0x9e8>
    142a:	fe 01       	movw	r30, r28
    142c:	e4 55       	subi	r30, 0x54	; 84
    142e:	ff 4f       	sbci	r31, 0xFF	; 255
    1430:	80 e9       	ldi	r24, 0x90	; 144
    1432:	91 e0       	ldi	r25, 0x01	; 1
    1434:	91 83       	std	Z+1, r25	; 0x01
    1436:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1438:	fe 01       	movw	r30, r28
    143a:	e4 55       	subi	r30, 0x54	; 84
    143c:	ff 4f       	sbci	r31, 0xFF	; 255
    143e:	80 81       	ld	r24, Z
    1440:	91 81       	ldd	r25, Z+1	; 0x01
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	f1 f7       	brne	.-4      	; 0x1442 <config+0x9c2>
    1446:	fe 01       	movw	r30, r28
    1448:	e4 55       	subi	r30, 0x54	; 84
    144a:	ff 4f       	sbci	r31, 0xFF	; 255
    144c:	91 83       	std	Z+1, r25	; 0x01
    144e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1450:	de 01       	movw	r26, r28
    1452:	a2 55       	subi	r26, 0x52	; 82
    1454:	bf 4f       	sbci	r27, 0xFF	; 255
    1456:	fe 01       	movw	r30, r28
    1458:	e2 55       	subi	r30, 0x52	; 82
    145a:	ff 4f       	sbci	r31, 0xFF	; 255
    145c:	80 81       	ld	r24, Z
    145e:	91 81       	ldd	r25, Z+1	; 0x01
    1460:	01 97       	sbiw	r24, 0x01	; 1
    1462:	11 96       	adiw	r26, 0x01	; 1
    1464:	9c 93       	st	X, r25
    1466:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1468:	fe 01       	movw	r30, r28
    146a:	e2 55       	subi	r30, 0x52	; 82
    146c:	ff 4f       	sbci	r31, 0xFF	; 255
    146e:	80 81       	ld	r24, Z
    1470:	91 81       	ldd	r25, Z+1	; 0x01
    1472:	00 97       	sbiw	r24, 0x00	; 0
    1474:	d1 f6       	brne	.-76     	; 0x142a <config+0x9aa>
    1476:	4b c0       	rjmp	.+150    	; 0x150e <config+0xa8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1478:	8e 01       	movw	r16, r28
    147a:	02 55       	subi	r16, 0x52	; 82
    147c:	1f 4f       	sbci	r17, 0xFF	; 255
    147e:	fe 01       	movw	r30, r28
    1480:	e0 55       	subi	r30, 0x50	; 80
    1482:	ff 4f       	sbci	r31, 0xFF	; 255
    1484:	60 81       	ld	r22, Z
    1486:	71 81       	ldd	r23, Z+1	; 0x01
    1488:	82 81       	ldd	r24, Z+2	; 0x02
    148a:	93 81       	ldd	r25, Z+3	; 0x03
    148c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1490:	dc 01       	movw	r26, r24
    1492:	cb 01       	movw	r24, r22
    1494:	f8 01       	movw	r30, r16
    1496:	91 83       	std	Z+1, r25	; 0x01
    1498:	80 83       	st	Z, r24
    149a:	de 01       	movw	r26, r28
    149c:	a6 55       	subi	r26, 0x56	; 86
    149e:	bf 4f       	sbci	r27, 0xFF	; 255
    14a0:	fe 01       	movw	r30, r28
    14a2:	e2 55       	subi	r30, 0x52	; 82
    14a4:	ff 4f       	sbci	r31, 0xFF	; 255
    14a6:	80 81       	ld	r24, Z
    14a8:	91 81       	ldd	r25, Z+1	; 0x01
    14aa:	11 96       	adiw	r26, 0x01	; 1
    14ac:	9c 93       	st	X, r25
    14ae:	8e 93       	st	-X, r24
    14b0:	fe 01       	movw	r30, r28
    14b2:	e6 55       	subi	r30, 0x56	; 86
    14b4:	ff 4f       	sbci	r31, 0xFF	; 255
    14b6:	80 81       	ld	r24, Z
    14b8:	91 81       	ldd	r25, Z+1	; 0x01
    14ba:	01 97       	sbiw	r24, 0x01	; 1
    14bc:	f1 f7       	brne	.-4      	; 0x14ba <config+0xa3a>
    14be:	fe 01       	movw	r30, r28
    14c0:	e6 55       	subi	r30, 0x56	; 86
    14c2:	ff 4f       	sbci	r31, 0xFF	; 255
    14c4:	91 83       	std	Z+1, r25	; 0x01
    14c6:	80 83       	st	Z, r24
    14c8:	22 c0       	rjmp	.+68     	; 0x150e <config+0xa8e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    14ca:	8e 01       	movw	r16, r28
    14cc:	08 54       	subi	r16, 0x48	; 72
    14ce:	1f 4f       	sbci	r17, 0xFF	; 255
    14d0:	fe 01       	movw	r30, r28
    14d2:	e7 54       	subi	r30, 0x47	; 71
    14d4:	ff 4f       	sbci	r31, 0xFF	; 255
    14d6:	60 81       	ld	r22, Z
    14d8:	71 81       	ldd	r23, Z+1	; 0x01
    14da:	82 81       	ldd	r24, Z+2	; 0x02
    14dc:	93 81       	ldd	r25, Z+3	; 0x03
    14de:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    14e2:	dc 01       	movw	r26, r24
    14e4:	cb 01       	movw	r24, r22
    14e6:	f8 01       	movw	r30, r16
    14e8:	80 83       	st	Z, r24
    14ea:	de 01       	movw	r26, r28
    14ec:	a7 55       	subi	r26, 0x57	; 87
    14ee:	bf 4f       	sbci	r27, 0xFF	; 255
    14f0:	fe 01       	movw	r30, r28
    14f2:	e8 54       	subi	r30, 0x48	; 72
    14f4:	ff 4f       	sbci	r31, 0xFF	; 255
    14f6:	80 81       	ld	r24, Z
    14f8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    14fa:	fe 01       	movw	r30, r28
    14fc:	e7 55       	subi	r30, 0x57	; 87
    14fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1500:	80 81       	ld	r24, Z
    1502:	8a 95       	dec	r24
    1504:	f1 f7       	brne	.-4      	; 0x1502 <config+0xa82>
    1506:	fe 01       	movw	r30, r28
    1508:	e7 55       	subi	r30, 0x57	; 87
    150a:	ff 4f       	sbci	r31, 0xFF	; 255
    150c:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    150e:	a5 e3       	ldi	r26, 0x35	; 53
    1510:	b0 e0       	ldi	r27, 0x00	; 0
    1512:	e5 e3       	ldi	r30, 0x35	; 53
    1514:	f0 e0       	ldi	r31, 0x00	; 0
    1516:	80 81       	ld	r24, Z
    1518:	81 60       	ori	r24, 0x01	; 1
    151a:	8c 93       	st	X, r24
    151c:	fe 01       	movw	r30, r28
    151e:	eb 55       	subi	r30, 0x5B	; 91
    1520:	ff 4f       	sbci	r31, 0xFF	; 255
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	a0 e8       	ldi	r26, 0x80	; 128
    1528:	bf e3       	ldi	r27, 0x3F	; 63
    152a:	80 83       	st	Z, r24
    152c:	91 83       	std	Z+1, r25	; 0x01
    152e:	a2 83       	std	Z+2, r26	; 0x02
    1530:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1532:	8e 01       	movw	r16, r28
    1534:	0f 55       	subi	r16, 0x5F	; 95
    1536:	1f 4f       	sbci	r17, 0xFF	; 255
    1538:	fe 01       	movw	r30, r28
    153a:	eb 55       	subi	r30, 0x5B	; 91
    153c:	ff 4f       	sbci	r31, 0xFF	; 255
    153e:	60 81       	ld	r22, Z
    1540:	71 81       	ldd	r23, Z+1	; 0x01
    1542:	82 81       	ldd	r24, Z+2	; 0x02
    1544:	93 81       	ldd	r25, Z+3	; 0x03
    1546:	2b ea       	ldi	r18, 0xAB	; 171
    1548:	3a ea       	ldi	r19, 0xAA	; 170
    154a:	4a ea       	ldi	r20, 0xAA	; 170
    154c:	50 e4       	ldi	r21, 0x40	; 64
    154e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1552:	dc 01       	movw	r26, r24
    1554:	cb 01       	movw	r24, r22
    1556:	f8 01       	movw	r30, r16
    1558:	80 83       	st	Z, r24
    155a:	91 83       	std	Z+1, r25	; 0x01
    155c:	a2 83       	std	Z+2, r26	; 0x02
    155e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1560:	fe 01       	movw	r30, r28
    1562:	ef 55       	subi	r30, 0x5F	; 95
    1564:	ff 4f       	sbci	r31, 0xFF	; 255
    1566:	60 81       	ld	r22, Z
    1568:	71 81       	ldd	r23, Z+1	; 0x01
    156a:	82 81       	ldd	r24, Z+2	; 0x02
    156c:	93 81       	ldd	r25, Z+3	; 0x03
    156e:	20 e0       	ldi	r18, 0x00	; 0
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	40 e8       	ldi	r20, 0x80	; 128
    1574:	5f e3       	ldi	r21, 0x3F	; 63
    1576:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    157a:	88 23       	and	r24, r24
    157c:	34 f4       	brge	.+12     	; 0x158a <config+0xb0a>
		__ticks = 1;
    157e:	fe 01       	movw	r30, r28
    1580:	e0 56       	subi	r30, 0x60	; 96
    1582:	ff 4f       	sbci	r31, 0xFF	; 255
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	80 83       	st	Z, r24
    1588:	e0 c0       	rjmp	.+448    	; 0x174a <config+0xcca>
	else if (__tmp > 255)
    158a:	fe 01       	movw	r30, r28
    158c:	ef 55       	subi	r30, 0x5F	; 95
    158e:	ff 4f       	sbci	r31, 0xFF	; 255
    1590:	60 81       	ld	r22, Z
    1592:	71 81       	ldd	r23, Z+1	; 0x01
    1594:	82 81       	ldd	r24, Z+2	; 0x02
    1596:	93 81       	ldd	r25, Z+3	; 0x03
    1598:	20 e0       	ldi	r18, 0x00	; 0
    159a:	30 e0       	ldi	r19, 0x00	; 0
    159c:	4f e7       	ldi	r20, 0x7F	; 127
    159e:	53 e4       	ldi	r21, 0x43	; 67
    15a0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    15a4:	18 16       	cp	r1, r24
    15a6:	0c f0       	brlt	.+2      	; 0x15aa <config+0xb2a>
    15a8:	c0 c0       	rjmp	.+384    	; 0x172a <config+0xcaa>
	{
		_delay_ms(__us / 1000.0);
    15aa:	fe 01       	movw	r30, r28
    15ac:	eb 55       	subi	r30, 0x5B	; 91
    15ae:	ff 4f       	sbci	r31, 0xFF	; 255
    15b0:	60 81       	ld	r22, Z
    15b2:	71 81       	ldd	r23, Z+1	; 0x01
    15b4:	82 81       	ldd	r24, Z+2	; 0x02
    15b6:	93 81       	ldd	r25, Z+3	; 0x03
    15b8:	20 e0       	ldi	r18, 0x00	; 0
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	4a e7       	ldi	r20, 0x7A	; 122
    15be:	54 e4       	ldi	r21, 0x44	; 68
    15c0:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    15c4:	dc 01       	movw	r26, r24
    15c6:	cb 01       	movw	r24, r22
    15c8:	fe 01       	movw	r30, r28
    15ca:	e4 56       	subi	r30, 0x64	; 100
    15cc:	ff 4f       	sbci	r31, 0xFF	; 255
    15ce:	80 83       	st	Z, r24
    15d0:	91 83       	std	Z+1, r25	; 0x01
    15d2:	a2 83       	std	Z+2, r26	; 0x02
    15d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15d6:	8e 01       	movw	r16, r28
    15d8:	08 56       	subi	r16, 0x68	; 104
    15da:	1f 4f       	sbci	r17, 0xFF	; 255
    15dc:	fe 01       	movw	r30, r28
    15de:	e4 56       	subi	r30, 0x64	; 100
    15e0:	ff 4f       	sbci	r31, 0xFF	; 255
    15e2:	60 81       	ld	r22, Z
    15e4:	71 81       	ldd	r23, Z+1	; 0x01
    15e6:	82 81       	ldd	r24, Z+2	; 0x02
    15e8:	93 81       	ldd	r25, Z+3	; 0x03
    15ea:	20 e0       	ldi	r18, 0x00	; 0
    15ec:	30 e0       	ldi	r19, 0x00	; 0
    15ee:	4a e7       	ldi	r20, 0x7A	; 122
    15f0:	55 e4       	ldi	r21, 0x45	; 69
    15f2:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    15f6:	dc 01       	movw	r26, r24
    15f8:	cb 01       	movw	r24, r22
    15fa:	f8 01       	movw	r30, r16
    15fc:	80 83       	st	Z, r24
    15fe:	91 83       	std	Z+1, r25	; 0x01
    1600:	a2 83       	std	Z+2, r26	; 0x02
    1602:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1604:	fe 01       	movw	r30, r28
    1606:	e8 56       	subi	r30, 0x68	; 104
    1608:	ff 4f       	sbci	r31, 0xFF	; 255
    160a:	60 81       	ld	r22, Z
    160c:	71 81       	ldd	r23, Z+1	; 0x01
    160e:	82 81       	ldd	r24, Z+2	; 0x02
    1610:	93 81       	ldd	r25, Z+3	; 0x03
    1612:	20 e0       	ldi	r18, 0x00	; 0
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	40 e8       	ldi	r20, 0x80	; 128
    1618:	5f e3       	ldi	r21, 0x3F	; 63
    161a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    161e:	88 23       	and	r24, r24
    1620:	44 f4       	brge	.+16     	; 0x1632 <config+0xbb2>
		__ticks = 1;
    1622:	fe 01       	movw	r30, r28
    1624:	ea 56       	subi	r30, 0x6A	; 106
    1626:	ff 4f       	sbci	r31, 0xFF	; 255
    1628:	81 e0       	ldi	r24, 0x01	; 1
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	91 83       	std	Z+1, r25	; 0x01
    162e:	80 83       	st	Z, r24
    1630:	64 c0       	rjmp	.+200    	; 0x16fa <config+0xc7a>
	else if (__tmp > 65535)
    1632:	fe 01       	movw	r30, r28
    1634:	e8 56       	subi	r30, 0x68	; 104
    1636:	ff 4f       	sbci	r31, 0xFF	; 255
    1638:	60 81       	ld	r22, Z
    163a:	71 81       	ldd	r23, Z+1	; 0x01
    163c:	82 81       	ldd	r24, Z+2	; 0x02
    163e:	93 81       	ldd	r25, Z+3	; 0x03
    1640:	20 e0       	ldi	r18, 0x00	; 0
    1642:	3f ef       	ldi	r19, 0xFF	; 255
    1644:	4f e7       	ldi	r20, 0x7F	; 127
    1646:	57 e4       	ldi	r21, 0x47	; 71
    1648:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    164c:	18 16       	cp	r1, r24
    164e:	0c f0       	brlt	.+2      	; 0x1652 <config+0xbd2>
    1650:	43 c0       	rjmp	.+134    	; 0x16d8 <config+0xc58>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1652:	fe 01       	movw	r30, r28
    1654:	e4 56       	subi	r30, 0x64	; 100
    1656:	ff 4f       	sbci	r31, 0xFF	; 255
    1658:	60 81       	ld	r22, Z
    165a:	71 81       	ldd	r23, Z+1	; 0x01
    165c:	82 81       	ldd	r24, Z+2	; 0x02
    165e:	93 81       	ldd	r25, Z+3	; 0x03
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	40 e2       	ldi	r20, 0x20	; 32
    1666:	51 e4       	ldi	r21, 0x41	; 65
    1668:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    166c:	dc 01       	movw	r26, r24
    166e:	cb 01       	movw	r24, r22
    1670:	8e 01       	movw	r16, r28
    1672:	0a 56       	subi	r16, 0x6A	; 106
    1674:	1f 4f       	sbci	r17, 0xFF	; 255
    1676:	bc 01       	movw	r22, r24
    1678:	cd 01       	movw	r24, r26
    167a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    167e:	dc 01       	movw	r26, r24
    1680:	cb 01       	movw	r24, r22
    1682:	f8 01       	movw	r30, r16
    1684:	91 83       	std	Z+1, r25	; 0x01
    1686:	80 83       	st	Z, r24
    1688:	1f c0       	rjmp	.+62     	; 0x16c8 <config+0xc48>
    168a:	fe 01       	movw	r30, r28
    168c:	ec 56       	subi	r30, 0x6C	; 108
    168e:	ff 4f       	sbci	r31, 0xFF	; 255
    1690:	80 e9       	ldi	r24, 0x90	; 144
    1692:	91 e0       	ldi	r25, 0x01	; 1
    1694:	91 83       	std	Z+1, r25	; 0x01
    1696:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1698:	fe 01       	movw	r30, r28
    169a:	ec 56       	subi	r30, 0x6C	; 108
    169c:	ff 4f       	sbci	r31, 0xFF	; 255
    169e:	80 81       	ld	r24, Z
    16a0:	91 81       	ldd	r25, Z+1	; 0x01
    16a2:	01 97       	sbiw	r24, 0x01	; 1
    16a4:	f1 f7       	brne	.-4      	; 0x16a2 <config+0xc22>
    16a6:	fe 01       	movw	r30, r28
    16a8:	ec 56       	subi	r30, 0x6C	; 108
    16aa:	ff 4f       	sbci	r31, 0xFF	; 255
    16ac:	91 83       	std	Z+1, r25	; 0x01
    16ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16b0:	de 01       	movw	r26, r28
    16b2:	aa 56       	subi	r26, 0x6A	; 106
    16b4:	bf 4f       	sbci	r27, 0xFF	; 255
    16b6:	fe 01       	movw	r30, r28
    16b8:	ea 56       	subi	r30, 0x6A	; 106
    16ba:	ff 4f       	sbci	r31, 0xFF	; 255
    16bc:	80 81       	ld	r24, Z
    16be:	91 81       	ldd	r25, Z+1	; 0x01
    16c0:	01 97       	sbiw	r24, 0x01	; 1
    16c2:	11 96       	adiw	r26, 0x01	; 1
    16c4:	9c 93       	st	X, r25
    16c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16c8:	fe 01       	movw	r30, r28
    16ca:	ea 56       	subi	r30, 0x6A	; 106
    16cc:	ff 4f       	sbci	r31, 0xFF	; 255
    16ce:	80 81       	ld	r24, Z
    16d0:	91 81       	ldd	r25, Z+1	; 0x01
    16d2:	00 97       	sbiw	r24, 0x00	; 0
    16d4:	d1 f6       	brne	.-76     	; 0x168a <config+0xc0a>
    16d6:	4b c0       	rjmp	.+150    	; 0x176e <config+0xcee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16d8:	8e 01       	movw	r16, r28
    16da:	0a 56       	subi	r16, 0x6A	; 106
    16dc:	1f 4f       	sbci	r17, 0xFF	; 255
    16de:	fe 01       	movw	r30, r28
    16e0:	e8 56       	subi	r30, 0x68	; 104
    16e2:	ff 4f       	sbci	r31, 0xFF	; 255
    16e4:	60 81       	ld	r22, Z
    16e6:	71 81       	ldd	r23, Z+1	; 0x01
    16e8:	82 81       	ldd	r24, Z+2	; 0x02
    16ea:	93 81       	ldd	r25, Z+3	; 0x03
    16ec:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    16f0:	dc 01       	movw	r26, r24
    16f2:	cb 01       	movw	r24, r22
    16f4:	f8 01       	movw	r30, r16
    16f6:	91 83       	std	Z+1, r25	; 0x01
    16f8:	80 83       	st	Z, r24
    16fa:	de 01       	movw	r26, r28
    16fc:	ae 56       	subi	r26, 0x6E	; 110
    16fe:	bf 4f       	sbci	r27, 0xFF	; 255
    1700:	fe 01       	movw	r30, r28
    1702:	ea 56       	subi	r30, 0x6A	; 106
    1704:	ff 4f       	sbci	r31, 0xFF	; 255
    1706:	80 81       	ld	r24, Z
    1708:	91 81       	ldd	r25, Z+1	; 0x01
    170a:	11 96       	adiw	r26, 0x01	; 1
    170c:	9c 93       	st	X, r25
    170e:	8e 93       	st	-X, r24
    1710:	fe 01       	movw	r30, r28
    1712:	ee 56       	subi	r30, 0x6E	; 110
    1714:	ff 4f       	sbci	r31, 0xFF	; 255
    1716:	80 81       	ld	r24, Z
    1718:	91 81       	ldd	r25, Z+1	; 0x01
    171a:	01 97       	sbiw	r24, 0x01	; 1
    171c:	f1 f7       	brne	.-4      	; 0x171a <config+0xc9a>
    171e:	fe 01       	movw	r30, r28
    1720:	ee 56       	subi	r30, 0x6E	; 110
    1722:	ff 4f       	sbci	r31, 0xFF	; 255
    1724:	91 83       	std	Z+1, r25	; 0x01
    1726:	80 83       	st	Z, r24
    1728:	22 c0       	rjmp	.+68     	; 0x176e <config+0xcee>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    172a:	8e 01       	movw	r16, r28
    172c:	00 56       	subi	r16, 0x60	; 96
    172e:	1f 4f       	sbci	r17, 0xFF	; 255
    1730:	fe 01       	movw	r30, r28
    1732:	ef 55       	subi	r30, 0x5F	; 95
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	60 81       	ld	r22, Z
    1738:	71 81       	ldd	r23, Z+1	; 0x01
    173a:	82 81       	ldd	r24, Z+2	; 0x02
    173c:	93 81       	ldd	r25, Z+3	; 0x03
    173e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1742:	dc 01       	movw	r26, r24
    1744:	cb 01       	movw	r24, r22
    1746:	f8 01       	movw	r30, r16
    1748:	80 83       	st	Z, r24
    174a:	de 01       	movw	r26, r28
    174c:	af 56       	subi	r26, 0x6F	; 111
    174e:	bf 4f       	sbci	r27, 0xFF	; 255
    1750:	fe 01       	movw	r30, r28
    1752:	e0 56       	subi	r30, 0x60	; 96
    1754:	ff 4f       	sbci	r31, 0xFF	; 255
    1756:	80 81       	ld	r24, Z
    1758:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    175a:	fe 01       	movw	r30, r28
    175c:	ef 56       	subi	r30, 0x6F	; 111
    175e:	ff 4f       	sbci	r31, 0xFF	; 255
    1760:	80 81       	ld	r24, Z
    1762:	8a 95       	dec	r24
    1764:	f1 f7       	brne	.-4      	; 0x1762 <config+0xce2>
    1766:	fe 01       	movw	r30, r28
    1768:	ef 56       	subi	r30, 0x6F	; 111
    176a:	ff 4f       	sbci	r31, 0xFF	; 255
    176c:	80 83       	st	Z, r24

	
	
	ps2byte = 0x43;			//byte2
	
	for(i=0;i<8;i++)
    176e:	80 91 66 00 	lds	r24, 0x0066
    1772:	90 91 67 00 	lds	r25, 0x0067
    1776:	01 96       	adiw	r24, 0x01	; 1
    1778:	90 93 67 00 	sts	0x0067, r25
    177c:	80 93 66 00 	sts	0x0066, r24
    1780:	80 91 66 00 	lds	r24, 0x0066
    1784:	90 91 67 00 	lds	r25, 0x0067
    1788:	88 30       	cpi	r24, 0x08	; 8
    178a:	91 05       	cpc	r25, r1
    178c:	0c f4       	brge	.+2      	; 0x1790 <config+0xd10>
    178e:	6d cd       	rjmp	.-1318   	; 0x126a <config+0x7ea>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    1790:	a5 e3       	ldi	r26, 0x35	; 53
    1792:	b0 e0       	ldi	r27, 0x00	; 0
    1794:	e5 e3       	ldi	r30, 0x35	; 53
    1796:	f0 e0       	ldi	r31, 0x00	; 0
    1798:	80 81       	ld	r24, Z
    179a:	84 60       	ori	r24, 0x04	; 4
    179c:	8c 93       	st	X, r24
	
	
	
		
	for(i=0;i<8;i++)		//byte3
    179e:	10 92 67 00 	sts	0x0067, r1
    17a2:	10 92 66 00 	sts	0x0066, r1
    17a6:	70 c2       	rjmp	.+1248   	; 0x1c88 <config+0x1208>
	{	
		cbi(ps2port,ps2cmd);
    17a8:	a5 e3       	ldi	r26, 0x35	; 53
    17aa:	b0 e0       	ldi	r27, 0x00	; 0
    17ac:	e5 e3       	ldi	r30, 0x35	; 53
    17ae:	f0 e0       	ldi	r31, 0x00	; 0
    17b0:	80 81       	ld	r24, Z
    17b2:	8b 7f       	andi	r24, 0xFB	; 251
    17b4:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk);
    17b6:	a5 e3       	ldi	r26, 0x35	; 53
    17b8:	b0 e0       	ldi	r27, 0x00	; 0
    17ba:	e5 e3       	ldi	r30, 0x35	; 53
    17bc:	f0 e0       	ldi	r31, 0x00	; 0
    17be:	80 81       	ld	r24, Z
    17c0:	8e 7f       	andi	r24, 0xFE	; 254
    17c2:	8c 93       	st	X, r24
    17c4:	fe 01       	movw	r30, r28
    17c6:	e3 57       	subi	r30, 0x73	; 115
    17c8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ca:	80 e0       	ldi	r24, 0x00	; 0
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	a0 e8       	ldi	r26, 0x80	; 128
    17d0:	bf e3       	ldi	r27, 0x3F	; 63
    17d2:	80 83       	st	Z, r24
    17d4:	91 83       	std	Z+1, r25	; 0x01
    17d6:	a2 83       	std	Z+2, r26	; 0x02
    17d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    17da:	8e 01       	movw	r16, r28
    17dc:	07 57       	subi	r16, 0x77	; 119
    17de:	1f 4f       	sbci	r17, 0xFF	; 255
    17e0:	fe 01       	movw	r30, r28
    17e2:	e3 57       	subi	r30, 0x73	; 115
    17e4:	ff 4f       	sbci	r31, 0xFF	; 255
    17e6:	60 81       	ld	r22, Z
    17e8:	71 81       	ldd	r23, Z+1	; 0x01
    17ea:	82 81       	ldd	r24, Z+2	; 0x02
    17ec:	93 81       	ldd	r25, Z+3	; 0x03
    17ee:	2b ea       	ldi	r18, 0xAB	; 171
    17f0:	3a ea       	ldi	r19, 0xAA	; 170
    17f2:	4a ea       	ldi	r20, 0xAA	; 170
    17f4:	50 e4       	ldi	r21, 0x40	; 64
    17f6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    17fa:	dc 01       	movw	r26, r24
    17fc:	cb 01       	movw	r24, r22
    17fe:	f8 01       	movw	r30, r16
    1800:	80 83       	st	Z, r24
    1802:	91 83       	std	Z+1, r25	; 0x01
    1804:	a2 83       	std	Z+2, r26	; 0x02
    1806:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1808:	fe 01       	movw	r30, r28
    180a:	e7 57       	subi	r30, 0x77	; 119
    180c:	ff 4f       	sbci	r31, 0xFF	; 255
    180e:	60 81       	ld	r22, Z
    1810:	71 81       	ldd	r23, Z+1	; 0x01
    1812:	82 81       	ldd	r24, Z+2	; 0x02
    1814:	93 81       	ldd	r25, Z+3	; 0x03
    1816:	20 e0       	ldi	r18, 0x00	; 0
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	40 e8       	ldi	r20, 0x80	; 128
    181c:	5f e3       	ldi	r21, 0x3F	; 63
    181e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    1822:	88 23       	and	r24, r24
    1824:	34 f4       	brge	.+12     	; 0x1832 <config+0xdb2>
		__ticks = 1;
    1826:	fe 01       	movw	r30, r28
    1828:	e8 57       	subi	r30, 0x78	; 120
    182a:	ff 4f       	sbci	r31, 0xFF	; 255
    182c:	81 e0       	ldi	r24, 0x01	; 1
    182e:	80 83       	st	Z, r24
    1830:	e0 c0       	rjmp	.+448    	; 0x19f2 <config+0xf72>
	else if (__tmp > 255)
    1832:	fe 01       	movw	r30, r28
    1834:	e7 57       	subi	r30, 0x77	; 119
    1836:	ff 4f       	sbci	r31, 0xFF	; 255
    1838:	60 81       	ld	r22, Z
    183a:	71 81       	ldd	r23, Z+1	; 0x01
    183c:	82 81       	ldd	r24, Z+2	; 0x02
    183e:	93 81       	ldd	r25, Z+3	; 0x03
    1840:	20 e0       	ldi	r18, 0x00	; 0
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	4f e7       	ldi	r20, 0x7F	; 127
    1846:	53 e4       	ldi	r21, 0x43	; 67
    1848:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    184c:	18 16       	cp	r1, r24
    184e:	0c f0       	brlt	.+2      	; 0x1852 <config+0xdd2>
    1850:	c0 c0       	rjmp	.+384    	; 0x19d2 <config+0xf52>
	{
		_delay_ms(__us / 1000.0);
    1852:	fe 01       	movw	r30, r28
    1854:	e3 57       	subi	r30, 0x73	; 115
    1856:	ff 4f       	sbci	r31, 0xFF	; 255
    1858:	60 81       	ld	r22, Z
    185a:	71 81       	ldd	r23, Z+1	; 0x01
    185c:	82 81       	ldd	r24, Z+2	; 0x02
    185e:	93 81       	ldd	r25, Z+3	; 0x03
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	4a e7       	ldi	r20, 0x7A	; 122
    1866:	54 e4       	ldi	r21, 0x44	; 68
    1868:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    186c:	dc 01       	movw	r26, r24
    186e:	cb 01       	movw	r24, r22
    1870:	fe 01       	movw	r30, r28
    1872:	ec 57       	subi	r30, 0x7C	; 124
    1874:	ff 4f       	sbci	r31, 0xFF	; 255
    1876:	80 83       	st	Z, r24
    1878:	91 83       	std	Z+1, r25	; 0x01
    187a:	a2 83       	std	Z+2, r26	; 0x02
    187c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    187e:	8e 01       	movw	r16, r28
    1880:	00 58       	subi	r16, 0x80	; 128
    1882:	1f 4f       	sbci	r17, 0xFF	; 255
    1884:	fe 01       	movw	r30, r28
    1886:	ec 57       	subi	r30, 0x7C	; 124
    1888:	ff 4f       	sbci	r31, 0xFF	; 255
    188a:	60 81       	ld	r22, Z
    188c:	71 81       	ldd	r23, Z+1	; 0x01
    188e:	82 81       	ldd	r24, Z+2	; 0x02
    1890:	93 81       	ldd	r25, Z+3	; 0x03
    1892:	20 e0       	ldi	r18, 0x00	; 0
    1894:	30 e0       	ldi	r19, 0x00	; 0
    1896:	4a e7       	ldi	r20, 0x7A	; 122
    1898:	55 e4       	ldi	r21, 0x45	; 69
    189a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    189e:	dc 01       	movw	r26, r24
    18a0:	cb 01       	movw	r24, r22
    18a2:	f8 01       	movw	r30, r16
    18a4:	80 83       	st	Z, r24
    18a6:	91 83       	std	Z+1, r25	; 0x01
    18a8:	a2 83       	std	Z+2, r26	; 0x02
    18aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18ac:	fe 01       	movw	r30, r28
    18ae:	e0 58       	subi	r30, 0x80	; 128
    18b0:	ff 4f       	sbci	r31, 0xFF	; 255
    18b2:	60 81       	ld	r22, Z
    18b4:	71 81       	ldd	r23, Z+1	; 0x01
    18b6:	82 81       	ldd	r24, Z+2	; 0x02
    18b8:	93 81       	ldd	r25, Z+3	; 0x03
    18ba:	20 e0       	ldi	r18, 0x00	; 0
    18bc:	30 e0       	ldi	r19, 0x00	; 0
    18be:	40 e8       	ldi	r20, 0x80	; 128
    18c0:	5f e3       	ldi	r21, 0x3F	; 63
    18c2:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    18c6:	88 23       	and	r24, r24
    18c8:	44 f4       	brge	.+16     	; 0x18da <config+0xe5a>
		__ticks = 1;
    18ca:	fe 01       	movw	r30, r28
    18cc:	e2 58       	subi	r30, 0x82	; 130
    18ce:	ff 4f       	sbci	r31, 0xFF	; 255
    18d0:	81 e0       	ldi	r24, 0x01	; 1
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	91 83       	std	Z+1, r25	; 0x01
    18d6:	80 83       	st	Z, r24
    18d8:	64 c0       	rjmp	.+200    	; 0x19a2 <config+0xf22>
	else if (__tmp > 65535)
    18da:	fe 01       	movw	r30, r28
    18dc:	e0 58       	subi	r30, 0x80	; 128
    18de:	ff 4f       	sbci	r31, 0xFF	; 255
    18e0:	60 81       	ld	r22, Z
    18e2:	71 81       	ldd	r23, Z+1	; 0x01
    18e4:	82 81       	ldd	r24, Z+2	; 0x02
    18e6:	93 81       	ldd	r25, Z+3	; 0x03
    18e8:	20 e0       	ldi	r18, 0x00	; 0
    18ea:	3f ef       	ldi	r19, 0xFF	; 255
    18ec:	4f e7       	ldi	r20, 0x7F	; 127
    18ee:	57 e4       	ldi	r21, 0x47	; 71
    18f0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    18f4:	18 16       	cp	r1, r24
    18f6:	0c f0       	brlt	.+2      	; 0x18fa <config+0xe7a>
    18f8:	43 c0       	rjmp	.+134    	; 0x1980 <config+0xf00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18fa:	fe 01       	movw	r30, r28
    18fc:	ec 57       	subi	r30, 0x7C	; 124
    18fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1900:	60 81       	ld	r22, Z
    1902:	71 81       	ldd	r23, Z+1	; 0x01
    1904:	82 81       	ldd	r24, Z+2	; 0x02
    1906:	93 81       	ldd	r25, Z+3	; 0x03
    1908:	20 e0       	ldi	r18, 0x00	; 0
    190a:	30 e0       	ldi	r19, 0x00	; 0
    190c:	40 e2       	ldi	r20, 0x20	; 32
    190e:	51 e4       	ldi	r21, 0x41	; 65
    1910:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1914:	dc 01       	movw	r26, r24
    1916:	cb 01       	movw	r24, r22
    1918:	8e 01       	movw	r16, r28
    191a:	02 58       	subi	r16, 0x82	; 130
    191c:	1f 4f       	sbci	r17, 0xFF	; 255
    191e:	bc 01       	movw	r22, r24
    1920:	cd 01       	movw	r24, r26
    1922:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1926:	dc 01       	movw	r26, r24
    1928:	cb 01       	movw	r24, r22
    192a:	f8 01       	movw	r30, r16
    192c:	91 83       	std	Z+1, r25	; 0x01
    192e:	80 83       	st	Z, r24
    1930:	1f c0       	rjmp	.+62     	; 0x1970 <config+0xef0>
    1932:	fe 01       	movw	r30, r28
    1934:	e4 58       	subi	r30, 0x84	; 132
    1936:	ff 4f       	sbci	r31, 0xFF	; 255
    1938:	80 e9       	ldi	r24, 0x90	; 144
    193a:	91 e0       	ldi	r25, 0x01	; 1
    193c:	91 83       	std	Z+1, r25	; 0x01
    193e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1940:	fe 01       	movw	r30, r28
    1942:	e4 58       	subi	r30, 0x84	; 132
    1944:	ff 4f       	sbci	r31, 0xFF	; 255
    1946:	80 81       	ld	r24, Z
    1948:	91 81       	ldd	r25, Z+1	; 0x01
    194a:	01 97       	sbiw	r24, 0x01	; 1
    194c:	f1 f7       	brne	.-4      	; 0x194a <config+0xeca>
    194e:	fe 01       	movw	r30, r28
    1950:	e4 58       	subi	r30, 0x84	; 132
    1952:	ff 4f       	sbci	r31, 0xFF	; 255
    1954:	91 83       	std	Z+1, r25	; 0x01
    1956:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1958:	de 01       	movw	r26, r28
    195a:	a2 58       	subi	r26, 0x82	; 130
    195c:	bf 4f       	sbci	r27, 0xFF	; 255
    195e:	fe 01       	movw	r30, r28
    1960:	e2 58       	subi	r30, 0x82	; 130
    1962:	ff 4f       	sbci	r31, 0xFF	; 255
    1964:	80 81       	ld	r24, Z
    1966:	91 81       	ldd	r25, Z+1	; 0x01
    1968:	01 97       	sbiw	r24, 0x01	; 1
    196a:	11 96       	adiw	r26, 0x01	; 1
    196c:	9c 93       	st	X, r25
    196e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1970:	fe 01       	movw	r30, r28
    1972:	e2 58       	subi	r30, 0x82	; 130
    1974:	ff 4f       	sbci	r31, 0xFF	; 255
    1976:	80 81       	ld	r24, Z
    1978:	91 81       	ldd	r25, Z+1	; 0x01
    197a:	00 97       	sbiw	r24, 0x00	; 0
    197c:	d1 f6       	brne	.-76     	; 0x1932 <config+0xeb2>
    197e:	4b c0       	rjmp	.+150    	; 0x1a16 <config+0xf96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1980:	8e 01       	movw	r16, r28
    1982:	02 58       	subi	r16, 0x82	; 130
    1984:	1f 4f       	sbci	r17, 0xFF	; 255
    1986:	fe 01       	movw	r30, r28
    1988:	e0 58       	subi	r30, 0x80	; 128
    198a:	ff 4f       	sbci	r31, 0xFF	; 255
    198c:	60 81       	ld	r22, Z
    198e:	71 81       	ldd	r23, Z+1	; 0x01
    1990:	82 81       	ldd	r24, Z+2	; 0x02
    1992:	93 81       	ldd	r25, Z+3	; 0x03
    1994:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1998:	dc 01       	movw	r26, r24
    199a:	cb 01       	movw	r24, r22
    199c:	f8 01       	movw	r30, r16
    199e:	91 83       	std	Z+1, r25	; 0x01
    19a0:	80 83       	st	Z, r24
    19a2:	de 01       	movw	r26, r28
    19a4:	a6 58       	subi	r26, 0x86	; 134
    19a6:	bf 4f       	sbci	r27, 0xFF	; 255
    19a8:	fe 01       	movw	r30, r28
    19aa:	e2 58       	subi	r30, 0x82	; 130
    19ac:	ff 4f       	sbci	r31, 0xFF	; 255
    19ae:	80 81       	ld	r24, Z
    19b0:	91 81       	ldd	r25, Z+1	; 0x01
    19b2:	11 96       	adiw	r26, 0x01	; 1
    19b4:	9c 93       	st	X, r25
    19b6:	8e 93       	st	-X, r24
    19b8:	fe 01       	movw	r30, r28
    19ba:	e6 58       	subi	r30, 0x86	; 134
    19bc:	ff 4f       	sbci	r31, 0xFF	; 255
    19be:	80 81       	ld	r24, Z
    19c0:	91 81       	ldd	r25, Z+1	; 0x01
    19c2:	01 97       	sbiw	r24, 0x01	; 1
    19c4:	f1 f7       	brne	.-4      	; 0x19c2 <config+0xf42>
    19c6:	fe 01       	movw	r30, r28
    19c8:	e6 58       	subi	r30, 0x86	; 134
    19ca:	ff 4f       	sbci	r31, 0xFF	; 255
    19cc:	91 83       	std	Z+1, r25	; 0x01
    19ce:	80 83       	st	Z, r24
    19d0:	22 c0       	rjmp	.+68     	; 0x1a16 <config+0xf96>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    19d2:	8e 01       	movw	r16, r28
    19d4:	08 57       	subi	r16, 0x78	; 120
    19d6:	1f 4f       	sbci	r17, 0xFF	; 255
    19d8:	fe 01       	movw	r30, r28
    19da:	e7 57       	subi	r30, 0x77	; 119
    19dc:	ff 4f       	sbci	r31, 0xFF	; 255
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    19ea:	dc 01       	movw	r26, r24
    19ec:	cb 01       	movw	r24, r22
    19ee:	f8 01       	movw	r30, r16
    19f0:	80 83       	st	Z, r24
    19f2:	de 01       	movw	r26, r28
    19f4:	a7 58       	subi	r26, 0x87	; 135
    19f6:	bf 4f       	sbci	r27, 0xFF	; 255
    19f8:	fe 01       	movw	r30, r28
    19fa:	e8 57       	subi	r30, 0x78	; 120
    19fc:	ff 4f       	sbci	r31, 0xFF	; 255
    19fe:	80 81       	ld	r24, Z
    1a00:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1a02:	fe 01       	movw	r30, r28
    1a04:	e7 58       	subi	r30, 0x87	; 135
    1a06:	ff 4f       	sbci	r31, 0xFF	; 255
    1a08:	80 81       	ld	r24, Z
    1a0a:	8a 95       	dec	r24
    1a0c:	f1 f7       	brne	.-4      	; 0x1a0a <config+0xf8a>
    1a0e:	fe 01       	movw	r30, r28
    1a10:	e7 58       	subi	r30, 0x87	; 135
    1a12:	ff 4f       	sbci	r31, 0xFF	; 255
    1a14:	80 83       	st	Z, r24
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
    1a16:	a5 e3       	ldi	r26, 0x35	; 53
    1a18:	b0 e0       	ldi	r27, 0x00	; 0
    1a1a:	e5 e3       	ldi	r30, 0x35	; 53
    1a1c:	f0 e0       	ldi	r31, 0x00	; 0
    1a1e:	80 81       	ld	r24, Z
    1a20:	81 60       	ori	r24, 0x01	; 1
    1a22:	8c 93       	st	X, r24
    1a24:	fe 01       	movw	r30, r28
    1a26:	eb 58       	subi	r30, 0x8B	; 139
    1a28:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2a:	80 e0       	ldi	r24, 0x00	; 0
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	a0 e8       	ldi	r26, 0x80	; 128
    1a30:	bf e3       	ldi	r27, 0x3F	; 63
    1a32:	80 83       	st	Z, r24
    1a34:	91 83       	std	Z+1, r25	; 0x01
    1a36:	a2 83       	std	Z+2, r26	; 0x02
    1a38:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1a3a:	8e 01       	movw	r16, r28
    1a3c:	0f 58       	subi	r16, 0x8F	; 143
    1a3e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a40:	fe 01       	movw	r30, r28
    1a42:	eb 58       	subi	r30, 0x8B	; 139
    1a44:	ff 4f       	sbci	r31, 0xFF	; 255
    1a46:	60 81       	ld	r22, Z
    1a48:	71 81       	ldd	r23, Z+1	; 0x01
    1a4a:	82 81       	ldd	r24, Z+2	; 0x02
    1a4c:	93 81       	ldd	r25, Z+3	; 0x03
    1a4e:	2b ea       	ldi	r18, 0xAB	; 171
    1a50:	3a ea       	ldi	r19, 0xAA	; 170
    1a52:	4a ea       	ldi	r20, 0xAA	; 170
    1a54:	50 e4       	ldi	r21, 0x40	; 64
    1a56:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1a5a:	dc 01       	movw	r26, r24
    1a5c:	cb 01       	movw	r24, r22
    1a5e:	f8 01       	movw	r30, r16
    1a60:	80 83       	st	Z, r24
    1a62:	91 83       	std	Z+1, r25	; 0x01
    1a64:	a2 83       	std	Z+2, r26	; 0x02
    1a66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a68:	fe 01       	movw	r30, r28
    1a6a:	ef 58       	subi	r30, 0x8F	; 143
    1a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6e:	60 81       	ld	r22, Z
    1a70:	71 81       	ldd	r23, Z+1	; 0x01
    1a72:	82 81       	ldd	r24, Z+2	; 0x02
    1a74:	93 81       	ldd	r25, Z+3	; 0x03
    1a76:	20 e0       	ldi	r18, 0x00	; 0
    1a78:	30 e0       	ldi	r19, 0x00	; 0
    1a7a:	40 e8       	ldi	r20, 0x80	; 128
    1a7c:	5f e3       	ldi	r21, 0x3F	; 63
    1a7e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    1a82:	88 23       	and	r24, r24
    1a84:	34 f4       	brge	.+12     	; 0x1a92 <config+0x1012>
		__ticks = 1;
    1a86:	fe 01       	movw	r30, r28
    1a88:	e0 59       	subi	r30, 0x90	; 144
    1a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8c:	81 e0       	ldi	r24, 0x01	; 1
    1a8e:	80 83       	st	Z, r24
    1a90:	e0 c0       	rjmp	.+448    	; 0x1c52 <config+0x11d2>
	else if (__tmp > 255)
    1a92:	fe 01       	movw	r30, r28
    1a94:	ef 58       	subi	r30, 0x8F	; 143
    1a96:	ff 4f       	sbci	r31, 0xFF	; 255
    1a98:	60 81       	ld	r22, Z
    1a9a:	71 81       	ldd	r23, Z+1	; 0x01
    1a9c:	82 81       	ldd	r24, Z+2	; 0x02
    1a9e:	93 81       	ldd	r25, Z+3	; 0x03
    1aa0:	20 e0       	ldi	r18, 0x00	; 0
    1aa2:	30 e0       	ldi	r19, 0x00	; 0
    1aa4:	4f e7       	ldi	r20, 0x7F	; 127
    1aa6:	53 e4       	ldi	r21, 0x43	; 67
    1aa8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    1aac:	18 16       	cp	r1, r24
    1aae:	0c f0       	brlt	.+2      	; 0x1ab2 <config+0x1032>
    1ab0:	c0 c0       	rjmp	.+384    	; 0x1c32 <config+0x11b2>
	{
		_delay_ms(__us / 1000.0);
    1ab2:	fe 01       	movw	r30, r28
    1ab4:	eb 58       	subi	r30, 0x8B	; 139
    1ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab8:	60 81       	ld	r22, Z
    1aba:	71 81       	ldd	r23, Z+1	; 0x01
    1abc:	82 81       	ldd	r24, Z+2	; 0x02
    1abe:	93 81       	ldd	r25, Z+3	; 0x03
    1ac0:	20 e0       	ldi	r18, 0x00	; 0
    1ac2:	30 e0       	ldi	r19, 0x00	; 0
    1ac4:	4a e7       	ldi	r20, 0x7A	; 122
    1ac6:	54 e4       	ldi	r21, 0x44	; 68
    1ac8:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    1acc:	dc 01       	movw	r26, r24
    1ace:	cb 01       	movw	r24, r22
    1ad0:	fe 01       	movw	r30, r28
    1ad2:	e4 59       	subi	r30, 0x94	; 148
    1ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad6:	80 83       	st	Z, r24
    1ad8:	91 83       	std	Z+1, r25	; 0x01
    1ada:	a2 83       	std	Z+2, r26	; 0x02
    1adc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ade:	8e 01       	movw	r16, r28
    1ae0:	08 59       	subi	r16, 0x98	; 152
    1ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae4:	fe 01       	movw	r30, r28
    1ae6:	e4 59       	subi	r30, 0x94	; 148
    1ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aea:	60 81       	ld	r22, Z
    1aec:	71 81       	ldd	r23, Z+1	; 0x01
    1aee:	82 81       	ldd	r24, Z+2	; 0x02
    1af0:	93 81       	ldd	r25, Z+3	; 0x03
    1af2:	20 e0       	ldi	r18, 0x00	; 0
    1af4:	30 e0       	ldi	r19, 0x00	; 0
    1af6:	4a e7       	ldi	r20, 0x7A	; 122
    1af8:	55 e4       	ldi	r21, 0x45	; 69
    1afa:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1afe:	dc 01       	movw	r26, r24
    1b00:	cb 01       	movw	r24, r22
    1b02:	f8 01       	movw	r30, r16
    1b04:	80 83       	st	Z, r24
    1b06:	91 83       	std	Z+1, r25	; 0x01
    1b08:	a2 83       	std	Z+2, r26	; 0x02
    1b0a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b0c:	fe 01       	movw	r30, r28
    1b0e:	e8 59       	subi	r30, 0x98	; 152
    1b10:	ff 4f       	sbci	r31, 0xFF	; 255
    1b12:	60 81       	ld	r22, Z
    1b14:	71 81       	ldd	r23, Z+1	; 0x01
    1b16:	82 81       	ldd	r24, Z+2	; 0x02
    1b18:	93 81       	ldd	r25, Z+3	; 0x03
    1b1a:	20 e0       	ldi	r18, 0x00	; 0
    1b1c:	30 e0       	ldi	r19, 0x00	; 0
    1b1e:	40 e8       	ldi	r20, 0x80	; 128
    1b20:	5f e3       	ldi	r21, 0x3F	; 63
    1b22:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    1b26:	88 23       	and	r24, r24
    1b28:	44 f4       	brge	.+16     	; 0x1b3a <config+0x10ba>
		__ticks = 1;
    1b2a:	fe 01       	movw	r30, r28
    1b2c:	ea 59       	subi	r30, 0x9A	; 154
    1b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b30:	81 e0       	ldi	r24, 0x01	; 1
    1b32:	90 e0       	ldi	r25, 0x00	; 0
    1b34:	91 83       	std	Z+1, r25	; 0x01
    1b36:	80 83       	st	Z, r24
    1b38:	64 c0       	rjmp	.+200    	; 0x1c02 <config+0x1182>
	else if (__tmp > 65535)
    1b3a:	fe 01       	movw	r30, r28
    1b3c:	e8 59       	subi	r30, 0x98	; 152
    1b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b40:	60 81       	ld	r22, Z
    1b42:	71 81       	ldd	r23, Z+1	; 0x01
    1b44:	82 81       	ldd	r24, Z+2	; 0x02
    1b46:	93 81       	ldd	r25, Z+3	; 0x03
    1b48:	20 e0       	ldi	r18, 0x00	; 0
    1b4a:	3f ef       	ldi	r19, 0xFF	; 255
    1b4c:	4f e7       	ldi	r20, 0x7F	; 127
    1b4e:	57 e4       	ldi	r21, 0x47	; 71
    1b50:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    1b54:	18 16       	cp	r1, r24
    1b56:	0c f0       	brlt	.+2      	; 0x1b5a <config+0x10da>
    1b58:	43 c0       	rjmp	.+134    	; 0x1be0 <config+0x1160>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	e4 59       	subi	r30, 0x94	; 148
    1b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b60:	60 81       	ld	r22, Z
    1b62:	71 81       	ldd	r23, Z+1	; 0x01
    1b64:	82 81       	ldd	r24, Z+2	; 0x02
    1b66:	93 81       	ldd	r25, Z+3	; 0x03
    1b68:	20 e0       	ldi	r18, 0x00	; 0
    1b6a:	30 e0       	ldi	r19, 0x00	; 0
    1b6c:	40 e2       	ldi	r20, 0x20	; 32
    1b6e:	51 e4       	ldi	r21, 0x41	; 65
    1b70:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1b74:	dc 01       	movw	r26, r24
    1b76:	cb 01       	movw	r24, r22
    1b78:	8e 01       	movw	r16, r28
    1b7a:	0a 59       	subi	r16, 0x9A	; 154
    1b7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b7e:	bc 01       	movw	r22, r24
    1b80:	cd 01       	movw	r24, r26
    1b82:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1b86:	dc 01       	movw	r26, r24
    1b88:	cb 01       	movw	r24, r22
    1b8a:	f8 01       	movw	r30, r16
    1b8c:	91 83       	std	Z+1, r25	; 0x01
    1b8e:	80 83       	st	Z, r24
    1b90:	1f c0       	rjmp	.+62     	; 0x1bd0 <config+0x1150>
    1b92:	fe 01       	movw	r30, r28
    1b94:	ec 59       	subi	r30, 0x9C	; 156
    1b96:	ff 4f       	sbci	r31, 0xFF	; 255
    1b98:	80 e9       	ldi	r24, 0x90	; 144
    1b9a:	91 e0       	ldi	r25, 0x01	; 1
    1b9c:	91 83       	std	Z+1, r25	; 0x01
    1b9e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1ba0:	fe 01       	movw	r30, r28
    1ba2:	ec 59       	subi	r30, 0x9C	; 156
    1ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba6:	80 81       	ld	r24, Z
    1ba8:	91 81       	ldd	r25, Z+1	; 0x01
    1baa:	01 97       	sbiw	r24, 0x01	; 1
    1bac:	f1 f7       	brne	.-4      	; 0x1baa <config+0x112a>
    1bae:	fe 01       	movw	r30, r28
    1bb0:	ec 59       	subi	r30, 0x9C	; 156
    1bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb4:	91 83       	std	Z+1, r25	; 0x01
    1bb6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bb8:	de 01       	movw	r26, r28
    1bba:	aa 59       	subi	r26, 0x9A	; 154
    1bbc:	bf 4f       	sbci	r27, 0xFF	; 255
    1bbe:	fe 01       	movw	r30, r28
    1bc0:	ea 59       	subi	r30, 0x9A	; 154
    1bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc4:	80 81       	ld	r24, Z
    1bc6:	91 81       	ldd	r25, Z+1	; 0x01
    1bc8:	01 97       	sbiw	r24, 0x01	; 1
    1bca:	11 96       	adiw	r26, 0x01	; 1
    1bcc:	9c 93       	st	X, r25
    1bce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bd0:	fe 01       	movw	r30, r28
    1bd2:	ea 59       	subi	r30, 0x9A	; 154
    1bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd6:	80 81       	ld	r24, Z
    1bd8:	91 81       	ldd	r25, Z+1	; 0x01
    1bda:	00 97       	sbiw	r24, 0x00	; 0
    1bdc:	d1 f6       	brne	.-76     	; 0x1b92 <config+0x1112>
    1bde:	4b c0       	rjmp	.+150    	; 0x1c76 <config+0x11f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1be0:	8e 01       	movw	r16, r28
    1be2:	0a 59       	subi	r16, 0x9A	; 154
    1be4:	1f 4f       	sbci	r17, 0xFF	; 255
    1be6:	fe 01       	movw	r30, r28
    1be8:	e8 59       	subi	r30, 0x98	; 152
    1bea:	ff 4f       	sbci	r31, 0xFF	; 255
    1bec:	60 81       	ld	r22, Z
    1bee:	71 81       	ldd	r23, Z+1	; 0x01
    1bf0:	82 81       	ldd	r24, Z+2	; 0x02
    1bf2:	93 81       	ldd	r25, Z+3	; 0x03
    1bf4:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1bf8:	dc 01       	movw	r26, r24
    1bfa:	cb 01       	movw	r24, r22
    1bfc:	f8 01       	movw	r30, r16
    1bfe:	91 83       	std	Z+1, r25	; 0x01
    1c00:	80 83       	st	Z, r24
    1c02:	de 01       	movw	r26, r28
    1c04:	ae 59       	subi	r26, 0x9E	; 158
    1c06:	bf 4f       	sbci	r27, 0xFF	; 255
    1c08:	fe 01       	movw	r30, r28
    1c0a:	ea 59       	subi	r30, 0x9A	; 154
    1c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0e:	80 81       	ld	r24, Z
    1c10:	91 81       	ldd	r25, Z+1	; 0x01
    1c12:	11 96       	adiw	r26, 0x01	; 1
    1c14:	9c 93       	st	X, r25
    1c16:	8e 93       	st	-X, r24
    1c18:	fe 01       	movw	r30, r28
    1c1a:	ee 59       	subi	r30, 0x9E	; 158
    1c1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1e:	80 81       	ld	r24, Z
    1c20:	91 81       	ldd	r25, Z+1	; 0x01
    1c22:	01 97       	sbiw	r24, 0x01	; 1
    1c24:	f1 f7       	brne	.-4      	; 0x1c22 <config+0x11a2>
    1c26:	fe 01       	movw	r30, r28
    1c28:	ee 59       	subi	r30, 0x9E	; 158
    1c2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2c:	91 83       	std	Z+1, r25	; 0x01
    1c2e:	80 83       	st	Z, r24
    1c30:	22 c0       	rjmp	.+68     	; 0x1c76 <config+0x11f6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1c32:	8e 01       	movw	r16, r28
    1c34:	00 59       	subi	r16, 0x90	; 144
    1c36:	1f 4f       	sbci	r17, 0xFF	; 255
    1c38:	fe 01       	movw	r30, r28
    1c3a:	ef 58       	subi	r30, 0x8F	; 143
    1c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3e:	60 81       	ld	r22, Z
    1c40:	71 81       	ldd	r23, Z+1	; 0x01
    1c42:	82 81       	ldd	r24, Z+2	; 0x02
    1c44:	93 81       	ldd	r25, Z+3	; 0x03
    1c46:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1c4a:	dc 01       	movw	r26, r24
    1c4c:	cb 01       	movw	r24, r22
    1c4e:	f8 01       	movw	r30, r16
    1c50:	80 83       	st	Z, r24
    1c52:	de 01       	movw	r26, r28
    1c54:	af 59       	subi	r26, 0x9F	; 159
    1c56:	bf 4f       	sbci	r27, 0xFF	; 255
    1c58:	fe 01       	movw	r30, r28
    1c5a:	e0 59       	subi	r30, 0x90	; 144
    1c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5e:	80 81       	ld	r24, Z
    1c60:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1c62:	fe 01       	movw	r30, r28
    1c64:	ef 59       	subi	r30, 0x9F	; 159
    1c66:	ff 4f       	sbci	r31, 0xFF	; 255
    1c68:	80 81       	ld	r24, Z
    1c6a:	8a 95       	dec	r24
    1c6c:	f1 f7       	brne	.-4      	; 0x1c6a <config+0x11ea>
    1c6e:	fe 01       	movw	r30, r28
    1c70:	ef 59       	subi	r30, 0x9F	; 159
    1c72:	ff 4f       	sbci	r31, 0xFF	; 255
    1c74:	80 83       	st	Z, r24
	sbi(ps2port,ps2cmd); 
	
	
	
		
	for(i=0;i<8;i++)		//byte3
    1c76:	80 91 66 00 	lds	r24, 0x0066
    1c7a:	90 91 67 00 	lds	r25, 0x0067
    1c7e:	01 96       	adiw	r24, 0x01	; 1
    1c80:	90 93 67 00 	sts	0x0067, r25
    1c84:	80 93 66 00 	sts	0x0066, r24
    1c88:	80 91 66 00 	lds	r24, 0x0066
    1c8c:	90 91 67 00 	lds	r25, 0x0067
    1c90:	88 30       	cpi	r24, 0x08	; 8
    1c92:	91 05       	cpc	r25, r1
    1c94:	0c f4       	brge	.+2      	; 0x1c98 <config+0x1218>
    1c96:	88 cd       	rjmp	.-1264   	; 0x17a8 <config+0xd28>
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
		
	}
	sbi(ps2port,ps2cmd); 
    1c98:	a5 e3       	ldi	r26, 0x35	; 53
    1c9a:	b0 e0       	ldi	r27, 0x00	; 0
    1c9c:	e5 e3       	ldi	r30, 0x35	; 53
    1c9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ca0:	80 81       	ld	r24, Z
    1ca2:	84 60       	ori	r24, 0x04	; 4
    1ca4:	8c 93       	st	X, r24
	
	
	ps2byte = 0x01;			//byte4
    1ca6:	81 e0       	ldi	r24, 0x01	; 1
    1ca8:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)		
    1cac:	10 92 67 00 	sts	0x0067, r1
    1cb0:	10 92 66 00 	sts	0x0066, r1
    1cb4:	3f c2       	rjmp	.+1150   	; 0x2134 <config+0x16b4>
	{
		if(ps2byte&(_BV(i)))
    1cb6:	80 91 61 00 	lds	r24, 0x0061
    1cba:	28 2f       	mov	r18, r24
    1cbc:	30 e0       	ldi	r19, 0x00	; 0
    1cbe:	80 91 66 00 	lds	r24, 0x0066
    1cc2:	90 91 67 00 	lds	r25, 0x0067
    1cc6:	a9 01       	movw	r20, r18
    1cc8:	02 c0       	rjmp	.+4      	; 0x1cce <config+0x124e>
    1cca:	55 95       	asr	r21
    1ccc:	47 95       	ror	r20
    1cce:	8a 95       	dec	r24
    1cd0:	e2 f7       	brpl	.-8      	; 0x1cca <config+0x124a>
    1cd2:	ca 01       	movw	r24, r20
    1cd4:	81 70       	andi	r24, 0x01	; 1
    1cd6:	90 70       	andi	r25, 0x00	; 0
    1cd8:	88 23       	and	r24, r24
    1cda:	41 f0       	breq	.+16     	; 0x1cec <config+0x126c>
			sbi(ps2port,ps2cmd);
    1cdc:	a5 e3       	ldi	r26, 0x35	; 53
    1cde:	b0 e0       	ldi	r27, 0x00	; 0
    1ce0:	e5 e3       	ldi	r30, 0x35	; 53
    1ce2:	f0 e0       	ldi	r31, 0x00	; 0
    1ce4:	80 81       	ld	r24, Z
    1ce6:	84 60       	ori	r24, 0x04	; 4
    1ce8:	8c 93       	st	X, r24
    1cea:	07 c0       	rjmp	.+14     	; 0x1cfa <config+0x127a>
		else 
			cbi(ps2port,ps2cmd);
    1cec:	a5 e3       	ldi	r26, 0x35	; 53
    1cee:	b0 e0       	ldi	r27, 0x00	; 0
    1cf0:	e5 e3       	ldi	r30, 0x35	; 53
    1cf2:	f0 e0       	ldi	r31, 0x00	; 0
    1cf4:	80 81       	ld	r24, Z
    1cf6:	8b 7f       	andi	r24, 0xFB	; 251
    1cf8:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    1cfa:	a5 e3       	ldi	r26, 0x35	; 53
    1cfc:	b0 e0       	ldi	r27, 0x00	; 0
    1cfe:	e5 e3       	ldi	r30, 0x35	; 53
    1d00:	f0 e0       	ldi	r31, 0x00	; 0
    1d02:	80 81       	ld	r24, Z
    1d04:	8e 7f       	andi	r24, 0xFE	; 254
    1d06:	8c 93       	st	X, r24
    1d08:	fe 01       	movw	r30, r28
    1d0a:	e3 5a       	subi	r30, 0xA3	; 163
    1d0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0e:	80 e0       	ldi	r24, 0x00	; 0
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	a0 e8       	ldi	r26, 0x80	; 128
    1d14:	bf e3       	ldi	r27, 0x3F	; 63
    1d16:	80 83       	st	Z, r24
    1d18:	91 83       	std	Z+1, r25	; 0x01
    1d1a:	a2 83       	std	Z+2, r26	; 0x02
    1d1c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1d1e:	8e 01       	movw	r16, r28
    1d20:	07 5a       	subi	r16, 0xA7	; 167
    1d22:	1f 4f       	sbci	r17, 0xFF	; 255
    1d24:	fe 01       	movw	r30, r28
    1d26:	e3 5a       	subi	r30, 0xA3	; 163
    1d28:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2a:	60 81       	ld	r22, Z
    1d2c:	71 81       	ldd	r23, Z+1	; 0x01
    1d2e:	82 81       	ldd	r24, Z+2	; 0x02
    1d30:	93 81       	ldd	r25, Z+3	; 0x03
    1d32:	2b ea       	ldi	r18, 0xAB	; 171
    1d34:	3a ea       	ldi	r19, 0xAA	; 170
    1d36:	4a ea       	ldi	r20, 0xAA	; 170
    1d38:	50 e4       	ldi	r21, 0x40	; 64
    1d3a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1d3e:	dc 01       	movw	r26, r24
    1d40:	cb 01       	movw	r24, r22
    1d42:	f8 01       	movw	r30, r16
    1d44:	80 83       	st	Z, r24
    1d46:	91 83       	std	Z+1, r25	; 0x01
    1d48:	a2 83       	std	Z+2, r26	; 0x02
    1d4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	e7 5a       	subi	r30, 0xA7	; 167
    1d50:	ff 4f       	sbci	r31, 0xFF	; 255
    1d52:	60 81       	ld	r22, Z
    1d54:	71 81       	ldd	r23, Z+1	; 0x01
    1d56:	82 81       	ldd	r24, Z+2	; 0x02
    1d58:	93 81       	ldd	r25, Z+3	; 0x03
    1d5a:	20 e0       	ldi	r18, 0x00	; 0
    1d5c:	30 e0       	ldi	r19, 0x00	; 0
    1d5e:	40 e8       	ldi	r20, 0x80	; 128
    1d60:	5f e3       	ldi	r21, 0x3F	; 63
    1d62:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    1d66:	88 23       	and	r24, r24
    1d68:	34 f4       	brge	.+12     	; 0x1d76 <config+0x12f6>
		__ticks = 1;
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	e8 5a       	subi	r30, 0xA8	; 168
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	81 e0       	ldi	r24, 0x01	; 1
    1d72:	80 83       	st	Z, r24
    1d74:	e0 c0       	rjmp	.+448    	; 0x1f36 <config+0x14b6>
	else if (__tmp > 255)
    1d76:	fe 01       	movw	r30, r28
    1d78:	e7 5a       	subi	r30, 0xA7	; 167
    1d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7c:	60 81       	ld	r22, Z
    1d7e:	71 81       	ldd	r23, Z+1	; 0x01
    1d80:	82 81       	ldd	r24, Z+2	; 0x02
    1d82:	93 81       	ldd	r25, Z+3	; 0x03
    1d84:	20 e0       	ldi	r18, 0x00	; 0
    1d86:	30 e0       	ldi	r19, 0x00	; 0
    1d88:	4f e7       	ldi	r20, 0x7F	; 127
    1d8a:	53 e4       	ldi	r21, 0x43	; 67
    1d8c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    1d90:	18 16       	cp	r1, r24
    1d92:	0c f0       	brlt	.+2      	; 0x1d96 <config+0x1316>
    1d94:	c0 c0       	rjmp	.+384    	; 0x1f16 <config+0x1496>
	{
		_delay_ms(__us / 1000.0);
    1d96:	fe 01       	movw	r30, r28
    1d98:	e3 5a       	subi	r30, 0xA3	; 163
    1d9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d9c:	60 81       	ld	r22, Z
    1d9e:	71 81       	ldd	r23, Z+1	; 0x01
    1da0:	82 81       	ldd	r24, Z+2	; 0x02
    1da2:	93 81       	ldd	r25, Z+3	; 0x03
    1da4:	20 e0       	ldi	r18, 0x00	; 0
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	4a e7       	ldi	r20, 0x7A	; 122
    1daa:	54 e4       	ldi	r21, 0x44	; 68
    1dac:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    1db0:	dc 01       	movw	r26, r24
    1db2:	cb 01       	movw	r24, r22
    1db4:	fe 01       	movw	r30, r28
    1db6:	ec 5a       	subi	r30, 0xAC	; 172
    1db8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dba:	80 83       	st	Z, r24
    1dbc:	91 83       	std	Z+1, r25	; 0x01
    1dbe:	a2 83       	std	Z+2, r26	; 0x02
    1dc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dc2:	8e 01       	movw	r16, r28
    1dc4:	00 5b       	subi	r16, 0xB0	; 176
    1dc6:	1f 4f       	sbci	r17, 0xFF	; 255
    1dc8:	fe 01       	movw	r30, r28
    1dca:	ec 5a       	subi	r30, 0xAC	; 172
    1dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dce:	60 81       	ld	r22, Z
    1dd0:	71 81       	ldd	r23, Z+1	; 0x01
    1dd2:	82 81       	ldd	r24, Z+2	; 0x02
    1dd4:	93 81       	ldd	r25, Z+3	; 0x03
    1dd6:	20 e0       	ldi	r18, 0x00	; 0
    1dd8:	30 e0       	ldi	r19, 0x00	; 0
    1dda:	4a e7       	ldi	r20, 0x7A	; 122
    1ddc:	55 e4       	ldi	r21, 0x45	; 69
    1dde:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1de2:	dc 01       	movw	r26, r24
    1de4:	cb 01       	movw	r24, r22
    1de6:	f8 01       	movw	r30, r16
    1de8:	80 83       	st	Z, r24
    1dea:	91 83       	std	Z+1, r25	; 0x01
    1dec:	a2 83       	std	Z+2, r26	; 0x02
    1dee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1df0:	fe 01       	movw	r30, r28
    1df2:	e0 5b       	subi	r30, 0xB0	; 176
    1df4:	ff 4f       	sbci	r31, 0xFF	; 255
    1df6:	60 81       	ld	r22, Z
    1df8:	71 81       	ldd	r23, Z+1	; 0x01
    1dfa:	82 81       	ldd	r24, Z+2	; 0x02
    1dfc:	93 81       	ldd	r25, Z+3	; 0x03
    1dfe:	20 e0       	ldi	r18, 0x00	; 0
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	40 e8       	ldi	r20, 0x80	; 128
    1e04:	5f e3       	ldi	r21, 0x3F	; 63
    1e06:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    1e0a:	88 23       	and	r24, r24
    1e0c:	44 f4       	brge	.+16     	; 0x1e1e <config+0x139e>
		__ticks = 1;
    1e0e:	fe 01       	movw	r30, r28
    1e10:	e2 5b       	subi	r30, 0xB2	; 178
    1e12:	ff 4f       	sbci	r31, 0xFF	; 255
    1e14:	81 e0       	ldi	r24, 0x01	; 1
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	91 83       	std	Z+1, r25	; 0x01
    1e1a:	80 83       	st	Z, r24
    1e1c:	64 c0       	rjmp	.+200    	; 0x1ee6 <config+0x1466>
	else if (__tmp > 65535)
    1e1e:	fe 01       	movw	r30, r28
    1e20:	e0 5b       	subi	r30, 0xB0	; 176
    1e22:	ff 4f       	sbci	r31, 0xFF	; 255
    1e24:	60 81       	ld	r22, Z
    1e26:	71 81       	ldd	r23, Z+1	; 0x01
    1e28:	82 81       	ldd	r24, Z+2	; 0x02
    1e2a:	93 81       	ldd	r25, Z+3	; 0x03
    1e2c:	20 e0       	ldi	r18, 0x00	; 0
    1e2e:	3f ef       	ldi	r19, 0xFF	; 255
    1e30:	4f e7       	ldi	r20, 0x7F	; 127
    1e32:	57 e4       	ldi	r21, 0x47	; 71
    1e34:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    1e38:	18 16       	cp	r1, r24
    1e3a:	0c f0       	brlt	.+2      	; 0x1e3e <config+0x13be>
    1e3c:	43 c0       	rjmp	.+134    	; 0x1ec4 <config+0x1444>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e3e:	fe 01       	movw	r30, r28
    1e40:	ec 5a       	subi	r30, 0xAC	; 172
    1e42:	ff 4f       	sbci	r31, 0xFF	; 255
    1e44:	60 81       	ld	r22, Z
    1e46:	71 81       	ldd	r23, Z+1	; 0x01
    1e48:	82 81       	ldd	r24, Z+2	; 0x02
    1e4a:	93 81       	ldd	r25, Z+3	; 0x03
    1e4c:	20 e0       	ldi	r18, 0x00	; 0
    1e4e:	30 e0       	ldi	r19, 0x00	; 0
    1e50:	40 e2       	ldi	r20, 0x20	; 32
    1e52:	51 e4       	ldi	r21, 0x41	; 65
    1e54:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1e58:	dc 01       	movw	r26, r24
    1e5a:	cb 01       	movw	r24, r22
    1e5c:	8e 01       	movw	r16, r28
    1e5e:	02 5b       	subi	r16, 0xB2	; 178
    1e60:	1f 4f       	sbci	r17, 0xFF	; 255
    1e62:	bc 01       	movw	r22, r24
    1e64:	cd 01       	movw	r24, r26
    1e66:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1e6a:	dc 01       	movw	r26, r24
    1e6c:	cb 01       	movw	r24, r22
    1e6e:	f8 01       	movw	r30, r16
    1e70:	91 83       	std	Z+1, r25	; 0x01
    1e72:	80 83       	st	Z, r24
    1e74:	1f c0       	rjmp	.+62     	; 0x1eb4 <config+0x1434>
    1e76:	fe 01       	movw	r30, r28
    1e78:	e4 5b       	subi	r30, 0xB4	; 180
    1e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7c:	80 e9       	ldi	r24, 0x90	; 144
    1e7e:	91 e0       	ldi	r25, 0x01	; 1
    1e80:	91 83       	std	Z+1, r25	; 0x01
    1e82:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1e84:	fe 01       	movw	r30, r28
    1e86:	e4 5b       	subi	r30, 0xB4	; 180
    1e88:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8a:	80 81       	ld	r24, Z
    1e8c:	91 81       	ldd	r25, Z+1	; 0x01
    1e8e:	01 97       	sbiw	r24, 0x01	; 1
    1e90:	f1 f7       	brne	.-4      	; 0x1e8e <config+0x140e>
    1e92:	fe 01       	movw	r30, r28
    1e94:	e4 5b       	subi	r30, 0xB4	; 180
    1e96:	ff 4f       	sbci	r31, 0xFF	; 255
    1e98:	91 83       	std	Z+1, r25	; 0x01
    1e9a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e9c:	de 01       	movw	r26, r28
    1e9e:	a2 5b       	subi	r26, 0xB2	; 178
    1ea0:	bf 4f       	sbci	r27, 0xFF	; 255
    1ea2:	fe 01       	movw	r30, r28
    1ea4:	e2 5b       	subi	r30, 0xB2	; 178
    1ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea8:	80 81       	ld	r24, Z
    1eaa:	91 81       	ldd	r25, Z+1	; 0x01
    1eac:	01 97       	sbiw	r24, 0x01	; 1
    1eae:	11 96       	adiw	r26, 0x01	; 1
    1eb0:	9c 93       	st	X, r25
    1eb2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1eb4:	fe 01       	movw	r30, r28
    1eb6:	e2 5b       	subi	r30, 0xB2	; 178
    1eb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eba:	80 81       	ld	r24, Z
    1ebc:	91 81       	ldd	r25, Z+1	; 0x01
    1ebe:	00 97       	sbiw	r24, 0x00	; 0
    1ec0:	d1 f6       	brne	.-76     	; 0x1e76 <config+0x13f6>
    1ec2:	4b c0       	rjmp	.+150    	; 0x1f5a <config+0x14da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ec4:	8e 01       	movw	r16, r28
    1ec6:	02 5b       	subi	r16, 0xB2	; 178
    1ec8:	1f 4f       	sbci	r17, 0xFF	; 255
    1eca:	fe 01       	movw	r30, r28
    1ecc:	e0 5b       	subi	r30, 0xB0	; 176
    1ece:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed0:	60 81       	ld	r22, Z
    1ed2:	71 81       	ldd	r23, Z+1	; 0x01
    1ed4:	82 81       	ldd	r24, Z+2	; 0x02
    1ed6:	93 81       	ldd	r25, Z+3	; 0x03
    1ed8:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1edc:	dc 01       	movw	r26, r24
    1ede:	cb 01       	movw	r24, r22
    1ee0:	f8 01       	movw	r30, r16
    1ee2:	91 83       	std	Z+1, r25	; 0x01
    1ee4:	80 83       	st	Z, r24
    1ee6:	de 01       	movw	r26, r28
    1ee8:	a6 5b       	subi	r26, 0xB6	; 182
    1eea:	bf 4f       	sbci	r27, 0xFF	; 255
    1eec:	fe 01       	movw	r30, r28
    1eee:	e2 5b       	subi	r30, 0xB2	; 178
    1ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef2:	80 81       	ld	r24, Z
    1ef4:	91 81       	ldd	r25, Z+1	; 0x01
    1ef6:	11 96       	adiw	r26, 0x01	; 1
    1ef8:	9c 93       	st	X, r25
    1efa:	8e 93       	st	-X, r24
    1efc:	fe 01       	movw	r30, r28
    1efe:	e6 5b       	subi	r30, 0xB6	; 182
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	80 81       	ld	r24, Z
    1f04:	91 81       	ldd	r25, Z+1	; 0x01
    1f06:	01 97       	sbiw	r24, 0x01	; 1
    1f08:	f1 f7       	brne	.-4      	; 0x1f06 <config+0x1486>
    1f0a:	fe 01       	movw	r30, r28
    1f0c:	e6 5b       	subi	r30, 0xB6	; 182
    1f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f10:	91 83       	std	Z+1, r25	; 0x01
    1f12:	80 83       	st	Z, r24
    1f14:	22 c0       	rjmp	.+68     	; 0x1f5a <config+0x14da>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1f16:	8e 01       	movw	r16, r28
    1f18:	08 5a       	subi	r16, 0xA8	; 168
    1f1a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f1c:	fe 01       	movw	r30, r28
    1f1e:	e7 5a       	subi	r30, 0xA7	; 167
    1f20:	ff 4f       	sbci	r31, 0xFF	; 255
    1f22:	60 81       	ld	r22, Z
    1f24:	71 81       	ldd	r23, Z+1	; 0x01
    1f26:	82 81       	ldd	r24, Z+2	; 0x02
    1f28:	93 81       	ldd	r25, Z+3	; 0x03
    1f2a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    1f2e:	dc 01       	movw	r26, r24
    1f30:	cb 01       	movw	r24, r22
    1f32:	f8 01       	movw	r30, r16
    1f34:	80 83       	st	Z, r24
    1f36:	de 01       	movw	r26, r28
    1f38:	a7 5b       	subi	r26, 0xB7	; 183
    1f3a:	bf 4f       	sbci	r27, 0xFF	; 255
    1f3c:	fe 01       	movw	r30, r28
    1f3e:	e8 5a       	subi	r30, 0xA8	; 168
    1f40:	ff 4f       	sbci	r31, 0xFF	; 255
    1f42:	80 81       	ld	r24, Z
    1f44:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1f46:	fe 01       	movw	r30, r28
    1f48:	e7 5b       	subi	r30, 0xB7	; 183
    1f4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4c:	80 81       	ld	r24, Z
    1f4e:	8a 95       	dec	r24
    1f50:	f1 f7       	brne	.-4      	; 0x1f4e <config+0x14ce>
    1f52:	fe 01       	movw	r30, r28
    1f54:	e7 5b       	subi	r30, 0xB7	; 183
    1f56:	ff 4f       	sbci	r31, 0xFF	; 255
    1f58:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    1f5a:	a5 e3       	ldi	r26, 0x35	; 53
    1f5c:	b0 e0       	ldi	r27, 0x00	; 0
    1f5e:	e5 e3       	ldi	r30, 0x35	; 53
    1f60:	f0 e0       	ldi	r31, 0x00	; 0
    1f62:	80 81       	ld	r24, Z
    1f64:	81 60       	ori	r24, 0x01	; 1
    1f66:	8c 93       	st	X, r24
    1f68:	fe 01       	movw	r30, r28
    1f6a:	eb 5b       	subi	r30, 0xBB	; 187
    1f6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6e:	80 e0       	ldi	r24, 0x00	; 0
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	a0 e8       	ldi	r26, 0x80	; 128
    1f74:	bf e3       	ldi	r27, 0x3F	; 63
    1f76:	80 83       	st	Z, r24
    1f78:	91 83       	std	Z+1, r25	; 0x01
    1f7a:	a2 83       	std	Z+2, r26	; 0x02
    1f7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1f7e:	8e 01       	movw	r16, r28
    1f80:	0f 5b       	subi	r16, 0xBF	; 191
    1f82:	1f 4f       	sbci	r17, 0xFF	; 255
    1f84:	fe 01       	movw	r30, r28
    1f86:	eb 5b       	subi	r30, 0xBB	; 187
    1f88:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8a:	60 81       	ld	r22, Z
    1f8c:	71 81       	ldd	r23, Z+1	; 0x01
    1f8e:	82 81       	ldd	r24, Z+2	; 0x02
    1f90:	93 81       	ldd	r25, Z+3	; 0x03
    1f92:	2b ea       	ldi	r18, 0xAB	; 171
    1f94:	3a ea       	ldi	r19, 0xAA	; 170
    1f96:	4a ea       	ldi	r20, 0xAA	; 170
    1f98:	50 e4       	ldi	r21, 0x40	; 64
    1f9a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    1f9e:	dc 01       	movw	r26, r24
    1fa0:	cb 01       	movw	r24, r22
    1fa2:	f8 01       	movw	r30, r16
    1fa4:	80 83       	st	Z, r24
    1fa6:	91 83       	std	Z+1, r25	; 0x01
    1fa8:	a2 83       	std	Z+2, r26	; 0x02
    1faa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fac:	fe 01       	movw	r30, r28
    1fae:	ef 5b       	subi	r30, 0xBF	; 191
    1fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb2:	60 81       	ld	r22, Z
    1fb4:	71 81       	ldd	r23, Z+1	; 0x01
    1fb6:	82 81       	ldd	r24, Z+2	; 0x02
    1fb8:	93 81       	ldd	r25, Z+3	; 0x03
    1fba:	20 e0       	ldi	r18, 0x00	; 0
    1fbc:	30 e0       	ldi	r19, 0x00	; 0
    1fbe:	40 e8       	ldi	r20, 0x80	; 128
    1fc0:	5f e3       	ldi	r21, 0x3F	; 63
    1fc2:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    1fc6:	88 23       	and	r24, r24
    1fc8:	34 f4       	brge	.+12     	; 0x1fd6 <config+0x1556>
		__ticks = 1;
    1fca:	81 e0       	ldi	r24, 0x01	; 1
    1fcc:	fe 01       	movw	r30, r28
    1fce:	e0 5c       	subi	r30, 0xC0	; 192
    1fd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd2:	80 83       	st	Z, r24
    1fd4:	9d c0       	rjmp	.+314    	; 0x2110 <config+0x1690>
	else if (__tmp > 255)
    1fd6:	fe 01       	movw	r30, r28
    1fd8:	ef 5b       	subi	r30, 0xBF	; 191
    1fda:	ff 4f       	sbci	r31, 0xFF	; 255
    1fdc:	60 81       	ld	r22, Z
    1fde:	71 81       	ldd	r23, Z+1	; 0x01
    1fe0:	82 81       	ldd	r24, Z+2	; 0x02
    1fe2:	93 81       	ldd	r25, Z+3	; 0x03
    1fe4:	20 e0       	ldi	r18, 0x00	; 0
    1fe6:	30 e0       	ldi	r19, 0x00	; 0
    1fe8:	4f e7       	ldi	r20, 0x7F	; 127
    1fea:	53 e4       	ldi	r21, 0x43	; 67
    1fec:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    1ff0:	18 16       	cp	r1, r24
    1ff2:	0c f0       	brlt	.+2      	; 0x1ff6 <config+0x1576>
    1ff4:	7e c0       	rjmp	.+252    	; 0x20f2 <config+0x1672>
	{
		_delay_ms(__us / 1000.0);
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	eb 5b       	subi	r30, 0xBB	; 187
    1ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffc:	60 81       	ld	r22, Z
    1ffe:	71 81       	ldd	r23, Z+1	; 0x01
    2000:	82 81       	ldd	r24, Z+2	; 0x02
    2002:	93 81       	ldd	r25, Z+3	; 0x03
    2004:	20 e0       	ldi	r18, 0x00	; 0
    2006:	30 e0       	ldi	r19, 0x00	; 0
    2008:	4a e7       	ldi	r20, 0x7A	; 122
    200a:	54 e4       	ldi	r21, 0x44	; 68
    200c:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    2010:	dc 01       	movw	r26, r24
    2012:	cb 01       	movw	r24, r22
    2014:	8c af       	std	Y+60, r24	; 0x3c
    2016:	9d af       	std	Y+61, r25	; 0x3d
    2018:	ae af       	std	Y+62, r26	; 0x3e
    201a:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    201c:	6c ad       	ldd	r22, Y+60	; 0x3c
    201e:	7d ad       	ldd	r23, Y+61	; 0x3d
    2020:	8e ad       	ldd	r24, Y+62	; 0x3e
    2022:	9f ad       	ldd	r25, Y+63	; 0x3f
    2024:	20 e0       	ldi	r18, 0x00	; 0
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	4a e7       	ldi	r20, 0x7A	; 122
    202a:	55 e4       	ldi	r21, 0x45	; 69
    202c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2030:	dc 01       	movw	r26, r24
    2032:	cb 01       	movw	r24, r22
    2034:	88 af       	std	Y+56, r24	; 0x38
    2036:	99 af       	std	Y+57, r25	; 0x39
    2038:	aa af       	std	Y+58, r26	; 0x3a
    203a:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    203c:	68 ad       	ldd	r22, Y+56	; 0x38
    203e:	79 ad       	ldd	r23, Y+57	; 0x39
    2040:	8a ad       	ldd	r24, Y+58	; 0x3a
    2042:	9b ad       	ldd	r25, Y+59	; 0x3b
    2044:	20 e0       	ldi	r18, 0x00	; 0
    2046:	30 e0       	ldi	r19, 0x00	; 0
    2048:	40 e8       	ldi	r20, 0x80	; 128
    204a:	5f e3       	ldi	r21, 0x3F	; 63
    204c:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    2050:	88 23       	and	r24, r24
    2052:	2c f4       	brge	.+10     	; 0x205e <config+0x15de>
		__ticks = 1;
    2054:	81 e0       	ldi	r24, 0x01	; 1
    2056:	90 e0       	ldi	r25, 0x00	; 0
    2058:	9f ab       	std	Y+55, r25	; 0x37
    205a:	8e ab       	std	Y+54, r24	; 0x36
    205c:	3f c0       	rjmp	.+126    	; 0x20dc <config+0x165c>
	else if (__tmp > 65535)
    205e:	68 ad       	ldd	r22, Y+56	; 0x38
    2060:	79 ad       	ldd	r23, Y+57	; 0x39
    2062:	8a ad       	ldd	r24, Y+58	; 0x3a
    2064:	9b ad       	ldd	r25, Y+59	; 0x3b
    2066:	20 e0       	ldi	r18, 0x00	; 0
    2068:	3f ef       	ldi	r19, 0xFF	; 255
    206a:	4f e7       	ldi	r20, 0x7F	; 127
    206c:	57 e4       	ldi	r21, 0x47	; 71
    206e:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2072:	18 16       	cp	r1, r24
    2074:	4c f5       	brge	.+82     	; 0x20c8 <config+0x1648>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2076:	6c ad       	ldd	r22, Y+60	; 0x3c
    2078:	7d ad       	ldd	r23, Y+61	; 0x3d
    207a:	8e ad       	ldd	r24, Y+62	; 0x3e
    207c:	9f ad       	ldd	r25, Y+63	; 0x3f
    207e:	20 e0       	ldi	r18, 0x00	; 0
    2080:	30 e0       	ldi	r19, 0x00	; 0
    2082:	40 e2       	ldi	r20, 0x20	; 32
    2084:	51 e4       	ldi	r21, 0x41	; 65
    2086:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    208a:	dc 01       	movw	r26, r24
    208c:	cb 01       	movw	r24, r22
    208e:	bc 01       	movw	r22, r24
    2090:	cd 01       	movw	r24, r26
    2092:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2096:	dc 01       	movw	r26, r24
    2098:	cb 01       	movw	r24, r22
    209a:	9f ab       	std	Y+55, r25	; 0x37
    209c:	8e ab       	std	Y+54, r24	; 0x36
    209e:	0f c0       	rjmp	.+30     	; 0x20be <config+0x163e>
    20a0:	80 e9       	ldi	r24, 0x90	; 144
    20a2:	91 e0       	ldi	r25, 0x01	; 1
    20a4:	9d ab       	std	Y+53, r25	; 0x35
    20a6:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    20a8:	8c a9       	ldd	r24, Y+52	; 0x34
    20aa:	9d a9       	ldd	r25, Y+53	; 0x35
    20ac:	01 97       	sbiw	r24, 0x01	; 1
    20ae:	f1 f7       	brne	.-4      	; 0x20ac <config+0x162c>
    20b0:	9d ab       	std	Y+53, r25	; 0x35
    20b2:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20b4:	8e a9       	ldd	r24, Y+54	; 0x36
    20b6:	9f a9       	ldd	r25, Y+55	; 0x37
    20b8:	01 97       	sbiw	r24, 0x01	; 1
    20ba:	9f ab       	std	Y+55, r25	; 0x37
    20bc:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20be:	8e a9       	ldd	r24, Y+54	; 0x36
    20c0:	9f a9       	ldd	r25, Y+55	; 0x37
    20c2:	00 97       	sbiw	r24, 0x00	; 0
    20c4:	69 f7       	brne	.-38     	; 0x20a0 <config+0x1620>
    20c6:	2d c0       	rjmp	.+90     	; 0x2122 <config+0x16a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c8:	68 ad       	ldd	r22, Y+56	; 0x38
    20ca:	79 ad       	ldd	r23, Y+57	; 0x39
    20cc:	8a ad       	ldd	r24, Y+58	; 0x3a
    20ce:	9b ad       	ldd	r25, Y+59	; 0x3b
    20d0:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    20d4:	dc 01       	movw	r26, r24
    20d6:	cb 01       	movw	r24, r22
    20d8:	9f ab       	std	Y+55, r25	; 0x37
    20da:	8e ab       	std	Y+54, r24	; 0x36
    20dc:	8e a9       	ldd	r24, Y+54	; 0x36
    20de:	9f a9       	ldd	r25, Y+55	; 0x37
    20e0:	9b ab       	std	Y+51, r25	; 0x33
    20e2:	8a ab       	std	Y+50, r24	; 0x32
    20e4:	8a a9       	ldd	r24, Y+50	; 0x32
    20e6:	9b a9       	ldd	r25, Y+51	; 0x33
    20e8:	01 97       	sbiw	r24, 0x01	; 1
    20ea:	f1 f7       	brne	.-4      	; 0x20e8 <config+0x1668>
    20ec:	9b ab       	std	Y+51, r25	; 0x33
    20ee:	8a ab       	std	Y+50, r24	; 0x32
    20f0:	18 c0       	rjmp	.+48     	; 0x2122 <config+0x16a2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    20f2:	fe 01       	movw	r30, r28
    20f4:	ef 5b       	subi	r30, 0xBF	; 191
    20f6:	ff 4f       	sbci	r31, 0xFF	; 255
    20f8:	60 81       	ld	r22, Z
    20fa:	71 81       	ldd	r23, Z+1	; 0x01
    20fc:	82 81       	ldd	r24, Z+2	; 0x02
    20fe:	93 81       	ldd	r25, Z+3	; 0x03
    2100:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2104:	dc 01       	movw	r26, r24
    2106:	cb 01       	movw	r24, r22
    2108:	fe 01       	movw	r30, r28
    210a:	e0 5c       	subi	r30, 0xC0	; 192
    210c:	ff 4f       	sbci	r31, 0xFF	; 255
    210e:	80 83       	st	Z, r24
    2110:	fe 01       	movw	r30, r28
    2112:	e0 5c       	subi	r30, 0xC0	; 192
    2114:	ff 4f       	sbci	r31, 0xFF	; 255
    2116:	80 81       	ld	r24, Z
    2118:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    211a:	89 a9       	ldd	r24, Y+49	; 0x31
    211c:	8a 95       	dec	r24
    211e:	f1 f7       	brne	.-4      	; 0x211c <config+0x169c>
    2120:	89 ab       	std	Y+49, r24	; 0x31
	sbi(ps2port,ps2cmd); 
	
	
	ps2byte = 0x01;			//byte4
	
	for(i=0;i<8;i++)		
    2122:	80 91 66 00 	lds	r24, 0x0066
    2126:	90 91 67 00 	lds	r25, 0x0067
    212a:	01 96       	adiw	r24, 0x01	; 1
    212c:	90 93 67 00 	sts	0x0067, r25
    2130:	80 93 66 00 	sts	0x0066, r24
    2134:	80 91 66 00 	lds	r24, 0x0066
    2138:	90 91 67 00 	lds	r25, 0x0067
    213c:	88 30       	cpi	r24, 0x08	; 8
    213e:	91 05       	cpc	r25, r1
    2140:	0c f4       	brge	.+2      	; 0x2144 <config+0x16c4>
    2142:	b9 cd       	rjmp	.-1166   	; 0x1cb6 <config+0x1236>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    2144:	a5 e3       	ldi	r26, 0x35	; 53
    2146:	b0 e0       	ldi	r27, 0x00	; 0
    2148:	e5 e3       	ldi	r30, 0x35	; 53
    214a:	f0 e0       	ldi	r31, 0x00	; 0
    214c:	80 81       	ld	r24, Z
    214e:	84 60       	ori	r24, 0x04	; 4
    2150:	8c 93       	st	X, r24
	
	
	
   
	ps2data5=0;
    2152:	10 92 6a 00 	sts	0x006A, r1
	for(i=0;i<8;i++) // 5 byte
    2156:	10 92 67 00 	sts	0x0067, r1
    215a:	10 92 66 00 	sts	0x0066, r1
    215e:	9a c1       	rjmp	.+820    	; 0x2494 <config+0x1a14>
	{
		cbi(ps2port,ps2cmd);
    2160:	a5 e3       	ldi	r26, 0x35	; 53
    2162:	b0 e0       	ldi	r27, 0x00	; 0
    2164:	e5 e3       	ldi	r30, 0x35	; 53
    2166:	f0 e0       	ldi	r31, 0x00	; 0
    2168:	80 81       	ld	r24, Z
    216a:	8b 7f       	andi	r24, 0xFB	; 251
    216c:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk);
    216e:	a5 e3       	ldi	r26, 0x35	; 53
    2170:	b0 e0       	ldi	r27, 0x00	; 0
    2172:	e5 e3       	ldi	r30, 0x35	; 53
    2174:	f0 e0       	ldi	r31, 0x00	; 0
    2176:	80 81       	ld	r24, Z
    2178:	8e 7f       	andi	r24, 0xFE	; 254
    217a:	8c 93       	st	X, r24
    217c:	80 e0       	ldi	r24, 0x00	; 0
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	a0 e8       	ldi	r26, 0x80	; 128
    2182:	bf e3       	ldi	r27, 0x3F	; 63
    2184:	8d a7       	std	Y+45, r24	; 0x2d
    2186:	9e a7       	std	Y+46, r25	; 0x2e
    2188:	af a7       	std	Y+47, r26	; 0x2f
    218a:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    218c:	6d a5       	ldd	r22, Y+45	; 0x2d
    218e:	7e a5       	ldd	r23, Y+46	; 0x2e
    2190:	8f a5       	ldd	r24, Y+47	; 0x2f
    2192:	98 a9       	ldd	r25, Y+48	; 0x30
    2194:	2b ea       	ldi	r18, 0xAB	; 171
    2196:	3a ea       	ldi	r19, 0xAA	; 170
    2198:	4a ea       	ldi	r20, 0xAA	; 170
    219a:	50 e4       	ldi	r21, 0x40	; 64
    219c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    21a0:	dc 01       	movw	r26, r24
    21a2:	cb 01       	movw	r24, r22
    21a4:	89 a7       	std	Y+41, r24	; 0x29
    21a6:	9a a7       	std	Y+42, r25	; 0x2a
    21a8:	ab a7       	std	Y+43, r26	; 0x2b
    21aa:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    21ac:	69 a5       	ldd	r22, Y+41	; 0x29
    21ae:	7a a5       	ldd	r23, Y+42	; 0x2a
    21b0:	8b a5       	ldd	r24, Y+43	; 0x2b
    21b2:	9c a5       	ldd	r25, Y+44	; 0x2c
    21b4:	20 e0       	ldi	r18, 0x00	; 0
    21b6:	30 e0       	ldi	r19, 0x00	; 0
    21b8:	40 e8       	ldi	r20, 0x80	; 128
    21ba:	5f e3       	ldi	r21, 0x3F	; 63
    21bc:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    21c0:	88 23       	and	r24, r24
    21c2:	1c f4       	brge	.+6      	; 0x21ca <config+0x174a>
		__ticks = 1;
    21c4:	81 e0       	ldi	r24, 0x01	; 1
    21c6:	88 a7       	std	Y+40, r24	; 0x28
    21c8:	91 c0       	rjmp	.+290    	; 0x22ec <config+0x186c>
	else if (__tmp > 255)
    21ca:	69 a5       	ldd	r22, Y+41	; 0x29
    21cc:	7a a5       	ldd	r23, Y+42	; 0x2a
    21ce:	8b a5       	ldd	r24, Y+43	; 0x2b
    21d0:	9c a5       	ldd	r25, Y+44	; 0x2c
    21d2:	20 e0       	ldi	r18, 0x00	; 0
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	4f e7       	ldi	r20, 0x7F	; 127
    21d8:	53 e4       	ldi	r21, 0x43	; 67
    21da:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    21de:	18 16       	cp	r1, r24
    21e0:	0c f0       	brlt	.+2      	; 0x21e4 <config+0x1764>
    21e2:	7b c0       	rjmp	.+246    	; 0x22da <config+0x185a>
	{
		_delay_ms(__us / 1000.0);
    21e4:	6d a5       	ldd	r22, Y+45	; 0x2d
    21e6:	7e a5       	ldd	r23, Y+46	; 0x2e
    21e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    21ea:	98 a9       	ldd	r25, Y+48	; 0x30
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	4a e7       	ldi	r20, 0x7A	; 122
    21f2:	54 e4       	ldi	r21, 0x44	; 68
    21f4:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    21f8:	dc 01       	movw	r26, r24
    21fa:	cb 01       	movw	r24, r22
    21fc:	8c a3       	std	Y+36, r24	; 0x24
    21fe:	9d a3       	std	Y+37, r25	; 0x25
    2200:	ae a3       	std	Y+38, r26	; 0x26
    2202:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2204:	6c a1       	ldd	r22, Y+36	; 0x24
    2206:	7d a1       	ldd	r23, Y+37	; 0x25
    2208:	8e a1       	ldd	r24, Y+38	; 0x26
    220a:	9f a1       	ldd	r25, Y+39	; 0x27
    220c:	20 e0       	ldi	r18, 0x00	; 0
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	4a e7       	ldi	r20, 0x7A	; 122
    2212:	55 e4       	ldi	r21, 0x45	; 69
    2214:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2218:	dc 01       	movw	r26, r24
    221a:	cb 01       	movw	r24, r22
    221c:	88 a3       	std	Y+32, r24	; 0x20
    221e:	99 a3       	std	Y+33, r25	; 0x21
    2220:	aa a3       	std	Y+34, r26	; 0x22
    2222:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    2224:	68 a1       	ldd	r22, Y+32	; 0x20
    2226:	79 a1       	ldd	r23, Y+33	; 0x21
    2228:	8a a1       	ldd	r24, Y+34	; 0x22
    222a:	9b a1       	ldd	r25, Y+35	; 0x23
    222c:	20 e0       	ldi	r18, 0x00	; 0
    222e:	30 e0       	ldi	r19, 0x00	; 0
    2230:	40 e8       	ldi	r20, 0x80	; 128
    2232:	5f e3       	ldi	r21, 0x3F	; 63
    2234:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    2238:	88 23       	and	r24, r24
    223a:	2c f4       	brge	.+10     	; 0x2246 <config+0x17c6>
		__ticks = 1;
    223c:	81 e0       	ldi	r24, 0x01	; 1
    223e:	90 e0       	ldi	r25, 0x00	; 0
    2240:	9f 8f       	std	Y+31, r25	; 0x1f
    2242:	8e 8f       	std	Y+30, r24	; 0x1e
    2244:	3f c0       	rjmp	.+126    	; 0x22c4 <config+0x1844>
	else if (__tmp > 65535)
    2246:	68 a1       	ldd	r22, Y+32	; 0x20
    2248:	79 a1       	ldd	r23, Y+33	; 0x21
    224a:	8a a1       	ldd	r24, Y+34	; 0x22
    224c:	9b a1       	ldd	r25, Y+35	; 0x23
    224e:	20 e0       	ldi	r18, 0x00	; 0
    2250:	3f ef       	ldi	r19, 0xFF	; 255
    2252:	4f e7       	ldi	r20, 0x7F	; 127
    2254:	57 e4       	ldi	r21, 0x47	; 71
    2256:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    225a:	18 16       	cp	r1, r24
    225c:	4c f5       	brge	.+82     	; 0x22b0 <config+0x1830>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    225e:	6c a1       	ldd	r22, Y+36	; 0x24
    2260:	7d a1       	ldd	r23, Y+37	; 0x25
    2262:	8e a1       	ldd	r24, Y+38	; 0x26
    2264:	9f a1       	ldd	r25, Y+39	; 0x27
    2266:	20 e0       	ldi	r18, 0x00	; 0
    2268:	30 e0       	ldi	r19, 0x00	; 0
    226a:	40 e2       	ldi	r20, 0x20	; 32
    226c:	51 e4       	ldi	r21, 0x41	; 65
    226e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2272:	dc 01       	movw	r26, r24
    2274:	cb 01       	movw	r24, r22
    2276:	bc 01       	movw	r22, r24
    2278:	cd 01       	movw	r24, r26
    227a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    227e:	dc 01       	movw	r26, r24
    2280:	cb 01       	movw	r24, r22
    2282:	9f 8f       	std	Y+31, r25	; 0x1f
    2284:	8e 8f       	std	Y+30, r24	; 0x1e
    2286:	0f c0       	rjmp	.+30     	; 0x22a6 <config+0x1826>
    2288:	80 e9       	ldi	r24, 0x90	; 144
    228a:	91 e0       	ldi	r25, 0x01	; 1
    228c:	9d 8f       	std	Y+29, r25	; 0x1d
    228e:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2290:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2292:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2294:	01 97       	sbiw	r24, 0x01	; 1
    2296:	f1 f7       	brne	.-4      	; 0x2294 <config+0x1814>
    2298:	9d 8f       	std	Y+29, r25	; 0x1d
    229a:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    229c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    229e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    22a0:	01 97       	sbiw	r24, 0x01	; 1
    22a2:	9f 8f       	std	Y+31, r25	; 0x1f
    22a4:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22a6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    22a8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    22aa:	00 97       	sbiw	r24, 0x00	; 0
    22ac:	69 f7       	brne	.-38     	; 0x2288 <config+0x1808>
    22ae:	24 c0       	rjmp	.+72     	; 0x22f8 <config+0x1878>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22b0:	68 a1       	ldd	r22, Y+32	; 0x20
    22b2:	79 a1       	ldd	r23, Y+33	; 0x21
    22b4:	8a a1       	ldd	r24, Y+34	; 0x22
    22b6:	9b a1       	ldd	r25, Y+35	; 0x23
    22b8:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    22bc:	dc 01       	movw	r26, r24
    22be:	cb 01       	movw	r24, r22
    22c0:	9f 8f       	std	Y+31, r25	; 0x1f
    22c2:	8e 8f       	std	Y+30, r24	; 0x1e
    22c4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    22c6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    22c8:	9b 8f       	std	Y+27, r25	; 0x1b
    22ca:	8a 8f       	std	Y+26, r24	; 0x1a
    22cc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    22ce:	9b 8d       	ldd	r25, Y+27	; 0x1b
    22d0:	01 97       	sbiw	r24, 0x01	; 1
    22d2:	f1 f7       	brne	.-4      	; 0x22d0 <config+0x1850>
    22d4:	9b 8f       	std	Y+27, r25	; 0x1b
    22d6:	8a 8f       	std	Y+26, r24	; 0x1a
    22d8:	0f c0       	rjmp	.+30     	; 0x22f8 <config+0x1878>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    22da:	69 a5       	ldd	r22, Y+41	; 0x29
    22dc:	7a a5       	ldd	r23, Y+42	; 0x2a
    22de:	8b a5       	ldd	r24, Y+43	; 0x2b
    22e0:	9c a5       	ldd	r25, Y+44	; 0x2c
    22e2:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    22e6:	dc 01       	movw	r26, r24
    22e8:	cb 01       	movw	r24, r22
    22ea:	88 a7       	std	Y+40, r24	; 0x28
    22ec:	88 a5       	ldd	r24, Y+40	; 0x28
    22ee:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    22f0:	89 8d       	ldd	r24, Y+25	; 0x19
    22f2:	8a 95       	dec	r24
    22f4:	f1 f7       	brne	.-4      	; 0x22f2 <config+0x1872>
    22f6:	89 8f       	std	Y+25, r24	; 0x19
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
    22f8:	a5 e3       	ldi	r26, 0x35	; 53
    22fa:	b0 e0       	ldi	r27, 0x00	; 0
    22fc:	e5 e3       	ldi	r30, 0x35	; 53
    22fe:	f0 e0       	ldi	r31, 0x00	; 0
    2300:	80 81       	ld	r24, Z
    2302:	81 60       	ori	r24, 0x01	; 1
    2304:	8c 93       	st	X, r24
    2306:	80 e0       	ldi	r24, 0x00	; 0
    2308:	90 e0       	ldi	r25, 0x00	; 0
    230a:	a0 e8       	ldi	r26, 0x80	; 128
    230c:	bf e3       	ldi	r27, 0x3F	; 63
    230e:	8d 8b       	std	Y+21, r24	; 0x15
    2310:	9e 8b       	std	Y+22, r25	; 0x16
    2312:	af 8b       	std	Y+23, r26	; 0x17
    2314:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2316:	6d 89       	ldd	r22, Y+21	; 0x15
    2318:	7e 89       	ldd	r23, Y+22	; 0x16
    231a:	8f 89       	ldd	r24, Y+23	; 0x17
    231c:	98 8d       	ldd	r25, Y+24	; 0x18
    231e:	2b ea       	ldi	r18, 0xAB	; 171
    2320:	3a ea       	ldi	r19, 0xAA	; 170
    2322:	4a ea       	ldi	r20, 0xAA	; 170
    2324:	50 e4       	ldi	r21, 0x40	; 64
    2326:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    232a:	dc 01       	movw	r26, r24
    232c:	cb 01       	movw	r24, r22
    232e:	89 8b       	std	Y+17, r24	; 0x11
    2330:	9a 8b       	std	Y+18, r25	; 0x12
    2332:	ab 8b       	std	Y+19, r26	; 0x13
    2334:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    2336:	69 89       	ldd	r22, Y+17	; 0x11
    2338:	7a 89       	ldd	r23, Y+18	; 0x12
    233a:	8b 89       	ldd	r24, Y+19	; 0x13
    233c:	9c 89       	ldd	r25, Y+20	; 0x14
    233e:	20 e0       	ldi	r18, 0x00	; 0
    2340:	30 e0       	ldi	r19, 0x00	; 0
    2342:	40 e8       	ldi	r20, 0x80	; 128
    2344:	5f e3       	ldi	r21, 0x3F	; 63
    2346:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    234a:	88 23       	and	r24, r24
    234c:	1c f4       	brge	.+6      	; 0x2354 <config+0x18d4>
		__ticks = 1;
    234e:	81 e0       	ldi	r24, 0x01	; 1
    2350:	88 8b       	std	Y+16, r24	; 0x10
    2352:	91 c0       	rjmp	.+290    	; 0x2476 <config+0x19f6>
	else if (__tmp > 255)
    2354:	69 89       	ldd	r22, Y+17	; 0x11
    2356:	7a 89       	ldd	r23, Y+18	; 0x12
    2358:	8b 89       	ldd	r24, Y+19	; 0x13
    235a:	9c 89       	ldd	r25, Y+20	; 0x14
    235c:	20 e0       	ldi	r18, 0x00	; 0
    235e:	30 e0       	ldi	r19, 0x00	; 0
    2360:	4f e7       	ldi	r20, 0x7F	; 127
    2362:	53 e4       	ldi	r21, 0x43	; 67
    2364:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2368:	18 16       	cp	r1, r24
    236a:	0c f0       	brlt	.+2      	; 0x236e <config+0x18ee>
    236c:	7b c0       	rjmp	.+246    	; 0x2464 <config+0x19e4>
	{
		_delay_ms(__us / 1000.0);
    236e:	6d 89       	ldd	r22, Y+21	; 0x15
    2370:	7e 89       	ldd	r23, Y+22	; 0x16
    2372:	8f 89       	ldd	r24, Y+23	; 0x17
    2374:	98 8d       	ldd	r25, Y+24	; 0x18
    2376:	20 e0       	ldi	r18, 0x00	; 0
    2378:	30 e0       	ldi	r19, 0x00	; 0
    237a:	4a e7       	ldi	r20, 0x7A	; 122
    237c:	54 e4       	ldi	r21, 0x44	; 68
    237e:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    2382:	dc 01       	movw	r26, r24
    2384:	cb 01       	movw	r24, r22
    2386:	8c 87       	std	Y+12, r24	; 0x0c
    2388:	9d 87       	std	Y+13, r25	; 0x0d
    238a:	ae 87       	std	Y+14, r26	; 0x0e
    238c:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    238e:	6c 85       	ldd	r22, Y+12	; 0x0c
    2390:	7d 85       	ldd	r23, Y+13	; 0x0d
    2392:	8e 85       	ldd	r24, Y+14	; 0x0e
    2394:	9f 85       	ldd	r25, Y+15	; 0x0f
    2396:	20 e0       	ldi	r18, 0x00	; 0
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	4a e7       	ldi	r20, 0x7A	; 122
    239c:	55 e4       	ldi	r21, 0x45	; 69
    239e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    23a2:	dc 01       	movw	r26, r24
    23a4:	cb 01       	movw	r24, r22
    23a6:	88 87       	std	Y+8, r24	; 0x08
    23a8:	99 87       	std	Y+9, r25	; 0x09
    23aa:	aa 87       	std	Y+10, r26	; 0x0a
    23ac:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    23ae:	68 85       	ldd	r22, Y+8	; 0x08
    23b0:	79 85       	ldd	r23, Y+9	; 0x09
    23b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    23b4:	9b 85       	ldd	r25, Y+11	; 0x0b
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	40 e8       	ldi	r20, 0x80	; 128
    23bc:	5f e3       	ldi	r21, 0x3F	; 63
    23be:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    23c2:	88 23       	and	r24, r24
    23c4:	2c f4       	brge	.+10     	; 0x23d0 <config+0x1950>
		__ticks = 1;
    23c6:	81 e0       	ldi	r24, 0x01	; 1
    23c8:	90 e0       	ldi	r25, 0x00	; 0
    23ca:	9f 83       	std	Y+7, r25	; 0x07
    23cc:	8e 83       	std	Y+6, r24	; 0x06
    23ce:	3f c0       	rjmp	.+126    	; 0x244e <config+0x19ce>
	else if (__tmp > 65535)
    23d0:	68 85       	ldd	r22, Y+8	; 0x08
    23d2:	79 85       	ldd	r23, Y+9	; 0x09
    23d4:	8a 85       	ldd	r24, Y+10	; 0x0a
    23d6:	9b 85       	ldd	r25, Y+11	; 0x0b
    23d8:	20 e0       	ldi	r18, 0x00	; 0
    23da:	3f ef       	ldi	r19, 0xFF	; 255
    23dc:	4f e7       	ldi	r20, 0x7F	; 127
    23de:	57 e4       	ldi	r21, 0x47	; 71
    23e0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    23e4:	18 16       	cp	r1, r24
    23e6:	4c f5       	brge	.+82     	; 0x243a <config+0x19ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23e8:	6c 85       	ldd	r22, Y+12	; 0x0c
    23ea:	7d 85       	ldd	r23, Y+13	; 0x0d
    23ec:	8e 85       	ldd	r24, Y+14	; 0x0e
    23ee:	9f 85       	ldd	r25, Y+15	; 0x0f
    23f0:	20 e0       	ldi	r18, 0x00	; 0
    23f2:	30 e0       	ldi	r19, 0x00	; 0
    23f4:	40 e2       	ldi	r20, 0x20	; 32
    23f6:	51 e4       	ldi	r21, 0x41	; 65
    23f8:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    23fc:	dc 01       	movw	r26, r24
    23fe:	cb 01       	movw	r24, r22
    2400:	bc 01       	movw	r22, r24
    2402:	cd 01       	movw	r24, r26
    2404:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2408:	dc 01       	movw	r26, r24
    240a:	cb 01       	movw	r24, r22
    240c:	9f 83       	std	Y+7, r25	; 0x07
    240e:	8e 83       	std	Y+6, r24	; 0x06
    2410:	0f c0       	rjmp	.+30     	; 0x2430 <config+0x19b0>
    2412:	80 e9       	ldi	r24, 0x90	; 144
    2414:	91 e0       	ldi	r25, 0x01	; 1
    2416:	9d 83       	std	Y+5, r25	; 0x05
    2418:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    241a:	8c 81       	ldd	r24, Y+4	; 0x04
    241c:	9d 81       	ldd	r25, Y+5	; 0x05
    241e:	01 97       	sbiw	r24, 0x01	; 1
    2420:	f1 f7       	brne	.-4      	; 0x241e <config+0x199e>
    2422:	9d 83       	std	Y+5, r25	; 0x05
    2424:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2426:	8e 81       	ldd	r24, Y+6	; 0x06
    2428:	9f 81       	ldd	r25, Y+7	; 0x07
    242a:	01 97       	sbiw	r24, 0x01	; 1
    242c:	9f 83       	std	Y+7, r25	; 0x07
    242e:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2430:	8e 81       	ldd	r24, Y+6	; 0x06
    2432:	9f 81       	ldd	r25, Y+7	; 0x07
    2434:	00 97       	sbiw	r24, 0x00	; 0
    2436:	69 f7       	brne	.-38     	; 0x2412 <config+0x1992>
    2438:	24 c0       	rjmp	.+72     	; 0x2482 <config+0x1a02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    243a:	68 85       	ldd	r22, Y+8	; 0x08
    243c:	79 85       	ldd	r23, Y+9	; 0x09
    243e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2440:	9b 85       	ldd	r25, Y+11	; 0x0b
    2442:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2446:	dc 01       	movw	r26, r24
    2448:	cb 01       	movw	r24, r22
    244a:	9f 83       	std	Y+7, r25	; 0x07
    244c:	8e 83       	std	Y+6, r24	; 0x06
    244e:	8e 81       	ldd	r24, Y+6	; 0x06
    2450:	9f 81       	ldd	r25, Y+7	; 0x07
    2452:	9b 83       	std	Y+3, r25	; 0x03
    2454:	8a 83       	std	Y+2, r24	; 0x02
    2456:	8a 81       	ldd	r24, Y+2	; 0x02
    2458:	9b 81       	ldd	r25, Y+3	; 0x03
    245a:	01 97       	sbiw	r24, 0x01	; 1
    245c:	f1 f7       	brne	.-4      	; 0x245a <config+0x19da>
    245e:	9b 83       	std	Y+3, r25	; 0x03
    2460:	8a 83       	std	Y+2, r24	; 0x02
    2462:	0f c0       	rjmp	.+30     	; 0x2482 <config+0x1a02>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2464:	69 89       	ldd	r22, Y+17	; 0x11
    2466:	7a 89       	ldd	r23, Y+18	; 0x12
    2468:	8b 89       	ldd	r24, Y+19	; 0x13
    246a:	9c 89       	ldd	r25, Y+20	; 0x14
    246c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2470:	dc 01       	movw	r26, r24
    2472:	cb 01       	movw	r24, r22
    2474:	88 8b       	std	Y+16, r24	; 0x10
    2476:	88 89       	ldd	r24, Y+16	; 0x10
    2478:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    247a:	89 81       	ldd	r24, Y+1	; 0x01
    247c:	8a 95       	dec	r24
    247e:	f1 f7       	brne	.-4      	; 0x247c <config+0x19fc>
    2480:	89 83       	std	Y+1, r24	; 0x01
	
	
	
   
	ps2data5=0;
	for(i=0;i<8;i++) // 5 byte
    2482:	80 91 66 00 	lds	r24, 0x0066
    2486:	90 91 67 00 	lds	r25, 0x0067
    248a:	01 96       	adiw	r24, 0x01	; 1
    248c:	90 93 67 00 	sts	0x0067, r25
    2490:	80 93 66 00 	sts	0x0066, r24
    2494:	80 91 66 00 	lds	r24, 0x0066
    2498:	90 91 67 00 	lds	r25, 0x0067
    249c:	88 30       	cpi	r24, 0x08	; 8
    249e:	91 05       	cpc	r25, r1
    24a0:	0c f4       	brge	.+2      	; 0x24a4 <config+0x1a24>
    24a2:	5e ce       	rjmp	.-836    	; 0x2160 <config+0x16e0>
		cbi(ps2port,ps2clk);
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    24a4:	a5 e3       	ldi	r26, 0x35	; 53
    24a6:	b0 e0       	ldi	r27, 0x00	; 0
    24a8:	e5 e3       	ldi	r30, 0x35	; 53
    24aa:	f0 e0       	ldi	r31, 0x00	; 0
    24ac:	80 81       	ld	r24, Z
    24ae:	84 60       	ori	r24, 0x04	; 4
    24b0:	8c 93       	st	X, r24
	
	sbi(ps2port,ps2att);
    24b2:	a5 e3       	ldi	r26, 0x35	; 53
    24b4:	b0 e0       	ldi	r27, 0x00	; 0
    24b6:	e5 e3       	ldi	r30, 0x35	; 53
    24b8:	f0 e0       	ldi	r31, 0x00	; 0
    24ba:	80 81       	ld	r24, Z
    24bc:	80 61       	ori	r24, 0x10	; 16
    24be:	8c 93       	st	X, r24

}
    24c0:	c8 5f       	subi	r28, 0xF8	; 248
    24c2:	de 4f       	sbci	r29, 0xFE	; 254
    24c4:	0f b6       	in	r0, 0x3f	; 63
    24c6:	f8 94       	cli
    24c8:	de bf       	out	0x3e, r29	; 62
    24ca:	0f be       	out	0x3f, r0	; 63
    24cc:	cd bf       	out	0x3d, r28	; 61
    24ce:	cf 91       	pop	r28
    24d0:	df 91       	pop	r29
    24d2:	1f 91       	pop	r17
    24d4:	0f 91       	pop	r16
    24d6:	08 95       	ret

000024d8 <analog>:

void analog()	//to set permanent  analog mode
{
    24d8:	0f 93       	push	r16
    24da:	1f 93       	push	r17
    24dc:	df 93       	push	r29
    24de:	cf 93       	push	r28
    24e0:	cd b7       	in	r28, 0x3d	; 61
    24e2:	de b7       	in	r29, 0x3e	; 62
    24e4:	c8 50       	subi	r28, 0x08	; 8
    24e6:	d1 40       	sbci	r29, 0x01	; 1
    24e8:	0f b6       	in	r0, 0x3f	; 63
    24ea:	f8 94       	cli
    24ec:	de bf       	out	0x3e, r29	; 62
    24ee:	0f be       	out	0x3f, r0	; 63
    24f0:	cd bf       	out	0x3d, r28	; 61
	sbi(ps2port,ps2cmd);
    24f2:	a5 e3       	ldi	r26, 0x35	; 53
    24f4:	b0 e0       	ldi	r27, 0x00	; 0
    24f6:	e5 e3       	ldi	r30, 0x35	; 53
    24f8:	f0 e0       	ldi	r31, 0x00	; 0
    24fa:	80 81       	ld	r24, Z
    24fc:	84 60       	ori	r24, 0x04	; 4
    24fe:	8c 93       	st	X, r24
	sbi(ps2port,ps2clk);
    2500:	a5 e3       	ldi	r26, 0x35	; 53
    2502:	b0 e0       	ldi	r27, 0x00	; 0
    2504:	e5 e3       	ldi	r30, 0x35	; 53
    2506:	f0 e0       	ldi	r31, 0x00	; 0
    2508:	80 81       	ld	r24, Z
    250a:	81 60       	ori	r24, 0x01	; 1
    250c:	8c 93       	st	X, r24
	cbi(ps2port,ps2att);
    250e:	a5 e3       	ldi	r26, 0x35	; 53
    2510:	b0 e0       	ldi	r27, 0x00	; 0
    2512:	e5 e3       	ldi	r30, 0x35	; 53
    2514:	f0 e0       	ldi	r31, 0x00	; 0
    2516:	80 81       	ld	r24, Z
    2518:	8f 7e       	andi	r24, 0xEF	; 239
    251a:	8c 93       	st	X, r24
    251c:	fe 01       	movw	r30, r28
    251e:	eb 5f       	subi	r30, 0xFB	; 251
    2520:	fe 4f       	sbci	r31, 0xFE	; 254
    2522:	80 e0       	ldi	r24, 0x00	; 0
    2524:	90 e0       	ldi	r25, 0x00	; 0
    2526:	a0 ef       	ldi	r26, 0xF0	; 240
    2528:	b1 e4       	ldi	r27, 0x41	; 65
    252a:	80 83       	st	Z, r24
    252c:	91 83       	std	Z+1, r25	; 0x01
    252e:	a2 83       	std	Z+2, r26	; 0x02
    2530:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2532:	8e 01       	movw	r16, r28
    2534:	0f 5f       	subi	r16, 0xFF	; 255
    2536:	1e 4f       	sbci	r17, 0xFE	; 254
    2538:	fe 01       	movw	r30, r28
    253a:	eb 5f       	subi	r30, 0xFB	; 251
    253c:	fe 4f       	sbci	r31, 0xFE	; 254
    253e:	60 81       	ld	r22, Z
    2540:	71 81       	ldd	r23, Z+1	; 0x01
    2542:	82 81       	ldd	r24, Z+2	; 0x02
    2544:	93 81       	ldd	r25, Z+3	; 0x03
    2546:	2b ea       	ldi	r18, 0xAB	; 171
    2548:	3a ea       	ldi	r19, 0xAA	; 170
    254a:	4a ea       	ldi	r20, 0xAA	; 170
    254c:	50 e4       	ldi	r21, 0x40	; 64
    254e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2552:	dc 01       	movw	r26, r24
    2554:	cb 01       	movw	r24, r22
    2556:	f8 01       	movw	r30, r16
    2558:	80 83       	st	Z, r24
    255a:	91 83       	std	Z+1, r25	; 0x01
    255c:	a2 83       	std	Z+2, r26	; 0x02
    255e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2560:	fe 01       	movw	r30, r28
    2562:	ef 5f       	subi	r30, 0xFF	; 255
    2564:	fe 4f       	sbci	r31, 0xFE	; 254
    2566:	60 81       	ld	r22, Z
    2568:	71 81       	ldd	r23, Z+1	; 0x01
    256a:	82 81       	ldd	r24, Z+2	; 0x02
    256c:	93 81       	ldd	r25, Z+3	; 0x03
    256e:	20 e0       	ldi	r18, 0x00	; 0
    2570:	30 e0       	ldi	r19, 0x00	; 0
    2572:	40 e8       	ldi	r20, 0x80	; 128
    2574:	5f e3       	ldi	r21, 0x3F	; 63
    2576:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    257a:	88 23       	and	r24, r24
    257c:	34 f4       	brge	.+12     	; 0x258a <analog+0xb2>
		__ticks = 1;
    257e:	fe 01       	movw	r30, r28
    2580:	e0 50       	subi	r30, 0x00	; 0
    2582:	ff 4f       	sbci	r31, 0xFF	; 255
    2584:	81 e0       	ldi	r24, 0x01	; 1
    2586:	80 83       	st	Z, r24
    2588:	e0 c0       	rjmp	.+448    	; 0x274a <analog+0x272>
	else if (__tmp > 255)
    258a:	fe 01       	movw	r30, r28
    258c:	ef 5f       	subi	r30, 0xFF	; 255
    258e:	fe 4f       	sbci	r31, 0xFE	; 254
    2590:	60 81       	ld	r22, Z
    2592:	71 81       	ldd	r23, Z+1	; 0x01
    2594:	82 81       	ldd	r24, Z+2	; 0x02
    2596:	93 81       	ldd	r25, Z+3	; 0x03
    2598:	20 e0       	ldi	r18, 0x00	; 0
    259a:	30 e0       	ldi	r19, 0x00	; 0
    259c:	4f e7       	ldi	r20, 0x7F	; 127
    259e:	53 e4       	ldi	r21, 0x43	; 67
    25a0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    25a4:	18 16       	cp	r1, r24
    25a6:	0c f0       	brlt	.+2      	; 0x25aa <analog+0xd2>
    25a8:	c0 c0       	rjmp	.+384    	; 0x272a <analog+0x252>
	{
		_delay_ms(__us / 1000.0);
    25aa:	fe 01       	movw	r30, r28
    25ac:	eb 5f       	subi	r30, 0xFB	; 251
    25ae:	fe 4f       	sbci	r31, 0xFE	; 254
    25b0:	60 81       	ld	r22, Z
    25b2:	71 81       	ldd	r23, Z+1	; 0x01
    25b4:	82 81       	ldd	r24, Z+2	; 0x02
    25b6:	93 81       	ldd	r25, Z+3	; 0x03
    25b8:	20 e0       	ldi	r18, 0x00	; 0
    25ba:	30 e0       	ldi	r19, 0x00	; 0
    25bc:	4a e7       	ldi	r20, 0x7A	; 122
    25be:	54 e4       	ldi	r21, 0x44	; 68
    25c0:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    25c4:	dc 01       	movw	r26, r24
    25c6:	cb 01       	movw	r24, r22
    25c8:	fe 01       	movw	r30, r28
    25ca:	e4 50       	subi	r30, 0x04	; 4
    25cc:	ff 4f       	sbci	r31, 0xFF	; 255
    25ce:	80 83       	st	Z, r24
    25d0:	91 83       	std	Z+1, r25	; 0x01
    25d2:	a2 83       	std	Z+2, r26	; 0x02
    25d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25d6:	8e 01       	movw	r16, r28
    25d8:	08 50       	subi	r16, 0x08	; 8
    25da:	1f 4f       	sbci	r17, 0xFF	; 255
    25dc:	fe 01       	movw	r30, r28
    25de:	e4 50       	subi	r30, 0x04	; 4
    25e0:	ff 4f       	sbci	r31, 0xFF	; 255
    25e2:	60 81       	ld	r22, Z
    25e4:	71 81       	ldd	r23, Z+1	; 0x01
    25e6:	82 81       	ldd	r24, Z+2	; 0x02
    25e8:	93 81       	ldd	r25, Z+3	; 0x03
    25ea:	20 e0       	ldi	r18, 0x00	; 0
    25ec:	30 e0       	ldi	r19, 0x00	; 0
    25ee:	4a e7       	ldi	r20, 0x7A	; 122
    25f0:	55 e4       	ldi	r21, 0x45	; 69
    25f2:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    25f6:	dc 01       	movw	r26, r24
    25f8:	cb 01       	movw	r24, r22
    25fa:	f8 01       	movw	r30, r16
    25fc:	80 83       	st	Z, r24
    25fe:	91 83       	std	Z+1, r25	; 0x01
    2600:	a2 83       	std	Z+2, r26	; 0x02
    2602:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2604:	fe 01       	movw	r30, r28
    2606:	e8 50       	subi	r30, 0x08	; 8
    2608:	ff 4f       	sbci	r31, 0xFF	; 255
    260a:	60 81       	ld	r22, Z
    260c:	71 81       	ldd	r23, Z+1	; 0x01
    260e:	82 81       	ldd	r24, Z+2	; 0x02
    2610:	93 81       	ldd	r25, Z+3	; 0x03
    2612:	20 e0       	ldi	r18, 0x00	; 0
    2614:	30 e0       	ldi	r19, 0x00	; 0
    2616:	40 e8       	ldi	r20, 0x80	; 128
    2618:	5f e3       	ldi	r21, 0x3F	; 63
    261a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    261e:	88 23       	and	r24, r24
    2620:	44 f4       	brge	.+16     	; 0x2632 <analog+0x15a>
		__ticks = 1;
    2622:	fe 01       	movw	r30, r28
    2624:	ea 50       	subi	r30, 0x0A	; 10
    2626:	ff 4f       	sbci	r31, 0xFF	; 255
    2628:	81 e0       	ldi	r24, 0x01	; 1
    262a:	90 e0       	ldi	r25, 0x00	; 0
    262c:	91 83       	std	Z+1, r25	; 0x01
    262e:	80 83       	st	Z, r24
    2630:	64 c0       	rjmp	.+200    	; 0x26fa <analog+0x222>
	else if (__tmp > 65535)
    2632:	fe 01       	movw	r30, r28
    2634:	e8 50       	subi	r30, 0x08	; 8
    2636:	ff 4f       	sbci	r31, 0xFF	; 255
    2638:	60 81       	ld	r22, Z
    263a:	71 81       	ldd	r23, Z+1	; 0x01
    263c:	82 81       	ldd	r24, Z+2	; 0x02
    263e:	93 81       	ldd	r25, Z+3	; 0x03
    2640:	20 e0       	ldi	r18, 0x00	; 0
    2642:	3f ef       	ldi	r19, 0xFF	; 255
    2644:	4f e7       	ldi	r20, 0x7F	; 127
    2646:	57 e4       	ldi	r21, 0x47	; 71
    2648:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    264c:	18 16       	cp	r1, r24
    264e:	0c f0       	brlt	.+2      	; 0x2652 <analog+0x17a>
    2650:	43 c0       	rjmp	.+134    	; 0x26d8 <analog+0x200>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2652:	fe 01       	movw	r30, r28
    2654:	e4 50       	subi	r30, 0x04	; 4
    2656:	ff 4f       	sbci	r31, 0xFF	; 255
    2658:	60 81       	ld	r22, Z
    265a:	71 81       	ldd	r23, Z+1	; 0x01
    265c:	82 81       	ldd	r24, Z+2	; 0x02
    265e:	93 81       	ldd	r25, Z+3	; 0x03
    2660:	20 e0       	ldi	r18, 0x00	; 0
    2662:	30 e0       	ldi	r19, 0x00	; 0
    2664:	40 e2       	ldi	r20, 0x20	; 32
    2666:	51 e4       	ldi	r21, 0x41	; 65
    2668:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    266c:	dc 01       	movw	r26, r24
    266e:	cb 01       	movw	r24, r22
    2670:	8e 01       	movw	r16, r28
    2672:	0a 50       	subi	r16, 0x0A	; 10
    2674:	1f 4f       	sbci	r17, 0xFF	; 255
    2676:	bc 01       	movw	r22, r24
    2678:	cd 01       	movw	r24, r26
    267a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    267e:	dc 01       	movw	r26, r24
    2680:	cb 01       	movw	r24, r22
    2682:	f8 01       	movw	r30, r16
    2684:	91 83       	std	Z+1, r25	; 0x01
    2686:	80 83       	st	Z, r24
    2688:	1f c0       	rjmp	.+62     	; 0x26c8 <analog+0x1f0>
    268a:	fe 01       	movw	r30, r28
    268c:	ec 50       	subi	r30, 0x0C	; 12
    268e:	ff 4f       	sbci	r31, 0xFF	; 255
    2690:	80 e9       	ldi	r24, 0x90	; 144
    2692:	91 e0       	ldi	r25, 0x01	; 1
    2694:	91 83       	std	Z+1, r25	; 0x01
    2696:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2698:	fe 01       	movw	r30, r28
    269a:	ec 50       	subi	r30, 0x0C	; 12
    269c:	ff 4f       	sbci	r31, 0xFF	; 255
    269e:	80 81       	ld	r24, Z
    26a0:	91 81       	ldd	r25, Z+1	; 0x01
    26a2:	01 97       	sbiw	r24, 0x01	; 1
    26a4:	f1 f7       	brne	.-4      	; 0x26a2 <analog+0x1ca>
    26a6:	fe 01       	movw	r30, r28
    26a8:	ec 50       	subi	r30, 0x0C	; 12
    26aa:	ff 4f       	sbci	r31, 0xFF	; 255
    26ac:	91 83       	std	Z+1, r25	; 0x01
    26ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26b0:	de 01       	movw	r26, r28
    26b2:	aa 50       	subi	r26, 0x0A	; 10
    26b4:	bf 4f       	sbci	r27, 0xFF	; 255
    26b6:	fe 01       	movw	r30, r28
    26b8:	ea 50       	subi	r30, 0x0A	; 10
    26ba:	ff 4f       	sbci	r31, 0xFF	; 255
    26bc:	80 81       	ld	r24, Z
    26be:	91 81       	ldd	r25, Z+1	; 0x01
    26c0:	01 97       	sbiw	r24, 0x01	; 1
    26c2:	11 96       	adiw	r26, 0x01	; 1
    26c4:	9c 93       	st	X, r25
    26c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26c8:	fe 01       	movw	r30, r28
    26ca:	ea 50       	subi	r30, 0x0A	; 10
    26cc:	ff 4f       	sbci	r31, 0xFF	; 255
    26ce:	80 81       	ld	r24, Z
    26d0:	91 81       	ldd	r25, Z+1	; 0x01
    26d2:	00 97       	sbiw	r24, 0x00	; 0
    26d4:	d1 f6       	brne	.-76     	; 0x268a <analog+0x1b2>
    26d6:	4b c0       	rjmp	.+150    	; 0x276e <analog+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26d8:	8e 01       	movw	r16, r28
    26da:	0a 50       	subi	r16, 0x0A	; 10
    26dc:	1f 4f       	sbci	r17, 0xFF	; 255
    26de:	fe 01       	movw	r30, r28
    26e0:	e8 50       	subi	r30, 0x08	; 8
    26e2:	ff 4f       	sbci	r31, 0xFF	; 255
    26e4:	60 81       	ld	r22, Z
    26e6:	71 81       	ldd	r23, Z+1	; 0x01
    26e8:	82 81       	ldd	r24, Z+2	; 0x02
    26ea:	93 81       	ldd	r25, Z+3	; 0x03
    26ec:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    26f0:	dc 01       	movw	r26, r24
    26f2:	cb 01       	movw	r24, r22
    26f4:	f8 01       	movw	r30, r16
    26f6:	91 83       	std	Z+1, r25	; 0x01
    26f8:	80 83       	st	Z, r24
    26fa:	de 01       	movw	r26, r28
    26fc:	ae 50       	subi	r26, 0x0E	; 14
    26fe:	bf 4f       	sbci	r27, 0xFF	; 255
    2700:	fe 01       	movw	r30, r28
    2702:	ea 50       	subi	r30, 0x0A	; 10
    2704:	ff 4f       	sbci	r31, 0xFF	; 255
    2706:	80 81       	ld	r24, Z
    2708:	91 81       	ldd	r25, Z+1	; 0x01
    270a:	11 96       	adiw	r26, 0x01	; 1
    270c:	9c 93       	st	X, r25
    270e:	8e 93       	st	-X, r24
    2710:	fe 01       	movw	r30, r28
    2712:	ee 50       	subi	r30, 0x0E	; 14
    2714:	ff 4f       	sbci	r31, 0xFF	; 255
    2716:	80 81       	ld	r24, Z
    2718:	91 81       	ldd	r25, Z+1	; 0x01
    271a:	01 97       	sbiw	r24, 0x01	; 1
    271c:	f1 f7       	brne	.-4      	; 0x271a <analog+0x242>
    271e:	fe 01       	movw	r30, r28
    2720:	ee 50       	subi	r30, 0x0E	; 14
    2722:	ff 4f       	sbci	r31, 0xFF	; 255
    2724:	91 83       	std	Z+1, r25	; 0x01
    2726:	80 83       	st	Z, r24
    2728:	22 c0       	rjmp	.+68     	; 0x276e <analog+0x296>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    272a:	8e 01       	movw	r16, r28
    272c:	00 50       	subi	r16, 0x00	; 0
    272e:	1f 4f       	sbci	r17, 0xFF	; 255
    2730:	fe 01       	movw	r30, r28
    2732:	ef 5f       	subi	r30, 0xFF	; 255
    2734:	fe 4f       	sbci	r31, 0xFE	; 254
    2736:	60 81       	ld	r22, Z
    2738:	71 81       	ldd	r23, Z+1	; 0x01
    273a:	82 81       	ldd	r24, Z+2	; 0x02
    273c:	93 81       	ldd	r25, Z+3	; 0x03
    273e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2742:	dc 01       	movw	r26, r24
    2744:	cb 01       	movw	r24, r22
    2746:	f8 01       	movw	r30, r16
    2748:	80 83       	st	Z, r24
    274a:	de 01       	movw	r26, r28
    274c:	af 50       	subi	r26, 0x0F	; 15
    274e:	bf 4f       	sbci	r27, 0xFF	; 255
    2750:	fe 01       	movw	r30, r28
    2752:	e0 50       	subi	r30, 0x00	; 0
    2754:	ff 4f       	sbci	r31, 0xFF	; 255
    2756:	80 81       	ld	r24, Z
    2758:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    275a:	fe 01       	movw	r30, r28
    275c:	ef 50       	subi	r30, 0x0F	; 15
    275e:	ff 4f       	sbci	r31, 0xFF	; 255
    2760:	80 81       	ld	r24, Z
    2762:	8a 95       	dec	r24
    2764:	f1 f7       	brne	.-4      	; 0x2762 <analog+0x28a>
    2766:	fe 01       	movw	r30, r28
    2768:	ef 50       	subi	r30, 0x0F	; 15
    276a:	ff 4f       	sbci	r31, 0xFF	; 255
    276c:	80 83       	st	Z, r24
	
	_delay_us(30);
	
	ps2byte = 0x01;			//byte1
    276e:	81 e0       	ldi	r24, 0x01	; 1
    2770:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)		
    2774:	10 92 67 00 	sts	0x0067, r1
    2778:	10 92 66 00 	sts	0x0066, r1
    277c:	8b c2       	rjmp	.+1302   	; 0x2c94 <analog+0x7bc>
	{
		if(ps2byte&(_BV(i)))
    277e:	80 91 61 00 	lds	r24, 0x0061
    2782:	28 2f       	mov	r18, r24
    2784:	30 e0       	ldi	r19, 0x00	; 0
    2786:	80 91 66 00 	lds	r24, 0x0066
    278a:	90 91 67 00 	lds	r25, 0x0067
    278e:	a9 01       	movw	r20, r18
    2790:	02 c0       	rjmp	.+4      	; 0x2796 <analog+0x2be>
    2792:	55 95       	asr	r21
    2794:	47 95       	ror	r20
    2796:	8a 95       	dec	r24
    2798:	e2 f7       	brpl	.-8      	; 0x2792 <analog+0x2ba>
    279a:	ca 01       	movw	r24, r20
    279c:	81 70       	andi	r24, 0x01	; 1
    279e:	90 70       	andi	r25, 0x00	; 0
    27a0:	88 23       	and	r24, r24
    27a2:	41 f0       	breq	.+16     	; 0x27b4 <analog+0x2dc>
			sbi(ps2port,ps2cmd);
    27a4:	a5 e3       	ldi	r26, 0x35	; 53
    27a6:	b0 e0       	ldi	r27, 0x00	; 0
    27a8:	e5 e3       	ldi	r30, 0x35	; 53
    27aa:	f0 e0       	ldi	r31, 0x00	; 0
    27ac:	80 81       	ld	r24, Z
    27ae:	84 60       	ori	r24, 0x04	; 4
    27b0:	8c 93       	st	X, r24
    27b2:	07 c0       	rjmp	.+14     	; 0x27c2 <analog+0x2ea>
		else 
			cbi(ps2port,ps2cmd);
    27b4:	a5 e3       	ldi	r26, 0x35	; 53
    27b6:	b0 e0       	ldi	r27, 0x00	; 0
    27b8:	e5 e3       	ldi	r30, 0x35	; 53
    27ba:	f0 e0       	ldi	r31, 0x00	; 0
    27bc:	80 81       	ld	r24, Z
    27be:	8b 7f       	andi	r24, 0xFB	; 251
    27c0:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    27c2:	a5 e3       	ldi	r26, 0x35	; 53
    27c4:	b0 e0       	ldi	r27, 0x00	; 0
    27c6:	e5 e3       	ldi	r30, 0x35	; 53
    27c8:	f0 e0       	ldi	r31, 0x00	; 0
    27ca:	80 81       	ld	r24, Z
    27cc:	8e 7f       	andi	r24, 0xFE	; 254
    27ce:	8c 93       	st	X, r24
    27d0:	fe 01       	movw	r30, r28
    27d2:	e3 51       	subi	r30, 0x13	; 19
    27d4:	ff 4f       	sbci	r31, 0xFF	; 255
    27d6:	80 e0       	ldi	r24, 0x00	; 0
    27d8:	90 e0       	ldi	r25, 0x00	; 0
    27da:	a0 e8       	ldi	r26, 0x80	; 128
    27dc:	bf e3       	ldi	r27, 0x3F	; 63
    27de:	80 83       	st	Z, r24
    27e0:	91 83       	std	Z+1, r25	; 0x01
    27e2:	a2 83       	std	Z+2, r26	; 0x02
    27e4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    27e6:	8e 01       	movw	r16, r28
    27e8:	07 51       	subi	r16, 0x17	; 23
    27ea:	1f 4f       	sbci	r17, 0xFF	; 255
    27ec:	fe 01       	movw	r30, r28
    27ee:	e3 51       	subi	r30, 0x13	; 19
    27f0:	ff 4f       	sbci	r31, 0xFF	; 255
    27f2:	60 81       	ld	r22, Z
    27f4:	71 81       	ldd	r23, Z+1	; 0x01
    27f6:	82 81       	ldd	r24, Z+2	; 0x02
    27f8:	93 81       	ldd	r25, Z+3	; 0x03
    27fa:	2b ea       	ldi	r18, 0xAB	; 171
    27fc:	3a ea       	ldi	r19, 0xAA	; 170
    27fe:	4a ea       	ldi	r20, 0xAA	; 170
    2800:	50 e4       	ldi	r21, 0x40	; 64
    2802:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2806:	dc 01       	movw	r26, r24
    2808:	cb 01       	movw	r24, r22
    280a:	f8 01       	movw	r30, r16
    280c:	80 83       	st	Z, r24
    280e:	91 83       	std	Z+1, r25	; 0x01
    2810:	a2 83       	std	Z+2, r26	; 0x02
    2812:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2814:	fe 01       	movw	r30, r28
    2816:	e7 51       	subi	r30, 0x17	; 23
    2818:	ff 4f       	sbci	r31, 0xFF	; 255
    281a:	60 81       	ld	r22, Z
    281c:	71 81       	ldd	r23, Z+1	; 0x01
    281e:	82 81       	ldd	r24, Z+2	; 0x02
    2820:	93 81       	ldd	r25, Z+3	; 0x03
    2822:	20 e0       	ldi	r18, 0x00	; 0
    2824:	30 e0       	ldi	r19, 0x00	; 0
    2826:	40 e8       	ldi	r20, 0x80	; 128
    2828:	5f e3       	ldi	r21, 0x3F	; 63
    282a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    282e:	88 23       	and	r24, r24
    2830:	34 f4       	brge	.+12     	; 0x283e <analog+0x366>
		__ticks = 1;
    2832:	fe 01       	movw	r30, r28
    2834:	e8 51       	subi	r30, 0x18	; 24
    2836:	ff 4f       	sbci	r31, 0xFF	; 255
    2838:	81 e0       	ldi	r24, 0x01	; 1
    283a:	80 83       	st	Z, r24
    283c:	e0 c0       	rjmp	.+448    	; 0x29fe <analog+0x526>
	else if (__tmp > 255)
    283e:	fe 01       	movw	r30, r28
    2840:	e7 51       	subi	r30, 0x17	; 23
    2842:	ff 4f       	sbci	r31, 0xFF	; 255
    2844:	60 81       	ld	r22, Z
    2846:	71 81       	ldd	r23, Z+1	; 0x01
    2848:	82 81       	ldd	r24, Z+2	; 0x02
    284a:	93 81       	ldd	r25, Z+3	; 0x03
    284c:	20 e0       	ldi	r18, 0x00	; 0
    284e:	30 e0       	ldi	r19, 0x00	; 0
    2850:	4f e7       	ldi	r20, 0x7F	; 127
    2852:	53 e4       	ldi	r21, 0x43	; 67
    2854:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2858:	18 16       	cp	r1, r24
    285a:	0c f0       	brlt	.+2      	; 0x285e <analog+0x386>
    285c:	c0 c0       	rjmp	.+384    	; 0x29de <analog+0x506>
	{
		_delay_ms(__us / 1000.0);
    285e:	fe 01       	movw	r30, r28
    2860:	e3 51       	subi	r30, 0x13	; 19
    2862:	ff 4f       	sbci	r31, 0xFF	; 255
    2864:	60 81       	ld	r22, Z
    2866:	71 81       	ldd	r23, Z+1	; 0x01
    2868:	82 81       	ldd	r24, Z+2	; 0x02
    286a:	93 81       	ldd	r25, Z+3	; 0x03
    286c:	20 e0       	ldi	r18, 0x00	; 0
    286e:	30 e0       	ldi	r19, 0x00	; 0
    2870:	4a e7       	ldi	r20, 0x7A	; 122
    2872:	54 e4       	ldi	r21, 0x44	; 68
    2874:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    2878:	dc 01       	movw	r26, r24
    287a:	cb 01       	movw	r24, r22
    287c:	fe 01       	movw	r30, r28
    287e:	ec 51       	subi	r30, 0x1C	; 28
    2880:	ff 4f       	sbci	r31, 0xFF	; 255
    2882:	80 83       	st	Z, r24
    2884:	91 83       	std	Z+1, r25	; 0x01
    2886:	a2 83       	std	Z+2, r26	; 0x02
    2888:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    288a:	8e 01       	movw	r16, r28
    288c:	00 52       	subi	r16, 0x20	; 32
    288e:	1f 4f       	sbci	r17, 0xFF	; 255
    2890:	fe 01       	movw	r30, r28
    2892:	ec 51       	subi	r30, 0x1C	; 28
    2894:	ff 4f       	sbci	r31, 0xFF	; 255
    2896:	60 81       	ld	r22, Z
    2898:	71 81       	ldd	r23, Z+1	; 0x01
    289a:	82 81       	ldd	r24, Z+2	; 0x02
    289c:	93 81       	ldd	r25, Z+3	; 0x03
    289e:	20 e0       	ldi	r18, 0x00	; 0
    28a0:	30 e0       	ldi	r19, 0x00	; 0
    28a2:	4a e7       	ldi	r20, 0x7A	; 122
    28a4:	55 e4       	ldi	r21, 0x45	; 69
    28a6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    28aa:	dc 01       	movw	r26, r24
    28ac:	cb 01       	movw	r24, r22
    28ae:	f8 01       	movw	r30, r16
    28b0:	80 83       	st	Z, r24
    28b2:	91 83       	std	Z+1, r25	; 0x01
    28b4:	a2 83       	std	Z+2, r26	; 0x02
    28b6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28b8:	fe 01       	movw	r30, r28
    28ba:	e0 52       	subi	r30, 0x20	; 32
    28bc:	ff 4f       	sbci	r31, 0xFF	; 255
    28be:	60 81       	ld	r22, Z
    28c0:	71 81       	ldd	r23, Z+1	; 0x01
    28c2:	82 81       	ldd	r24, Z+2	; 0x02
    28c4:	93 81       	ldd	r25, Z+3	; 0x03
    28c6:	20 e0       	ldi	r18, 0x00	; 0
    28c8:	30 e0       	ldi	r19, 0x00	; 0
    28ca:	40 e8       	ldi	r20, 0x80	; 128
    28cc:	5f e3       	ldi	r21, 0x3F	; 63
    28ce:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    28d2:	88 23       	and	r24, r24
    28d4:	44 f4       	brge	.+16     	; 0x28e6 <analog+0x40e>
		__ticks = 1;
    28d6:	fe 01       	movw	r30, r28
    28d8:	e2 52       	subi	r30, 0x22	; 34
    28da:	ff 4f       	sbci	r31, 0xFF	; 255
    28dc:	81 e0       	ldi	r24, 0x01	; 1
    28de:	90 e0       	ldi	r25, 0x00	; 0
    28e0:	91 83       	std	Z+1, r25	; 0x01
    28e2:	80 83       	st	Z, r24
    28e4:	64 c0       	rjmp	.+200    	; 0x29ae <analog+0x4d6>
	else if (__tmp > 65535)
    28e6:	fe 01       	movw	r30, r28
    28e8:	e0 52       	subi	r30, 0x20	; 32
    28ea:	ff 4f       	sbci	r31, 0xFF	; 255
    28ec:	60 81       	ld	r22, Z
    28ee:	71 81       	ldd	r23, Z+1	; 0x01
    28f0:	82 81       	ldd	r24, Z+2	; 0x02
    28f2:	93 81       	ldd	r25, Z+3	; 0x03
    28f4:	20 e0       	ldi	r18, 0x00	; 0
    28f6:	3f ef       	ldi	r19, 0xFF	; 255
    28f8:	4f e7       	ldi	r20, 0x7F	; 127
    28fa:	57 e4       	ldi	r21, 0x47	; 71
    28fc:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2900:	18 16       	cp	r1, r24
    2902:	0c f0       	brlt	.+2      	; 0x2906 <analog+0x42e>
    2904:	43 c0       	rjmp	.+134    	; 0x298c <analog+0x4b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2906:	fe 01       	movw	r30, r28
    2908:	ec 51       	subi	r30, 0x1C	; 28
    290a:	ff 4f       	sbci	r31, 0xFF	; 255
    290c:	60 81       	ld	r22, Z
    290e:	71 81       	ldd	r23, Z+1	; 0x01
    2910:	82 81       	ldd	r24, Z+2	; 0x02
    2912:	93 81       	ldd	r25, Z+3	; 0x03
    2914:	20 e0       	ldi	r18, 0x00	; 0
    2916:	30 e0       	ldi	r19, 0x00	; 0
    2918:	40 e2       	ldi	r20, 0x20	; 32
    291a:	51 e4       	ldi	r21, 0x41	; 65
    291c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2920:	dc 01       	movw	r26, r24
    2922:	cb 01       	movw	r24, r22
    2924:	8e 01       	movw	r16, r28
    2926:	02 52       	subi	r16, 0x22	; 34
    2928:	1f 4f       	sbci	r17, 0xFF	; 255
    292a:	bc 01       	movw	r22, r24
    292c:	cd 01       	movw	r24, r26
    292e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2932:	dc 01       	movw	r26, r24
    2934:	cb 01       	movw	r24, r22
    2936:	f8 01       	movw	r30, r16
    2938:	91 83       	std	Z+1, r25	; 0x01
    293a:	80 83       	st	Z, r24
    293c:	1f c0       	rjmp	.+62     	; 0x297c <analog+0x4a4>
    293e:	fe 01       	movw	r30, r28
    2940:	e4 52       	subi	r30, 0x24	; 36
    2942:	ff 4f       	sbci	r31, 0xFF	; 255
    2944:	80 e9       	ldi	r24, 0x90	; 144
    2946:	91 e0       	ldi	r25, 0x01	; 1
    2948:	91 83       	std	Z+1, r25	; 0x01
    294a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    294c:	fe 01       	movw	r30, r28
    294e:	e4 52       	subi	r30, 0x24	; 36
    2950:	ff 4f       	sbci	r31, 0xFF	; 255
    2952:	80 81       	ld	r24, Z
    2954:	91 81       	ldd	r25, Z+1	; 0x01
    2956:	01 97       	sbiw	r24, 0x01	; 1
    2958:	f1 f7       	brne	.-4      	; 0x2956 <analog+0x47e>
    295a:	fe 01       	movw	r30, r28
    295c:	e4 52       	subi	r30, 0x24	; 36
    295e:	ff 4f       	sbci	r31, 0xFF	; 255
    2960:	91 83       	std	Z+1, r25	; 0x01
    2962:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2964:	de 01       	movw	r26, r28
    2966:	a2 52       	subi	r26, 0x22	; 34
    2968:	bf 4f       	sbci	r27, 0xFF	; 255
    296a:	fe 01       	movw	r30, r28
    296c:	e2 52       	subi	r30, 0x22	; 34
    296e:	ff 4f       	sbci	r31, 0xFF	; 255
    2970:	80 81       	ld	r24, Z
    2972:	91 81       	ldd	r25, Z+1	; 0x01
    2974:	01 97       	sbiw	r24, 0x01	; 1
    2976:	11 96       	adiw	r26, 0x01	; 1
    2978:	9c 93       	st	X, r25
    297a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    297c:	fe 01       	movw	r30, r28
    297e:	e2 52       	subi	r30, 0x22	; 34
    2980:	ff 4f       	sbci	r31, 0xFF	; 255
    2982:	80 81       	ld	r24, Z
    2984:	91 81       	ldd	r25, Z+1	; 0x01
    2986:	00 97       	sbiw	r24, 0x00	; 0
    2988:	d1 f6       	brne	.-76     	; 0x293e <analog+0x466>
    298a:	4b c0       	rjmp	.+150    	; 0x2a22 <analog+0x54a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    298c:	8e 01       	movw	r16, r28
    298e:	02 52       	subi	r16, 0x22	; 34
    2990:	1f 4f       	sbci	r17, 0xFF	; 255
    2992:	fe 01       	movw	r30, r28
    2994:	e0 52       	subi	r30, 0x20	; 32
    2996:	ff 4f       	sbci	r31, 0xFF	; 255
    2998:	60 81       	ld	r22, Z
    299a:	71 81       	ldd	r23, Z+1	; 0x01
    299c:	82 81       	ldd	r24, Z+2	; 0x02
    299e:	93 81       	ldd	r25, Z+3	; 0x03
    29a0:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    29a4:	dc 01       	movw	r26, r24
    29a6:	cb 01       	movw	r24, r22
    29a8:	f8 01       	movw	r30, r16
    29aa:	91 83       	std	Z+1, r25	; 0x01
    29ac:	80 83       	st	Z, r24
    29ae:	de 01       	movw	r26, r28
    29b0:	a6 52       	subi	r26, 0x26	; 38
    29b2:	bf 4f       	sbci	r27, 0xFF	; 255
    29b4:	fe 01       	movw	r30, r28
    29b6:	e2 52       	subi	r30, 0x22	; 34
    29b8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ba:	80 81       	ld	r24, Z
    29bc:	91 81       	ldd	r25, Z+1	; 0x01
    29be:	11 96       	adiw	r26, 0x01	; 1
    29c0:	9c 93       	st	X, r25
    29c2:	8e 93       	st	-X, r24
    29c4:	fe 01       	movw	r30, r28
    29c6:	e6 52       	subi	r30, 0x26	; 38
    29c8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ca:	80 81       	ld	r24, Z
    29cc:	91 81       	ldd	r25, Z+1	; 0x01
    29ce:	01 97       	sbiw	r24, 0x01	; 1
    29d0:	f1 f7       	brne	.-4      	; 0x29ce <analog+0x4f6>
    29d2:	fe 01       	movw	r30, r28
    29d4:	e6 52       	subi	r30, 0x26	; 38
    29d6:	ff 4f       	sbci	r31, 0xFF	; 255
    29d8:	91 83       	std	Z+1, r25	; 0x01
    29da:	80 83       	st	Z, r24
    29dc:	22 c0       	rjmp	.+68     	; 0x2a22 <analog+0x54a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    29de:	8e 01       	movw	r16, r28
    29e0:	08 51       	subi	r16, 0x18	; 24
    29e2:	1f 4f       	sbci	r17, 0xFF	; 255
    29e4:	fe 01       	movw	r30, r28
    29e6:	e7 51       	subi	r30, 0x17	; 23
    29e8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ea:	60 81       	ld	r22, Z
    29ec:	71 81       	ldd	r23, Z+1	; 0x01
    29ee:	82 81       	ldd	r24, Z+2	; 0x02
    29f0:	93 81       	ldd	r25, Z+3	; 0x03
    29f2:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    29f6:	dc 01       	movw	r26, r24
    29f8:	cb 01       	movw	r24, r22
    29fa:	f8 01       	movw	r30, r16
    29fc:	80 83       	st	Z, r24
    29fe:	de 01       	movw	r26, r28
    2a00:	a7 52       	subi	r26, 0x27	; 39
    2a02:	bf 4f       	sbci	r27, 0xFF	; 255
    2a04:	fe 01       	movw	r30, r28
    2a06:	e8 51       	subi	r30, 0x18	; 24
    2a08:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0a:	80 81       	ld	r24, Z
    2a0c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2a0e:	fe 01       	movw	r30, r28
    2a10:	e7 52       	subi	r30, 0x27	; 39
    2a12:	ff 4f       	sbci	r31, 0xFF	; 255
    2a14:	80 81       	ld	r24, Z
    2a16:	8a 95       	dec	r24
    2a18:	f1 f7       	brne	.-4      	; 0x2a16 <analog+0x53e>
    2a1a:	fe 01       	movw	r30, r28
    2a1c:	e7 52       	subi	r30, 0x27	; 39
    2a1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a20:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    2a22:	a5 e3       	ldi	r26, 0x35	; 53
    2a24:	b0 e0       	ldi	r27, 0x00	; 0
    2a26:	e5 e3       	ldi	r30, 0x35	; 53
    2a28:	f0 e0       	ldi	r31, 0x00	; 0
    2a2a:	80 81       	ld	r24, Z
    2a2c:	81 60       	ori	r24, 0x01	; 1
    2a2e:	8c 93       	st	X, r24
    2a30:	fe 01       	movw	r30, r28
    2a32:	eb 52       	subi	r30, 0x2B	; 43
    2a34:	ff 4f       	sbci	r31, 0xFF	; 255
    2a36:	80 e0       	ldi	r24, 0x00	; 0
    2a38:	90 e0       	ldi	r25, 0x00	; 0
    2a3a:	a0 e8       	ldi	r26, 0x80	; 128
    2a3c:	bf e3       	ldi	r27, 0x3F	; 63
    2a3e:	80 83       	st	Z, r24
    2a40:	91 83       	std	Z+1, r25	; 0x01
    2a42:	a2 83       	std	Z+2, r26	; 0x02
    2a44:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2a46:	8e 01       	movw	r16, r28
    2a48:	0f 52       	subi	r16, 0x2F	; 47
    2a4a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a4c:	fe 01       	movw	r30, r28
    2a4e:	eb 52       	subi	r30, 0x2B	; 43
    2a50:	ff 4f       	sbci	r31, 0xFF	; 255
    2a52:	60 81       	ld	r22, Z
    2a54:	71 81       	ldd	r23, Z+1	; 0x01
    2a56:	82 81       	ldd	r24, Z+2	; 0x02
    2a58:	93 81       	ldd	r25, Z+3	; 0x03
    2a5a:	2b ea       	ldi	r18, 0xAB	; 171
    2a5c:	3a ea       	ldi	r19, 0xAA	; 170
    2a5e:	4a ea       	ldi	r20, 0xAA	; 170
    2a60:	50 e4       	ldi	r21, 0x40	; 64
    2a62:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2a66:	dc 01       	movw	r26, r24
    2a68:	cb 01       	movw	r24, r22
    2a6a:	f8 01       	movw	r30, r16
    2a6c:	80 83       	st	Z, r24
    2a6e:	91 83       	std	Z+1, r25	; 0x01
    2a70:	a2 83       	std	Z+2, r26	; 0x02
    2a72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a74:	fe 01       	movw	r30, r28
    2a76:	ef 52       	subi	r30, 0x2F	; 47
    2a78:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7a:	60 81       	ld	r22, Z
    2a7c:	71 81       	ldd	r23, Z+1	; 0x01
    2a7e:	82 81       	ldd	r24, Z+2	; 0x02
    2a80:	93 81       	ldd	r25, Z+3	; 0x03
    2a82:	20 e0       	ldi	r18, 0x00	; 0
    2a84:	30 e0       	ldi	r19, 0x00	; 0
    2a86:	40 e8       	ldi	r20, 0x80	; 128
    2a88:	5f e3       	ldi	r21, 0x3F	; 63
    2a8a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    2a8e:	88 23       	and	r24, r24
    2a90:	34 f4       	brge	.+12     	; 0x2a9e <analog+0x5c6>
		__ticks = 1;
    2a92:	fe 01       	movw	r30, r28
    2a94:	e0 53       	subi	r30, 0x30	; 48
    2a96:	ff 4f       	sbci	r31, 0xFF	; 255
    2a98:	81 e0       	ldi	r24, 0x01	; 1
    2a9a:	80 83       	st	Z, r24
    2a9c:	e0 c0       	rjmp	.+448    	; 0x2c5e <analog+0x786>
	else if (__tmp > 255)
    2a9e:	fe 01       	movw	r30, r28
    2aa0:	ef 52       	subi	r30, 0x2F	; 47
    2aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa4:	60 81       	ld	r22, Z
    2aa6:	71 81       	ldd	r23, Z+1	; 0x01
    2aa8:	82 81       	ldd	r24, Z+2	; 0x02
    2aaa:	93 81       	ldd	r25, Z+3	; 0x03
    2aac:	20 e0       	ldi	r18, 0x00	; 0
    2aae:	30 e0       	ldi	r19, 0x00	; 0
    2ab0:	4f e7       	ldi	r20, 0x7F	; 127
    2ab2:	53 e4       	ldi	r21, 0x43	; 67
    2ab4:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2ab8:	18 16       	cp	r1, r24
    2aba:	0c f0       	brlt	.+2      	; 0x2abe <analog+0x5e6>
    2abc:	c0 c0       	rjmp	.+384    	; 0x2c3e <analog+0x766>
	{
		_delay_ms(__us / 1000.0);
    2abe:	fe 01       	movw	r30, r28
    2ac0:	eb 52       	subi	r30, 0x2B	; 43
    2ac2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac4:	60 81       	ld	r22, Z
    2ac6:	71 81       	ldd	r23, Z+1	; 0x01
    2ac8:	82 81       	ldd	r24, Z+2	; 0x02
    2aca:	93 81       	ldd	r25, Z+3	; 0x03
    2acc:	20 e0       	ldi	r18, 0x00	; 0
    2ace:	30 e0       	ldi	r19, 0x00	; 0
    2ad0:	4a e7       	ldi	r20, 0x7A	; 122
    2ad2:	54 e4       	ldi	r21, 0x44	; 68
    2ad4:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    2ad8:	dc 01       	movw	r26, r24
    2ada:	cb 01       	movw	r24, r22
    2adc:	fe 01       	movw	r30, r28
    2ade:	e4 53       	subi	r30, 0x34	; 52
    2ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae2:	80 83       	st	Z, r24
    2ae4:	91 83       	std	Z+1, r25	; 0x01
    2ae6:	a2 83       	std	Z+2, r26	; 0x02
    2ae8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2aea:	8e 01       	movw	r16, r28
    2aec:	08 53       	subi	r16, 0x38	; 56
    2aee:	1f 4f       	sbci	r17, 0xFF	; 255
    2af0:	fe 01       	movw	r30, r28
    2af2:	e4 53       	subi	r30, 0x34	; 52
    2af4:	ff 4f       	sbci	r31, 0xFF	; 255
    2af6:	60 81       	ld	r22, Z
    2af8:	71 81       	ldd	r23, Z+1	; 0x01
    2afa:	82 81       	ldd	r24, Z+2	; 0x02
    2afc:	93 81       	ldd	r25, Z+3	; 0x03
    2afe:	20 e0       	ldi	r18, 0x00	; 0
    2b00:	30 e0       	ldi	r19, 0x00	; 0
    2b02:	4a e7       	ldi	r20, 0x7A	; 122
    2b04:	55 e4       	ldi	r21, 0x45	; 69
    2b06:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2b0a:	dc 01       	movw	r26, r24
    2b0c:	cb 01       	movw	r24, r22
    2b0e:	f8 01       	movw	r30, r16
    2b10:	80 83       	st	Z, r24
    2b12:	91 83       	std	Z+1, r25	; 0x01
    2b14:	a2 83       	std	Z+2, r26	; 0x02
    2b16:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b18:	fe 01       	movw	r30, r28
    2b1a:	e8 53       	subi	r30, 0x38	; 56
    2b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b1e:	60 81       	ld	r22, Z
    2b20:	71 81       	ldd	r23, Z+1	; 0x01
    2b22:	82 81       	ldd	r24, Z+2	; 0x02
    2b24:	93 81       	ldd	r25, Z+3	; 0x03
    2b26:	20 e0       	ldi	r18, 0x00	; 0
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	40 e8       	ldi	r20, 0x80	; 128
    2b2c:	5f e3       	ldi	r21, 0x3F	; 63
    2b2e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    2b32:	88 23       	and	r24, r24
    2b34:	44 f4       	brge	.+16     	; 0x2b46 <analog+0x66e>
		__ticks = 1;
    2b36:	fe 01       	movw	r30, r28
    2b38:	ea 53       	subi	r30, 0x3A	; 58
    2b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3c:	81 e0       	ldi	r24, 0x01	; 1
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	91 83       	std	Z+1, r25	; 0x01
    2b42:	80 83       	st	Z, r24
    2b44:	64 c0       	rjmp	.+200    	; 0x2c0e <analog+0x736>
	else if (__tmp > 65535)
    2b46:	fe 01       	movw	r30, r28
    2b48:	e8 53       	subi	r30, 0x38	; 56
    2b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b4c:	60 81       	ld	r22, Z
    2b4e:	71 81       	ldd	r23, Z+1	; 0x01
    2b50:	82 81       	ldd	r24, Z+2	; 0x02
    2b52:	93 81       	ldd	r25, Z+3	; 0x03
    2b54:	20 e0       	ldi	r18, 0x00	; 0
    2b56:	3f ef       	ldi	r19, 0xFF	; 255
    2b58:	4f e7       	ldi	r20, 0x7F	; 127
    2b5a:	57 e4       	ldi	r21, 0x47	; 71
    2b5c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2b60:	18 16       	cp	r1, r24
    2b62:	0c f0       	brlt	.+2      	; 0x2b66 <analog+0x68e>
    2b64:	43 c0       	rjmp	.+134    	; 0x2bec <analog+0x714>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b66:	fe 01       	movw	r30, r28
    2b68:	e4 53       	subi	r30, 0x34	; 52
    2b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b6c:	60 81       	ld	r22, Z
    2b6e:	71 81       	ldd	r23, Z+1	; 0x01
    2b70:	82 81       	ldd	r24, Z+2	; 0x02
    2b72:	93 81       	ldd	r25, Z+3	; 0x03
    2b74:	20 e0       	ldi	r18, 0x00	; 0
    2b76:	30 e0       	ldi	r19, 0x00	; 0
    2b78:	40 e2       	ldi	r20, 0x20	; 32
    2b7a:	51 e4       	ldi	r21, 0x41	; 65
    2b7c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2b80:	dc 01       	movw	r26, r24
    2b82:	cb 01       	movw	r24, r22
    2b84:	8e 01       	movw	r16, r28
    2b86:	0a 53       	subi	r16, 0x3A	; 58
    2b88:	1f 4f       	sbci	r17, 0xFF	; 255
    2b8a:	bc 01       	movw	r22, r24
    2b8c:	cd 01       	movw	r24, r26
    2b8e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2b92:	dc 01       	movw	r26, r24
    2b94:	cb 01       	movw	r24, r22
    2b96:	f8 01       	movw	r30, r16
    2b98:	91 83       	std	Z+1, r25	; 0x01
    2b9a:	80 83       	st	Z, r24
    2b9c:	1f c0       	rjmp	.+62     	; 0x2bdc <analog+0x704>
    2b9e:	fe 01       	movw	r30, r28
    2ba0:	ec 53       	subi	r30, 0x3C	; 60
    2ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba4:	80 e9       	ldi	r24, 0x90	; 144
    2ba6:	91 e0       	ldi	r25, 0x01	; 1
    2ba8:	91 83       	std	Z+1, r25	; 0x01
    2baa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2bac:	fe 01       	movw	r30, r28
    2bae:	ec 53       	subi	r30, 0x3C	; 60
    2bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb2:	80 81       	ld	r24, Z
    2bb4:	91 81       	ldd	r25, Z+1	; 0x01
    2bb6:	01 97       	sbiw	r24, 0x01	; 1
    2bb8:	f1 f7       	brne	.-4      	; 0x2bb6 <analog+0x6de>
    2bba:	fe 01       	movw	r30, r28
    2bbc:	ec 53       	subi	r30, 0x3C	; 60
    2bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc0:	91 83       	std	Z+1, r25	; 0x01
    2bc2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bc4:	de 01       	movw	r26, r28
    2bc6:	aa 53       	subi	r26, 0x3A	; 58
    2bc8:	bf 4f       	sbci	r27, 0xFF	; 255
    2bca:	fe 01       	movw	r30, r28
    2bcc:	ea 53       	subi	r30, 0x3A	; 58
    2bce:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd0:	80 81       	ld	r24, Z
    2bd2:	91 81       	ldd	r25, Z+1	; 0x01
    2bd4:	01 97       	sbiw	r24, 0x01	; 1
    2bd6:	11 96       	adiw	r26, 0x01	; 1
    2bd8:	9c 93       	st	X, r25
    2bda:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bdc:	fe 01       	movw	r30, r28
    2bde:	ea 53       	subi	r30, 0x3A	; 58
    2be0:	ff 4f       	sbci	r31, 0xFF	; 255
    2be2:	80 81       	ld	r24, Z
    2be4:	91 81       	ldd	r25, Z+1	; 0x01
    2be6:	00 97       	sbiw	r24, 0x00	; 0
    2be8:	d1 f6       	brne	.-76     	; 0x2b9e <analog+0x6c6>
    2bea:	4b c0       	rjmp	.+150    	; 0x2c82 <analog+0x7aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bec:	8e 01       	movw	r16, r28
    2bee:	0a 53       	subi	r16, 0x3A	; 58
    2bf0:	1f 4f       	sbci	r17, 0xFF	; 255
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	e8 53       	subi	r30, 0x38	; 56
    2bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf8:	60 81       	ld	r22, Z
    2bfa:	71 81       	ldd	r23, Z+1	; 0x01
    2bfc:	82 81       	ldd	r24, Z+2	; 0x02
    2bfe:	93 81       	ldd	r25, Z+3	; 0x03
    2c00:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2c04:	dc 01       	movw	r26, r24
    2c06:	cb 01       	movw	r24, r22
    2c08:	f8 01       	movw	r30, r16
    2c0a:	91 83       	std	Z+1, r25	; 0x01
    2c0c:	80 83       	st	Z, r24
    2c0e:	de 01       	movw	r26, r28
    2c10:	ae 53       	subi	r26, 0x3E	; 62
    2c12:	bf 4f       	sbci	r27, 0xFF	; 255
    2c14:	fe 01       	movw	r30, r28
    2c16:	ea 53       	subi	r30, 0x3A	; 58
    2c18:	ff 4f       	sbci	r31, 0xFF	; 255
    2c1a:	80 81       	ld	r24, Z
    2c1c:	91 81       	ldd	r25, Z+1	; 0x01
    2c1e:	11 96       	adiw	r26, 0x01	; 1
    2c20:	9c 93       	st	X, r25
    2c22:	8e 93       	st	-X, r24
    2c24:	fe 01       	movw	r30, r28
    2c26:	ee 53       	subi	r30, 0x3E	; 62
    2c28:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2a:	80 81       	ld	r24, Z
    2c2c:	91 81       	ldd	r25, Z+1	; 0x01
    2c2e:	01 97       	sbiw	r24, 0x01	; 1
    2c30:	f1 f7       	brne	.-4      	; 0x2c2e <analog+0x756>
    2c32:	fe 01       	movw	r30, r28
    2c34:	ee 53       	subi	r30, 0x3E	; 62
    2c36:	ff 4f       	sbci	r31, 0xFF	; 255
    2c38:	91 83       	std	Z+1, r25	; 0x01
    2c3a:	80 83       	st	Z, r24
    2c3c:	22 c0       	rjmp	.+68     	; 0x2c82 <analog+0x7aa>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2c3e:	8e 01       	movw	r16, r28
    2c40:	00 53       	subi	r16, 0x30	; 48
    2c42:	1f 4f       	sbci	r17, 0xFF	; 255
    2c44:	fe 01       	movw	r30, r28
    2c46:	ef 52       	subi	r30, 0x2F	; 47
    2c48:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4a:	60 81       	ld	r22, Z
    2c4c:	71 81       	ldd	r23, Z+1	; 0x01
    2c4e:	82 81       	ldd	r24, Z+2	; 0x02
    2c50:	93 81       	ldd	r25, Z+3	; 0x03
    2c52:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2c56:	dc 01       	movw	r26, r24
    2c58:	cb 01       	movw	r24, r22
    2c5a:	f8 01       	movw	r30, r16
    2c5c:	80 83       	st	Z, r24
    2c5e:	de 01       	movw	r26, r28
    2c60:	af 53       	subi	r26, 0x3F	; 63
    2c62:	bf 4f       	sbci	r27, 0xFF	; 255
    2c64:	fe 01       	movw	r30, r28
    2c66:	e0 53       	subi	r30, 0x30	; 48
    2c68:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6a:	80 81       	ld	r24, Z
    2c6c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2c6e:	fe 01       	movw	r30, r28
    2c70:	ef 53       	subi	r30, 0x3F	; 63
    2c72:	ff 4f       	sbci	r31, 0xFF	; 255
    2c74:	80 81       	ld	r24, Z
    2c76:	8a 95       	dec	r24
    2c78:	f1 f7       	brne	.-4      	; 0x2c76 <analog+0x79e>
    2c7a:	fe 01       	movw	r30, r28
    2c7c:	ef 53       	subi	r30, 0x3F	; 63
    2c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c80:	80 83       	st	Z, r24
	
	_delay_us(30);
	
	ps2byte = 0x01;			//byte1
	
	for(i=0;i<8;i++)		
    2c82:	80 91 66 00 	lds	r24, 0x0066
    2c86:	90 91 67 00 	lds	r25, 0x0067
    2c8a:	01 96       	adiw	r24, 0x01	; 1
    2c8c:	90 93 67 00 	sts	0x0067, r25
    2c90:	80 93 66 00 	sts	0x0066, r24
    2c94:	80 91 66 00 	lds	r24, 0x0066
    2c98:	90 91 67 00 	lds	r25, 0x0067
    2c9c:	88 30       	cpi	r24, 0x08	; 8
    2c9e:	91 05       	cpc	r25, r1
    2ca0:	0c f4       	brge	.+2      	; 0x2ca4 <analog+0x7cc>
    2ca2:	6d cd       	rjmp	.-1318   	; 0x277e <analog+0x2a6>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    2ca4:	a5 e3       	ldi	r26, 0x35	; 53
    2ca6:	b0 e0       	ldi	r27, 0x00	; 0
    2ca8:	e5 e3       	ldi	r30, 0x35	; 53
    2caa:	f0 e0       	ldi	r31, 0x00	; 0
    2cac:	80 81       	ld	r24, Z
    2cae:	84 60       	ori	r24, 0x04	; 4
    2cb0:	8c 93       	st	X, r24


	
	
	ps2byte = 0x44;			//byte2
    2cb2:	84 e4       	ldi	r24, 0x44	; 68
    2cb4:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)
    2cb8:	10 92 67 00 	sts	0x0067, r1
    2cbc:	10 92 66 00 	sts	0x0066, r1
    2cc0:	8b c2       	rjmp	.+1302   	; 0x31d8 <analog+0xd00>
	{
		if(ps2byte&(_BV(i)))
    2cc2:	80 91 61 00 	lds	r24, 0x0061
    2cc6:	28 2f       	mov	r18, r24
    2cc8:	30 e0       	ldi	r19, 0x00	; 0
    2cca:	80 91 66 00 	lds	r24, 0x0066
    2cce:	90 91 67 00 	lds	r25, 0x0067
    2cd2:	a9 01       	movw	r20, r18
    2cd4:	02 c0       	rjmp	.+4      	; 0x2cda <analog+0x802>
    2cd6:	55 95       	asr	r21
    2cd8:	47 95       	ror	r20
    2cda:	8a 95       	dec	r24
    2cdc:	e2 f7       	brpl	.-8      	; 0x2cd6 <analog+0x7fe>
    2cde:	ca 01       	movw	r24, r20
    2ce0:	81 70       	andi	r24, 0x01	; 1
    2ce2:	90 70       	andi	r25, 0x00	; 0
    2ce4:	88 23       	and	r24, r24
    2ce6:	41 f0       	breq	.+16     	; 0x2cf8 <analog+0x820>
			sbi(ps2port,ps2cmd);
    2ce8:	a5 e3       	ldi	r26, 0x35	; 53
    2cea:	b0 e0       	ldi	r27, 0x00	; 0
    2cec:	e5 e3       	ldi	r30, 0x35	; 53
    2cee:	f0 e0       	ldi	r31, 0x00	; 0
    2cf0:	80 81       	ld	r24, Z
    2cf2:	84 60       	ori	r24, 0x04	; 4
    2cf4:	8c 93       	st	X, r24
    2cf6:	07 c0       	rjmp	.+14     	; 0x2d06 <analog+0x82e>
		else 
			cbi(ps2port,ps2cmd);
    2cf8:	a5 e3       	ldi	r26, 0x35	; 53
    2cfa:	b0 e0       	ldi	r27, 0x00	; 0
    2cfc:	e5 e3       	ldi	r30, 0x35	; 53
    2cfe:	f0 e0       	ldi	r31, 0x00	; 0
    2d00:	80 81       	ld	r24, Z
    2d02:	8b 7f       	andi	r24, 0xFB	; 251
    2d04:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    2d06:	a5 e3       	ldi	r26, 0x35	; 53
    2d08:	b0 e0       	ldi	r27, 0x00	; 0
    2d0a:	e5 e3       	ldi	r30, 0x35	; 53
    2d0c:	f0 e0       	ldi	r31, 0x00	; 0
    2d0e:	80 81       	ld	r24, Z
    2d10:	8e 7f       	andi	r24, 0xFE	; 254
    2d12:	8c 93       	st	X, r24
    2d14:	fe 01       	movw	r30, r28
    2d16:	e3 54       	subi	r30, 0x43	; 67
    2d18:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1a:	80 e0       	ldi	r24, 0x00	; 0
    2d1c:	90 e0       	ldi	r25, 0x00	; 0
    2d1e:	a0 e8       	ldi	r26, 0x80	; 128
    2d20:	bf e3       	ldi	r27, 0x3F	; 63
    2d22:	80 83       	st	Z, r24
    2d24:	91 83       	std	Z+1, r25	; 0x01
    2d26:	a2 83       	std	Z+2, r26	; 0x02
    2d28:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2d2a:	8e 01       	movw	r16, r28
    2d2c:	07 54       	subi	r16, 0x47	; 71
    2d2e:	1f 4f       	sbci	r17, 0xFF	; 255
    2d30:	fe 01       	movw	r30, r28
    2d32:	e3 54       	subi	r30, 0x43	; 67
    2d34:	ff 4f       	sbci	r31, 0xFF	; 255
    2d36:	60 81       	ld	r22, Z
    2d38:	71 81       	ldd	r23, Z+1	; 0x01
    2d3a:	82 81       	ldd	r24, Z+2	; 0x02
    2d3c:	93 81       	ldd	r25, Z+3	; 0x03
    2d3e:	2b ea       	ldi	r18, 0xAB	; 171
    2d40:	3a ea       	ldi	r19, 0xAA	; 170
    2d42:	4a ea       	ldi	r20, 0xAA	; 170
    2d44:	50 e4       	ldi	r21, 0x40	; 64
    2d46:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2d4a:	dc 01       	movw	r26, r24
    2d4c:	cb 01       	movw	r24, r22
    2d4e:	f8 01       	movw	r30, r16
    2d50:	80 83       	st	Z, r24
    2d52:	91 83       	std	Z+1, r25	; 0x01
    2d54:	a2 83       	std	Z+2, r26	; 0x02
    2d56:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d58:	fe 01       	movw	r30, r28
    2d5a:	e7 54       	subi	r30, 0x47	; 71
    2d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d5e:	60 81       	ld	r22, Z
    2d60:	71 81       	ldd	r23, Z+1	; 0x01
    2d62:	82 81       	ldd	r24, Z+2	; 0x02
    2d64:	93 81       	ldd	r25, Z+3	; 0x03
    2d66:	20 e0       	ldi	r18, 0x00	; 0
    2d68:	30 e0       	ldi	r19, 0x00	; 0
    2d6a:	40 e8       	ldi	r20, 0x80	; 128
    2d6c:	5f e3       	ldi	r21, 0x3F	; 63
    2d6e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    2d72:	88 23       	and	r24, r24
    2d74:	34 f4       	brge	.+12     	; 0x2d82 <analog+0x8aa>
		__ticks = 1;
    2d76:	fe 01       	movw	r30, r28
    2d78:	e8 54       	subi	r30, 0x48	; 72
    2d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7c:	81 e0       	ldi	r24, 0x01	; 1
    2d7e:	80 83       	st	Z, r24
    2d80:	e0 c0       	rjmp	.+448    	; 0x2f42 <analog+0xa6a>
	else if (__tmp > 255)
    2d82:	fe 01       	movw	r30, r28
    2d84:	e7 54       	subi	r30, 0x47	; 71
    2d86:	ff 4f       	sbci	r31, 0xFF	; 255
    2d88:	60 81       	ld	r22, Z
    2d8a:	71 81       	ldd	r23, Z+1	; 0x01
    2d8c:	82 81       	ldd	r24, Z+2	; 0x02
    2d8e:	93 81       	ldd	r25, Z+3	; 0x03
    2d90:	20 e0       	ldi	r18, 0x00	; 0
    2d92:	30 e0       	ldi	r19, 0x00	; 0
    2d94:	4f e7       	ldi	r20, 0x7F	; 127
    2d96:	53 e4       	ldi	r21, 0x43	; 67
    2d98:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2d9c:	18 16       	cp	r1, r24
    2d9e:	0c f0       	brlt	.+2      	; 0x2da2 <analog+0x8ca>
    2da0:	c0 c0       	rjmp	.+384    	; 0x2f22 <analog+0xa4a>
	{
		_delay_ms(__us / 1000.0);
    2da2:	fe 01       	movw	r30, r28
    2da4:	e3 54       	subi	r30, 0x43	; 67
    2da6:	ff 4f       	sbci	r31, 0xFF	; 255
    2da8:	60 81       	ld	r22, Z
    2daa:	71 81       	ldd	r23, Z+1	; 0x01
    2dac:	82 81       	ldd	r24, Z+2	; 0x02
    2dae:	93 81       	ldd	r25, Z+3	; 0x03
    2db0:	20 e0       	ldi	r18, 0x00	; 0
    2db2:	30 e0       	ldi	r19, 0x00	; 0
    2db4:	4a e7       	ldi	r20, 0x7A	; 122
    2db6:	54 e4       	ldi	r21, 0x44	; 68
    2db8:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    2dbc:	dc 01       	movw	r26, r24
    2dbe:	cb 01       	movw	r24, r22
    2dc0:	fe 01       	movw	r30, r28
    2dc2:	ec 54       	subi	r30, 0x4C	; 76
    2dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc6:	80 83       	st	Z, r24
    2dc8:	91 83       	std	Z+1, r25	; 0x01
    2dca:	a2 83       	std	Z+2, r26	; 0x02
    2dcc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dce:	8e 01       	movw	r16, r28
    2dd0:	00 55       	subi	r16, 0x50	; 80
    2dd2:	1f 4f       	sbci	r17, 0xFF	; 255
    2dd4:	fe 01       	movw	r30, r28
    2dd6:	ec 54       	subi	r30, 0x4C	; 76
    2dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dda:	60 81       	ld	r22, Z
    2ddc:	71 81       	ldd	r23, Z+1	; 0x01
    2dde:	82 81       	ldd	r24, Z+2	; 0x02
    2de0:	93 81       	ldd	r25, Z+3	; 0x03
    2de2:	20 e0       	ldi	r18, 0x00	; 0
    2de4:	30 e0       	ldi	r19, 0x00	; 0
    2de6:	4a e7       	ldi	r20, 0x7A	; 122
    2de8:	55 e4       	ldi	r21, 0x45	; 69
    2dea:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2dee:	dc 01       	movw	r26, r24
    2df0:	cb 01       	movw	r24, r22
    2df2:	f8 01       	movw	r30, r16
    2df4:	80 83       	st	Z, r24
    2df6:	91 83       	std	Z+1, r25	; 0x01
    2df8:	a2 83       	std	Z+2, r26	; 0x02
    2dfa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2dfc:	fe 01       	movw	r30, r28
    2dfe:	e0 55       	subi	r30, 0x50	; 80
    2e00:	ff 4f       	sbci	r31, 0xFF	; 255
    2e02:	60 81       	ld	r22, Z
    2e04:	71 81       	ldd	r23, Z+1	; 0x01
    2e06:	82 81       	ldd	r24, Z+2	; 0x02
    2e08:	93 81       	ldd	r25, Z+3	; 0x03
    2e0a:	20 e0       	ldi	r18, 0x00	; 0
    2e0c:	30 e0       	ldi	r19, 0x00	; 0
    2e0e:	40 e8       	ldi	r20, 0x80	; 128
    2e10:	5f e3       	ldi	r21, 0x3F	; 63
    2e12:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    2e16:	88 23       	and	r24, r24
    2e18:	44 f4       	brge	.+16     	; 0x2e2a <analog+0x952>
		__ticks = 1;
    2e1a:	fe 01       	movw	r30, r28
    2e1c:	e2 55       	subi	r30, 0x52	; 82
    2e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e20:	81 e0       	ldi	r24, 0x01	; 1
    2e22:	90 e0       	ldi	r25, 0x00	; 0
    2e24:	91 83       	std	Z+1, r25	; 0x01
    2e26:	80 83       	st	Z, r24
    2e28:	64 c0       	rjmp	.+200    	; 0x2ef2 <analog+0xa1a>
	else if (__tmp > 65535)
    2e2a:	fe 01       	movw	r30, r28
    2e2c:	e0 55       	subi	r30, 0x50	; 80
    2e2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e30:	60 81       	ld	r22, Z
    2e32:	71 81       	ldd	r23, Z+1	; 0x01
    2e34:	82 81       	ldd	r24, Z+2	; 0x02
    2e36:	93 81       	ldd	r25, Z+3	; 0x03
    2e38:	20 e0       	ldi	r18, 0x00	; 0
    2e3a:	3f ef       	ldi	r19, 0xFF	; 255
    2e3c:	4f e7       	ldi	r20, 0x7F	; 127
    2e3e:	57 e4       	ldi	r21, 0x47	; 71
    2e40:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2e44:	18 16       	cp	r1, r24
    2e46:	0c f0       	brlt	.+2      	; 0x2e4a <analog+0x972>
    2e48:	43 c0       	rjmp	.+134    	; 0x2ed0 <analog+0x9f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e4a:	fe 01       	movw	r30, r28
    2e4c:	ec 54       	subi	r30, 0x4C	; 76
    2e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e50:	60 81       	ld	r22, Z
    2e52:	71 81       	ldd	r23, Z+1	; 0x01
    2e54:	82 81       	ldd	r24, Z+2	; 0x02
    2e56:	93 81       	ldd	r25, Z+3	; 0x03
    2e58:	20 e0       	ldi	r18, 0x00	; 0
    2e5a:	30 e0       	ldi	r19, 0x00	; 0
    2e5c:	40 e2       	ldi	r20, 0x20	; 32
    2e5e:	51 e4       	ldi	r21, 0x41	; 65
    2e60:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2e64:	dc 01       	movw	r26, r24
    2e66:	cb 01       	movw	r24, r22
    2e68:	8e 01       	movw	r16, r28
    2e6a:	02 55       	subi	r16, 0x52	; 82
    2e6c:	1f 4f       	sbci	r17, 0xFF	; 255
    2e6e:	bc 01       	movw	r22, r24
    2e70:	cd 01       	movw	r24, r26
    2e72:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2e76:	dc 01       	movw	r26, r24
    2e78:	cb 01       	movw	r24, r22
    2e7a:	f8 01       	movw	r30, r16
    2e7c:	91 83       	std	Z+1, r25	; 0x01
    2e7e:	80 83       	st	Z, r24
    2e80:	1f c0       	rjmp	.+62     	; 0x2ec0 <analog+0x9e8>
    2e82:	fe 01       	movw	r30, r28
    2e84:	e4 55       	subi	r30, 0x54	; 84
    2e86:	ff 4f       	sbci	r31, 0xFF	; 255
    2e88:	80 e9       	ldi	r24, 0x90	; 144
    2e8a:	91 e0       	ldi	r25, 0x01	; 1
    2e8c:	91 83       	std	Z+1, r25	; 0x01
    2e8e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2e90:	fe 01       	movw	r30, r28
    2e92:	e4 55       	subi	r30, 0x54	; 84
    2e94:	ff 4f       	sbci	r31, 0xFF	; 255
    2e96:	80 81       	ld	r24, Z
    2e98:	91 81       	ldd	r25, Z+1	; 0x01
    2e9a:	01 97       	sbiw	r24, 0x01	; 1
    2e9c:	f1 f7       	brne	.-4      	; 0x2e9a <analog+0x9c2>
    2e9e:	fe 01       	movw	r30, r28
    2ea0:	e4 55       	subi	r30, 0x54	; 84
    2ea2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea4:	91 83       	std	Z+1, r25	; 0x01
    2ea6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ea8:	de 01       	movw	r26, r28
    2eaa:	a2 55       	subi	r26, 0x52	; 82
    2eac:	bf 4f       	sbci	r27, 0xFF	; 255
    2eae:	fe 01       	movw	r30, r28
    2eb0:	e2 55       	subi	r30, 0x52	; 82
    2eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb4:	80 81       	ld	r24, Z
    2eb6:	91 81       	ldd	r25, Z+1	; 0x01
    2eb8:	01 97       	sbiw	r24, 0x01	; 1
    2eba:	11 96       	adiw	r26, 0x01	; 1
    2ebc:	9c 93       	st	X, r25
    2ebe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ec0:	fe 01       	movw	r30, r28
    2ec2:	e2 55       	subi	r30, 0x52	; 82
    2ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec6:	80 81       	ld	r24, Z
    2ec8:	91 81       	ldd	r25, Z+1	; 0x01
    2eca:	00 97       	sbiw	r24, 0x00	; 0
    2ecc:	d1 f6       	brne	.-76     	; 0x2e82 <analog+0x9aa>
    2ece:	4b c0       	rjmp	.+150    	; 0x2f66 <analog+0xa8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ed0:	8e 01       	movw	r16, r28
    2ed2:	02 55       	subi	r16, 0x52	; 82
    2ed4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ed6:	fe 01       	movw	r30, r28
    2ed8:	e0 55       	subi	r30, 0x50	; 80
    2eda:	ff 4f       	sbci	r31, 0xFF	; 255
    2edc:	60 81       	ld	r22, Z
    2ede:	71 81       	ldd	r23, Z+1	; 0x01
    2ee0:	82 81       	ldd	r24, Z+2	; 0x02
    2ee2:	93 81       	ldd	r25, Z+3	; 0x03
    2ee4:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2ee8:	dc 01       	movw	r26, r24
    2eea:	cb 01       	movw	r24, r22
    2eec:	f8 01       	movw	r30, r16
    2eee:	91 83       	std	Z+1, r25	; 0x01
    2ef0:	80 83       	st	Z, r24
    2ef2:	de 01       	movw	r26, r28
    2ef4:	a6 55       	subi	r26, 0x56	; 86
    2ef6:	bf 4f       	sbci	r27, 0xFF	; 255
    2ef8:	fe 01       	movw	r30, r28
    2efa:	e2 55       	subi	r30, 0x52	; 82
    2efc:	ff 4f       	sbci	r31, 0xFF	; 255
    2efe:	80 81       	ld	r24, Z
    2f00:	91 81       	ldd	r25, Z+1	; 0x01
    2f02:	11 96       	adiw	r26, 0x01	; 1
    2f04:	9c 93       	st	X, r25
    2f06:	8e 93       	st	-X, r24
    2f08:	fe 01       	movw	r30, r28
    2f0a:	e6 55       	subi	r30, 0x56	; 86
    2f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0e:	80 81       	ld	r24, Z
    2f10:	91 81       	ldd	r25, Z+1	; 0x01
    2f12:	01 97       	sbiw	r24, 0x01	; 1
    2f14:	f1 f7       	brne	.-4      	; 0x2f12 <analog+0xa3a>
    2f16:	fe 01       	movw	r30, r28
    2f18:	e6 55       	subi	r30, 0x56	; 86
    2f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f1c:	91 83       	std	Z+1, r25	; 0x01
    2f1e:	80 83       	st	Z, r24
    2f20:	22 c0       	rjmp	.+68     	; 0x2f66 <analog+0xa8e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2f22:	8e 01       	movw	r16, r28
    2f24:	08 54       	subi	r16, 0x48	; 72
    2f26:	1f 4f       	sbci	r17, 0xFF	; 255
    2f28:	fe 01       	movw	r30, r28
    2f2a:	e7 54       	subi	r30, 0x47	; 71
    2f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2e:	60 81       	ld	r22, Z
    2f30:	71 81       	ldd	r23, Z+1	; 0x01
    2f32:	82 81       	ldd	r24, Z+2	; 0x02
    2f34:	93 81       	ldd	r25, Z+3	; 0x03
    2f36:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    2f3a:	dc 01       	movw	r26, r24
    2f3c:	cb 01       	movw	r24, r22
    2f3e:	f8 01       	movw	r30, r16
    2f40:	80 83       	st	Z, r24
    2f42:	de 01       	movw	r26, r28
    2f44:	a7 55       	subi	r26, 0x57	; 87
    2f46:	bf 4f       	sbci	r27, 0xFF	; 255
    2f48:	fe 01       	movw	r30, r28
    2f4a:	e8 54       	subi	r30, 0x48	; 72
    2f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f4e:	80 81       	ld	r24, Z
    2f50:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2f52:	fe 01       	movw	r30, r28
    2f54:	e7 55       	subi	r30, 0x57	; 87
    2f56:	ff 4f       	sbci	r31, 0xFF	; 255
    2f58:	80 81       	ld	r24, Z
    2f5a:	8a 95       	dec	r24
    2f5c:	f1 f7       	brne	.-4      	; 0x2f5a <analog+0xa82>
    2f5e:	fe 01       	movw	r30, r28
    2f60:	e7 55       	subi	r30, 0x57	; 87
    2f62:	ff 4f       	sbci	r31, 0xFF	; 255
    2f64:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    2f66:	a5 e3       	ldi	r26, 0x35	; 53
    2f68:	b0 e0       	ldi	r27, 0x00	; 0
    2f6a:	e5 e3       	ldi	r30, 0x35	; 53
    2f6c:	f0 e0       	ldi	r31, 0x00	; 0
    2f6e:	80 81       	ld	r24, Z
    2f70:	81 60       	ori	r24, 0x01	; 1
    2f72:	8c 93       	st	X, r24
    2f74:	fe 01       	movw	r30, r28
    2f76:	eb 55       	subi	r30, 0x5B	; 91
    2f78:	ff 4f       	sbci	r31, 0xFF	; 255
    2f7a:	80 e0       	ldi	r24, 0x00	; 0
    2f7c:	90 e0       	ldi	r25, 0x00	; 0
    2f7e:	a0 e8       	ldi	r26, 0x80	; 128
    2f80:	bf e3       	ldi	r27, 0x3F	; 63
    2f82:	80 83       	st	Z, r24
    2f84:	91 83       	std	Z+1, r25	; 0x01
    2f86:	a2 83       	std	Z+2, r26	; 0x02
    2f88:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2f8a:	8e 01       	movw	r16, r28
    2f8c:	0f 55       	subi	r16, 0x5F	; 95
    2f8e:	1f 4f       	sbci	r17, 0xFF	; 255
    2f90:	fe 01       	movw	r30, r28
    2f92:	eb 55       	subi	r30, 0x5B	; 91
    2f94:	ff 4f       	sbci	r31, 0xFF	; 255
    2f96:	60 81       	ld	r22, Z
    2f98:	71 81       	ldd	r23, Z+1	; 0x01
    2f9a:	82 81       	ldd	r24, Z+2	; 0x02
    2f9c:	93 81       	ldd	r25, Z+3	; 0x03
    2f9e:	2b ea       	ldi	r18, 0xAB	; 171
    2fa0:	3a ea       	ldi	r19, 0xAA	; 170
    2fa2:	4a ea       	ldi	r20, 0xAA	; 170
    2fa4:	50 e4       	ldi	r21, 0x40	; 64
    2fa6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    2faa:	dc 01       	movw	r26, r24
    2fac:	cb 01       	movw	r24, r22
    2fae:	f8 01       	movw	r30, r16
    2fb0:	80 83       	st	Z, r24
    2fb2:	91 83       	std	Z+1, r25	; 0x01
    2fb4:	a2 83       	std	Z+2, r26	; 0x02
    2fb6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fb8:	fe 01       	movw	r30, r28
    2fba:	ef 55       	subi	r30, 0x5F	; 95
    2fbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2fbe:	60 81       	ld	r22, Z
    2fc0:	71 81       	ldd	r23, Z+1	; 0x01
    2fc2:	82 81       	ldd	r24, Z+2	; 0x02
    2fc4:	93 81       	ldd	r25, Z+3	; 0x03
    2fc6:	20 e0       	ldi	r18, 0x00	; 0
    2fc8:	30 e0       	ldi	r19, 0x00	; 0
    2fca:	40 e8       	ldi	r20, 0x80	; 128
    2fcc:	5f e3       	ldi	r21, 0x3F	; 63
    2fce:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    2fd2:	88 23       	and	r24, r24
    2fd4:	34 f4       	brge	.+12     	; 0x2fe2 <analog+0xb0a>
		__ticks = 1;
    2fd6:	fe 01       	movw	r30, r28
    2fd8:	e0 56       	subi	r30, 0x60	; 96
    2fda:	ff 4f       	sbci	r31, 0xFF	; 255
    2fdc:	81 e0       	ldi	r24, 0x01	; 1
    2fde:	80 83       	st	Z, r24
    2fe0:	e0 c0       	rjmp	.+448    	; 0x31a2 <analog+0xcca>
	else if (__tmp > 255)
    2fe2:	fe 01       	movw	r30, r28
    2fe4:	ef 55       	subi	r30, 0x5F	; 95
    2fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe8:	60 81       	ld	r22, Z
    2fea:	71 81       	ldd	r23, Z+1	; 0x01
    2fec:	82 81       	ldd	r24, Z+2	; 0x02
    2fee:	93 81       	ldd	r25, Z+3	; 0x03
    2ff0:	20 e0       	ldi	r18, 0x00	; 0
    2ff2:	30 e0       	ldi	r19, 0x00	; 0
    2ff4:	4f e7       	ldi	r20, 0x7F	; 127
    2ff6:	53 e4       	ldi	r21, 0x43	; 67
    2ff8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    2ffc:	18 16       	cp	r1, r24
    2ffe:	0c f0       	brlt	.+2      	; 0x3002 <analog+0xb2a>
    3000:	c0 c0       	rjmp	.+384    	; 0x3182 <analog+0xcaa>
	{
		_delay_ms(__us / 1000.0);
    3002:	fe 01       	movw	r30, r28
    3004:	eb 55       	subi	r30, 0x5B	; 91
    3006:	ff 4f       	sbci	r31, 0xFF	; 255
    3008:	60 81       	ld	r22, Z
    300a:	71 81       	ldd	r23, Z+1	; 0x01
    300c:	82 81       	ldd	r24, Z+2	; 0x02
    300e:	93 81       	ldd	r25, Z+3	; 0x03
    3010:	20 e0       	ldi	r18, 0x00	; 0
    3012:	30 e0       	ldi	r19, 0x00	; 0
    3014:	4a e7       	ldi	r20, 0x7A	; 122
    3016:	54 e4       	ldi	r21, 0x44	; 68
    3018:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    301c:	dc 01       	movw	r26, r24
    301e:	cb 01       	movw	r24, r22
    3020:	fe 01       	movw	r30, r28
    3022:	e4 56       	subi	r30, 0x64	; 100
    3024:	ff 4f       	sbci	r31, 0xFF	; 255
    3026:	80 83       	st	Z, r24
    3028:	91 83       	std	Z+1, r25	; 0x01
    302a:	a2 83       	std	Z+2, r26	; 0x02
    302c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    302e:	8e 01       	movw	r16, r28
    3030:	08 56       	subi	r16, 0x68	; 104
    3032:	1f 4f       	sbci	r17, 0xFF	; 255
    3034:	fe 01       	movw	r30, r28
    3036:	e4 56       	subi	r30, 0x64	; 100
    3038:	ff 4f       	sbci	r31, 0xFF	; 255
    303a:	60 81       	ld	r22, Z
    303c:	71 81       	ldd	r23, Z+1	; 0x01
    303e:	82 81       	ldd	r24, Z+2	; 0x02
    3040:	93 81       	ldd	r25, Z+3	; 0x03
    3042:	20 e0       	ldi	r18, 0x00	; 0
    3044:	30 e0       	ldi	r19, 0x00	; 0
    3046:	4a e7       	ldi	r20, 0x7A	; 122
    3048:	55 e4       	ldi	r21, 0x45	; 69
    304a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    304e:	dc 01       	movw	r26, r24
    3050:	cb 01       	movw	r24, r22
    3052:	f8 01       	movw	r30, r16
    3054:	80 83       	st	Z, r24
    3056:	91 83       	std	Z+1, r25	; 0x01
    3058:	a2 83       	std	Z+2, r26	; 0x02
    305a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    305c:	fe 01       	movw	r30, r28
    305e:	e8 56       	subi	r30, 0x68	; 104
    3060:	ff 4f       	sbci	r31, 0xFF	; 255
    3062:	60 81       	ld	r22, Z
    3064:	71 81       	ldd	r23, Z+1	; 0x01
    3066:	82 81       	ldd	r24, Z+2	; 0x02
    3068:	93 81       	ldd	r25, Z+3	; 0x03
    306a:	20 e0       	ldi	r18, 0x00	; 0
    306c:	30 e0       	ldi	r19, 0x00	; 0
    306e:	40 e8       	ldi	r20, 0x80	; 128
    3070:	5f e3       	ldi	r21, 0x3F	; 63
    3072:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    3076:	88 23       	and	r24, r24
    3078:	44 f4       	brge	.+16     	; 0x308a <analog+0xbb2>
		__ticks = 1;
    307a:	fe 01       	movw	r30, r28
    307c:	ea 56       	subi	r30, 0x6A	; 106
    307e:	ff 4f       	sbci	r31, 0xFF	; 255
    3080:	81 e0       	ldi	r24, 0x01	; 1
    3082:	90 e0       	ldi	r25, 0x00	; 0
    3084:	91 83       	std	Z+1, r25	; 0x01
    3086:	80 83       	st	Z, r24
    3088:	64 c0       	rjmp	.+200    	; 0x3152 <analog+0xc7a>
	else if (__tmp > 65535)
    308a:	fe 01       	movw	r30, r28
    308c:	e8 56       	subi	r30, 0x68	; 104
    308e:	ff 4f       	sbci	r31, 0xFF	; 255
    3090:	60 81       	ld	r22, Z
    3092:	71 81       	ldd	r23, Z+1	; 0x01
    3094:	82 81       	ldd	r24, Z+2	; 0x02
    3096:	93 81       	ldd	r25, Z+3	; 0x03
    3098:	20 e0       	ldi	r18, 0x00	; 0
    309a:	3f ef       	ldi	r19, 0xFF	; 255
    309c:	4f e7       	ldi	r20, 0x7F	; 127
    309e:	57 e4       	ldi	r21, 0x47	; 71
    30a0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    30a4:	18 16       	cp	r1, r24
    30a6:	0c f0       	brlt	.+2      	; 0x30aa <analog+0xbd2>
    30a8:	43 c0       	rjmp	.+134    	; 0x3130 <analog+0xc58>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30aa:	fe 01       	movw	r30, r28
    30ac:	e4 56       	subi	r30, 0x64	; 100
    30ae:	ff 4f       	sbci	r31, 0xFF	; 255
    30b0:	60 81       	ld	r22, Z
    30b2:	71 81       	ldd	r23, Z+1	; 0x01
    30b4:	82 81       	ldd	r24, Z+2	; 0x02
    30b6:	93 81       	ldd	r25, Z+3	; 0x03
    30b8:	20 e0       	ldi	r18, 0x00	; 0
    30ba:	30 e0       	ldi	r19, 0x00	; 0
    30bc:	40 e2       	ldi	r20, 0x20	; 32
    30be:	51 e4       	ldi	r21, 0x41	; 65
    30c0:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    30c4:	dc 01       	movw	r26, r24
    30c6:	cb 01       	movw	r24, r22
    30c8:	8e 01       	movw	r16, r28
    30ca:	0a 56       	subi	r16, 0x6A	; 106
    30cc:	1f 4f       	sbci	r17, 0xFF	; 255
    30ce:	bc 01       	movw	r22, r24
    30d0:	cd 01       	movw	r24, r26
    30d2:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    30d6:	dc 01       	movw	r26, r24
    30d8:	cb 01       	movw	r24, r22
    30da:	f8 01       	movw	r30, r16
    30dc:	91 83       	std	Z+1, r25	; 0x01
    30de:	80 83       	st	Z, r24
    30e0:	1f c0       	rjmp	.+62     	; 0x3120 <analog+0xc48>
    30e2:	fe 01       	movw	r30, r28
    30e4:	ec 56       	subi	r30, 0x6C	; 108
    30e6:	ff 4f       	sbci	r31, 0xFF	; 255
    30e8:	80 e9       	ldi	r24, 0x90	; 144
    30ea:	91 e0       	ldi	r25, 0x01	; 1
    30ec:	91 83       	std	Z+1, r25	; 0x01
    30ee:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    30f0:	fe 01       	movw	r30, r28
    30f2:	ec 56       	subi	r30, 0x6C	; 108
    30f4:	ff 4f       	sbci	r31, 0xFF	; 255
    30f6:	80 81       	ld	r24, Z
    30f8:	91 81       	ldd	r25, Z+1	; 0x01
    30fa:	01 97       	sbiw	r24, 0x01	; 1
    30fc:	f1 f7       	brne	.-4      	; 0x30fa <analog+0xc22>
    30fe:	fe 01       	movw	r30, r28
    3100:	ec 56       	subi	r30, 0x6C	; 108
    3102:	ff 4f       	sbci	r31, 0xFF	; 255
    3104:	91 83       	std	Z+1, r25	; 0x01
    3106:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3108:	de 01       	movw	r26, r28
    310a:	aa 56       	subi	r26, 0x6A	; 106
    310c:	bf 4f       	sbci	r27, 0xFF	; 255
    310e:	fe 01       	movw	r30, r28
    3110:	ea 56       	subi	r30, 0x6A	; 106
    3112:	ff 4f       	sbci	r31, 0xFF	; 255
    3114:	80 81       	ld	r24, Z
    3116:	91 81       	ldd	r25, Z+1	; 0x01
    3118:	01 97       	sbiw	r24, 0x01	; 1
    311a:	11 96       	adiw	r26, 0x01	; 1
    311c:	9c 93       	st	X, r25
    311e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3120:	fe 01       	movw	r30, r28
    3122:	ea 56       	subi	r30, 0x6A	; 106
    3124:	ff 4f       	sbci	r31, 0xFF	; 255
    3126:	80 81       	ld	r24, Z
    3128:	91 81       	ldd	r25, Z+1	; 0x01
    312a:	00 97       	sbiw	r24, 0x00	; 0
    312c:	d1 f6       	brne	.-76     	; 0x30e2 <analog+0xc0a>
    312e:	4b c0       	rjmp	.+150    	; 0x31c6 <analog+0xcee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3130:	8e 01       	movw	r16, r28
    3132:	0a 56       	subi	r16, 0x6A	; 106
    3134:	1f 4f       	sbci	r17, 0xFF	; 255
    3136:	fe 01       	movw	r30, r28
    3138:	e8 56       	subi	r30, 0x68	; 104
    313a:	ff 4f       	sbci	r31, 0xFF	; 255
    313c:	60 81       	ld	r22, Z
    313e:	71 81       	ldd	r23, Z+1	; 0x01
    3140:	82 81       	ldd	r24, Z+2	; 0x02
    3142:	93 81       	ldd	r25, Z+3	; 0x03
    3144:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3148:	dc 01       	movw	r26, r24
    314a:	cb 01       	movw	r24, r22
    314c:	f8 01       	movw	r30, r16
    314e:	91 83       	std	Z+1, r25	; 0x01
    3150:	80 83       	st	Z, r24
    3152:	de 01       	movw	r26, r28
    3154:	ae 56       	subi	r26, 0x6E	; 110
    3156:	bf 4f       	sbci	r27, 0xFF	; 255
    3158:	fe 01       	movw	r30, r28
    315a:	ea 56       	subi	r30, 0x6A	; 106
    315c:	ff 4f       	sbci	r31, 0xFF	; 255
    315e:	80 81       	ld	r24, Z
    3160:	91 81       	ldd	r25, Z+1	; 0x01
    3162:	11 96       	adiw	r26, 0x01	; 1
    3164:	9c 93       	st	X, r25
    3166:	8e 93       	st	-X, r24
    3168:	fe 01       	movw	r30, r28
    316a:	ee 56       	subi	r30, 0x6E	; 110
    316c:	ff 4f       	sbci	r31, 0xFF	; 255
    316e:	80 81       	ld	r24, Z
    3170:	91 81       	ldd	r25, Z+1	; 0x01
    3172:	01 97       	sbiw	r24, 0x01	; 1
    3174:	f1 f7       	brne	.-4      	; 0x3172 <analog+0xc9a>
    3176:	fe 01       	movw	r30, r28
    3178:	ee 56       	subi	r30, 0x6E	; 110
    317a:	ff 4f       	sbci	r31, 0xFF	; 255
    317c:	91 83       	std	Z+1, r25	; 0x01
    317e:	80 83       	st	Z, r24
    3180:	22 c0       	rjmp	.+68     	; 0x31c6 <analog+0xcee>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3182:	8e 01       	movw	r16, r28
    3184:	00 56       	subi	r16, 0x60	; 96
    3186:	1f 4f       	sbci	r17, 0xFF	; 255
    3188:	fe 01       	movw	r30, r28
    318a:	ef 55       	subi	r30, 0x5F	; 95
    318c:	ff 4f       	sbci	r31, 0xFF	; 255
    318e:	60 81       	ld	r22, Z
    3190:	71 81       	ldd	r23, Z+1	; 0x01
    3192:	82 81       	ldd	r24, Z+2	; 0x02
    3194:	93 81       	ldd	r25, Z+3	; 0x03
    3196:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    319a:	dc 01       	movw	r26, r24
    319c:	cb 01       	movw	r24, r22
    319e:	f8 01       	movw	r30, r16
    31a0:	80 83       	st	Z, r24
    31a2:	de 01       	movw	r26, r28
    31a4:	af 56       	subi	r26, 0x6F	; 111
    31a6:	bf 4f       	sbci	r27, 0xFF	; 255
    31a8:	fe 01       	movw	r30, r28
    31aa:	e0 56       	subi	r30, 0x60	; 96
    31ac:	ff 4f       	sbci	r31, 0xFF	; 255
    31ae:	80 81       	ld	r24, Z
    31b0:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    31b2:	fe 01       	movw	r30, r28
    31b4:	ef 56       	subi	r30, 0x6F	; 111
    31b6:	ff 4f       	sbci	r31, 0xFF	; 255
    31b8:	80 81       	ld	r24, Z
    31ba:	8a 95       	dec	r24
    31bc:	f1 f7       	brne	.-4      	; 0x31ba <analog+0xce2>
    31be:	fe 01       	movw	r30, r28
    31c0:	ef 56       	subi	r30, 0x6F	; 111
    31c2:	ff 4f       	sbci	r31, 0xFF	; 255
    31c4:	80 83       	st	Z, r24

	
	
	ps2byte = 0x44;			//byte2
	
	for(i=0;i<8;i++)
    31c6:	80 91 66 00 	lds	r24, 0x0066
    31ca:	90 91 67 00 	lds	r25, 0x0067
    31ce:	01 96       	adiw	r24, 0x01	; 1
    31d0:	90 93 67 00 	sts	0x0067, r25
    31d4:	80 93 66 00 	sts	0x0066, r24
    31d8:	80 91 66 00 	lds	r24, 0x0066
    31dc:	90 91 67 00 	lds	r25, 0x0067
    31e0:	88 30       	cpi	r24, 0x08	; 8
    31e2:	91 05       	cpc	r25, r1
    31e4:	0c f4       	brge	.+2      	; 0x31e8 <analog+0xd10>
    31e6:	6d cd       	rjmp	.-1318   	; 0x2cc2 <analog+0x7ea>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    31e8:	a5 e3       	ldi	r26, 0x35	; 53
    31ea:	b0 e0       	ldi	r27, 0x00	; 0
    31ec:	e5 e3       	ldi	r30, 0x35	; 53
    31ee:	f0 e0       	ldi	r31, 0x00	; 0
    31f0:	80 81       	ld	r24, Z
    31f2:	84 60       	ori	r24, 0x04	; 4
    31f4:	8c 93       	st	X, r24
	
	
	
		
	for(i=0;i<8;i++)		//byte3
    31f6:	10 92 67 00 	sts	0x0067, r1
    31fa:	10 92 66 00 	sts	0x0066, r1
    31fe:	70 c2       	rjmp	.+1248   	; 0x36e0 <analog+0x1208>
	{	
		cbi(ps2port,ps2cmd);
    3200:	a5 e3       	ldi	r26, 0x35	; 53
    3202:	b0 e0       	ldi	r27, 0x00	; 0
    3204:	e5 e3       	ldi	r30, 0x35	; 53
    3206:	f0 e0       	ldi	r31, 0x00	; 0
    3208:	80 81       	ld	r24, Z
    320a:	8b 7f       	andi	r24, 0xFB	; 251
    320c:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk);
    320e:	a5 e3       	ldi	r26, 0x35	; 53
    3210:	b0 e0       	ldi	r27, 0x00	; 0
    3212:	e5 e3       	ldi	r30, 0x35	; 53
    3214:	f0 e0       	ldi	r31, 0x00	; 0
    3216:	80 81       	ld	r24, Z
    3218:	8e 7f       	andi	r24, 0xFE	; 254
    321a:	8c 93       	st	X, r24
    321c:	fe 01       	movw	r30, r28
    321e:	e3 57       	subi	r30, 0x73	; 115
    3220:	ff 4f       	sbci	r31, 0xFF	; 255
    3222:	80 e0       	ldi	r24, 0x00	; 0
    3224:	90 e0       	ldi	r25, 0x00	; 0
    3226:	a0 e8       	ldi	r26, 0x80	; 128
    3228:	bf e3       	ldi	r27, 0x3F	; 63
    322a:	80 83       	st	Z, r24
    322c:	91 83       	std	Z+1, r25	; 0x01
    322e:	a2 83       	std	Z+2, r26	; 0x02
    3230:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3232:	8e 01       	movw	r16, r28
    3234:	07 57       	subi	r16, 0x77	; 119
    3236:	1f 4f       	sbci	r17, 0xFF	; 255
    3238:	fe 01       	movw	r30, r28
    323a:	e3 57       	subi	r30, 0x73	; 115
    323c:	ff 4f       	sbci	r31, 0xFF	; 255
    323e:	60 81       	ld	r22, Z
    3240:	71 81       	ldd	r23, Z+1	; 0x01
    3242:	82 81       	ldd	r24, Z+2	; 0x02
    3244:	93 81       	ldd	r25, Z+3	; 0x03
    3246:	2b ea       	ldi	r18, 0xAB	; 171
    3248:	3a ea       	ldi	r19, 0xAA	; 170
    324a:	4a ea       	ldi	r20, 0xAA	; 170
    324c:	50 e4       	ldi	r21, 0x40	; 64
    324e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3252:	dc 01       	movw	r26, r24
    3254:	cb 01       	movw	r24, r22
    3256:	f8 01       	movw	r30, r16
    3258:	80 83       	st	Z, r24
    325a:	91 83       	std	Z+1, r25	; 0x01
    325c:	a2 83       	std	Z+2, r26	; 0x02
    325e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3260:	fe 01       	movw	r30, r28
    3262:	e7 57       	subi	r30, 0x77	; 119
    3264:	ff 4f       	sbci	r31, 0xFF	; 255
    3266:	60 81       	ld	r22, Z
    3268:	71 81       	ldd	r23, Z+1	; 0x01
    326a:	82 81       	ldd	r24, Z+2	; 0x02
    326c:	93 81       	ldd	r25, Z+3	; 0x03
    326e:	20 e0       	ldi	r18, 0x00	; 0
    3270:	30 e0       	ldi	r19, 0x00	; 0
    3272:	40 e8       	ldi	r20, 0x80	; 128
    3274:	5f e3       	ldi	r21, 0x3F	; 63
    3276:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    327a:	88 23       	and	r24, r24
    327c:	34 f4       	brge	.+12     	; 0x328a <analog+0xdb2>
		__ticks = 1;
    327e:	fe 01       	movw	r30, r28
    3280:	e8 57       	subi	r30, 0x78	; 120
    3282:	ff 4f       	sbci	r31, 0xFF	; 255
    3284:	81 e0       	ldi	r24, 0x01	; 1
    3286:	80 83       	st	Z, r24
    3288:	e0 c0       	rjmp	.+448    	; 0x344a <analog+0xf72>
	else if (__tmp > 255)
    328a:	fe 01       	movw	r30, r28
    328c:	e7 57       	subi	r30, 0x77	; 119
    328e:	ff 4f       	sbci	r31, 0xFF	; 255
    3290:	60 81       	ld	r22, Z
    3292:	71 81       	ldd	r23, Z+1	; 0x01
    3294:	82 81       	ldd	r24, Z+2	; 0x02
    3296:	93 81       	ldd	r25, Z+3	; 0x03
    3298:	20 e0       	ldi	r18, 0x00	; 0
    329a:	30 e0       	ldi	r19, 0x00	; 0
    329c:	4f e7       	ldi	r20, 0x7F	; 127
    329e:	53 e4       	ldi	r21, 0x43	; 67
    32a0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    32a4:	18 16       	cp	r1, r24
    32a6:	0c f0       	brlt	.+2      	; 0x32aa <analog+0xdd2>
    32a8:	c0 c0       	rjmp	.+384    	; 0x342a <analog+0xf52>
	{
		_delay_ms(__us / 1000.0);
    32aa:	fe 01       	movw	r30, r28
    32ac:	e3 57       	subi	r30, 0x73	; 115
    32ae:	ff 4f       	sbci	r31, 0xFF	; 255
    32b0:	60 81       	ld	r22, Z
    32b2:	71 81       	ldd	r23, Z+1	; 0x01
    32b4:	82 81       	ldd	r24, Z+2	; 0x02
    32b6:	93 81       	ldd	r25, Z+3	; 0x03
    32b8:	20 e0       	ldi	r18, 0x00	; 0
    32ba:	30 e0       	ldi	r19, 0x00	; 0
    32bc:	4a e7       	ldi	r20, 0x7A	; 122
    32be:	54 e4       	ldi	r21, 0x44	; 68
    32c0:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    32c4:	dc 01       	movw	r26, r24
    32c6:	cb 01       	movw	r24, r22
    32c8:	fe 01       	movw	r30, r28
    32ca:	ec 57       	subi	r30, 0x7C	; 124
    32cc:	ff 4f       	sbci	r31, 0xFF	; 255
    32ce:	80 83       	st	Z, r24
    32d0:	91 83       	std	Z+1, r25	; 0x01
    32d2:	a2 83       	std	Z+2, r26	; 0x02
    32d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32d6:	8e 01       	movw	r16, r28
    32d8:	00 58       	subi	r16, 0x80	; 128
    32da:	1f 4f       	sbci	r17, 0xFF	; 255
    32dc:	fe 01       	movw	r30, r28
    32de:	ec 57       	subi	r30, 0x7C	; 124
    32e0:	ff 4f       	sbci	r31, 0xFF	; 255
    32e2:	60 81       	ld	r22, Z
    32e4:	71 81       	ldd	r23, Z+1	; 0x01
    32e6:	82 81       	ldd	r24, Z+2	; 0x02
    32e8:	93 81       	ldd	r25, Z+3	; 0x03
    32ea:	20 e0       	ldi	r18, 0x00	; 0
    32ec:	30 e0       	ldi	r19, 0x00	; 0
    32ee:	4a e7       	ldi	r20, 0x7A	; 122
    32f0:	55 e4       	ldi	r21, 0x45	; 69
    32f2:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    32f6:	dc 01       	movw	r26, r24
    32f8:	cb 01       	movw	r24, r22
    32fa:	f8 01       	movw	r30, r16
    32fc:	80 83       	st	Z, r24
    32fe:	91 83       	std	Z+1, r25	; 0x01
    3300:	a2 83       	std	Z+2, r26	; 0x02
    3302:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3304:	fe 01       	movw	r30, r28
    3306:	e0 58       	subi	r30, 0x80	; 128
    3308:	ff 4f       	sbci	r31, 0xFF	; 255
    330a:	60 81       	ld	r22, Z
    330c:	71 81       	ldd	r23, Z+1	; 0x01
    330e:	82 81       	ldd	r24, Z+2	; 0x02
    3310:	93 81       	ldd	r25, Z+3	; 0x03
    3312:	20 e0       	ldi	r18, 0x00	; 0
    3314:	30 e0       	ldi	r19, 0x00	; 0
    3316:	40 e8       	ldi	r20, 0x80	; 128
    3318:	5f e3       	ldi	r21, 0x3F	; 63
    331a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    331e:	88 23       	and	r24, r24
    3320:	44 f4       	brge	.+16     	; 0x3332 <analog+0xe5a>
		__ticks = 1;
    3322:	fe 01       	movw	r30, r28
    3324:	e2 58       	subi	r30, 0x82	; 130
    3326:	ff 4f       	sbci	r31, 0xFF	; 255
    3328:	81 e0       	ldi	r24, 0x01	; 1
    332a:	90 e0       	ldi	r25, 0x00	; 0
    332c:	91 83       	std	Z+1, r25	; 0x01
    332e:	80 83       	st	Z, r24
    3330:	64 c0       	rjmp	.+200    	; 0x33fa <analog+0xf22>
	else if (__tmp > 65535)
    3332:	fe 01       	movw	r30, r28
    3334:	e0 58       	subi	r30, 0x80	; 128
    3336:	ff 4f       	sbci	r31, 0xFF	; 255
    3338:	60 81       	ld	r22, Z
    333a:	71 81       	ldd	r23, Z+1	; 0x01
    333c:	82 81       	ldd	r24, Z+2	; 0x02
    333e:	93 81       	ldd	r25, Z+3	; 0x03
    3340:	20 e0       	ldi	r18, 0x00	; 0
    3342:	3f ef       	ldi	r19, 0xFF	; 255
    3344:	4f e7       	ldi	r20, 0x7F	; 127
    3346:	57 e4       	ldi	r21, 0x47	; 71
    3348:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    334c:	18 16       	cp	r1, r24
    334e:	0c f0       	brlt	.+2      	; 0x3352 <analog+0xe7a>
    3350:	43 c0       	rjmp	.+134    	; 0x33d8 <analog+0xf00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3352:	fe 01       	movw	r30, r28
    3354:	ec 57       	subi	r30, 0x7C	; 124
    3356:	ff 4f       	sbci	r31, 0xFF	; 255
    3358:	60 81       	ld	r22, Z
    335a:	71 81       	ldd	r23, Z+1	; 0x01
    335c:	82 81       	ldd	r24, Z+2	; 0x02
    335e:	93 81       	ldd	r25, Z+3	; 0x03
    3360:	20 e0       	ldi	r18, 0x00	; 0
    3362:	30 e0       	ldi	r19, 0x00	; 0
    3364:	40 e2       	ldi	r20, 0x20	; 32
    3366:	51 e4       	ldi	r21, 0x41	; 65
    3368:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    336c:	dc 01       	movw	r26, r24
    336e:	cb 01       	movw	r24, r22
    3370:	8e 01       	movw	r16, r28
    3372:	02 58       	subi	r16, 0x82	; 130
    3374:	1f 4f       	sbci	r17, 0xFF	; 255
    3376:	bc 01       	movw	r22, r24
    3378:	cd 01       	movw	r24, r26
    337a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    337e:	dc 01       	movw	r26, r24
    3380:	cb 01       	movw	r24, r22
    3382:	f8 01       	movw	r30, r16
    3384:	91 83       	std	Z+1, r25	; 0x01
    3386:	80 83       	st	Z, r24
    3388:	1f c0       	rjmp	.+62     	; 0x33c8 <analog+0xef0>
    338a:	fe 01       	movw	r30, r28
    338c:	e4 58       	subi	r30, 0x84	; 132
    338e:	ff 4f       	sbci	r31, 0xFF	; 255
    3390:	80 e9       	ldi	r24, 0x90	; 144
    3392:	91 e0       	ldi	r25, 0x01	; 1
    3394:	91 83       	std	Z+1, r25	; 0x01
    3396:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3398:	fe 01       	movw	r30, r28
    339a:	e4 58       	subi	r30, 0x84	; 132
    339c:	ff 4f       	sbci	r31, 0xFF	; 255
    339e:	80 81       	ld	r24, Z
    33a0:	91 81       	ldd	r25, Z+1	; 0x01
    33a2:	01 97       	sbiw	r24, 0x01	; 1
    33a4:	f1 f7       	brne	.-4      	; 0x33a2 <analog+0xeca>
    33a6:	fe 01       	movw	r30, r28
    33a8:	e4 58       	subi	r30, 0x84	; 132
    33aa:	ff 4f       	sbci	r31, 0xFF	; 255
    33ac:	91 83       	std	Z+1, r25	; 0x01
    33ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33b0:	de 01       	movw	r26, r28
    33b2:	a2 58       	subi	r26, 0x82	; 130
    33b4:	bf 4f       	sbci	r27, 0xFF	; 255
    33b6:	fe 01       	movw	r30, r28
    33b8:	e2 58       	subi	r30, 0x82	; 130
    33ba:	ff 4f       	sbci	r31, 0xFF	; 255
    33bc:	80 81       	ld	r24, Z
    33be:	91 81       	ldd	r25, Z+1	; 0x01
    33c0:	01 97       	sbiw	r24, 0x01	; 1
    33c2:	11 96       	adiw	r26, 0x01	; 1
    33c4:	9c 93       	st	X, r25
    33c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33c8:	fe 01       	movw	r30, r28
    33ca:	e2 58       	subi	r30, 0x82	; 130
    33cc:	ff 4f       	sbci	r31, 0xFF	; 255
    33ce:	80 81       	ld	r24, Z
    33d0:	91 81       	ldd	r25, Z+1	; 0x01
    33d2:	00 97       	sbiw	r24, 0x00	; 0
    33d4:	d1 f6       	brne	.-76     	; 0x338a <analog+0xeb2>
    33d6:	4b c0       	rjmp	.+150    	; 0x346e <analog+0xf96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33d8:	8e 01       	movw	r16, r28
    33da:	02 58       	subi	r16, 0x82	; 130
    33dc:	1f 4f       	sbci	r17, 0xFF	; 255
    33de:	fe 01       	movw	r30, r28
    33e0:	e0 58       	subi	r30, 0x80	; 128
    33e2:	ff 4f       	sbci	r31, 0xFF	; 255
    33e4:	60 81       	ld	r22, Z
    33e6:	71 81       	ldd	r23, Z+1	; 0x01
    33e8:	82 81       	ldd	r24, Z+2	; 0x02
    33ea:	93 81       	ldd	r25, Z+3	; 0x03
    33ec:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    33f0:	dc 01       	movw	r26, r24
    33f2:	cb 01       	movw	r24, r22
    33f4:	f8 01       	movw	r30, r16
    33f6:	91 83       	std	Z+1, r25	; 0x01
    33f8:	80 83       	st	Z, r24
    33fa:	de 01       	movw	r26, r28
    33fc:	a6 58       	subi	r26, 0x86	; 134
    33fe:	bf 4f       	sbci	r27, 0xFF	; 255
    3400:	fe 01       	movw	r30, r28
    3402:	e2 58       	subi	r30, 0x82	; 130
    3404:	ff 4f       	sbci	r31, 0xFF	; 255
    3406:	80 81       	ld	r24, Z
    3408:	91 81       	ldd	r25, Z+1	; 0x01
    340a:	11 96       	adiw	r26, 0x01	; 1
    340c:	9c 93       	st	X, r25
    340e:	8e 93       	st	-X, r24
    3410:	fe 01       	movw	r30, r28
    3412:	e6 58       	subi	r30, 0x86	; 134
    3414:	ff 4f       	sbci	r31, 0xFF	; 255
    3416:	80 81       	ld	r24, Z
    3418:	91 81       	ldd	r25, Z+1	; 0x01
    341a:	01 97       	sbiw	r24, 0x01	; 1
    341c:	f1 f7       	brne	.-4      	; 0x341a <analog+0xf42>
    341e:	fe 01       	movw	r30, r28
    3420:	e6 58       	subi	r30, 0x86	; 134
    3422:	ff 4f       	sbci	r31, 0xFF	; 255
    3424:	91 83       	std	Z+1, r25	; 0x01
    3426:	80 83       	st	Z, r24
    3428:	22 c0       	rjmp	.+68     	; 0x346e <analog+0xf96>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    342a:	8e 01       	movw	r16, r28
    342c:	08 57       	subi	r16, 0x78	; 120
    342e:	1f 4f       	sbci	r17, 0xFF	; 255
    3430:	fe 01       	movw	r30, r28
    3432:	e7 57       	subi	r30, 0x77	; 119
    3434:	ff 4f       	sbci	r31, 0xFF	; 255
    3436:	60 81       	ld	r22, Z
    3438:	71 81       	ldd	r23, Z+1	; 0x01
    343a:	82 81       	ldd	r24, Z+2	; 0x02
    343c:	93 81       	ldd	r25, Z+3	; 0x03
    343e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3442:	dc 01       	movw	r26, r24
    3444:	cb 01       	movw	r24, r22
    3446:	f8 01       	movw	r30, r16
    3448:	80 83       	st	Z, r24
    344a:	de 01       	movw	r26, r28
    344c:	a7 58       	subi	r26, 0x87	; 135
    344e:	bf 4f       	sbci	r27, 0xFF	; 255
    3450:	fe 01       	movw	r30, r28
    3452:	e8 57       	subi	r30, 0x78	; 120
    3454:	ff 4f       	sbci	r31, 0xFF	; 255
    3456:	80 81       	ld	r24, Z
    3458:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    345a:	fe 01       	movw	r30, r28
    345c:	e7 58       	subi	r30, 0x87	; 135
    345e:	ff 4f       	sbci	r31, 0xFF	; 255
    3460:	80 81       	ld	r24, Z
    3462:	8a 95       	dec	r24
    3464:	f1 f7       	brne	.-4      	; 0x3462 <analog+0xf8a>
    3466:	fe 01       	movw	r30, r28
    3468:	e7 58       	subi	r30, 0x87	; 135
    346a:	ff 4f       	sbci	r31, 0xFF	; 255
    346c:	80 83       	st	Z, r24
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
    346e:	a5 e3       	ldi	r26, 0x35	; 53
    3470:	b0 e0       	ldi	r27, 0x00	; 0
    3472:	e5 e3       	ldi	r30, 0x35	; 53
    3474:	f0 e0       	ldi	r31, 0x00	; 0
    3476:	80 81       	ld	r24, Z
    3478:	81 60       	ori	r24, 0x01	; 1
    347a:	8c 93       	st	X, r24
    347c:	fe 01       	movw	r30, r28
    347e:	eb 58       	subi	r30, 0x8B	; 139
    3480:	ff 4f       	sbci	r31, 0xFF	; 255
    3482:	80 e0       	ldi	r24, 0x00	; 0
    3484:	90 e0       	ldi	r25, 0x00	; 0
    3486:	a0 e8       	ldi	r26, 0x80	; 128
    3488:	bf e3       	ldi	r27, 0x3F	; 63
    348a:	80 83       	st	Z, r24
    348c:	91 83       	std	Z+1, r25	; 0x01
    348e:	a2 83       	std	Z+2, r26	; 0x02
    3490:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3492:	8e 01       	movw	r16, r28
    3494:	0f 58       	subi	r16, 0x8F	; 143
    3496:	1f 4f       	sbci	r17, 0xFF	; 255
    3498:	fe 01       	movw	r30, r28
    349a:	eb 58       	subi	r30, 0x8B	; 139
    349c:	ff 4f       	sbci	r31, 0xFF	; 255
    349e:	60 81       	ld	r22, Z
    34a0:	71 81       	ldd	r23, Z+1	; 0x01
    34a2:	82 81       	ldd	r24, Z+2	; 0x02
    34a4:	93 81       	ldd	r25, Z+3	; 0x03
    34a6:	2b ea       	ldi	r18, 0xAB	; 171
    34a8:	3a ea       	ldi	r19, 0xAA	; 170
    34aa:	4a ea       	ldi	r20, 0xAA	; 170
    34ac:	50 e4       	ldi	r21, 0x40	; 64
    34ae:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    34b2:	dc 01       	movw	r26, r24
    34b4:	cb 01       	movw	r24, r22
    34b6:	f8 01       	movw	r30, r16
    34b8:	80 83       	st	Z, r24
    34ba:	91 83       	std	Z+1, r25	; 0x01
    34bc:	a2 83       	std	Z+2, r26	; 0x02
    34be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34c0:	fe 01       	movw	r30, r28
    34c2:	ef 58       	subi	r30, 0x8F	; 143
    34c4:	ff 4f       	sbci	r31, 0xFF	; 255
    34c6:	60 81       	ld	r22, Z
    34c8:	71 81       	ldd	r23, Z+1	; 0x01
    34ca:	82 81       	ldd	r24, Z+2	; 0x02
    34cc:	93 81       	ldd	r25, Z+3	; 0x03
    34ce:	20 e0       	ldi	r18, 0x00	; 0
    34d0:	30 e0       	ldi	r19, 0x00	; 0
    34d2:	40 e8       	ldi	r20, 0x80	; 128
    34d4:	5f e3       	ldi	r21, 0x3F	; 63
    34d6:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    34da:	88 23       	and	r24, r24
    34dc:	34 f4       	brge	.+12     	; 0x34ea <analog+0x1012>
		__ticks = 1;
    34de:	fe 01       	movw	r30, r28
    34e0:	e0 59       	subi	r30, 0x90	; 144
    34e2:	ff 4f       	sbci	r31, 0xFF	; 255
    34e4:	81 e0       	ldi	r24, 0x01	; 1
    34e6:	80 83       	st	Z, r24
    34e8:	e0 c0       	rjmp	.+448    	; 0x36aa <analog+0x11d2>
	else if (__tmp > 255)
    34ea:	fe 01       	movw	r30, r28
    34ec:	ef 58       	subi	r30, 0x8F	; 143
    34ee:	ff 4f       	sbci	r31, 0xFF	; 255
    34f0:	60 81       	ld	r22, Z
    34f2:	71 81       	ldd	r23, Z+1	; 0x01
    34f4:	82 81       	ldd	r24, Z+2	; 0x02
    34f6:	93 81       	ldd	r25, Z+3	; 0x03
    34f8:	20 e0       	ldi	r18, 0x00	; 0
    34fa:	30 e0       	ldi	r19, 0x00	; 0
    34fc:	4f e7       	ldi	r20, 0x7F	; 127
    34fe:	53 e4       	ldi	r21, 0x43	; 67
    3500:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    3504:	18 16       	cp	r1, r24
    3506:	0c f0       	brlt	.+2      	; 0x350a <analog+0x1032>
    3508:	c0 c0       	rjmp	.+384    	; 0x368a <analog+0x11b2>
	{
		_delay_ms(__us / 1000.0);
    350a:	fe 01       	movw	r30, r28
    350c:	eb 58       	subi	r30, 0x8B	; 139
    350e:	ff 4f       	sbci	r31, 0xFF	; 255
    3510:	60 81       	ld	r22, Z
    3512:	71 81       	ldd	r23, Z+1	; 0x01
    3514:	82 81       	ldd	r24, Z+2	; 0x02
    3516:	93 81       	ldd	r25, Z+3	; 0x03
    3518:	20 e0       	ldi	r18, 0x00	; 0
    351a:	30 e0       	ldi	r19, 0x00	; 0
    351c:	4a e7       	ldi	r20, 0x7A	; 122
    351e:	54 e4       	ldi	r21, 0x44	; 68
    3520:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    3524:	dc 01       	movw	r26, r24
    3526:	cb 01       	movw	r24, r22
    3528:	fe 01       	movw	r30, r28
    352a:	e4 59       	subi	r30, 0x94	; 148
    352c:	ff 4f       	sbci	r31, 0xFF	; 255
    352e:	80 83       	st	Z, r24
    3530:	91 83       	std	Z+1, r25	; 0x01
    3532:	a2 83       	std	Z+2, r26	; 0x02
    3534:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3536:	8e 01       	movw	r16, r28
    3538:	08 59       	subi	r16, 0x98	; 152
    353a:	1f 4f       	sbci	r17, 0xFF	; 255
    353c:	fe 01       	movw	r30, r28
    353e:	e4 59       	subi	r30, 0x94	; 148
    3540:	ff 4f       	sbci	r31, 0xFF	; 255
    3542:	60 81       	ld	r22, Z
    3544:	71 81       	ldd	r23, Z+1	; 0x01
    3546:	82 81       	ldd	r24, Z+2	; 0x02
    3548:	93 81       	ldd	r25, Z+3	; 0x03
    354a:	20 e0       	ldi	r18, 0x00	; 0
    354c:	30 e0       	ldi	r19, 0x00	; 0
    354e:	4a e7       	ldi	r20, 0x7A	; 122
    3550:	55 e4       	ldi	r21, 0x45	; 69
    3552:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3556:	dc 01       	movw	r26, r24
    3558:	cb 01       	movw	r24, r22
    355a:	f8 01       	movw	r30, r16
    355c:	80 83       	st	Z, r24
    355e:	91 83       	std	Z+1, r25	; 0x01
    3560:	a2 83       	std	Z+2, r26	; 0x02
    3562:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3564:	fe 01       	movw	r30, r28
    3566:	e8 59       	subi	r30, 0x98	; 152
    3568:	ff 4f       	sbci	r31, 0xFF	; 255
    356a:	60 81       	ld	r22, Z
    356c:	71 81       	ldd	r23, Z+1	; 0x01
    356e:	82 81       	ldd	r24, Z+2	; 0x02
    3570:	93 81       	ldd	r25, Z+3	; 0x03
    3572:	20 e0       	ldi	r18, 0x00	; 0
    3574:	30 e0       	ldi	r19, 0x00	; 0
    3576:	40 e8       	ldi	r20, 0x80	; 128
    3578:	5f e3       	ldi	r21, 0x3F	; 63
    357a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    357e:	88 23       	and	r24, r24
    3580:	44 f4       	brge	.+16     	; 0x3592 <analog+0x10ba>
		__ticks = 1;
    3582:	fe 01       	movw	r30, r28
    3584:	ea 59       	subi	r30, 0x9A	; 154
    3586:	ff 4f       	sbci	r31, 0xFF	; 255
    3588:	81 e0       	ldi	r24, 0x01	; 1
    358a:	90 e0       	ldi	r25, 0x00	; 0
    358c:	91 83       	std	Z+1, r25	; 0x01
    358e:	80 83       	st	Z, r24
    3590:	64 c0       	rjmp	.+200    	; 0x365a <analog+0x1182>
	else if (__tmp > 65535)
    3592:	fe 01       	movw	r30, r28
    3594:	e8 59       	subi	r30, 0x98	; 152
    3596:	ff 4f       	sbci	r31, 0xFF	; 255
    3598:	60 81       	ld	r22, Z
    359a:	71 81       	ldd	r23, Z+1	; 0x01
    359c:	82 81       	ldd	r24, Z+2	; 0x02
    359e:	93 81       	ldd	r25, Z+3	; 0x03
    35a0:	20 e0       	ldi	r18, 0x00	; 0
    35a2:	3f ef       	ldi	r19, 0xFF	; 255
    35a4:	4f e7       	ldi	r20, 0x7F	; 127
    35a6:	57 e4       	ldi	r21, 0x47	; 71
    35a8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    35ac:	18 16       	cp	r1, r24
    35ae:	0c f0       	brlt	.+2      	; 0x35b2 <analog+0x10da>
    35b0:	43 c0       	rjmp	.+134    	; 0x3638 <analog+0x1160>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35b2:	fe 01       	movw	r30, r28
    35b4:	e4 59       	subi	r30, 0x94	; 148
    35b6:	ff 4f       	sbci	r31, 0xFF	; 255
    35b8:	60 81       	ld	r22, Z
    35ba:	71 81       	ldd	r23, Z+1	; 0x01
    35bc:	82 81       	ldd	r24, Z+2	; 0x02
    35be:	93 81       	ldd	r25, Z+3	; 0x03
    35c0:	20 e0       	ldi	r18, 0x00	; 0
    35c2:	30 e0       	ldi	r19, 0x00	; 0
    35c4:	40 e2       	ldi	r20, 0x20	; 32
    35c6:	51 e4       	ldi	r21, 0x41	; 65
    35c8:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    35cc:	dc 01       	movw	r26, r24
    35ce:	cb 01       	movw	r24, r22
    35d0:	8e 01       	movw	r16, r28
    35d2:	0a 59       	subi	r16, 0x9A	; 154
    35d4:	1f 4f       	sbci	r17, 0xFF	; 255
    35d6:	bc 01       	movw	r22, r24
    35d8:	cd 01       	movw	r24, r26
    35da:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    35de:	dc 01       	movw	r26, r24
    35e0:	cb 01       	movw	r24, r22
    35e2:	f8 01       	movw	r30, r16
    35e4:	91 83       	std	Z+1, r25	; 0x01
    35e6:	80 83       	st	Z, r24
    35e8:	1f c0       	rjmp	.+62     	; 0x3628 <analog+0x1150>
    35ea:	fe 01       	movw	r30, r28
    35ec:	ec 59       	subi	r30, 0x9C	; 156
    35ee:	ff 4f       	sbci	r31, 0xFF	; 255
    35f0:	80 e9       	ldi	r24, 0x90	; 144
    35f2:	91 e0       	ldi	r25, 0x01	; 1
    35f4:	91 83       	std	Z+1, r25	; 0x01
    35f6:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    35f8:	fe 01       	movw	r30, r28
    35fa:	ec 59       	subi	r30, 0x9C	; 156
    35fc:	ff 4f       	sbci	r31, 0xFF	; 255
    35fe:	80 81       	ld	r24, Z
    3600:	91 81       	ldd	r25, Z+1	; 0x01
    3602:	01 97       	sbiw	r24, 0x01	; 1
    3604:	f1 f7       	brne	.-4      	; 0x3602 <analog+0x112a>
    3606:	fe 01       	movw	r30, r28
    3608:	ec 59       	subi	r30, 0x9C	; 156
    360a:	ff 4f       	sbci	r31, 0xFF	; 255
    360c:	91 83       	std	Z+1, r25	; 0x01
    360e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3610:	de 01       	movw	r26, r28
    3612:	aa 59       	subi	r26, 0x9A	; 154
    3614:	bf 4f       	sbci	r27, 0xFF	; 255
    3616:	fe 01       	movw	r30, r28
    3618:	ea 59       	subi	r30, 0x9A	; 154
    361a:	ff 4f       	sbci	r31, 0xFF	; 255
    361c:	80 81       	ld	r24, Z
    361e:	91 81       	ldd	r25, Z+1	; 0x01
    3620:	01 97       	sbiw	r24, 0x01	; 1
    3622:	11 96       	adiw	r26, 0x01	; 1
    3624:	9c 93       	st	X, r25
    3626:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3628:	fe 01       	movw	r30, r28
    362a:	ea 59       	subi	r30, 0x9A	; 154
    362c:	ff 4f       	sbci	r31, 0xFF	; 255
    362e:	80 81       	ld	r24, Z
    3630:	91 81       	ldd	r25, Z+1	; 0x01
    3632:	00 97       	sbiw	r24, 0x00	; 0
    3634:	d1 f6       	brne	.-76     	; 0x35ea <analog+0x1112>
    3636:	4b c0       	rjmp	.+150    	; 0x36ce <analog+0x11f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3638:	8e 01       	movw	r16, r28
    363a:	0a 59       	subi	r16, 0x9A	; 154
    363c:	1f 4f       	sbci	r17, 0xFF	; 255
    363e:	fe 01       	movw	r30, r28
    3640:	e8 59       	subi	r30, 0x98	; 152
    3642:	ff 4f       	sbci	r31, 0xFF	; 255
    3644:	60 81       	ld	r22, Z
    3646:	71 81       	ldd	r23, Z+1	; 0x01
    3648:	82 81       	ldd	r24, Z+2	; 0x02
    364a:	93 81       	ldd	r25, Z+3	; 0x03
    364c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3650:	dc 01       	movw	r26, r24
    3652:	cb 01       	movw	r24, r22
    3654:	f8 01       	movw	r30, r16
    3656:	91 83       	std	Z+1, r25	; 0x01
    3658:	80 83       	st	Z, r24
    365a:	de 01       	movw	r26, r28
    365c:	ae 59       	subi	r26, 0x9E	; 158
    365e:	bf 4f       	sbci	r27, 0xFF	; 255
    3660:	fe 01       	movw	r30, r28
    3662:	ea 59       	subi	r30, 0x9A	; 154
    3664:	ff 4f       	sbci	r31, 0xFF	; 255
    3666:	80 81       	ld	r24, Z
    3668:	91 81       	ldd	r25, Z+1	; 0x01
    366a:	11 96       	adiw	r26, 0x01	; 1
    366c:	9c 93       	st	X, r25
    366e:	8e 93       	st	-X, r24
    3670:	fe 01       	movw	r30, r28
    3672:	ee 59       	subi	r30, 0x9E	; 158
    3674:	ff 4f       	sbci	r31, 0xFF	; 255
    3676:	80 81       	ld	r24, Z
    3678:	91 81       	ldd	r25, Z+1	; 0x01
    367a:	01 97       	sbiw	r24, 0x01	; 1
    367c:	f1 f7       	brne	.-4      	; 0x367a <analog+0x11a2>
    367e:	fe 01       	movw	r30, r28
    3680:	ee 59       	subi	r30, 0x9E	; 158
    3682:	ff 4f       	sbci	r31, 0xFF	; 255
    3684:	91 83       	std	Z+1, r25	; 0x01
    3686:	80 83       	st	Z, r24
    3688:	22 c0       	rjmp	.+68     	; 0x36ce <analog+0x11f6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    368a:	8e 01       	movw	r16, r28
    368c:	00 59       	subi	r16, 0x90	; 144
    368e:	1f 4f       	sbci	r17, 0xFF	; 255
    3690:	fe 01       	movw	r30, r28
    3692:	ef 58       	subi	r30, 0x8F	; 143
    3694:	ff 4f       	sbci	r31, 0xFF	; 255
    3696:	60 81       	ld	r22, Z
    3698:	71 81       	ldd	r23, Z+1	; 0x01
    369a:	82 81       	ldd	r24, Z+2	; 0x02
    369c:	93 81       	ldd	r25, Z+3	; 0x03
    369e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    36a2:	dc 01       	movw	r26, r24
    36a4:	cb 01       	movw	r24, r22
    36a6:	f8 01       	movw	r30, r16
    36a8:	80 83       	st	Z, r24
    36aa:	de 01       	movw	r26, r28
    36ac:	af 59       	subi	r26, 0x9F	; 159
    36ae:	bf 4f       	sbci	r27, 0xFF	; 255
    36b0:	fe 01       	movw	r30, r28
    36b2:	e0 59       	subi	r30, 0x90	; 144
    36b4:	ff 4f       	sbci	r31, 0xFF	; 255
    36b6:	80 81       	ld	r24, Z
    36b8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    36ba:	fe 01       	movw	r30, r28
    36bc:	ef 59       	subi	r30, 0x9F	; 159
    36be:	ff 4f       	sbci	r31, 0xFF	; 255
    36c0:	80 81       	ld	r24, Z
    36c2:	8a 95       	dec	r24
    36c4:	f1 f7       	brne	.-4      	; 0x36c2 <analog+0x11ea>
    36c6:	fe 01       	movw	r30, r28
    36c8:	ef 59       	subi	r30, 0x9F	; 159
    36ca:	ff 4f       	sbci	r31, 0xFF	; 255
    36cc:	80 83       	st	Z, r24
	sbi(ps2port,ps2cmd); 
	
	
	
		
	for(i=0;i<8;i++)		//byte3
    36ce:	80 91 66 00 	lds	r24, 0x0066
    36d2:	90 91 67 00 	lds	r25, 0x0067
    36d6:	01 96       	adiw	r24, 0x01	; 1
    36d8:	90 93 67 00 	sts	0x0067, r25
    36dc:	80 93 66 00 	sts	0x0066, r24
    36e0:	80 91 66 00 	lds	r24, 0x0066
    36e4:	90 91 67 00 	lds	r25, 0x0067
    36e8:	88 30       	cpi	r24, 0x08	; 8
    36ea:	91 05       	cpc	r25, r1
    36ec:	0c f4       	brge	.+2      	; 0x36f0 <analog+0x1218>
    36ee:	88 cd       	rjmp	.-1264   	; 0x3200 <analog+0xd28>
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
		
	}
	sbi(ps2port,ps2cmd); 
    36f0:	a5 e3       	ldi	r26, 0x35	; 53
    36f2:	b0 e0       	ldi	r27, 0x00	; 0
    36f4:	e5 e3       	ldi	r30, 0x35	; 53
    36f6:	f0 e0       	ldi	r31, 0x00	; 0
    36f8:	80 81       	ld	r24, Z
    36fa:	84 60       	ori	r24, 0x04	; 4
    36fc:	8c 93       	st	X, r24
	
	
	ps2byte = 0x01;			//byte4 to set analog mode
    36fe:	81 e0       	ldi	r24, 0x01	; 1
    3700:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)		
    3704:	10 92 67 00 	sts	0x0067, r1
    3708:	10 92 66 00 	sts	0x0066, r1
    370c:	3f c2       	rjmp	.+1150   	; 0x3b8c <analog+0x16b4>
	{
		if(ps2byte&(_BV(i)))
    370e:	80 91 61 00 	lds	r24, 0x0061
    3712:	28 2f       	mov	r18, r24
    3714:	30 e0       	ldi	r19, 0x00	; 0
    3716:	80 91 66 00 	lds	r24, 0x0066
    371a:	90 91 67 00 	lds	r25, 0x0067
    371e:	a9 01       	movw	r20, r18
    3720:	02 c0       	rjmp	.+4      	; 0x3726 <analog+0x124e>
    3722:	55 95       	asr	r21
    3724:	47 95       	ror	r20
    3726:	8a 95       	dec	r24
    3728:	e2 f7       	brpl	.-8      	; 0x3722 <analog+0x124a>
    372a:	ca 01       	movw	r24, r20
    372c:	81 70       	andi	r24, 0x01	; 1
    372e:	90 70       	andi	r25, 0x00	; 0
    3730:	88 23       	and	r24, r24
    3732:	41 f0       	breq	.+16     	; 0x3744 <analog+0x126c>
			sbi(ps2port,ps2cmd);
    3734:	a5 e3       	ldi	r26, 0x35	; 53
    3736:	b0 e0       	ldi	r27, 0x00	; 0
    3738:	e5 e3       	ldi	r30, 0x35	; 53
    373a:	f0 e0       	ldi	r31, 0x00	; 0
    373c:	80 81       	ld	r24, Z
    373e:	84 60       	ori	r24, 0x04	; 4
    3740:	8c 93       	st	X, r24
    3742:	07 c0       	rjmp	.+14     	; 0x3752 <analog+0x127a>
		else 
			cbi(ps2port,ps2cmd);
    3744:	a5 e3       	ldi	r26, 0x35	; 53
    3746:	b0 e0       	ldi	r27, 0x00	; 0
    3748:	e5 e3       	ldi	r30, 0x35	; 53
    374a:	f0 e0       	ldi	r31, 0x00	; 0
    374c:	80 81       	ld	r24, Z
    374e:	8b 7f       	andi	r24, 0xFB	; 251
    3750:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    3752:	a5 e3       	ldi	r26, 0x35	; 53
    3754:	b0 e0       	ldi	r27, 0x00	; 0
    3756:	e5 e3       	ldi	r30, 0x35	; 53
    3758:	f0 e0       	ldi	r31, 0x00	; 0
    375a:	80 81       	ld	r24, Z
    375c:	8e 7f       	andi	r24, 0xFE	; 254
    375e:	8c 93       	st	X, r24
    3760:	fe 01       	movw	r30, r28
    3762:	e3 5a       	subi	r30, 0xA3	; 163
    3764:	ff 4f       	sbci	r31, 0xFF	; 255
    3766:	80 e0       	ldi	r24, 0x00	; 0
    3768:	90 e0       	ldi	r25, 0x00	; 0
    376a:	a0 e8       	ldi	r26, 0x80	; 128
    376c:	bf e3       	ldi	r27, 0x3F	; 63
    376e:	80 83       	st	Z, r24
    3770:	91 83       	std	Z+1, r25	; 0x01
    3772:	a2 83       	std	Z+2, r26	; 0x02
    3774:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3776:	8e 01       	movw	r16, r28
    3778:	07 5a       	subi	r16, 0xA7	; 167
    377a:	1f 4f       	sbci	r17, 0xFF	; 255
    377c:	fe 01       	movw	r30, r28
    377e:	e3 5a       	subi	r30, 0xA3	; 163
    3780:	ff 4f       	sbci	r31, 0xFF	; 255
    3782:	60 81       	ld	r22, Z
    3784:	71 81       	ldd	r23, Z+1	; 0x01
    3786:	82 81       	ldd	r24, Z+2	; 0x02
    3788:	93 81       	ldd	r25, Z+3	; 0x03
    378a:	2b ea       	ldi	r18, 0xAB	; 171
    378c:	3a ea       	ldi	r19, 0xAA	; 170
    378e:	4a ea       	ldi	r20, 0xAA	; 170
    3790:	50 e4       	ldi	r21, 0x40	; 64
    3792:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3796:	dc 01       	movw	r26, r24
    3798:	cb 01       	movw	r24, r22
    379a:	f8 01       	movw	r30, r16
    379c:	80 83       	st	Z, r24
    379e:	91 83       	std	Z+1, r25	; 0x01
    37a0:	a2 83       	std	Z+2, r26	; 0x02
    37a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37a4:	fe 01       	movw	r30, r28
    37a6:	e7 5a       	subi	r30, 0xA7	; 167
    37a8:	ff 4f       	sbci	r31, 0xFF	; 255
    37aa:	60 81       	ld	r22, Z
    37ac:	71 81       	ldd	r23, Z+1	; 0x01
    37ae:	82 81       	ldd	r24, Z+2	; 0x02
    37b0:	93 81       	ldd	r25, Z+3	; 0x03
    37b2:	20 e0       	ldi	r18, 0x00	; 0
    37b4:	30 e0       	ldi	r19, 0x00	; 0
    37b6:	40 e8       	ldi	r20, 0x80	; 128
    37b8:	5f e3       	ldi	r21, 0x3F	; 63
    37ba:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    37be:	88 23       	and	r24, r24
    37c0:	34 f4       	brge	.+12     	; 0x37ce <analog+0x12f6>
		__ticks = 1;
    37c2:	fe 01       	movw	r30, r28
    37c4:	e8 5a       	subi	r30, 0xA8	; 168
    37c6:	ff 4f       	sbci	r31, 0xFF	; 255
    37c8:	81 e0       	ldi	r24, 0x01	; 1
    37ca:	80 83       	st	Z, r24
    37cc:	e0 c0       	rjmp	.+448    	; 0x398e <analog+0x14b6>
	else if (__tmp > 255)
    37ce:	fe 01       	movw	r30, r28
    37d0:	e7 5a       	subi	r30, 0xA7	; 167
    37d2:	ff 4f       	sbci	r31, 0xFF	; 255
    37d4:	60 81       	ld	r22, Z
    37d6:	71 81       	ldd	r23, Z+1	; 0x01
    37d8:	82 81       	ldd	r24, Z+2	; 0x02
    37da:	93 81       	ldd	r25, Z+3	; 0x03
    37dc:	20 e0       	ldi	r18, 0x00	; 0
    37de:	30 e0       	ldi	r19, 0x00	; 0
    37e0:	4f e7       	ldi	r20, 0x7F	; 127
    37e2:	53 e4       	ldi	r21, 0x43	; 67
    37e4:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    37e8:	18 16       	cp	r1, r24
    37ea:	0c f0       	brlt	.+2      	; 0x37ee <analog+0x1316>
    37ec:	c0 c0       	rjmp	.+384    	; 0x396e <analog+0x1496>
	{
		_delay_ms(__us / 1000.0);
    37ee:	fe 01       	movw	r30, r28
    37f0:	e3 5a       	subi	r30, 0xA3	; 163
    37f2:	ff 4f       	sbci	r31, 0xFF	; 255
    37f4:	60 81       	ld	r22, Z
    37f6:	71 81       	ldd	r23, Z+1	; 0x01
    37f8:	82 81       	ldd	r24, Z+2	; 0x02
    37fa:	93 81       	ldd	r25, Z+3	; 0x03
    37fc:	20 e0       	ldi	r18, 0x00	; 0
    37fe:	30 e0       	ldi	r19, 0x00	; 0
    3800:	4a e7       	ldi	r20, 0x7A	; 122
    3802:	54 e4       	ldi	r21, 0x44	; 68
    3804:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    3808:	dc 01       	movw	r26, r24
    380a:	cb 01       	movw	r24, r22
    380c:	fe 01       	movw	r30, r28
    380e:	ec 5a       	subi	r30, 0xAC	; 172
    3810:	ff 4f       	sbci	r31, 0xFF	; 255
    3812:	80 83       	st	Z, r24
    3814:	91 83       	std	Z+1, r25	; 0x01
    3816:	a2 83       	std	Z+2, r26	; 0x02
    3818:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    381a:	8e 01       	movw	r16, r28
    381c:	00 5b       	subi	r16, 0xB0	; 176
    381e:	1f 4f       	sbci	r17, 0xFF	; 255
    3820:	fe 01       	movw	r30, r28
    3822:	ec 5a       	subi	r30, 0xAC	; 172
    3824:	ff 4f       	sbci	r31, 0xFF	; 255
    3826:	60 81       	ld	r22, Z
    3828:	71 81       	ldd	r23, Z+1	; 0x01
    382a:	82 81       	ldd	r24, Z+2	; 0x02
    382c:	93 81       	ldd	r25, Z+3	; 0x03
    382e:	20 e0       	ldi	r18, 0x00	; 0
    3830:	30 e0       	ldi	r19, 0x00	; 0
    3832:	4a e7       	ldi	r20, 0x7A	; 122
    3834:	55 e4       	ldi	r21, 0x45	; 69
    3836:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    383a:	dc 01       	movw	r26, r24
    383c:	cb 01       	movw	r24, r22
    383e:	f8 01       	movw	r30, r16
    3840:	80 83       	st	Z, r24
    3842:	91 83       	std	Z+1, r25	; 0x01
    3844:	a2 83       	std	Z+2, r26	; 0x02
    3846:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3848:	fe 01       	movw	r30, r28
    384a:	e0 5b       	subi	r30, 0xB0	; 176
    384c:	ff 4f       	sbci	r31, 0xFF	; 255
    384e:	60 81       	ld	r22, Z
    3850:	71 81       	ldd	r23, Z+1	; 0x01
    3852:	82 81       	ldd	r24, Z+2	; 0x02
    3854:	93 81       	ldd	r25, Z+3	; 0x03
    3856:	20 e0       	ldi	r18, 0x00	; 0
    3858:	30 e0       	ldi	r19, 0x00	; 0
    385a:	40 e8       	ldi	r20, 0x80	; 128
    385c:	5f e3       	ldi	r21, 0x3F	; 63
    385e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    3862:	88 23       	and	r24, r24
    3864:	44 f4       	brge	.+16     	; 0x3876 <analog+0x139e>
		__ticks = 1;
    3866:	fe 01       	movw	r30, r28
    3868:	e2 5b       	subi	r30, 0xB2	; 178
    386a:	ff 4f       	sbci	r31, 0xFF	; 255
    386c:	81 e0       	ldi	r24, 0x01	; 1
    386e:	90 e0       	ldi	r25, 0x00	; 0
    3870:	91 83       	std	Z+1, r25	; 0x01
    3872:	80 83       	st	Z, r24
    3874:	64 c0       	rjmp	.+200    	; 0x393e <analog+0x1466>
	else if (__tmp > 65535)
    3876:	fe 01       	movw	r30, r28
    3878:	e0 5b       	subi	r30, 0xB0	; 176
    387a:	ff 4f       	sbci	r31, 0xFF	; 255
    387c:	60 81       	ld	r22, Z
    387e:	71 81       	ldd	r23, Z+1	; 0x01
    3880:	82 81       	ldd	r24, Z+2	; 0x02
    3882:	93 81       	ldd	r25, Z+3	; 0x03
    3884:	20 e0       	ldi	r18, 0x00	; 0
    3886:	3f ef       	ldi	r19, 0xFF	; 255
    3888:	4f e7       	ldi	r20, 0x7F	; 127
    388a:	57 e4       	ldi	r21, 0x47	; 71
    388c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    3890:	18 16       	cp	r1, r24
    3892:	0c f0       	brlt	.+2      	; 0x3896 <analog+0x13be>
    3894:	43 c0       	rjmp	.+134    	; 0x391c <analog+0x1444>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3896:	fe 01       	movw	r30, r28
    3898:	ec 5a       	subi	r30, 0xAC	; 172
    389a:	ff 4f       	sbci	r31, 0xFF	; 255
    389c:	60 81       	ld	r22, Z
    389e:	71 81       	ldd	r23, Z+1	; 0x01
    38a0:	82 81       	ldd	r24, Z+2	; 0x02
    38a2:	93 81       	ldd	r25, Z+3	; 0x03
    38a4:	20 e0       	ldi	r18, 0x00	; 0
    38a6:	30 e0       	ldi	r19, 0x00	; 0
    38a8:	40 e2       	ldi	r20, 0x20	; 32
    38aa:	51 e4       	ldi	r21, 0x41	; 65
    38ac:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    38b0:	dc 01       	movw	r26, r24
    38b2:	cb 01       	movw	r24, r22
    38b4:	8e 01       	movw	r16, r28
    38b6:	02 5b       	subi	r16, 0xB2	; 178
    38b8:	1f 4f       	sbci	r17, 0xFF	; 255
    38ba:	bc 01       	movw	r22, r24
    38bc:	cd 01       	movw	r24, r26
    38be:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    38c2:	dc 01       	movw	r26, r24
    38c4:	cb 01       	movw	r24, r22
    38c6:	f8 01       	movw	r30, r16
    38c8:	91 83       	std	Z+1, r25	; 0x01
    38ca:	80 83       	st	Z, r24
    38cc:	1f c0       	rjmp	.+62     	; 0x390c <analog+0x1434>
    38ce:	fe 01       	movw	r30, r28
    38d0:	e4 5b       	subi	r30, 0xB4	; 180
    38d2:	ff 4f       	sbci	r31, 0xFF	; 255
    38d4:	80 e9       	ldi	r24, 0x90	; 144
    38d6:	91 e0       	ldi	r25, 0x01	; 1
    38d8:	91 83       	std	Z+1, r25	; 0x01
    38da:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    38dc:	fe 01       	movw	r30, r28
    38de:	e4 5b       	subi	r30, 0xB4	; 180
    38e0:	ff 4f       	sbci	r31, 0xFF	; 255
    38e2:	80 81       	ld	r24, Z
    38e4:	91 81       	ldd	r25, Z+1	; 0x01
    38e6:	01 97       	sbiw	r24, 0x01	; 1
    38e8:	f1 f7       	brne	.-4      	; 0x38e6 <analog+0x140e>
    38ea:	fe 01       	movw	r30, r28
    38ec:	e4 5b       	subi	r30, 0xB4	; 180
    38ee:	ff 4f       	sbci	r31, 0xFF	; 255
    38f0:	91 83       	std	Z+1, r25	; 0x01
    38f2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38f4:	de 01       	movw	r26, r28
    38f6:	a2 5b       	subi	r26, 0xB2	; 178
    38f8:	bf 4f       	sbci	r27, 0xFF	; 255
    38fa:	fe 01       	movw	r30, r28
    38fc:	e2 5b       	subi	r30, 0xB2	; 178
    38fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3900:	80 81       	ld	r24, Z
    3902:	91 81       	ldd	r25, Z+1	; 0x01
    3904:	01 97       	sbiw	r24, 0x01	; 1
    3906:	11 96       	adiw	r26, 0x01	; 1
    3908:	9c 93       	st	X, r25
    390a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    390c:	fe 01       	movw	r30, r28
    390e:	e2 5b       	subi	r30, 0xB2	; 178
    3910:	ff 4f       	sbci	r31, 0xFF	; 255
    3912:	80 81       	ld	r24, Z
    3914:	91 81       	ldd	r25, Z+1	; 0x01
    3916:	00 97       	sbiw	r24, 0x00	; 0
    3918:	d1 f6       	brne	.-76     	; 0x38ce <analog+0x13f6>
    391a:	4b c0       	rjmp	.+150    	; 0x39b2 <analog+0x14da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    391c:	8e 01       	movw	r16, r28
    391e:	02 5b       	subi	r16, 0xB2	; 178
    3920:	1f 4f       	sbci	r17, 0xFF	; 255
    3922:	fe 01       	movw	r30, r28
    3924:	e0 5b       	subi	r30, 0xB0	; 176
    3926:	ff 4f       	sbci	r31, 0xFF	; 255
    3928:	60 81       	ld	r22, Z
    392a:	71 81       	ldd	r23, Z+1	; 0x01
    392c:	82 81       	ldd	r24, Z+2	; 0x02
    392e:	93 81       	ldd	r25, Z+3	; 0x03
    3930:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3934:	dc 01       	movw	r26, r24
    3936:	cb 01       	movw	r24, r22
    3938:	f8 01       	movw	r30, r16
    393a:	91 83       	std	Z+1, r25	; 0x01
    393c:	80 83       	st	Z, r24
    393e:	de 01       	movw	r26, r28
    3940:	a6 5b       	subi	r26, 0xB6	; 182
    3942:	bf 4f       	sbci	r27, 0xFF	; 255
    3944:	fe 01       	movw	r30, r28
    3946:	e2 5b       	subi	r30, 0xB2	; 178
    3948:	ff 4f       	sbci	r31, 0xFF	; 255
    394a:	80 81       	ld	r24, Z
    394c:	91 81       	ldd	r25, Z+1	; 0x01
    394e:	11 96       	adiw	r26, 0x01	; 1
    3950:	9c 93       	st	X, r25
    3952:	8e 93       	st	-X, r24
    3954:	fe 01       	movw	r30, r28
    3956:	e6 5b       	subi	r30, 0xB6	; 182
    3958:	ff 4f       	sbci	r31, 0xFF	; 255
    395a:	80 81       	ld	r24, Z
    395c:	91 81       	ldd	r25, Z+1	; 0x01
    395e:	01 97       	sbiw	r24, 0x01	; 1
    3960:	f1 f7       	brne	.-4      	; 0x395e <analog+0x1486>
    3962:	fe 01       	movw	r30, r28
    3964:	e6 5b       	subi	r30, 0xB6	; 182
    3966:	ff 4f       	sbci	r31, 0xFF	; 255
    3968:	91 83       	std	Z+1, r25	; 0x01
    396a:	80 83       	st	Z, r24
    396c:	22 c0       	rjmp	.+68     	; 0x39b2 <analog+0x14da>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    396e:	8e 01       	movw	r16, r28
    3970:	08 5a       	subi	r16, 0xA8	; 168
    3972:	1f 4f       	sbci	r17, 0xFF	; 255
    3974:	fe 01       	movw	r30, r28
    3976:	e7 5a       	subi	r30, 0xA7	; 167
    3978:	ff 4f       	sbci	r31, 0xFF	; 255
    397a:	60 81       	ld	r22, Z
    397c:	71 81       	ldd	r23, Z+1	; 0x01
    397e:	82 81       	ldd	r24, Z+2	; 0x02
    3980:	93 81       	ldd	r25, Z+3	; 0x03
    3982:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3986:	dc 01       	movw	r26, r24
    3988:	cb 01       	movw	r24, r22
    398a:	f8 01       	movw	r30, r16
    398c:	80 83       	st	Z, r24
    398e:	de 01       	movw	r26, r28
    3990:	a7 5b       	subi	r26, 0xB7	; 183
    3992:	bf 4f       	sbci	r27, 0xFF	; 255
    3994:	fe 01       	movw	r30, r28
    3996:	e8 5a       	subi	r30, 0xA8	; 168
    3998:	ff 4f       	sbci	r31, 0xFF	; 255
    399a:	80 81       	ld	r24, Z
    399c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    399e:	fe 01       	movw	r30, r28
    39a0:	e7 5b       	subi	r30, 0xB7	; 183
    39a2:	ff 4f       	sbci	r31, 0xFF	; 255
    39a4:	80 81       	ld	r24, Z
    39a6:	8a 95       	dec	r24
    39a8:	f1 f7       	brne	.-4      	; 0x39a6 <analog+0x14ce>
    39aa:	fe 01       	movw	r30, r28
    39ac:	e7 5b       	subi	r30, 0xB7	; 183
    39ae:	ff 4f       	sbci	r31, 0xFF	; 255
    39b0:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    39b2:	a5 e3       	ldi	r26, 0x35	; 53
    39b4:	b0 e0       	ldi	r27, 0x00	; 0
    39b6:	e5 e3       	ldi	r30, 0x35	; 53
    39b8:	f0 e0       	ldi	r31, 0x00	; 0
    39ba:	80 81       	ld	r24, Z
    39bc:	81 60       	ori	r24, 0x01	; 1
    39be:	8c 93       	st	X, r24
    39c0:	fe 01       	movw	r30, r28
    39c2:	eb 5b       	subi	r30, 0xBB	; 187
    39c4:	ff 4f       	sbci	r31, 0xFF	; 255
    39c6:	80 e0       	ldi	r24, 0x00	; 0
    39c8:	90 e0       	ldi	r25, 0x00	; 0
    39ca:	a0 e8       	ldi	r26, 0x80	; 128
    39cc:	bf e3       	ldi	r27, 0x3F	; 63
    39ce:	80 83       	st	Z, r24
    39d0:	91 83       	std	Z+1, r25	; 0x01
    39d2:	a2 83       	std	Z+2, r26	; 0x02
    39d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    39d6:	8e 01       	movw	r16, r28
    39d8:	0f 5b       	subi	r16, 0xBF	; 191
    39da:	1f 4f       	sbci	r17, 0xFF	; 255
    39dc:	fe 01       	movw	r30, r28
    39de:	eb 5b       	subi	r30, 0xBB	; 187
    39e0:	ff 4f       	sbci	r31, 0xFF	; 255
    39e2:	60 81       	ld	r22, Z
    39e4:	71 81       	ldd	r23, Z+1	; 0x01
    39e6:	82 81       	ldd	r24, Z+2	; 0x02
    39e8:	93 81       	ldd	r25, Z+3	; 0x03
    39ea:	2b ea       	ldi	r18, 0xAB	; 171
    39ec:	3a ea       	ldi	r19, 0xAA	; 170
    39ee:	4a ea       	ldi	r20, 0xAA	; 170
    39f0:	50 e4       	ldi	r21, 0x40	; 64
    39f2:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    39f6:	dc 01       	movw	r26, r24
    39f8:	cb 01       	movw	r24, r22
    39fa:	f8 01       	movw	r30, r16
    39fc:	80 83       	st	Z, r24
    39fe:	91 83       	std	Z+1, r25	; 0x01
    3a00:	a2 83       	std	Z+2, r26	; 0x02
    3a02:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a04:	fe 01       	movw	r30, r28
    3a06:	ef 5b       	subi	r30, 0xBF	; 191
    3a08:	ff 4f       	sbci	r31, 0xFF	; 255
    3a0a:	60 81       	ld	r22, Z
    3a0c:	71 81       	ldd	r23, Z+1	; 0x01
    3a0e:	82 81       	ldd	r24, Z+2	; 0x02
    3a10:	93 81       	ldd	r25, Z+3	; 0x03
    3a12:	20 e0       	ldi	r18, 0x00	; 0
    3a14:	30 e0       	ldi	r19, 0x00	; 0
    3a16:	40 e8       	ldi	r20, 0x80	; 128
    3a18:	5f e3       	ldi	r21, 0x3F	; 63
    3a1a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    3a1e:	88 23       	and	r24, r24
    3a20:	34 f4       	brge	.+12     	; 0x3a2e <analog+0x1556>
		__ticks = 1;
    3a22:	81 e0       	ldi	r24, 0x01	; 1
    3a24:	fe 01       	movw	r30, r28
    3a26:	e0 5c       	subi	r30, 0xC0	; 192
    3a28:	ff 4f       	sbci	r31, 0xFF	; 255
    3a2a:	80 83       	st	Z, r24
    3a2c:	9d c0       	rjmp	.+314    	; 0x3b68 <analog+0x1690>
	else if (__tmp > 255)
    3a2e:	fe 01       	movw	r30, r28
    3a30:	ef 5b       	subi	r30, 0xBF	; 191
    3a32:	ff 4f       	sbci	r31, 0xFF	; 255
    3a34:	60 81       	ld	r22, Z
    3a36:	71 81       	ldd	r23, Z+1	; 0x01
    3a38:	82 81       	ldd	r24, Z+2	; 0x02
    3a3a:	93 81       	ldd	r25, Z+3	; 0x03
    3a3c:	20 e0       	ldi	r18, 0x00	; 0
    3a3e:	30 e0       	ldi	r19, 0x00	; 0
    3a40:	4f e7       	ldi	r20, 0x7F	; 127
    3a42:	53 e4       	ldi	r21, 0x43	; 67
    3a44:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    3a48:	18 16       	cp	r1, r24
    3a4a:	0c f0       	brlt	.+2      	; 0x3a4e <analog+0x1576>
    3a4c:	7e c0       	rjmp	.+252    	; 0x3b4a <analog+0x1672>
	{
		_delay_ms(__us / 1000.0);
    3a4e:	fe 01       	movw	r30, r28
    3a50:	eb 5b       	subi	r30, 0xBB	; 187
    3a52:	ff 4f       	sbci	r31, 0xFF	; 255
    3a54:	60 81       	ld	r22, Z
    3a56:	71 81       	ldd	r23, Z+1	; 0x01
    3a58:	82 81       	ldd	r24, Z+2	; 0x02
    3a5a:	93 81       	ldd	r25, Z+3	; 0x03
    3a5c:	20 e0       	ldi	r18, 0x00	; 0
    3a5e:	30 e0       	ldi	r19, 0x00	; 0
    3a60:	4a e7       	ldi	r20, 0x7A	; 122
    3a62:	54 e4       	ldi	r21, 0x44	; 68
    3a64:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    3a68:	dc 01       	movw	r26, r24
    3a6a:	cb 01       	movw	r24, r22
    3a6c:	8c af       	std	Y+60, r24	; 0x3c
    3a6e:	9d af       	std	Y+61, r25	; 0x3d
    3a70:	ae af       	std	Y+62, r26	; 0x3e
    3a72:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a74:	6c ad       	ldd	r22, Y+60	; 0x3c
    3a76:	7d ad       	ldd	r23, Y+61	; 0x3d
    3a78:	8e ad       	ldd	r24, Y+62	; 0x3e
    3a7a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a7c:	20 e0       	ldi	r18, 0x00	; 0
    3a7e:	30 e0       	ldi	r19, 0x00	; 0
    3a80:	4a e7       	ldi	r20, 0x7A	; 122
    3a82:	55 e4       	ldi	r21, 0x45	; 69
    3a84:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3a88:	dc 01       	movw	r26, r24
    3a8a:	cb 01       	movw	r24, r22
    3a8c:	88 af       	std	Y+56, r24	; 0x38
    3a8e:	99 af       	std	Y+57, r25	; 0x39
    3a90:	aa af       	std	Y+58, r26	; 0x3a
    3a92:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    3a94:	68 ad       	ldd	r22, Y+56	; 0x38
    3a96:	79 ad       	ldd	r23, Y+57	; 0x39
    3a98:	8a ad       	ldd	r24, Y+58	; 0x3a
    3a9a:	9b ad       	ldd	r25, Y+59	; 0x3b
    3a9c:	20 e0       	ldi	r18, 0x00	; 0
    3a9e:	30 e0       	ldi	r19, 0x00	; 0
    3aa0:	40 e8       	ldi	r20, 0x80	; 128
    3aa2:	5f e3       	ldi	r21, 0x3F	; 63
    3aa4:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    3aa8:	88 23       	and	r24, r24
    3aaa:	2c f4       	brge	.+10     	; 0x3ab6 <analog+0x15de>
		__ticks = 1;
    3aac:	81 e0       	ldi	r24, 0x01	; 1
    3aae:	90 e0       	ldi	r25, 0x00	; 0
    3ab0:	9f ab       	std	Y+55, r25	; 0x37
    3ab2:	8e ab       	std	Y+54, r24	; 0x36
    3ab4:	3f c0       	rjmp	.+126    	; 0x3b34 <analog+0x165c>
	else if (__tmp > 65535)
    3ab6:	68 ad       	ldd	r22, Y+56	; 0x38
    3ab8:	79 ad       	ldd	r23, Y+57	; 0x39
    3aba:	8a ad       	ldd	r24, Y+58	; 0x3a
    3abc:	9b ad       	ldd	r25, Y+59	; 0x3b
    3abe:	20 e0       	ldi	r18, 0x00	; 0
    3ac0:	3f ef       	ldi	r19, 0xFF	; 255
    3ac2:	4f e7       	ldi	r20, 0x7F	; 127
    3ac4:	57 e4       	ldi	r21, 0x47	; 71
    3ac6:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    3aca:	18 16       	cp	r1, r24
    3acc:	4c f5       	brge	.+82     	; 0x3b20 <analog+0x1648>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ace:	6c ad       	ldd	r22, Y+60	; 0x3c
    3ad0:	7d ad       	ldd	r23, Y+61	; 0x3d
    3ad2:	8e ad       	ldd	r24, Y+62	; 0x3e
    3ad4:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ad6:	20 e0       	ldi	r18, 0x00	; 0
    3ad8:	30 e0       	ldi	r19, 0x00	; 0
    3ada:	40 e2       	ldi	r20, 0x20	; 32
    3adc:	51 e4       	ldi	r21, 0x41	; 65
    3ade:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3ae2:	dc 01       	movw	r26, r24
    3ae4:	cb 01       	movw	r24, r22
    3ae6:	bc 01       	movw	r22, r24
    3ae8:	cd 01       	movw	r24, r26
    3aea:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3aee:	dc 01       	movw	r26, r24
    3af0:	cb 01       	movw	r24, r22
    3af2:	9f ab       	std	Y+55, r25	; 0x37
    3af4:	8e ab       	std	Y+54, r24	; 0x36
    3af6:	0f c0       	rjmp	.+30     	; 0x3b16 <analog+0x163e>
    3af8:	80 e9       	ldi	r24, 0x90	; 144
    3afa:	91 e0       	ldi	r25, 0x01	; 1
    3afc:	9d ab       	std	Y+53, r25	; 0x35
    3afe:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3b00:	8c a9       	ldd	r24, Y+52	; 0x34
    3b02:	9d a9       	ldd	r25, Y+53	; 0x35
    3b04:	01 97       	sbiw	r24, 0x01	; 1
    3b06:	f1 f7       	brne	.-4      	; 0x3b04 <analog+0x162c>
    3b08:	9d ab       	std	Y+53, r25	; 0x35
    3b0a:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b0c:	8e a9       	ldd	r24, Y+54	; 0x36
    3b0e:	9f a9       	ldd	r25, Y+55	; 0x37
    3b10:	01 97       	sbiw	r24, 0x01	; 1
    3b12:	9f ab       	std	Y+55, r25	; 0x37
    3b14:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b16:	8e a9       	ldd	r24, Y+54	; 0x36
    3b18:	9f a9       	ldd	r25, Y+55	; 0x37
    3b1a:	00 97       	sbiw	r24, 0x00	; 0
    3b1c:	69 f7       	brne	.-38     	; 0x3af8 <analog+0x1620>
    3b1e:	2d c0       	rjmp	.+90     	; 0x3b7a <analog+0x16a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b20:	68 ad       	ldd	r22, Y+56	; 0x38
    3b22:	79 ad       	ldd	r23, Y+57	; 0x39
    3b24:	8a ad       	ldd	r24, Y+58	; 0x3a
    3b26:	9b ad       	ldd	r25, Y+59	; 0x3b
    3b28:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3b2c:	dc 01       	movw	r26, r24
    3b2e:	cb 01       	movw	r24, r22
    3b30:	9f ab       	std	Y+55, r25	; 0x37
    3b32:	8e ab       	std	Y+54, r24	; 0x36
    3b34:	8e a9       	ldd	r24, Y+54	; 0x36
    3b36:	9f a9       	ldd	r25, Y+55	; 0x37
    3b38:	9b ab       	std	Y+51, r25	; 0x33
    3b3a:	8a ab       	std	Y+50, r24	; 0x32
    3b3c:	8a a9       	ldd	r24, Y+50	; 0x32
    3b3e:	9b a9       	ldd	r25, Y+51	; 0x33
    3b40:	01 97       	sbiw	r24, 0x01	; 1
    3b42:	f1 f7       	brne	.-4      	; 0x3b40 <analog+0x1668>
    3b44:	9b ab       	std	Y+51, r25	; 0x33
    3b46:	8a ab       	std	Y+50, r24	; 0x32
    3b48:	18 c0       	rjmp	.+48     	; 0x3b7a <analog+0x16a2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3b4a:	fe 01       	movw	r30, r28
    3b4c:	ef 5b       	subi	r30, 0xBF	; 191
    3b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b50:	60 81       	ld	r22, Z
    3b52:	71 81       	ldd	r23, Z+1	; 0x01
    3b54:	82 81       	ldd	r24, Z+2	; 0x02
    3b56:	93 81       	ldd	r25, Z+3	; 0x03
    3b58:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3b5c:	dc 01       	movw	r26, r24
    3b5e:	cb 01       	movw	r24, r22
    3b60:	fe 01       	movw	r30, r28
    3b62:	e0 5c       	subi	r30, 0xC0	; 192
    3b64:	ff 4f       	sbci	r31, 0xFF	; 255
    3b66:	80 83       	st	Z, r24
    3b68:	fe 01       	movw	r30, r28
    3b6a:	e0 5c       	subi	r30, 0xC0	; 192
    3b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b6e:	80 81       	ld	r24, Z
    3b70:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3b72:	89 a9       	ldd	r24, Y+49	; 0x31
    3b74:	8a 95       	dec	r24
    3b76:	f1 f7       	brne	.-4      	; 0x3b74 <analog+0x169c>
    3b78:	89 ab       	std	Y+49, r24	; 0x31
	sbi(ps2port,ps2cmd); 
	
	
	ps2byte = 0x01;			//byte4 to set analog mode
	
	for(i=0;i<8;i++)		
    3b7a:	80 91 66 00 	lds	r24, 0x0066
    3b7e:	90 91 67 00 	lds	r25, 0x0067
    3b82:	01 96       	adiw	r24, 0x01	; 1
    3b84:	90 93 67 00 	sts	0x0067, r25
    3b88:	80 93 66 00 	sts	0x0066, r24
    3b8c:	80 91 66 00 	lds	r24, 0x0066
    3b90:	90 91 67 00 	lds	r25, 0x0067
    3b94:	88 30       	cpi	r24, 0x08	; 8
    3b96:	91 05       	cpc	r25, r1
    3b98:	0c f4       	brge	.+2      	; 0x3b9c <analog+0x16c4>
    3b9a:	b9 cd       	rjmp	.-1166   	; 0x370e <analog+0x1236>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    3b9c:	a5 e3       	ldi	r26, 0x35	; 53
    3b9e:	b0 e0       	ldi	r27, 0x00	; 0
    3ba0:	e5 e3       	ldi	r30, 0x35	; 53
    3ba2:	f0 e0       	ldi	r31, 0x00	; 0
    3ba4:	80 81       	ld	r24, Z
    3ba6:	84 60       	ori	r24, 0x04	; 4
    3ba8:	8c 93       	st	X, r24
	
	
	
   
	ps2byte = 0x03;			//byte4
    3baa:	83 e0       	ldi	r24, 0x03	; 3
    3bac:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)		
    3bb0:	10 92 67 00 	sts	0x0067, r1
    3bb4:	10 92 66 00 	sts	0x0066, r1
    3bb8:	b5 c1       	rjmp	.+874    	; 0x3f24 <analog+0x1a4c>
	{
		if(ps2byte&(_BV(i)))
    3bba:	80 91 61 00 	lds	r24, 0x0061
    3bbe:	28 2f       	mov	r18, r24
    3bc0:	30 e0       	ldi	r19, 0x00	; 0
    3bc2:	80 91 66 00 	lds	r24, 0x0066
    3bc6:	90 91 67 00 	lds	r25, 0x0067
    3bca:	a9 01       	movw	r20, r18
    3bcc:	02 c0       	rjmp	.+4      	; 0x3bd2 <analog+0x16fa>
    3bce:	55 95       	asr	r21
    3bd0:	47 95       	ror	r20
    3bd2:	8a 95       	dec	r24
    3bd4:	e2 f7       	brpl	.-8      	; 0x3bce <analog+0x16f6>
    3bd6:	ca 01       	movw	r24, r20
    3bd8:	81 70       	andi	r24, 0x01	; 1
    3bda:	90 70       	andi	r25, 0x00	; 0
    3bdc:	88 23       	and	r24, r24
    3bde:	41 f0       	breq	.+16     	; 0x3bf0 <analog+0x1718>
			sbi(ps2port,ps2cmd);
    3be0:	a5 e3       	ldi	r26, 0x35	; 53
    3be2:	b0 e0       	ldi	r27, 0x00	; 0
    3be4:	e5 e3       	ldi	r30, 0x35	; 53
    3be6:	f0 e0       	ldi	r31, 0x00	; 0
    3be8:	80 81       	ld	r24, Z
    3bea:	84 60       	ori	r24, 0x04	; 4
    3bec:	8c 93       	st	X, r24
    3bee:	07 c0       	rjmp	.+14     	; 0x3bfe <analog+0x1726>
		else 
			cbi(ps2port,ps2cmd);
    3bf0:	a5 e3       	ldi	r26, 0x35	; 53
    3bf2:	b0 e0       	ldi	r27, 0x00	; 0
    3bf4:	e5 e3       	ldi	r30, 0x35	; 53
    3bf6:	f0 e0       	ldi	r31, 0x00	; 0
    3bf8:	80 81       	ld	r24, Z
    3bfa:	8b 7f       	andi	r24, 0xFB	; 251
    3bfc:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    3bfe:	a5 e3       	ldi	r26, 0x35	; 53
    3c00:	b0 e0       	ldi	r27, 0x00	; 0
    3c02:	e5 e3       	ldi	r30, 0x35	; 53
    3c04:	f0 e0       	ldi	r31, 0x00	; 0
    3c06:	80 81       	ld	r24, Z
    3c08:	8e 7f       	andi	r24, 0xFE	; 254
    3c0a:	8c 93       	st	X, r24
    3c0c:	80 e0       	ldi	r24, 0x00	; 0
    3c0e:	90 e0       	ldi	r25, 0x00	; 0
    3c10:	a0 e8       	ldi	r26, 0x80	; 128
    3c12:	bf e3       	ldi	r27, 0x3F	; 63
    3c14:	8d a7       	std	Y+45, r24	; 0x2d
    3c16:	9e a7       	std	Y+46, r25	; 0x2e
    3c18:	af a7       	std	Y+47, r26	; 0x2f
    3c1a:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3c1c:	6d a5       	ldd	r22, Y+45	; 0x2d
    3c1e:	7e a5       	ldd	r23, Y+46	; 0x2e
    3c20:	8f a5       	ldd	r24, Y+47	; 0x2f
    3c22:	98 a9       	ldd	r25, Y+48	; 0x30
    3c24:	2b ea       	ldi	r18, 0xAB	; 171
    3c26:	3a ea       	ldi	r19, 0xAA	; 170
    3c28:	4a ea       	ldi	r20, 0xAA	; 170
    3c2a:	50 e4       	ldi	r21, 0x40	; 64
    3c2c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3c30:	dc 01       	movw	r26, r24
    3c32:	cb 01       	movw	r24, r22
    3c34:	89 a7       	std	Y+41, r24	; 0x29
    3c36:	9a a7       	std	Y+42, r25	; 0x2a
    3c38:	ab a7       	std	Y+43, r26	; 0x2b
    3c3a:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    3c3c:	69 a5       	ldd	r22, Y+41	; 0x29
    3c3e:	7a a5       	ldd	r23, Y+42	; 0x2a
    3c40:	8b a5       	ldd	r24, Y+43	; 0x2b
    3c42:	9c a5       	ldd	r25, Y+44	; 0x2c
    3c44:	20 e0       	ldi	r18, 0x00	; 0
    3c46:	30 e0       	ldi	r19, 0x00	; 0
    3c48:	40 e8       	ldi	r20, 0x80	; 128
    3c4a:	5f e3       	ldi	r21, 0x3F	; 63
    3c4c:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    3c50:	88 23       	and	r24, r24
    3c52:	1c f4       	brge	.+6      	; 0x3c5a <analog+0x1782>
		__ticks = 1;
    3c54:	81 e0       	ldi	r24, 0x01	; 1
    3c56:	88 a7       	std	Y+40, r24	; 0x28
    3c58:	91 c0       	rjmp	.+290    	; 0x3d7c <analog+0x18a4>
	else if (__tmp > 255)
    3c5a:	69 a5       	ldd	r22, Y+41	; 0x29
    3c5c:	7a a5       	ldd	r23, Y+42	; 0x2a
    3c5e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3c60:	9c a5       	ldd	r25, Y+44	; 0x2c
    3c62:	20 e0       	ldi	r18, 0x00	; 0
    3c64:	30 e0       	ldi	r19, 0x00	; 0
    3c66:	4f e7       	ldi	r20, 0x7F	; 127
    3c68:	53 e4       	ldi	r21, 0x43	; 67
    3c6a:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    3c6e:	18 16       	cp	r1, r24
    3c70:	0c f0       	brlt	.+2      	; 0x3c74 <analog+0x179c>
    3c72:	7b c0       	rjmp	.+246    	; 0x3d6a <analog+0x1892>
	{
		_delay_ms(__us / 1000.0);
    3c74:	6d a5       	ldd	r22, Y+45	; 0x2d
    3c76:	7e a5       	ldd	r23, Y+46	; 0x2e
    3c78:	8f a5       	ldd	r24, Y+47	; 0x2f
    3c7a:	98 a9       	ldd	r25, Y+48	; 0x30
    3c7c:	20 e0       	ldi	r18, 0x00	; 0
    3c7e:	30 e0       	ldi	r19, 0x00	; 0
    3c80:	4a e7       	ldi	r20, 0x7A	; 122
    3c82:	54 e4       	ldi	r21, 0x44	; 68
    3c84:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    3c88:	dc 01       	movw	r26, r24
    3c8a:	cb 01       	movw	r24, r22
    3c8c:	8c a3       	std	Y+36, r24	; 0x24
    3c8e:	9d a3       	std	Y+37, r25	; 0x25
    3c90:	ae a3       	std	Y+38, r26	; 0x26
    3c92:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c94:	6c a1       	ldd	r22, Y+36	; 0x24
    3c96:	7d a1       	ldd	r23, Y+37	; 0x25
    3c98:	8e a1       	ldd	r24, Y+38	; 0x26
    3c9a:	9f a1       	ldd	r25, Y+39	; 0x27
    3c9c:	20 e0       	ldi	r18, 0x00	; 0
    3c9e:	30 e0       	ldi	r19, 0x00	; 0
    3ca0:	4a e7       	ldi	r20, 0x7A	; 122
    3ca2:	55 e4       	ldi	r21, 0x45	; 69
    3ca4:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3ca8:	dc 01       	movw	r26, r24
    3caa:	cb 01       	movw	r24, r22
    3cac:	88 a3       	std	Y+32, r24	; 0x20
    3cae:	99 a3       	std	Y+33, r25	; 0x21
    3cb0:	aa a3       	std	Y+34, r26	; 0x22
    3cb2:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    3cb4:	68 a1       	ldd	r22, Y+32	; 0x20
    3cb6:	79 a1       	ldd	r23, Y+33	; 0x21
    3cb8:	8a a1       	ldd	r24, Y+34	; 0x22
    3cba:	9b a1       	ldd	r25, Y+35	; 0x23
    3cbc:	20 e0       	ldi	r18, 0x00	; 0
    3cbe:	30 e0       	ldi	r19, 0x00	; 0
    3cc0:	40 e8       	ldi	r20, 0x80	; 128
    3cc2:	5f e3       	ldi	r21, 0x3F	; 63
    3cc4:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    3cc8:	88 23       	and	r24, r24
    3cca:	2c f4       	brge	.+10     	; 0x3cd6 <analog+0x17fe>
		__ticks = 1;
    3ccc:	81 e0       	ldi	r24, 0x01	; 1
    3cce:	90 e0       	ldi	r25, 0x00	; 0
    3cd0:	9f 8f       	std	Y+31, r25	; 0x1f
    3cd2:	8e 8f       	std	Y+30, r24	; 0x1e
    3cd4:	3f c0       	rjmp	.+126    	; 0x3d54 <analog+0x187c>
	else if (__tmp > 65535)
    3cd6:	68 a1       	ldd	r22, Y+32	; 0x20
    3cd8:	79 a1       	ldd	r23, Y+33	; 0x21
    3cda:	8a a1       	ldd	r24, Y+34	; 0x22
    3cdc:	9b a1       	ldd	r25, Y+35	; 0x23
    3cde:	20 e0       	ldi	r18, 0x00	; 0
    3ce0:	3f ef       	ldi	r19, 0xFF	; 255
    3ce2:	4f e7       	ldi	r20, 0x7F	; 127
    3ce4:	57 e4       	ldi	r21, 0x47	; 71
    3ce6:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    3cea:	18 16       	cp	r1, r24
    3cec:	4c f5       	brge	.+82     	; 0x3d40 <analog+0x1868>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cee:	6c a1       	ldd	r22, Y+36	; 0x24
    3cf0:	7d a1       	ldd	r23, Y+37	; 0x25
    3cf2:	8e a1       	ldd	r24, Y+38	; 0x26
    3cf4:	9f a1       	ldd	r25, Y+39	; 0x27
    3cf6:	20 e0       	ldi	r18, 0x00	; 0
    3cf8:	30 e0       	ldi	r19, 0x00	; 0
    3cfa:	40 e2       	ldi	r20, 0x20	; 32
    3cfc:	51 e4       	ldi	r21, 0x41	; 65
    3cfe:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3d02:	dc 01       	movw	r26, r24
    3d04:	cb 01       	movw	r24, r22
    3d06:	bc 01       	movw	r22, r24
    3d08:	cd 01       	movw	r24, r26
    3d0a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3d0e:	dc 01       	movw	r26, r24
    3d10:	cb 01       	movw	r24, r22
    3d12:	9f 8f       	std	Y+31, r25	; 0x1f
    3d14:	8e 8f       	std	Y+30, r24	; 0x1e
    3d16:	0f c0       	rjmp	.+30     	; 0x3d36 <analog+0x185e>
    3d18:	80 e9       	ldi	r24, 0x90	; 144
    3d1a:	91 e0       	ldi	r25, 0x01	; 1
    3d1c:	9d 8f       	std	Y+29, r25	; 0x1d
    3d1e:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3d20:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3d22:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3d24:	01 97       	sbiw	r24, 0x01	; 1
    3d26:	f1 f7       	brne	.-4      	; 0x3d24 <analog+0x184c>
    3d28:	9d 8f       	std	Y+29, r25	; 0x1d
    3d2a:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d2c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3d2e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3d30:	01 97       	sbiw	r24, 0x01	; 1
    3d32:	9f 8f       	std	Y+31, r25	; 0x1f
    3d34:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d36:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3d38:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3d3a:	00 97       	sbiw	r24, 0x00	; 0
    3d3c:	69 f7       	brne	.-38     	; 0x3d18 <analog+0x1840>
    3d3e:	24 c0       	rjmp	.+72     	; 0x3d88 <analog+0x18b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d40:	68 a1       	ldd	r22, Y+32	; 0x20
    3d42:	79 a1       	ldd	r23, Y+33	; 0x21
    3d44:	8a a1       	ldd	r24, Y+34	; 0x22
    3d46:	9b a1       	ldd	r25, Y+35	; 0x23
    3d48:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3d4c:	dc 01       	movw	r26, r24
    3d4e:	cb 01       	movw	r24, r22
    3d50:	9f 8f       	std	Y+31, r25	; 0x1f
    3d52:	8e 8f       	std	Y+30, r24	; 0x1e
    3d54:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3d56:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3d58:	9b 8f       	std	Y+27, r25	; 0x1b
    3d5a:	8a 8f       	std	Y+26, r24	; 0x1a
    3d5c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3d5e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3d60:	01 97       	sbiw	r24, 0x01	; 1
    3d62:	f1 f7       	brne	.-4      	; 0x3d60 <analog+0x1888>
    3d64:	9b 8f       	std	Y+27, r25	; 0x1b
    3d66:	8a 8f       	std	Y+26, r24	; 0x1a
    3d68:	0f c0       	rjmp	.+30     	; 0x3d88 <analog+0x18b0>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3d6a:	69 a5       	ldd	r22, Y+41	; 0x29
    3d6c:	7a a5       	ldd	r23, Y+42	; 0x2a
    3d6e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3d70:	9c a5       	ldd	r25, Y+44	; 0x2c
    3d72:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3d76:	dc 01       	movw	r26, r24
    3d78:	cb 01       	movw	r24, r22
    3d7a:	88 a7       	std	Y+40, r24	; 0x28
    3d7c:	88 a5       	ldd	r24, Y+40	; 0x28
    3d7e:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3d80:	89 8d       	ldd	r24, Y+25	; 0x19
    3d82:	8a 95       	dec	r24
    3d84:	f1 f7       	brne	.-4      	; 0x3d82 <analog+0x18aa>
    3d86:	89 8f       	std	Y+25, r24	; 0x19
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    3d88:	a5 e3       	ldi	r26, 0x35	; 53
    3d8a:	b0 e0       	ldi	r27, 0x00	; 0
    3d8c:	e5 e3       	ldi	r30, 0x35	; 53
    3d8e:	f0 e0       	ldi	r31, 0x00	; 0
    3d90:	80 81       	ld	r24, Z
    3d92:	81 60       	ori	r24, 0x01	; 1
    3d94:	8c 93       	st	X, r24
    3d96:	80 e0       	ldi	r24, 0x00	; 0
    3d98:	90 e0       	ldi	r25, 0x00	; 0
    3d9a:	a0 e8       	ldi	r26, 0x80	; 128
    3d9c:	bf e3       	ldi	r27, 0x3F	; 63
    3d9e:	8d 8b       	std	Y+21, r24	; 0x15
    3da0:	9e 8b       	std	Y+22, r25	; 0x16
    3da2:	af 8b       	std	Y+23, r26	; 0x17
    3da4:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3da6:	6d 89       	ldd	r22, Y+21	; 0x15
    3da8:	7e 89       	ldd	r23, Y+22	; 0x16
    3daa:	8f 89       	ldd	r24, Y+23	; 0x17
    3dac:	98 8d       	ldd	r25, Y+24	; 0x18
    3dae:	2b ea       	ldi	r18, 0xAB	; 171
    3db0:	3a ea       	ldi	r19, 0xAA	; 170
    3db2:	4a ea       	ldi	r20, 0xAA	; 170
    3db4:	50 e4       	ldi	r21, 0x40	; 64
    3db6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3dba:	dc 01       	movw	r26, r24
    3dbc:	cb 01       	movw	r24, r22
    3dbe:	89 8b       	std	Y+17, r24	; 0x11
    3dc0:	9a 8b       	std	Y+18, r25	; 0x12
    3dc2:	ab 8b       	std	Y+19, r26	; 0x13
    3dc4:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    3dc6:	69 89       	ldd	r22, Y+17	; 0x11
    3dc8:	7a 89       	ldd	r23, Y+18	; 0x12
    3dca:	8b 89       	ldd	r24, Y+19	; 0x13
    3dcc:	9c 89       	ldd	r25, Y+20	; 0x14
    3dce:	20 e0       	ldi	r18, 0x00	; 0
    3dd0:	30 e0       	ldi	r19, 0x00	; 0
    3dd2:	40 e8       	ldi	r20, 0x80	; 128
    3dd4:	5f e3       	ldi	r21, 0x3F	; 63
    3dd6:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    3dda:	88 23       	and	r24, r24
    3ddc:	1c f4       	brge	.+6      	; 0x3de4 <analog+0x190c>
		__ticks = 1;
    3dde:	81 e0       	ldi	r24, 0x01	; 1
    3de0:	88 8b       	std	Y+16, r24	; 0x10
    3de2:	91 c0       	rjmp	.+290    	; 0x3f06 <analog+0x1a2e>
	else if (__tmp > 255)
    3de4:	69 89       	ldd	r22, Y+17	; 0x11
    3de6:	7a 89       	ldd	r23, Y+18	; 0x12
    3de8:	8b 89       	ldd	r24, Y+19	; 0x13
    3dea:	9c 89       	ldd	r25, Y+20	; 0x14
    3dec:	20 e0       	ldi	r18, 0x00	; 0
    3dee:	30 e0       	ldi	r19, 0x00	; 0
    3df0:	4f e7       	ldi	r20, 0x7F	; 127
    3df2:	53 e4       	ldi	r21, 0x43	; 67
    3df4:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    3df8:	18 16       	cp	r1, r24
    3dfa:	0c f0       	brlt	.+2      	; 0x3dfe <analog+0x1926>
    3dfc:	7b c0       	rjmp	.+246    	; 0x3ef4 <analog+0x1a1c>
	{
		_delay_ms(__us / 1000.0);
    3dfe:	6d 89       	ldd	r22, Y+21	; 0x15
    3e00:	7e 89       	ldd	r23, Y+22	; 0x16
    3e02:	8f 89       	ldd	r24, Y+23	; 0x17
    3e04:	98 8d       	ldd	r25, Y+24	; 0x18
    3e06:	20 e0       	ldi	r18, 0x00	; 0
    3e08:	30 e0       	ldi	r19, 0x00	; 0
    3e0a:	4a e7       	ldi	r20, 0x7A	; 122
    3e0c:	54 e4       	ldi	r21, 0x44	; 68
    3e0e:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    3e12:	dc 01       	movw	r26, r24
    3e14:	cb 01       	movw	r24, r22
    3e16:	8c 87       	std	Y+12, r24	; 0x0c
    3e18:	9d 87       	std	Y+13, r25	; 0x0d
    3e1a:	ae 87       	std	Y+14, r26	; 0x0e
    3e1c:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e1e:	6c 85       	ldd	r22, Y+12	; 0x0c
    3e20:	7d 85       	ldd	r23, Y+13	; 0x0d
    3e22:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e24:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e26:	20 e0       	ldi	r18, 0x00	; 0
    3e28:	30 e0       	ldi	r19, 0x00	; 0
    3e2a:	4a e7       	ldi	r20, 0x7A	; 122
    3e2c:	55 e4       	ldi	r21, 0x45	; 69
    3e2e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3e32:	dc 01       	movw	r26, r24
    3e34:	cb 01       	movw	r24, r22
    3e36:	88 87       	std	Y+8, r24	; 0x08
    3e38:	99 87       	std	Y+9, r25	; 0x09
    3e3a:	aa 87       	std	Y+10, r26	; 0x0a
    3e3c:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    3e3e:	68 85       	ldd	r22, Y+8	; 0x08
    3e40:	79 85       	ldd	r23, Y+9	; 0x09
    3e42:	8a 85       	ldd	r24, Y+10	; 0x0a
    3e44:	9b 85       	ldd	r25, Y+11	; 0x0b
    3e46:	20 e0       	ldi	r18, 0x00	; 0
    3e48:	30 e0       	ldi	r19, 0x00	; 0
    3e4a:	40 e8       	ldi	r20, 0x80	; 128
    3e4c:	5f e3       	ldi	r21, 0x3F	; 63
    3e4e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    3e52:	88 23       	and	r24, r24
    3e54:	2c f4       	brge	.+10     	; 0x3e60 <analog+0x1988>
		__ticks = 1;
    3e56:	81 e0       	ldi	r24, 0x01	; 1
    3e58:	90 e0       	ldi	r25, 0x00	; 0
    3e5a:	9f 83       	std	Y+7, r25	; 0x07
    3e5c:	8e 83       	std	Y+6, r24	; 0x06
    3e5e:	3f c0       	rjmp	.+126    	; 0x3ede <analog+0x1a06>
	else if (__tmp > 65535)
    3e60:	68 85       	ldd	r22, Y+8	; 0x08
    3e62:	79 85       	ldd	r23, Y+9	; 0x09
    3e64:	8a 85       	ldd	r24, Y+10	; 0x0a
    3e66:	9b 85       	ldd	r25, Y+11	; 0x0b
    3e68:	20 e0       	ldi	r18, 0x00	; 0
    3e6a:	3f ef       	ldi	r19, 0xFF	; 255
    3e6c:	4f e7       	ldi	r20, 0x7F	; 127
    3e6e:	57 e4       	ldi	r21, 0x47	; 71
    3e70:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    3e74:	18 16       	cp	r1, r24
    3e76:	4c f5       	brge	.+82     	; 0x3eca <analog+0x19f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e78:	6c 85       	ldd	r22, Y+12	; 0x0c
    3e7a:	7d 85       	ldd	r23, Y+13	; 0x0d
    3e7c:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e7e:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e80:	20 e0       	ldi	r18, 0x00	; 0
    3e82:	30 e0       	ldi	r19, 0x00	; 0
    3e84:	40 e2       	ldi	r20, 0x20	; 32
    3e86:	51 e4       	ldi	r21, 0x41	; 65
    3e88:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3e8c:	dc 01       	movw	r26, r24
    3e8e:	cb 01       	movw	r24, r22
    3e90:	bc 01       	movw	r22, r24
    3e92:	cd 01       	movw	r24, r26
    3e94:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3e98:	dc 01       	movw	r26, r24
    3e9a:	cb 01       	movw	r24, r22
    3e9c:	9f 83       	std	Y+7, r25	; 0x07
    3e9e:	8e 83       	std	Y+6, r24	; 0x06
    3ea0:	0f c0       	rjmp	.+30     	; 0x3ec0 <analog+0x19e8>
    3ea2:	80 e9       	ldi	r24, 0x90	; 144
    3ea4:	91 e0       	ldi	r25, 0x01	; 1
    3ea6:	9d 83       	std	Y+5, r25	; 0x05
    3ea8:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3eaa:	8c 81       	ldd	r24, Y+4	; 0x04
    3eac:	9d 81       	ldd	r25, Y+5	; 0x05
    3eae:	01 97       	sbiw	r24, 0x01	; 1
    3eb0:	f1 f7       	brne	.-4      	; 0x3eae <analog+0x19d6>
    3eb2:	9d 83       	std	Y+5, r25	; 0x05
    3eb4:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3eb6:	8e 81       	ldd	r24, Y+6	; 0x06
    3eb8:	9f 81       	ldd	r25, Y+7	; 0x07
    3eba:	01 97       	sbiw	r24, 0x01	; 1
    3ebc:	9f 83       	std	Y+7, r25	; 0x07
    3ebe:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ec0:	8e 81       	ldd	r24, Y+6	; 0x06
    3ec2:	9f 81       	ldd	r25, Y+7	; 0x07
    3ec4:	00 97       	sbiw	r24, 0x00	; 0
    3ec6:	69 f7       	brne	.-38     	; 0x3ea2 <analog+0x19ca>
    3ec8:	24 c0       	rjmp	.+72     	; 0x3f12 <analog+0x1a3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3eca:	68 85       	ldd	r22, Y+8	; 0x08
    3ecc:	79 85       	ldd	r23, Y+9	; 0x09
    3ece:	8a 85       	ldd	r24, Y+10	; 0x0a
    3ed0:	9b 85       	ldd	r25, Y+11	; 0x0b
    3ed2:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3ed6:	dc 01       	movw	r26, r24
    3ed8:	cb 01       	movw	r24, r22
    3eda:	9f 83       	std	Y+7, r25	; 0x07
    3edc:	8e 83       	std	Y+6, r24	; 0x06
    3ede:	8e 81       	ldd	r24, Y+6	; 0x06
    3ee0:	9f 81       	ldd	r25, Y+7	; 0x07
    3ee2:	9b 83       	std	Y+3, r25	; 0x03
    3ee4:	8a 83       	std	Y+2, r24	; 0x02
    3ee6:	8a 81       	ldd	r24, Y+2	; 0x02
    3ee8:	9b 81       	ldd	r25, Y+3	; 0x03
    3eea:	01 97       	sbiw	r24, 0x01	; 1
    3eec:	f1 f7       	brne	.-4      	; 0x3eea <analog+0x1a12>
    3eee:	9b 83       	std	Y+3, r25	; 0x03
    3ef0:	8a 83       	std	Y+2, r24	; 0x02
    3ef2:	0f c0       	rjmp	.+30     	; 0x3f12 <analog+0x1a3a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3ef4:	69 89       	ldd	r22, Y+17	; 0x11
    3ef6:	7a 89       	ldd	r23, Y+18	; 0x12
    3ef8:	8b 89       	ldd	r24, Y+19	; 0x13
    3efa:	9c 89       	ldd	r25, Y+20	; 0x14
    3efc:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    3f00:	dc 01       	movw	r26, r24
    3f02:	cb 01       	movw	r24, r22
    3f04:	88 8b       	std	Y+16, r24	; 0x10
    3f06:	88 89       	ldd	r24, Y+16	; 0x10
    3f08:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3f0a:	89 81       	ldd	r24, Y+1	; 0x01
    3f0c:	8a 95       	dec	r24
    3f0e:	f1 f7       	brne	.-4      	; 0x3f0c <analog+0x1a34>
    3f10:	89 83       	std	Y+1, r24	; 0x01
	
	
   
	ps2byte = 0x03;			//byte4
	
	for(i=0;i<8;i++)		
    3f12:	80 91 66 00 	lds	r24, 0x0066
    3f16:	90 91 67 00 	lds	r25, 0x0067
    3f1a:	01 96       	adiw	r24, 0x01	; 1
    3f1c:	90 93 67 00 	sts	0x0067, r25
    3f20:	80 93 66 00 	sts	0x0066, r24
    3f24:	80 91 66 00 	lds	r24, 0x0066
    3f28:	90 91 67 00 	lds	r25, 0x0067
    3f2c:	88 30       	cpi	r24, 0x08	; 8
    3f2e:	91 05       	cpc	r25, r1
    3f30:	0c f4       	brge	.+2      	; 0x3f34 <analog+0x1a5c>
    3f32:	43 ce       	rjmp	.-890    	; 0x3bba <analog+0x16e2>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd);  
    3f34:	a5 e3       	ldi	r26, 0x35	; 53
    3f36:	b0 e0       	ldi	r27, 0x00	; 0
    3f38:	e5 e3       	ldi	r30, 0x35	; 53
    3f3a:	f0 e0       	ldi	r31, 0x00	; 0
    3f3c:	80 81       	ld	r24, Z
    3f3e:	84 60       	ori	r24, 0x04	; 4
    3f40:	8c 93       	st	X, r24
	
	sbi(ps2port,ps2att);
    3f42:	a5 e3       	ldi	r26, 0x35	; 53
    3f44:	b0 e0       	ldi	r27, 0x00	; 0
    3f46:	e5 e3       	ldi	r30, 0x35	; 53
    3f48:	f0 e0       	ldi	r31, 0x00	; 0
    3f4a:	80 81       	ld	r24, Z
    3f4c:	80 61       	ori	r24, 0x10	; 16
    3f4e:	8c 93       	st	X, r24

}
    3f50:	c8 5f       	subi	r28, 0xF8	; 248
    3f52:	de 4f       	sbci	r29, 0xFE	; 254
    3f54:	0f b6       	in	r0, 0x3f	; 63
    3f56:	f8 94       	cli
    3f58:	de bf       	out	0x3e, r29	; 62
    3f5a:	0f be       	out	0x3f, r0	; 63
    3f5c:	cd bf       	out	0x3d, r28	; 61
    3f5e:	cf 91       	pop	r28
    3f60:	df 91       	pop	r29
    3f62:	1f 91       	pop	r17
    3f64:	0f 91       	pop	r16
    3f66:	08 95       	ret

00003f68 <readgamepad>:

void readgamepad()
{
    3f68:	0f 93       	push	r16
    3f6a:	1f 93       	push	r17
    3f6c:	df 93       	push	r29
    3f6e:	cf 93       	push	r28
    3f70:	cd b7       	in	r28, 0x3d	; 61
    3f72:	de b7       	in	r29, 0x3e	; 62
    3f74:	c8 5c       	subi	r28, 0xC8	; 200
    3f76:	d1 40       	sbci	r29, 0x01	; 1
    3f78:	0f b6       	in	r0, 0x3f	; 63
    3f7a:	f8 94       	cli
    3f7c:	de bf       	out	0x3e, r29	; 62
    3f7e:	0f be       	out	0x3f, r0	; 63
    3f80:	cd bf       	out	0x3d, r28	; 61
	
	sbi(ps2port,ps2cmd);
    3f82:	a5 e3       	ldi	r26, 0x35	; 53
    3f84:	b0 e0       	ldi	r27, 0x00	; 0
    3f86:	e5 e3       	ldi	r30, 0x35	; 53
    3f88:	f0 e0       	ldi	r31, 0x00	; 0
    3f8a:	80 81       	ld	r24, Z
    3f8c:	84 60       	ori	r24, 0x04	; 4
    3f8e:	8c 93       	st	X, r24
	sbi(ps2port,ps2clk);
    3f90:	a5 e3       	ldi	r26, 0x35	; 53
    3f92:	b0 e0       	ldi	r27, 0x00	; 0
    3f94:	e5 e3       	ldi	r30, 0x35	; 53
    3f96:	f0 e0       	ldi	r31, 0x00	; 0
    3f98:	80 81       	ld	r24, Z
    3f9a:	81 60       	ori	r24, 0x01	; 1
    3f9c:	8c 93       	st	X, r24
	cbi(ps2port,ps2att);
    3f9e:	a5 e3       	ldi	r26, 0x35	; 53
    3fa0:	b0 e0       	ldi	r27, 0x00	; 0
    3fa2:	e5 e3       	ldi	r30, 0x35	; 53
    3fa4:	f0 e0       	ldi	r31, 0x00	; 0
    3fa6:	80 81       	ld	r24, Z
    3fa8:	8f 7e       	andi	r24, 0xEF	; 239
    3faa:	8c 93       	st	X, r24
    3fac:	fe 01       	movw	r30, r28
    3fae:	eb 53       	subi	r30, 0x3B	; 59
    3fb0:	fe 4f       	sbci	r31, 0xFE	; 254
    3fb2:	80 e0       	ldi	r24, 0x00	; 0
    3fb4:	90 e0       	ldi	r25, 0x00	; 0
    3fb6:	a0 ef       	ldi	r26, 0xF0	; 240
    3fb8:	b1 e4       	ldi	r27, 0x41	; 65
    3fba:	80 83       	st	Z, r24
    3fbc:	91 83       	std	Z+1, r25	; 0x01
    3fbe:	a2 83       	std	Z+2, r26	; 0x02
    3fc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3fc2:	8e 01       	movw	r16, r28
    3fc4:	0f 53       	subi	r16, 0x3F	; 63
    3fc6:	1e 4f       	sbci	r17, 0xFE	; 254
    3fc8:	fe 01       	movw	r30, r28
    3fca:	eb 53       	subi	r30, 0x3B	; 59
    3fcc:	fe 4f       	sbci	r31, 0xFE	; 254
    3fce:	60 81       	ld	r22, Z
    3fd0:	71 81       	ldd	r23, Z+1	; 0x01
    3fd2:	82 81       	ldd	r24, Z+2	; 0x02
    3fd4:	93 81       	ldd	r25, Z+3	; 0x03
    3fd6:	2b ea       	ldi	r18, 0xAB	; 171
    3fd8:	3a ea       	ldi	r19, 0xAA	; 170
    3fda:	4a ea       	ldi	r20, 0xAA	; 170
    3fdc:	50 e4       	ldi	r21, 0x40	; 64
    3fde:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    3fe2:	dc 01       	movw	r26, r24
    3fe4:	cb 01       	movw	r24, r22
    3fe6:	f8 01       	movw	r30, r16
    3fe8:	80 83       	st	Z, r24
    3fea:	91 83       	std	Z+1, r25	; 0x01
    3fec:	a2 83       	std	Z+2, r26	; 0x02
    3fee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3ff0:	fe 01       	movw	r30, r28
    3ff2:	ef 53       	subi	r30, 0x3F	; 63
    3ff4:	fe 4f       	sbci	r31, 0xFE	; 254
    3ff6:	60 81       	ld	r22, Z
    3ff8:	71 81       	ldd	r23, Z+1	; 0x01
    3ffa:	82 81       	ldd	r24, Z+2	; 0x02
    3ffc:	93 81       	ldd	r25, Z+3	; 0x03
    3ffe:	20 e0       	ldi	r18, 0x00	; 0
    4000:	30 e0       	ldi	r19, 0x00	; 0
    4002:	40 e8       	ldi	r20, 0x80	; 128
    4004:	5f e3       	ldi	r21, 0x3F	; 63
    4006:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    400a:	88 23       	and	r24, r24
    400c:	34 f4       	brge	.+12     	; 0x401a <readgamepad+0xb2>
		__ticks = 1;
    400e:	fe 01       	movw	r30, r28
    4010:	e0 54       	subi	r30, 0x40	; 64
    4012:	fe 4f       	sbci	r31, 0xFE	; 254
    4014:	81 e0       	ldi	r24, 0x01	; 1
    4016:	80 83       	st	Z, r24
    4018:	e0 c0       	rjmp	.+448    	; 0x41da <readgamepad+0x272>
	else if (__tmp > 255)
    401a:	fe 01       	movw	r30, r28
    401c:	ef 53       	subi	r30, 0x3F	; 63
    401e:	fe 4f       	sbci	r31, 0xFE	; 254
    4020:	60 81       	ld	r22, Z
    4022:	71 81       	ldd	r23, Z+1	; 0x01
    4024:	82 81       	ldd	r24, Z+2	; 0x02
    4026:	93 81       	ldd	r25, Z+3	; 0x03
    4028:	20 e0       	ldi	r18, 0x00	; 0
    402a:	30 e0       	ldi	r19, 0x00	; 0
    402c:	4f e7       	ldi	r20, 0x7F	; 127
    402e:	53 e4       	ldi	r21, 0x43	; 67
    4030:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    4034:	18 16       	cp	r1, r24
    4036:	0c f0       	brlt	.+2      	; 0x403a <readgamepad+0xd2>
    4038:	c0 c0       	rjmp	.+384    	; 0x41ba <readgamepad+0x252>
	{
		_delay_ms(__us / 1000.0);
    403a:	fe 01       	movw	r30, r28
    403c:	eb 53       	subi	r30, 0x3B	; 59
    403e:	fe 4f       	sbci	r31, 0xFE	; 254
    4040:	60 81       	ld	r22, Z
    4042:	71 81       	ldd	r23, Z+1	; 0x01
    4044:	82 81       	ldd	r24, Z+2	; 0x02
    4046:	93 81       	ldd	r25, Z+3	; 0x03
    4048:	20 e0       	ldi	r18, 0x00	; 0
    404a:	30 e0       	ldi	r19, 0x00	; 0
    404c:	4a e7       	ldi	r20, 0x7A	; 122
    404e:	54 e4       	ldi	r21, 0x44	; 68
    4050:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    4054:	dc 01       	movw	r26, r24
    4056:	cb 01       	movw	r24, r22
    4058:	fe 01       	movw	r30, r28
    405a:	e4 54       	subi	r30, 0x44	; 68
    405c:	fe 4f       	sbci	r31, 0xFE	; 254
    405e:	80 83       	st	Z, r24
    4060:	91 83       	std	Z+1, r25	; 0x01
    4062:	a2 83       	std	Z+2, r26	; 0x02
    4064:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4066:	8e 01       	movw	r16, r28
    4068:	08 54       	subi	r16, 0x48	; 72
    406a:	1e 4f       	sbci	r17, 0xFE	; 254
    406c:	fe 01       	movw	r30, r28
    406e:	e4 54       	subi	r30, 0x44	; 68
    4070:	fe 4f       	sbci	r31, 0xFE	; 254
    4072:	60 81       	ld	r22, Z
    4074:	71 81       	ldd	r23, Z+1	; 0x01
    4076:	82 81       	ldd	r24, Z+2	; 0x02
    4078:	93 81       	ldd	r25, Z+3	; 0x03
    407a:	20 e0       	ldi	r18, 0x00	; 0
    407c:	30 e0       	ldi	r19, 0x00	; 0
    407e:	4a e7       	ldi	r20, 0x7A	; 122
    4080:	55 e4       	ldi	r21, 0x45	; 69
    4082:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4086:	dc 01       	movw	r26, r24
    4088:	cb 01       	movw	r24, r22
    408a:	f8 01       	movw	r30, r16
    408c:	80 83       	st	Z, r24
    408e:	91 83       	std	Z+1, r25	; 0x01
    4090:	a2 83       	std	Z+2, r26	; 0x02
    4092:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4094:	fe 01       	movw	r30, r28
    4096:	e8 54       	subi	r30, 0x48	; 72
    4098:	fe 4f       	sbci	r31, 0xFE	; 254
    409a:	60 81       	ld	r22, Z
    409c:	71 81       	ldd	r23, Z+1	; 0x01
    409e:	82 81       	ldd	r24, Z+2	; 0x02
    40a0:	93 81       	ldd	r25, Z+3	; 0x03
    40a2:	20 e0       	ldi	r18, 0x00	; 0
    40a4:	30 e0       	ldi	r19, 0x00	; 0
    40a6:	40 e8       	ldi	r20, 0x80	; 128
    40a8:	5f e3       	ldi	r21, 0x3F	; 63
    40aa:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    40ae:	88 23       	and	r24, r24
    40b0:	44 f4       	brge	.+16     	; 0x40c2 <readgamepad+0x15a>
		__ticks = 1;
    40b2:	fe 01       	movw	r30, r28
    40b4:	ea 54       	subi	r30, 0x4A	; 74
    40b6:	fe 4f       	sbci	r31, 0xFE	; 254
    40b8:	81 e0       	ldi	r24, 0x01	; 1
    40ba:	90 e0       	ldi	r25, 0x00	; 0
    40bc:	91 83       	std	Z+1, r25	; 0x01
    40be:	80 83       	st	Z, r24
    40c0:	64 c0       	rjmp	.+200    	; 0x418a <readgamepad+0x222>
	else if (__tmp > 65535)
    40c2:	fe 01       	movw	r30, r28
    40c4:	e8 54       	subi	r30, 0x48	; 72
    40c6:	fe 4f       	sbci	r31, 0xFE	; 254
    40c8:	60 81       	ld	r22, Z
    40ca:	71 81       	ldd	r23, Z+1	; 0x01
    40cc:	82 81       	ldd	r24, Z+2	; 0x02
    40ce:	93 81       	ldd	r25, Z+3	; 0x03
    40d0:	20 e0       	ldi	r18, 0x00	; 0
    40d2:	3f ef       	ldi	r19, 0xFF	; 255
    40d4:	4f e7       	ldi	r20, 0x7F	; 127
    40d6:	57 e4       	ldi	r21, 0x47	; 71
    40d8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    40dc:	18 16       	cp	r1, r24
    40de:	0c f0       	brlt	.+2      	; 0x40e2 <readgamepad+0x17a>
    40e0:	43 c0       	rjmp	.+134    	; 0x4168 <readgamepad+0x200>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40e2:	fe 01       	movw	r30, r28
    40e4:	e4 54       	subi	r30, 0x44	; 68
    40e6:	fe 4f       	sbci	r31, 0xFE	; 254
    40e8:	60 81       	ld	r22, Z
    40ea:	71 81       	ldd	r23, Z+1	; 0x01
    40ec:	82 81       	ldd	r24, Z+2	; 0x02
    40ee:	93 81       	ldd	r25, Z+3	; 0x03
    40f0:	20 e0       	ldi	r18, 0x00	; 0
    40f2:	30 e0       	ldi	r19, 0x00	; 0
    40f4:	40 e2       	ldi	r20, 0x20	; 32
    40f6:	51 e4       	ldi	r21, 0x41	; 65
    40f8:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    40fc:	dc 01       	movw	r26, r24
    40fe:	cb 01       	movw	r24, r22
    4100:	8e 01       	movw	r16, r28
    4102:	0a 54       	subi	r16, 0x4A	; 74
    4104:	1e 4f       	sbci	r17, 0xFE	; 254
    4106:	bc 01       	movw	r22, r24
    4108:	cd 01       	movw	r24, r26
    410a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    410e:	dc 01       	movw	r26, r24
    4110:	cb 01       	movw	r24, r22
    4112:	f8 01       	movw	r30, r16
    4114:	91 83       	std	Z+1, r25	; 0x01
    4116:	80 83       	st	Z, r24
    4118:	1f c0       	rjmp	.+62     	; 0x4158 <readgamepad+0x1f0>
    411a:	fe 01       	movw	r30, r28
    411c:	ec 54       	subi	r30, 0x4C	; 76
    411e:	fe 4f       	sbci	r31, 0xFE	; 254
    4120:	80 e9       	ldi	r24, 0x90	; 144
    4122:	91 e0       	ldi	r25, 0x01	; 1
    4124:	91 83       	std	Z+1, r25	; 0x01
    4126:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4128:	fe 01       	movw	r30, r28
    412a:	ec 54       	subi	r30, 0x4C	; 76
    412c:	fe 4f       	sbci	r31, 0xFE	; 254
    412e:	80 81       	ld	r24, Z
    4130:	91 81       	ldd	r25, Z+1	; 0x01
    4132:	01 97       	sbiw	r24, 0x01	; 1
    4134:	f1 f7       	brne	.-4      	; 0x4132 <readgamepad+0x1ca>
    4136:	fe 01       	movw	r30, r28
    4138:	ec 54       	subi	r30, 0x4C	; 76
    413a:	fe 4f       	sbci	r31, 0xFE	; 254
    413c:	91 83       	std	Z+1, r25	; 0x01
    413e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4140:	de 01       	movw	r26, r28
    4142:	aa 54       	subi	r26, 0x4A	; 74
    4144:	be 4f       	sbci	r27, 0xFE	; 254
    4146:	fe 01       	movw	r30, r28
    4148:	ea 54       	subi	r30, 0x4A	; 74
    414a:	fe 4f       	sbci	r31, 0xFE	; 254
    414c:	80 81       	ld	r24, Z
    414e:	91 81       	ldd	r25, Z+1	; 0x01
    4150:	01 97       	sbiw	r24, 0x01	; 1
    4152:	11 96       	adiw	r26, 0x01	; 1
    4154:	9c 93       	st	X, r25
    4156:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4158:	fe 01       	movw	r30, r28
    415a:	ea 54       	subi	r30, 0x4A	; 74
    415c:	fe 4f       	sbci	r31, 0xFE	; 254
    415e:	80 81       	ld	r24, Z
    4160:	91 81       	ldd	r25, Z+1	; 0x01
    4162:	00 97       	sbiw	r24, 0x00	; 0
    4164:	d1 f6       	brne	.-76     	; 0x411a <readgamepad+0x1b2>
    4166:	4b c0       	rjmp	.+150    	; 0x41fe <readgamepad+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4168:	8e 01       	movw	r16, r28
    416a:	0a 54       	subi	r16, 0x4A	; 74
    416c:	1e 4f       	sbci	r17, 0xFE	; 254
    416e:	fe 01       	movw	r30, r28
    4170:	e8 54       	subi	r30, 0x48	; 72
    4172:	fe 4f       	sbci	r31, 0xFE	; 254
    4174:	60 81       	ld	r22, Z
    4176:	71 81       	ldd	r23, Z+1	; 0x01
    4178:	82 81       	ldd	r24, Z+2	; 0x02
    417a:	93 81       	ldd	r25, Z+3	; 0x03
    417c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4180:	dc 01       	movw	r26, r24
    4182:	cb 01       	movw	r24, r22
    4184:	f8 01       	movw	r30, r16
    4186:	91 83       	std	Z+1, r25	; 0x01
    4188:	80 83       	st	Z, r24
    418a:	de 01       	movw	r26, r28
    418c:	ae 54       	subi	r26, 0x4E	; 78
    418e:	be 4f       	sbci	r27, 0xFE	; 254
    4190:	fe 01       	movw	r30, r28
    4192:	ea 54       	subi	r30, 0x4A	; 74
    4194:	fe 4f       	sbci	r31, 0xFE	; 254
    4196:	80 81       	ld	r24, Z
    4198:	91 81       	ldd	r25, Z+1	; 0x01
    419a:	11 96       	adiw	r26, 0x01	; 1
    419c:	9c 93       	st	X, r25
    419e:	8e 93       	st	-X, r24
    41a0:	fe 01       	movw	r30, r28
    41a2:	ee 54       	subi	r30, 0x4E	; 78
    41a4:	fe 4f       	sbci	r31, 0xFE	; 254
    41a6:	80 81       	ld	r24, Z
    41a8:	91 81       	ldd	r25, Z+1	; 0x01
    41aa:	01 97       	sbiw	r24, 0x01	; 1
    41ac:	f1 f7       	brne	.-4      	; 0x41aa <readgamepad+0x242>
    41ae:	fe 01       	movw	r30, r28
    41b0:	ee 54       	subi	r30, 0x4E	; 78
    41b2:	fe 4f       	sbci	r31, 0xFE	; 254
    41b4:	91 83       	std	Z+1, r25	; 0x01
    41b6:	80 83       	st	Z, r24
    41b8:	22 c0       	rjmp	.+68     	; 0x41fe <readgamepad+0x296>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    41ba:	8e 01       	movw	r16, r28
    41bc:	00 54       	subi	r16, 0x40	; 64
    41be:	1e 4f       	sbci	r17, 0xFE	; 254
    41c0:	fe 01       	movw	r30, r28
    41c2:	ef 53       	subi	r30, 0x3F	; 63
    41c4:	fe 4f       	sbci	r31, 0xFE	; 254
    41c6:	60 81       	ld	r22, Z
    41c8:	71 81       	ldd	r23, Z+1	; 0x01
    41ca:	82 81       	ldd	r24, Z+2	; 0x02
    41cc:	93 81       	ldd	r25, Z+3	; 0x03
    41ce:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    41d2:	dc 01       	movw	r26, r24
    41d4:	cb 01       	movw	r24, r22
    41d6:	f8 01       	movw	r30, r16
    41d8:	80 83       	st	Z, r24
    41da:	de 01       	movw	r26, r28
    41dc:	af 54       	subi	r26, 0x4F	; 79
    41de:	be 4f       	sbci	r27, 0xFE	; 254
    41e0:	fe 01       	movw	r30, r28
    41e2:	e0 54       	subi	r30, 0x40	; 64
    41e4:	fe 4f       	sbci	r31, 0xFE	; 254
    41e6:	80 81       	ld	r24, Z
    41e8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    41ea:	fe 01       	movw	r30, r28
    41ec:	ef 54       	subi	r30, 0x4F	; 79
    41ee:	fe 4f       	sbci	r31, 0xFE	; 254
    41f0:	80 81       	ld	r24, Z
    41f2:	8a 95       	dec	r24
    41f4:	f1 f7       	brne	.-4      	; 0x41f2 <readgamepad+0x28a>
    41f6:	fe 01       	movw	r30, r28
    41f8:	ef 54       	subi	r30, 0x4F	; 79
    41fa:	fe 4f       	sbci	r31, 0xFE	; 254
    41fc:	80 83       	st	Z, r24
	
	_delay_us(30);
	
	ps2byte = 0x01;			//byte1
    41fe:	81 e0       	ldi	r24, 0x01	; 1
    4200:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)		
    4204:	10 92 67 00 	sts	0x0067, r1
    4208:	10 92 66 00 	sts	0x0066, r1
    420c:	8b c2       	rjmp	.+1302   	; 0x4724 <readgamepad+0x7bc>
	{
		if(ps2byte&(_BV(i)))
    420e:	80 91 61 00 	lds	r24, 0x0061
    4212:	28 2f       	mov	r18, r24
    4214:	30 e0       	ldi	r19, 0x00	; 0
    4216:	80 91 66 00 	lds	r24, 0x0066
    421a:	90 91 67 00 	lds	r25, 0x0067
    421e:	a9 01       	movw	r20, r18
    4220:	02 c0       	rjmp	.+4      	; 0x4226 <readgamepad+0x2be>
    4222:	55 95       	asr	r21
    4224:	47 95       	ror	r20
    4226:	8a 95       	dec	r24
    4228:	e2 f7       	brpl	.-8      	; 0x4222 <readgamepad+0x2ba>
    422a:	ca 01       	movw	r24, r20
    422c:	81 70       	andi	r24, 0x01	; 1
    422e:	90 70       	andi	r25, 0x00	; 0
    4230:	88 23       	and	r24, r24
    4232:	41 f0       	breq	.+16     	; 0x4244 <readgamepad+0x2dc>
			sbi(ps2port,ps2cmd);
    4234:	a5 e3       	ldi	r26, 0x35	; 53
    4236:	b0 e0       	ldi	r27, 0x00	; 0
    4238:	e5 e3       	ldi	r30, 0x35	; 53
    423a:	f0 e0       	ldi	r31, 0x00	; 0
    423c:	80 81       	ld	r24, Z
    423e:	84 60       	ori	r24, 0x04	; 4
    4240:	8c 93       	st	X, r24
    4242:	07 c0       	rjmp	.+14     	; 0x4252 <readgamepad+0x2ea>
		else 
			cbi(ps2port,ps2cmd);
    4244:	a5 e3       	ldi	r26, 0x35	; 53
    4246:	b0 e0       	ldi	r27, 0x00	; 0
    4248:	e5 e3       	ldi	r30, 0x35	; 53
    424a:	f0 e0       	ldi	r31, 0x00	; 0
    424c:	80 81       	ld	r24, Z
    424e:	8b 7f       	andi	r24, 0xFB	; 251
    4250:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    4252:	a5 e3       	ldi	r26, 0x35	; 53
    4254:	b0 e0       	ldi	r27, 0x00	; 0
    4256:	e5 e3       	ldi	r30, 0x35	; 53
    4258:	f0 e0       	ldi	r31, 0x00	; 0
    425a:	80 81       	ld	r24, Z
    425c:	8e 7f       	andi	r24, 0xFE	; 254
    425e:	8c 93       	st	X, r24
    4260:	fe 01       	movw	r30, r28
    4262:	e3 55       	subi	r30, 0x53	; 83
    4264:	fe 4f       	sbci	r31, 0xFE	; 254
    4266:	80 e0       	ldi	r24, 0x00	; 0
    4268:	90 e0       	ldi	r25, 0x00	; 0
    426a:	a0 e8       	ldi	r26, 0x80	; 128
    426c:	bf e3       	ldi	r27, 0x3F	; 63
    426e:	80 83       	st	Z, r24
    4270:	91 83       	std	Z+1, r25	; 0x01
    4272:	a2 83       	std	Z+2, r26	; 0x02
    4274:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4276:	8e 01       	movw	r16, r28
    4278:	07 55       	subi	r16, 0x57	; 87
    427a:	1e 4f       	sbci	r17, 0xFE	; 254
    427c:	fe 01       	movw	r30, r28
    427e:	e3 55       	subi	r30, 0x53	; 83
    4280:	fe 4f       	sbci	r31, 0xFE	; 254
    4282:	60 81       	ld	r22, Z
    4284:	71 81       	ldd	r23, Z+1	; 0x01
    4286:	82 81       	ldd	r24, Z+2	; 0x02
    4288:	93 81       	ldd	r25, Z+3	; 0x03
    428a:	2b ea       	ldi	r18, 0xAB	; 171
    428c:	3a ea       	ldi	r19, 0xAA	; 170
    428e:	4a ea       	ldi	r20, 0xAA	; 170
    4290:	50 e4       	ldi	r21, 0x40	; 64
    4292:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4296:	dc 01       	movw	r26, r24
    4298:	cb 01       	movw	r24, r22
    429a:	f8 01       	movw	r30, r16
    429c:	80 83       	st	Z, r24
    429e:	91 83       	std	Z+1, r25	; 0x01
    42a0:	a2 83       	std	Z+2, r26	; 0x02
    42a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    42a4:	fe 01       	movw	r30, r28
    42a6:	e7 55       	subi	r30, 0x57	; 87
    42a8:	fe 4f       	sbci	r31, 0xFE	; 254
    42aa:	60 81       	ld	r22, Z
    42ac:	71 81       	ldd	r23, Z+1	; 0x01
    42ae:	82 81       	ldd	r24, Z+2	; 0x02
    42b0:	93 81       	ldd	r25, Z+3	; 0x03
    42b2:	20 e0       	ldi	r18, 0x00	; 0
    42b4:	30 e0       	ldi	r19, 0x00	; 0
    42b6:	40 e8       	ldi	r20, 0x80	; 128
    42b8:	5f e3       	ldi	r21, 0x3F	; 63
    42ba:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    42be:	88 23       	and	r24, r24
    42c0:	34 f4       	brge	.+12     	; 0x42ce <readgamepad+0x366>
		__ticks = 1;
    42c2:	fe 01       	movw	r30, r28
    42c4:	e8 55       	subi	r30, 0x58	; 88
    42c6:	fe 4f       	sbci	r31, 0xFE	; 254
    42c8:	81 e0       	ldi	r24, 0x01	; 1
    42ca:	80 83       	st	Z, r24
    42cc:	e0 c0       	rjmp	.+448    	; 0x448e <readgamepad+0x526>
	else if (__tmp > 255)
    42ce:	fe 01       	movw	r30, r28
    42d0:	e7 55       	subi	r30, 0x57	; 87
    42d2:	fe 4f       	sbci	r31, 0xFE	; 254
    42d4:	60 81       	ld	r22, Z
    42d6:	71 81       	ldd	r23, Z+1	; 0x01
    42d8:	82 81       	ldd	r24, Z+2	; 0x02
    42da:	93 81       	ldd	r25, Z+3	; 0x03
    42dc:	20 e0       	ldi	r18, 0x00	; 0
    42de:	30 e0       	ldi	r19, 0x00	; 0
    42e0:	4f e7       	ldi	r20, 0x7F	; 127
    42e2:	53 e4       	ldi	r21, 0x43	; 67
    42e4:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    42e8:	18 16       	cp	r1, r24
    42ea:	0c f0       	brlt	.+2      	; 0x42ee <readgamepad+0x386>
    42ec:	c0 c0       	rjmp	.+384    	; 0x446e <readgamepad+0x506>
	{
		_delay_ms(__us / 1000.0);
    42ee:	fe 01       	movw	r30, r28
    42f0:	e3 55       	subi	r30, 0x53	; 83
    42f2:	fe 4f       	sbci	r31, 0xFE	; 254
    42f4:	60 81       	ld	r22, Z
    42f6:	71 81       	ldd	r23, Z+1	; 0x01
    42f8:	82 81       	ldd	r24, Z+2	; 0x02
    42fa:	93 81       	ldd	r25, Z+3	; 0x03
    42fc:	20 e0       	ldi	r18, 0x00	; 0
    42fe:	30 e0       	ldi	r19, 0x00	; 0
    4300:	4a e7       	ldi	r20, 0x7A	; 122
    4302:	54 e4       	ldi	r21, 0x44	; 68
    4304:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    4308:	dc 01       	movw	r26, r24
    430a:	cb 01       	movw	r24, r22
    430c:	fe 01       	movw	r30, r28
    430e:	ec 55       	subi	r30, 0x5C	; 92
    4310:	fe 4f       	sbci	r31, 0xFE	; 254
    4312:	80 83       	st	Z, r24
    4314:	91 83       	std	Z+1, r25	; 0x01
    4316:	a2 83       	std	Z+2, r26	; 0x02
    4318:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    431a:	8e 01       	movw	r16, r28
    431c:	00 56       	subi	r16, 0x60	; 96
    431e:	1e 4f       	sbci	r17, 0xFE	; 254
    4320:	fe 01       	movw	r30, r28
    4322:	ec 55       	subi	r30, 0x5C	; 92
    4324:	fe 4f       	sbci	r31, 0xFE	; 254
    4326:	60 81       	ld	r22, Z
    4328:	71 81       	ldd	r23, Z+1	; 0x01
    432a:	82 81       	ldd	r24, Z+2	; 0x02
    432c:	93 81       	ldd	r25, Z+3	; 0x03
    432e:	20 e0       	ldi	r18, 0x00	; 0
    4330:	30 e0       	ldi	r19, 0x00	; 0
    4332:	4a e7       	ldi	r20, 0x7A	; 122
    4334:	55 e4       	ldi	r21, 0x45	; 69
    4336:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    433a:	dc 01       	movw	r26, r24
    433c:	cb 01       	movw	r24, r22
    433e:	f8 01       	movw	r30, r16
    4340:	80 83       	st	Z, r24
    4342:	91 83       	std	Z+1, r25	; 0x01
    4344:	a2 83       	std	Z+2, r26	; 0x02
    4346:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4348:	fe 01       	movw	r30, r28
    434a:	e0 56       	subi	r30, 0x60	; 96
    434c:	fe 4f       	sbci	r31, 0xFE	; 254
    434e:	60 81       	ld	r22, Z
    4350:	71 81       	ldd	r23, Z+1	; 0x01
    4352:	82 81       	ldd	r24, Z+2	; 0x02
    4354:	93 81       	ldd	r25, Z+3	; 0x03
    4356:	20 e0       	ldi	r18, 0x00	; 0
    4358:	30 e0       	ldi	r19, 0x00	; 0
    435a:	40 e8       	ldi	r20, 0x80	; 128
    435c:	5f e3       	ldi	r21, 0x3F	; 63
    435e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    4362:	88 23       	and	r24, r24
    4364:	44 f4       	brge	.+16     	; 0x4376 <readgamepad+0x40e>
		__ticks = 1;
    4366:	fe 01       	movw	r30, r28
    4368:	e2 56       	subi	r30, 0x62	; 98
    436a:	fe 4f       	sbci	r31, 0xFE	; 254
    436c:	81 e0       	ldi	r24, 0x01	; 1
    436e:	90 e0       	ldi	r25, 0x00	; 0
    4370:	91 83       	std	Z+1, r25	; 0x01
    4372:	80 83       	st	Z, r24
    4374:	64 c0       	rjmp	.+200    	; 0x443e <readgamepad+0x4d6>
	else if (__tmp > 65535)
    4376:	fe 01       	movw	r30, r28
    4378:	e0 56       	subi	r30, 0x60	; 96
    437a:	fe 4f       	sbci	r31, 0xFE	; 254
    437c:	60 81       	ld	r22, Z
    437e:	71 81       	ldd	r23, Z+1	; 0x01
    4380:	82 81       	ldd	r24, Z+2	; 0x02
    4382:	93 81       	ldd	r25, Z+3	; 0x03
    4384:	20 e0       	ldi	r18, 0x00	; 0
    4386:	3f ef       	ldi	r19, 0xFF	; 255
    4388:	4f e7       	ldi	r20, 0x7F	; 127
    438a:	57 e4       	ldi	r21, 0x47	; 71
    438c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    4390:	18 16       	cp	r1, r24
    4392:	0c f0       	brlt	.+2      	; 0x4396 <readgamepad+0x42e>
    4394:	43 c0       	rjmp	.+134    	; 0x441c <readgamepad+0x4b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4396:	fe 01       	movw	r30, r28
    4398:	ec 55       	subi	r30, 0x5C	; 92
    439a:	fe 4f       	sbci	r31, 0xFE	; 254
    439c:	60 81       	ld	r22, Z
    439e:	71 81       	ldd	r23, Z+1	; 0x01
    43a0:	82 81       	ldd	r24, Z+2	; 0x02
    43a2:	93 81       	ldd	r25, Z+3	; 0x03
    43a4:	20 e0       	ldi	r18, 0x00	; 0
    43a6:	30 e0       	ldi	r19, 0x00	; 0
    43a8:	40 e2       	ldi	r20, 0x20	; 32
    43aa:	51 e4       	ldi	r21, 0x41	; 65
    43ac:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    43b0:	dc 01       	movw	r26, r24
    43b2:	cb 01       	movw	r24, r22
    43b4:	8e 01       	movw	r16, r28
    43b6:	02 56       	subi	r16, 0x62	; 98
    43b8:	1e 4f       	sbci	r17, 0xFE	; 254
    43ba:	bc 01       	movw	r22, r24
    43bc:	cd 01       	movw	r24, r26
    43be:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    43c2:	dc 01       	movw	r26, r24
    43c4:	cb 01       	movw	r24, r22
    43c6:	f8 01       	movw	r30, r16
    43c8:	91 83       	std	Z+1, r25	; 0x01
    43ca:	80 83       	st	Z, r24
    43cc:	1f c0       	rjmp	.+62     	; 0x440c <readgamepad+0x4a4>
    43ce:	fe 01       	movw	r30, r28
    43d0:	e4 56       	subi	r30, 0x64	; 100
    43d2:	fe 4f       	sbci	r31, 0xFE	; 254
    43d4:	80 e9       	ldi	r24, 0x90	; 144
    43d6:	91 e0       	ldi	r25, 0x01	; 1
    43d8:	91 83       	std	Z+1, r25	; 0x01
    43da:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    43dc:	fe 01       	movw	r30, r28
    43de:	e4 56       	subi	r30, 0x64	; 100
    43e0:	fe 4f       	sbci	r31, 0xFE	; 254
    43e2:	80 81       	ld	r24, Z
    43e4:	91 81       	ldd	r25, Z+1	; 0x01
    43e6:	01 97       	sbiw	r24, 0x01	; 1
    43e8:	f1 f7       	brne	.-4      	; 0x43e6 <readgamepad+0x47e>
    43ea:	fe 01       	movw	r30, r28
    43ec:	e4 56       	subi	r30, 0x64	; 100
    43ee:	fe 4f       	sbci	r31, 0xFE	; 254
    43f0:	91 83       	std	Z+1, r25	; 0x01
    43f2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43f4:	de 01       	movw	r26, r28
    43f6:	a2 56       	subi	r26, 0x62	; 98
    43f8:	be 4f       	sbci	r27, 0xFE	; 254
    43fa:	fe 01       	movw	r30, r28
    43fc:	e2 56       	subi	r30, 0x62	; 98
    43fe:	fe 4f       	sbci	r31, 0xFE	; 254
    4400:	80 81       	ld	r24, Z
    4402:	91 81       	ldd	r25, Z+1	; 0x01
    4404:	01 97       	sbiw	r24, 0x01	; 1
    4406:	11 96       	adiw	r26, 0x01	; 1
    4408:	9c 93       	st	X, r25
    440a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    440c:	fe 01       	movw	r30, r28
    440e:	e2 56       	subi	r30, 0x62	; 98
    4410:	fe 4f       	sbci	r31, 0xFE	; 254
    4412:	80 81       	ld	r24, Z
    4414:	91 81       	ldd	r25, Z+1	; 0x01
    4416:	00 97       	sbiw	r24, 0x00	; 0
    4418:	d1 f6       	brne	.-76     	; 0x43ce <readgamepad+0x466>
    441a:	4b c0       	rjmp	.+150    	; 0x44b2 <readgamepad+0x54a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    441c:	8e 01       	movw	r16, r28
    441e:	02 56       	subi	r16, 0x62	; 98
    4420:	1e 4f       	sbci	r17, 0xFE	; 254
    4422:	fe 01       	movw	r30, r28
    4424:	e0 56       	subi	r30, 0x60	; 96
    4426:	fe 4f       	sbci	r31, 0xFE	; 254
    4428:	60 81       	ld	r22, Z
    442a:	71 81       	ldd	r23, Z+1	; 0x01
    442c:	82 81       	ldd	r24, Z+2	; 0x02
    442e:	93 81       	ldd	r25, Z+3	; 0x03
    4430:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4434:	dc 01       	movw	r26, r24
    4436:	cb 01       	movw	r24, r22
    4438:	f8 01       	movw	r30, r16
    443a:	91 83       	std	Z+1, r25	; 0x01
    443c:	80 83       	st	Z, r24
    443e:	de 01       	movw	r26, r28
    4440:	a6 56       	subi	r26, 0x66	; 102
    4442:	be 4f       	sbci	r27, 0xFE	; 254
    4444:	fe 01       	movw	r30, r28
    4446:	e2 56       	subi	r30, 0x62	; 98
    4448:	fe 4f       	sbci	r31, 0xFE	; 254
    444a:	80 81       	ld	r24, Z
    444c:	91 81       	ldd	r25, Z+1	; 0x01
    444e:	11 96       	adiw	r26, 0x01	; 1
    4450:	9c 93       	st	X, r25
    4452:	8e 93       	st	-X, r24
    4454:	fe 01       	movw	r30, r28
    4456:	e6 56       	subi	r30, 0x66	; 102
    4458:	fe 4f       	sbci	r31, 0xFE	; 254
    445a:	80 81       	ld	r24, Z
    445c:	91 81       	ldd	r25, Z+1	; 0x01
    445e:	01 97       	sbiw	r24, 0x01	; 1
    4460:	f1 f7       	brne	.-4      	; 0x445e <readgamepad+0x4f6>
    4462:	fe 01       	movw	r30, r28
    4464:	e6 56       	subi	r30, 0x66	; 102
    4466:	fe 4f       	sbci	r31, 0xFE	; 254
    4468:	91 83       	std	Z+1, r25	; 0x01
    446a:	80 83       	st	Z, r24
    446c:	22 c0       	rjmp	.+68     	; 0x44b2 <readgamepad+0x54a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    446e:	8e 01       	movw	r16, r28
    4470:	08 55       	subi	r16, 0x58	; 88
    4472:	1e 4f       	sbci	r17, 0xFE	; 254
    4474:	fe 01       	movw	r30, r28
    4476:	e7 55       	subi	r30, 0x57	; 87
    4478:	fe 4f       	sbci	r31, 0xFE	; 254
    447a:	60 81       	ld	r22, Z
    447c:	71 81       	ldd	r23, Z+1	; 0x01
    447e:	82 81       	ldd	r24, Z+2	; 0x02
    4480:	93 81       	ldd	r25, Z+3	; 0x03
    4482:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4486:	dc 01       	movw	r26, r24
    4488:	cb 01       	movw	r24, r22
    448a:	f8 01       	movw	r30, r16
    448c:	80 83       	st	Z, r24
    448e:	de 01       	movw	r26, r28
    4490:	a7 56       	subi	r26, 0x67	; 103
    4492:	be 4f       	sbci	r27, 0xFE	; 254
    4494:	fe 01       	movw	r30, r28
    4496:	e8 55       	subi	r30, 0x58	; 88
    4498:	fe 4f       	sbci	r31, 0xFE	; 254
    449a:	80 81       	ld	r24, Z
    449c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    449e:	fe 01       	movw	r30, r28
    44a0:	e7 56       	subi	r30, 0x67	; 103
    44a2:	fe 4f       	sbci	r31, 0xFE	; 254
    44a4:	80 81       	ld	r24, Z
    44a6:	8a 95       	dec	r24
    44a8:	f1 f7       	brne	.-4      	; 0x44a6 <readgamepad+0x53e>
    44aa:	fe 01       	movw	r30, r28
    44ac:	e7 56       	subi	r30, 0x67	; 103
    44ae:	fe 4f       	sbci	r31, 0xFE	; 254
    44b0:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    44b2:	a5 e3       	ldi	r26, 0x35	; 53
    44b4:	b0 e0       	ldi	r27, 0x00	; 0
    44b6:	e5 e3       	ldi	r30, 0x35	; 53
    44b8:	f0 e0       	ldi	r31, 0x00	; 0
    44ba:	80 81       	ld	r24, Z
    44bc:	81 60       	ori	r24, 0x01	; 1
    44be:	8c 93       	st	X, r24
    44c0:	fe 01       	movw	r30, r28
    44c2:	eb 56       	subi	r30, 0x6B	; 107
    44c4:	fe 4f       	sbci	r31, 0xFE	; 254
    44c6:	80 e0       	ldi	r24, 0x00	; 0
    44c8:	90 e0       	ldi	r25, 0x00	; 0
    44ca:	a0 e8       	ldi	r26, 0x80	; 128
    44cc:	bf e3       	ldi	r27, 0x3F	; 63
    44ce:	80 83       	st	Z, r24
    44d0:	91 83       	std	Z+1, r25	; 0x01
    44d2:	a2 83       	std	Z+2, r26	; 0x02
    44d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    44d6:	8e 01       	movw	r16, r28
    44d8:	0f 56       	subi	r16, 0x6F	; 111
    44da:	1e 4f       	sbci	r17, 0xFE	; 254
    44dc:	fe 01       	movw	r30, r28
    44de:	eb 56       	subi	r30, 0x6B	; 107
    44e0:	fe 4f       	sbci	r31, 0xFE	; 254
    44e2:	60 81       	ld	r22, Z
    44e4:	71 81       	ldd	r23, Z+1	; 0x01
    44e6:	82 81       	ldd	r24, Z+2	; 0x02
    44e8:	93 81       	ldd	r25, Z+3	; 0x03
    44ea:	2b ea       	ldi	r18, 0xAB	; 171
    44ec:	3a ea       	ldi	r19, 0xAA	; 170
    44ee:	4a ea       	ldi	r20, 0xAA	; 170
    44f0:	50 e4       	ldi	r21, 0x40	; 64
    44f2:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    44f6:	dc 01       	movw	r26, r24
    44f8:	cb 01       	movw	r24, r22
    44fa:	f8 01       	movw	r30, r16
    44fc:	80 83       	st	Z, r24
    44fe:	91 83       	std	Z+1, r25	; 0x01
    4500:	a2 83       	std	Z+2, r26	; 0x02
    4502:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4504:	fe 01       	movw	r30, r28
    4506:	ef 56       	subi	r30, 0x6F	; 111
    4508:	fe 4f       	sbci	r31, 0xFE	; 254
    450a:	60 81       	ld	r22, Z
    450c:	71 81       	ldd	r23, Z+1	; 0x01
    450e:	82 81       	ldd	r24, Z+2	; 0x02
    4510:	93 81       	ldd	r25, Z+3	; 0x03
    4512:	20 e0       	ldi	r18, 0x00	; 0
    4514:	30 e0       	ldi	r19, 0x00	; 0
    4516:	40 e8       	ldi	r20, 0x80	; 128
    4518:	5f e3       	ldi	r21, 0x3F	; 63
    451a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    451e:	88 23       	and	r24, r24
    4520:	34 f4       	brge	.+12     	; 0x452e <readgamepad+0x5c6>
		__ticks = 1;
    4522:	fe 01       	movw	r30, r28
    4524:	e0 57       	subi	r30, 0x70	; 112
    4526:	fe 4f       	sbci	r31, 0xFE	; 254
    4528:	81 e0       	ldi	r24, 0x01	; 1
    452a:	80 83       	st	Z, r24
    452c:	e0 c0       	rjmp	.+448    	; 0x46ee <readgamepad+0x786>
	else if (__tmp > 255)
    452e:	fe 01       	movw	r30, r28
    4530:	ef 56       	subi	r30, 0x6F	; 111
    4532:	fe 4f       	sbci	r31, 0xFE	; 254
    4534:	60 81       	ld	r22, Z
    4536:	71 81       	ldd	r23, Z+1	; 0x01
    4538:	82 81       	ldd	r24, Z+2	; 0x02
    453a:	93 81       	ldd	r25, Z+3	; 0x03
    453c:	20 e0       	ldi	r18, 0x00	; 0
    453e:	30 e0       	ldi	r19, 0x00	; 0
    4540:	4f e7       	ldi	r20, 0x7F	; 127
    4542:	53 e4       	ldi	r21, 0x43	; 67
    4544:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    4548:	18 16       	cp	r1, r24
    454a:	0c f0       	brlt	.+2      	; 0x454e <readgamepad+0x5e6>
    454c:	c0 c0       	rjmp	.+384    	; 0x46ce <readgamepad+0x766>
	{
		_delay_ms(__us / 1000.0);
    454e:	fe 01       	movw	r30, r28
    4550:	eb 56       	subi	r30, 0x6B	; 107
    4552:	fe 4f       	sbci	r31, 0xFE	; 254
    4554:	60 81       	ld	r22, Z
    4556:	71 81       	ldd	r23, Z+1	; 0x01
    4558:	82 81       	ldd	r24, Z+2	; 0x02
    455a:	93 81       	ldd	r25, Z+3	; 0x03
    455c:	20 e0       	ldi	r18, 0x00	; 0
    455e:	30 e0       	ldi	r19, 0x00	; 0
    4560:	4a e7       	ldi	r20, 0x7A	; 122
    4562:	54 e4       	ldi	r21, 0x44	; 68
    4564:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    4568:	dc 01       	movw	r26, r24
    456a:	cb 01       	movw	r24, r22
    456c:	fe 01       	movw	r30, r28
    456e:	e4 57       	subi	r30, 0x74	; 116
    4570:	fe 4f       	sbci	r31, 0xFE	; 254
    4572:	80 83       	st	Z, r24
    4574:	91 83       	std	Z+1, r25	; 0x01
    4576:	a2 83       	std	Z+2, r26	; 0x02
    4578:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    457a:	8e 01       	movw	r16, r28
    457c:	08 57       	subi	r16, 0x78	; 120
    457e:	1e 4f       	sbci	r17, 0xFE	; 254
    4580:	fe 01       	movw	r30, r28
    4582:	e4 57       	subi	r30, 0x74	; 116
    4584:	fe 4f       	sbci	r31, 0xFE	; 254
    4586:	60 81       	ld	r22, Z
    4588:	71 81       	ldd	r23, Z+1	; 0x01
    458a:	82 81       	ldd	r24, Z+2	; 0x02
    458c:	93 81       	ldd	r25, Z+3	; 0x03
    458e:	20 e0       	ldi	r18, 0x00	; 0
    4590:	30 e0       	ldi	r19, 0x00	; 0
    4592:	4a e7       	ldi	r20, 0x7A	; 122
    4594:	55 e4       	ldi	r21, 0x45	; 69
    4596:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    459a:	dc 01       	movw	r26, r24
    459c:	cb 01       	movw	r24, r22
    459e:	f8 01       	movw	r30, r16
    45a0:	80 83       	st	Z, r24
    45a2:	91 83       	std	Z+1, r25	; 0x01
    45a4:	a2 83       	std	Z+2, r26	; 0x02
    45a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    45a8:	fe 01       	movw	r30, r28
    45aa:	e8 57       	subi	r30, 0x78	; 120
    45ac:	fe 4f       	sbci	r31, 0xFE	; 254
    45ae:	60 81       	ld	r22, Z
    45b0:	71 81       	ldd	r23, Z+1	; 0x01
    45b2:	82 81       	ldd	r24, Z+2	; 0x02
    45b4:	93 81       	ldd	r25, Z+3	; 0x03
    45b6:	20 e0       	ldi	r18, 0x00	; 0
    45b8:	30 e0       	ldi	r19, 0x00	; 0
    45ba:	40 e8       	ldi	r20, 0x80	; 128
    45bc:	5f e3       	ldi	r21, 0x3F	; 63
    45be:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    45c2:	88 23       	and	r24, r24
    45c4:	44 f4       	brge	.+16     	; 0x45d6 <readgamepad+0x66e>
		__ticks = 1;
    45c6:	fe 01       	movw	r30, r28
    45c8:	ea 57       	subi	r30, 0x7A	; 122
    45ca:	fe 4f       	sbci	r31, 0xFE	; 254
    45cc:	81 e0       	ldi	r24, 0x01	; 1
    45ce:	90 e0       	ldi	r25, 0x00	; 0
    45d0:	91 83       	std	Z+1, r25	; 0x01
    45d2:	80 83       	st	Z, r24
    45d4:	64 c0       	rjmp	.+200    	; 0x469e <readgamepad+0x736>
	else if (__tmp > 65535)
    45d6:	fe 01       	movw	r30, r28
    45d8:	e8 57       	subi	r30, 0x78	; 120
    45da:	fe 4f       	sbci	r31, 0xFE	; 254
    45dc:	60 81       	ld	r22, Z
    45de:	71 81       	ldd	r23, Z+1	; 0x01
    45e0:	82 81       	ldd	r24, Z+2	; 0x02
    45e2:	93 81       	ldd	r25, Z+3	; 0x03
    45e4:	20 e0       	ldi	r18, 0x00	; 0
    45e6:	3f ef       	ldi	r19, 0xFF	; 255
    45e8:	4f e7       	ldi	r20, 0x7F	; 127
    45ea:	57 e4       	ldi	r21, 0x47	; 71
    45ec:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    45f0:	18 16       	cp	r1, r24
    45f2:	0c f0       	brlt	.+2      	; 0x45f6 <readgamepad+0x68e>
    45f4:	43 c0       	rjmp	.+134    	; 0x467c <readgamepad+0x714>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45f6:	fe 01       	movw	r30, r28
    45f8:	e4 57       	subi	r30, 0x74	; 116
    45fa:	fe 4f       	sbci	r31, 0xFE	; 254
    45fc:	60 81       	ld	r22, Z
    45fe:	71 81       	ldd	r23, Z+1	; 0x01
    4600:	82 81       	ldd	r24, Z+2	; 0x02
    4602:	93 81       	ldd	r25, Z+3	; 0x03
    4604:	20 e0       	ldi	r18, 0x00	; 0
    4606:	30 e0       	ldi	r19, 0x00	; 0
    4608:	40 e2       	ldi	r20, 0x20	; 32
    460a:	51 e4       	ldi	r21, 0x41	; 65
    460c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4610:	dc 01       	movw	r26, r24
    4612:	cb 01       	movw	r24, r22
    4614:	8e 01       	movw	r16, r28
    4616:	0a 57       	subi	r16, 0x7A	; 122
    4618:	1e 4f       	sbci	r17, 0xFE	; 254
    461a:	bc 01       	movw	r22, r24
    461c:	cd 01       	movw	r24, r26
    461e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4622:	dc 01       	movw	r26, r24
    4624:	cb 01       	movw	r24, r22
    4626:	f8 01       	movw	r30, r16
    4628:	91 83       	std	Z+1, r25	; 0x01
    462a:	80 83       	st	Z, r24
    462c:	1f c0       	rjmp	.+62     	; 0x466c <readgamepad+0x704>
    462e:	fe 01       	movw	r30, r28
    4630:	ec 57       	subi	r30, 0x7C	; 124
    4632:	fe 4f       	sbci	r31, 0xFE	; 254
    4634:	80 e9       	ldi	r24, 0x90	; 144
    4636:	91 e0       	ldi	r25, 0x01	; 1
    4638:	91 83       	std	Z+1, r25	; 0x01
    463a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    463c:	fe 01       	movw	r30, r28
    463e:	ec 57       	subi	r30, 0x7C	; 124
    4640:	fe 4f       	sbci	r31, 0xFE	; 254
    4642:	80 81       	ld	r24, Z
    4644:	91 81       	ldd	r25, Z+1	; 0x01
    4646:	01 97       	sbiw	r24, 0x01	; 1
    4648:	f1 f7       	brne	.-4      	; 0x4646 <readgamepad+0x6de>
    464a:	fe 01       	movw	r30, r28
    464c:	ec 57       	subi	r30, 0x7C	; 124
    464e:	fe 4f       	sbci	r31, 0xFE	; 254
    4650:	91 83       	std	Z+1, r25	; 0x01
    4652:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4654:	de 01       	movw	r26, r28
    4656:	aa 57       	subi	r26, 0x7A	; 122
    4658:	be 4f       	sbci	r27, 0xFE	; 254
    465a:	fe 01       	movw	r30, r28
    465c:	ea 57       	subi	r30, 0x7A	; 122
    465e:	fe 4f       	sbci	r31, 0xFE	; 254
    4660:	80 81       	ld	r24, Z
    4662:	91 81       	ldd	r25, Z+1	; 0x01
    4664:	01 97       	sbiw	r24, 0x01	; 1
    4666:	11 96       	adiw	r26, 0x01	; 1
    4668:	9c 93       	st	X, r25
    466a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    466c:	fe 01       	movw	r30, r28
    466e:	ea 57       	subi	r30, 0x7A	; 122
    4670:	fe 4f       	sbci	r31, 0xFE	; 254
    4672:	80 81       	ld	r24, Z
    4674:	91 81       	ldd	r25, Z+1	; 0x01
    4676:	00 97       	sbiw	r24, 0x00	; 0
    4678:	d1 f6       	brne	.-76     	; 0x462e <readgamepad+0x6c6>
    467a:	4b c0       	rjmp	.+150    	; 0x4712 <readgamepad+0x7aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    467c:	8e 01       	movw	r16, r28
    467e:	0a 57       	subi	r16, 0x7A	; 122
    4680:	1e 4f       	sbci	r17, 0xFE	; 254
    4682:	fe 01       	movw	r30, r28
    4684:	e8 57       	subi	r30, 0x78	; 120
    4686:	fe 4f       	sbci	r31, 0xFE	; 254
    4688:	60 81       	ld	r22, Z
    468a:	71 81       	ldd	r23, Z+1	; 0x01
    468c:	82 81       	ldd	r24, Z+2	; 0x02
    468e:	93 81       	ldd	r25, Z+3	; 0x03
    4690:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4694:	dc 01       	movw	r26, r24
    4696:	cb 01       	movw	r24, r22
    4698:	f8 01       	movw	r30, r16
    469a:	91 83       	std	Z+1, r25	; 0x01
    469c:	80 83       	st	Z, r24
    469e:	de 01       	movw	r26, r28
    46a0:	ae 57       	subi	r26, 0x7E	; 126
    46a2:	be 4f       	sbci	r27, 0xFE	; 254
    46a4:	fe 01       	movw	r30, r28
    46a6:	ea 57       	subi	r30, 0x7A	; 122
    46a8:	fe 4f       	sbci	r31, 0xFE	; 254
    46aa:	80 81       	ld	r24, Z
    46ac:	91 81       	ldd	r25, Z+1	; 0x01
    46ae:	11 96       	adiw	r26, 0x01	; 1
    46b0:	9c 93       	st	X, r25
    46b2:	8e 93       	st	-X, r24
    46b4:	fe 01       	movw	r30, r28
    46b6:	ee 57       	subi	r30, 0x7E	; 126
    46b8:	fe 4f       	sbci	r31, 0xFE	; 254
    46ba:	80 81       	ld	r24, Z
    46bc:	91 81       	ldd	r25, Z+1	; 0x01
    46be:	01 97       	sbiw	r24, 0x01	; 1
    46c0:	f1 f7       	brne	.-4      	; 0x46be <readgamepad+0x756>
    46c2:	fe 01       	movw	r30, r28
    46c4:	ee 57       	subi	r30, 0x7E	; 126
    46c6:	fe 4f       	sbci	r31, 0xFE	; 254
    46c8:	91 83       	std	Z+1, r25	; 0x01
    46ca:	80 83       	st	Z, r24
    46cc:	22 c0       	rjmp	.+68     	; 0x4712 <readgamepad+0x7aa>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    46ce:	8e 01       	movw	r16, r28
    46d0:	00 57       	subi	r16, 0x70	; 112
    46d2:	1e 4f       	sbci	r17, 0xFE	; 254
    46d4:	fe 01       	movw	r30, r28
    46d6:	ef 56       	subi	r30, 0x6F	; 111
    46d8:	fe 4f       	sbci	r31, 0xFE	; 254
    46da:	60 81       	ld	r22, Z
    46dc:	71 81       	ldd	r23, Z+1	; 0x01
    46de:	82 81       	ldd	r24, Z+2	; 0x02
    46e0:	93 81       	ldd	r25, Z+3	; 0x03
    46e2:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    46e6:	dc 01       	movw	r26, r24
    46e8:	cb 01       	movw	r24, r22
    46ea:	f8 01       	movw	r30, r16
    46ec:	80 83       	st	Z, r24
    46ee:	de 01       	movw	r26, r28
    46f0:	af 57       	subi	r26, 0x7F	; 127
    46f2:	be 4f       	sbci	r27, 0xFE	; 254
    46f4:	fe 01       	movw	r30, r28
    46f6:	e0 57       	subi	r30, 0x70	; 112
    46f8:	fe 4f       	sbci	r31, 0xFE	; 254
    46fa:	80 81       	ld	r24, Z
    46fc:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    46fe:	fe 01       	movw	r30, r28
    4700:	ef 57       	subi	r30, 0x7F	; 127
    4702:	fe 4f       	sbci	r31, 0xFE	; 254
    4704:	80 81       	ld	r24, Z
    4706:	8a 95       	dec	r24
    4708:	f1 f7       	brne	.-4      	; 0x4706 <readgamepad+0x79e>
    470a:	fe 01       	movw	r30, r28
    470c:	ef 57       	subi	r30, 0x7F	; 127
    470e:	fe 4f       	sbci	r31, 0xFE	; 254
    4710:	80 83       	st	Z, r24
	
	_delay_us(30);
	
	ps2byte = 0x01;			//byte1
	
	for(i=0;i<8;i++)		
    4712:	80 91 66 00 	lds	r24, 0x0066
    4716:	90 91 67 00 	lds	r25, 0x0067
    471a:	01 96       	adiw	r24, 0x01	; 1
    471c:	90 93 67 00 	sts	0x0067, r25
    4720:	80 93 66 00 	sts	0x0066, r24
    4724:	80 91 66 00 	lds	r24, 0x0066
    4728:	90 91 67 00 	lds	r25, 0x0067
    472c:	88 30       	cpi	r24, 0x08	; 8
    472e:	91 05       	cpc	r25, r1
    4730:	0c f4       	brge	.+2      	; 0x4734 <readgamepad+0x7cc>
    4732:	6d cd       	rjmp	.-1318   	; 0x420e <readgamepad+0x2a6>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    4734:	a5 e3       	ldi	r26, 0x35	; 53
    4736:	b0 e0       	ldi	r27, 0x00	; 0
    4738:	e5 e3       	ldi	r30, 0x35	; 53
    473a:	f0 e0       	ldi	r31, 0x00	; 0
    473c:	80 81       	ld	r24, Z
    473e:	84 60       	ori	r24, 0x04	; 4
    4740:	8c 93       	st	X, r24


	
	
	ps2byte = 0x42;			//byte2
    4742:	82 e4       	ldi	r24, 0x42	; 66
    4744:	80 93 61 00 	sts	0x0061, r24
	
	for(i=0;i<8;i++)
    4748:	10 92 67 00 	sts	0x0067, r1
    474c:	10 92 66 00 	sts	0x0066, r1
    4750:	8b c2       	rjmp	.+1302   	; 0x4c68 <readgamepad+0xd00>
	{
		if(ps2byte&(_BV(i)))
    4752:	80 91 61 00 	lds	r24, 0x0061
    4756:	28 2f       	mov	r18, r24
    4758:	30 e0       	ldi	r19, 0x00	; 0
    475a:	80 91 66 00 	lds	r24, 0x0066
    475e:	90 91 67 00 	lds	r25, 0x0067
    4762:	a9 01       	movw	r20, r18
    4764:	02 c0       	rjmp	.+4      	; 0x476a <readgamepad+0x802>
    4766:	55 95       	asr	r21
    4768:	47 95       	ror	r20
    476a:	8a 95       	dec	r24
    476c:	e2 f7       	brpl	.-8      	; 0x4766 <readgamepad+0x7fe>
    476e:	ca 01       	movw	r24, r20
    4770:	81 70       	andi	r24, 0x01	; 1
    4772:	90 70       	andi	r25, 0x00	; 0
    4774:	88 23       	and	r24, r24
    4776:	41 f0       	breq	.+16     	; 0x4788 <readgamepad+0x820>
			sbi(ps2port,ps2cmd);
    4778:	a5 e3       	ldi	r26, 0x35	; 53
    477a:	b0 e0       	ldi	r27, 0x00	; 0
    477c:	e5 e3       	ldi	r30, 0x35	; 53
    477e:	f0 e0       	ldi	r31, 0x00	; 0
    4780:	80 81       	ld	r24, Z
    4782:	84 60       	ori	r24, 0x04	; 4
    4784:	8c 93       	st	X, r24
    4786:	07 c0       	rjmp	.+14     	; 0x4796 <readgamepad+0x82e>
		else 
			cbi(ps2port,ps2cmd);
    4788:	a5 e3       	ldi	r26, 0x35	; 53
    478a:	b0 e0       	ldi	r27, 0x00	; 0
    478c:	e5 e3       	ldi	r30, 0x35	; 53
    478e:	f0 e0       	ldi	r31, 0x00	; 0
    4790:	80 81       	ld	r24, Z
    4792:	8b 7f       	andi	r24, 0xFB	; 251
    4794:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    4796:	a5 e3       	ldi	r26, 0x35	; 53
    4798:	b0 e0       	ldi	r27, 0x00	; 0
    479a:	e5 e3       	ldi	r30, 0x35	; 53
    479c:	f0 e0       	ldi	r31, 0x00	; 0
    479e:	80 81       	ld	r24, Z
    47a0:	8e 7f       	andi	r24, 0xFE	; 254
    47a2:	8c 93       	st	X, r24
    47a4:	fe 01       	movw	r30, r28
    47a6:	e3 58       	subi	r30, 0x83	; 131
    47a8:	fe 4f       	sbci	r31, 0xFE	; 254
    47aa:	80 e0       	ldi	r24, 0x00	; 0
    47ac:	90 e0       	ldi	r25, 0x00	; 0
    47ae:	a0 e8       	ldi	r26, 0x80	; 128
    47b0:	bf e3       	ldi	r27, 0x3F	; 63
    47b2:	80 83       	st	Z, r24
    47b4:	91 83       	std	Z+1, r25	; 0x01
    47b6:	a2 83       	std	Z+2, r26	; 0x02
    47b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    47ba:	8e 01       	movw	r16, r28
    47bc:	07 58       	subi	r16, 0x87	; 135
    47be:	1e 4f       	sbci	r17, 0xFE	; 254
    47c0:	fe 01       	movw	r30, r28
    47c2:	e3 58       	subi	r30, 0x83	; 131
    47c4:	fe 4f       	sbci	r31, 0xFE	; 254
    47c6:	60 81       	ld	r22, Z
    47c8:	71 81       	ldd	r23, Z+1	; 0x01
    47ca:	82 81       	ldd	r24, Z+2	; 0x02
    47cc:	93 81       	ldd	r25, Z+3	; 0x03
    47ce:	2b ea       	ldi	r18, 0xAB	; 171
    47d0:	3a ea       	ldi	r19, 0xAA	; 170
    47d2:	4a ea       	ldi	r20, 0xAA	; 170
    47d4:	50 e4       	ldi	r21, 0x40	; 64
    47d6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    47da:	dc 01       	movw	r26, r24
    47dc:	cb 01       	movw	r24, r22
    47de:	f8 01       	movw	r30, r16
    47e0:	80 83       	st	Z, r24
    47e2:	91 83       	std	Z+1, r25	; 0x01
    47e4:	a2 83       	std	Z+2, r26	; 0x02
    47e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    47e8:	fe 01       	movw	r30, r28
    47ea:	e7 58       	subi	r30, 0x87	; 135
    47ec:	fe 4f       	sbci	r31, 0xFE	; 254
    47ee:	60 81       	ld	r22, Z
    47f0:	71 81       	ldd	r23, Z+1	; 0x01
    47f2:	82 81       	ldd	r24, Z+2	; 0x02
    47f4:	93 81       	ldd	r25, Z+3	; 0x03
    47f6:	20 e0       	ldi	r18, 0x00	; 0
    47f8:	30 e0       	ldi	r19, 0x00	; 0
    47fa:	40 e8       	ldi	r20, 0x80	; 128
    47fc:	5f e3       	ldi	r21, 0x3F	; 63
    47fe:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    4802:	88 23       	and	r24, r24
    4804:	34 f4       	brge	.+12     	; 0x4812 <readgamepad+0x8aa>
		__ticks = 1;
    4806:	fe 01       	movw	r30, r28
    4808:	e8 58       	subi	r30, 0x88	; 136
    480a:	fe 4f       	sbci	r31, 0xFE	; 254
    480c:	81 e0       	ldi	r24, 0x01	; 1
    480e:	80 83       	st	Z, r24
    4810:	e0 c0       	rjmp	.+448    	; 0x49d2 <readgamepad+0xa6a>
	else if (__tmp > 255)
    4812:	fe 01       	movw	r30, r28
    4814:	e7 58       	subi	r30, 0x87	; 135
    4816:	fe 4f       	sbci	r31, 0xFE	; 254
    4818:	60 81       	ld	r22, Z
    481a:	71 81       	ldd	r23, Z+1	; 0x01
    481c:	82 81       	ldd	r24, Z+2	; 0x02
    481e:	93 81       	ldd	r25, Z+3	; 0x03
    4820:	20 e0       	ldi	r18, 0x00	; 0
    4822:	30 e0       	ldi	r19, 0x00	; 0
    4824:	4f e7       	ldi	r20, 0x7F	; 127
    4826:	53 e4       	ldi	r21, 0x43	; 67
    4828:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    482c:	18 16       	cp	r1, r24
    482e:	0c f0       	brlt	.+2      	; 0x4832 <readgamepad+0x8ca>
    4830:	c0 c0       	rjmp	.+384    	; 0x49b2 <readgamepad+0xa4a>
	{
		_delay_ms(__us / 1000.0);
    4832:	fe 01       	movw	r30, r28
    4834:	e3 58       	subi	r30, 0x83	; 131
    4836:	fe 4f       	sbci	r31, 0xFE	; 254
    4838:	60 81       	ld	r22, Z
    483a:	71 81       	ldd	r23, Z+1	; 0x01
    483c:	82 81       	ldd	r24, Z+2	; 0x02
    483e:	93 81       	ldd	r25, Z+3	; 0x03
    4840:	20 e0       	ldi	r18, 0x00	; 0
    4842:	30 e0       	ldi	r19, 0x00	; 0
    4844:	4a e7       	ldi	r20, 0x7A	; 122
    4846:	54 e4       	ldi	r21, 0x44	; 68
    4848:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    484c:	dc 01       	movw	r26, r24
    484e:	cb 01       	movw	r24, r22
    4850:	fe 01       	movw	r30, r28
    4852:	ec 58       	subi	r30, 0x8C	; 140
    4854:	fe 4f       	sbci	r31, 0xFE	; 254
    4856:	80 83       	st	Z, r24
    4858:	91 83       	std	Z+1, r25	; 0x01
    485a:	a2 83       	std	Z+2, r26	; 0x02
    485c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    485e:	8e 01       	movw	r16, r28
    4860:	00 59       	subi	r16, 0x90	; 144
    4862:	1e 4f       	sbci	r17, 0xFE	; 254
    4864:	fe 01       	movw	r30, r28
    4866:	ec 58       	subi	r30, 0x8C	; 140
    4868:	fe 4f       	sbci	r31, 0xFE	; 254
    486a:	60 81       	ld	r22, Z
    486c:	71 81       	ldd	r23, Z+1	; 0x01
    486e:	82 81       	ldd	r24, Z+2	; 0x02
    4870:	93 81       	ldd	r25, Z+3	; 0x03
    4872:	20 e0       	ldi	r18, 0x00	; 0
    4874:	30 e0       	ldi	r19, 0x00	; 0
    4876:	4a e7       	ldi	r20, 0x7A	; 122
    4878:	55 e4       	ldi	r21, 0x45	; 69
    487a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    487e:	dc 01       	movw	r26, r24
    4880:	cb 01       	movw	r24, r22
    4882:	f8 01       	movw	r30, r16
    4884:	80 83       	st	Z, r24
    4886:	91 83       	std	Z+1, r25	; 0x01
    4888:	a2 83       	std	Z+2, r26	; 0x02
    488a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    488c:	fe 01       	movw	r30, r28
    488e:	e0 59       	subi	r30, 0x90	; 144
    4890:	fe 4f       	sbci	r31, 0xFE	; 254
    4892:	60 81       	ld	r22, Z
    4894:	71 81       	ldd	r23, Z+1	; 0x01
    4896:	82 81       	ldd	r24, Z+2	; 0x02
    4898:	93 81       	ldd	r25, Z+3	; 0x03
    489a:	20 e0       	ldi	r18, 0x00	; 0
    489c:	30 e0       	ldi	r19, 0x00	; 0
    489e:	40 e8       	ldi	r20, 0x80	; 128
    48a0:	5f e3       	ldi	r21, 0x3F	; 63
    48a2:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    48a6:	88 23       	and	r24, r24
    48a8:	44 f4       	brge	.+16     	; 0x48ba <readgamepad+0x952>
		__ticks = 1;
    48aa:	fe 01       	movw	r30, r28
    48ac:	e2 59       	subi	r30, 0x92	; 146
    48ae:	fe 4f       	sbci	r31, 0xFE	; 254
    48b0:	81 e0       	ldi	r24, 0x01	; 1
    48b2:	90 e0       	ldi	r25, 0x00	; 0
    48b4:	91 83       	std	Z+1, r25	; 0x01
    48b6:	80 83       	st	Z, r24
    48b8:	64 c0       	rjmp	.+200    	; 0x4982 <readgamepad+0xa1a>
	else if (__tmp > 65535)
    48ba:	fe 01       	movw	r30, r28
    48bc:	e0 59       	subi	r30, 0x90	; 144
    48be:	fe 4f       	sbci	r31, 0xFE	; 254
    48c0:	60 81       	ld	r22, Z
    48c2:	71 81       	ldd	r23, Z+1	; 0x01
    48c4:	82 81       	ldd	r24, Z+2	; 0x02
    48c6:	93 81       	ldd	r25, Z+3	; 0x03
    48c8:	20 e0       	ldi	r18, 0x00	; 0
    48ca:	3f ef       	ldi	r19, 0xFF	; 255
    48cc:	4f e7       	ldi	r20, 0x7F	; 127
    48ce:	57 e4       	ldi	r21, 0x47	; 71
    48d0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    48d4:	18 16       	cp	r1, r24
    48d6:	0c f0       	brlt	.+2      	; 0x48da <readgamepad+0x972>
    48d8:	43 c0       	rjmp	.+134    	; 0x4960 <readgamepad+0x9f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48da:	fe 01       	movw	r30, r28
    48dc:	ec 58       	subi	r30, 0x8C	; 140
    48de:	fe 4f       	sbci	r31, 0xFE	; 254
    48e0:	60 81       	ld	r22, Z
    48e2:	71 81       	ldd	r23, Z+1	; 0x01
    48e4:	82 81       	ldd	r24, Z+2	; 0x02
    48e6:	93 81       	ldd	r25, Z+3	; 0x03
    48e8:	20 e0       	ldi	r18, 0x00	; 0
    48ea:	30 e0       	ldi	r19, 0x00	; 0
    48ec:	40 e2       	ldi	r20, 0x20	; 32
    48ee:	51 e4       	ldi	r21, 0x41	; 65
    48f0:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    48f4:	dc 01       	movw	r26, r24
    48f6:	cb 01       	movw	r24, r22
    48f8:	8e 01       	movw	r16, r28
    48fa:	02 59       	subi	r16, 0x92	; 146
    48fc:	1e 4f       	sbci	r17, 0xFE	; 254
    48fe:	bc 01       	movw	r22, r24
    4900:	cd 01       	movw	r24, r26
    4902:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4906:	dc 01       	movw	r26, r24
    4908:	cb 01       	movw	r24, r22
    490a:	f8 01       	movw	r30, r16
    490c:	91 83       	std	Z+1, r25	; 0x01
    490e:	80 83       	st	Z, r24
    4910:	1f c0       	rjmp	.+62     	; 0x4950 <readgamepad+0x9e8>
    4912:	fe 01       	movw	r30, r28
    4914:	e4 59       	subi	r30, 0x94	; 148
    4916:	fe 4f       	sbci	r31, 0xFE	; 254
    4918:	80 e9       	ldi	r24, 0x90	; 144
    491a:	91 e0       	ldi	r25, 0x01	; 1
    491c:	91 83       	std	Z+1, r25	; 0x01
    491e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4920:	fe 01       	movw	r30, r28
    4922:	e4 59       	subi	r30, 0x94	; 148
    4924:	fe 4f       	sbci	r31, 0xFE	; 254
    4926:	80 81       	ld	r24, Z
    4928:	91 81       	ldd	r25, Z+1	; 0x01
    492a:	01 97       	sbiw	r24, 0x01	; 1
    492c:	f1 f7       	brne	.-4      	; 0x492a <readgamepad+0x9c2>
    492e:	fe 01       	movw	r30, r28
    4930:	e4 59       	subi	r30, 0x94	; 148
    4932:	fe 4f       	sbci	r31, 0xFE	; 254
    4934:	91 83       	std	Z+1, r25	; 0x01
    4936:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4938:	de 01       	movw	r26, r28
    493a:	a2 59       	subi	r26, 0x92	; 146
    493c:	be 4f       	sbci	r27, 0xFE	; 254
    493e:	fe 01       	movw	r30, r28
    4940:	e2 59       	subi	r30, 0x92	; 146
    4942:	fe 4f       	sbci	r31, 0xFE	; 254
    4944:	80 81       	ld	r24, Z
    4946:	91 81       	ldd	r25, Z+1	; 0x01
    4948:	01 97       	sbiw	r24, 0x01	; 1
    494a:	11 96       	adiw	r26, 0x01	; 1
    494c:	9c 93       	st	X, r25
    494e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4950:	fe 01       	movw	r30, r28
    4952:	e2 59       	subi	r30, 0x92	; 146
    4954:	fe 4f       	sbci	r31, 0xFE	; 254
    4956:	80 81       	ld	r24, Z
    4958:	91 81       	ldd	r25, Z+1	; 0x01
    495a:	00 97       	sbiw	r24, 0x00	; 0
    495c:	d1 f6       	brne	.-76     	; 0x4912 <readgamepad+0x9aa>
    495e:	4b c0       	rjmp	.+150    	; 0x49f6 <readgamepad+0xa8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4960:	8e 01       	movw	r16, r28
    4962:	02 59       	subi	r16, 0x92	; 146
    4964:	1e 4f       	sbci	r17, 0xFE	; 254
    4966:	fe 01       	movw	r30, r28
    4968:	e0 59       	subi	r30, 0x90	; 144
    496a:	fe 4f       	sbci	r31, 0xFE	; 254
    496c:	60 81       	ld	r22, Z
    496e:	71 81       	ldd	r23, Z+1	; 0x01
    4970:	82 81       	ldd	r24, Z+2	; 0x02
    4972:	93 81       	ldd	r25, Z+3	; 0x03
    4974:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4978:	dc 01       	movw	r26, r24
    497a:	cb 01       	movw	r24, r22
    497c:	f8 01       	movw	r30, r16
    497e:	91 83       	std	Z+1, r25	; 0x01
    4980:	80 83       	st	Z, r24
    4982:	de 01       	movw	r26, r28
    4984:	a6 59       	subi	r26, 0x96	; 150
    4986:	be 4f       	sbci	r27, 0xFE	; 254
    4988:	fe 01       	movw	r30, r28
    498a:	e2 59       	subi	r30, 0x92	; 146
    498c:	fe 4f       	sbci	r31, 0xFE	; 254
    498e:	80 81       	ld	r24, Z
    4990:	91 81       	ldd	r25, Z+1	; 0x01
    4992:	11 96       	adiw	r26, 0x01	; 1
    4994:	9c 93       	st	X, r25
    4996:	8e 93       	st	-X, r24
    4998:	fe 01       	movw	r30, r28
    499a:	e6 59       	subi	r30, 0x96	; 150
    499c:	fe 4f       	sbci	r31, 0xFE	; 254
    499e:	80 81       	ld	r24, Z
    49a0:	91 81       	ldd	r25, Z+1	; 0x01
    49a2:	01 97       	sbiw	r24, 0x01	; 1
    49a4:	f1 f7       	brne	.-4      	; 0x49a2 <readgamepad+0xa3a>
    49a6:	fe 01       	movw	r30, r28
    49a8:	e6 59       	subi	r30, 0x96	; 150
    49aa:	fe 4f       	sbci	r31, 0xFE	; 254
    49ac:	91 83       	std	Z+1, r25	; 0x01
    49ae:	80 83       	st	Z, r24
    49b0:	22 c0       	rjmp	.+68     	; 0x49f6 <readgamepad+0xa8e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    49b2:	8e 01       	movw	r16, r28
    49b4:	08 58       	subi	r16, 0x88	; 136
    49b6:	1e 4f       	sbci	r17, 0xFE	; 254
    49b8:	fe 01       	movw	r30, r28
    49ba:	e7 58       	subi	r30, 0x87	; 135
    49bc:	fe 4f       	sbci	r31, 0xFE	; 254
    49be:	60 81       	ld	r22, Z
    49c0:	71 81       	ldd	r23, Z+1	; 0x01
    49c2:	82 81       	ldd	r24, Z+2	; 0x02
    49c4:	93 81       	ldd	r25, Z+3	; 0x03
    49c6:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    49ca:	dc 01       	movw	r26, r24
    49cc:	cb 01       	movw	r24, r22
    49ce:	f8 01       	movw	r30, r16
    49d0:	80 83       	st	Z, r24
    49d2:	de 01       	movw	r26, r28
    49d4:	a7 59       	subi	r26, 0x97	; 151
    49d6:	be 4f       	sbci	r27, 0xFE	; 254
    49d8:	fe 01       	movw	r30, r28
    49da:	e8 58       	subi	r30, 0x88	; 136
    49dc:	fe 4f       	sbci	r31, 0xFE	; 254
    49de:	80 81       	ld	r24, Z
    49e0:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    49e2:	fe 01       	movw	r30, r28
    49e4:	e7 59       	subi	r30, 0x97	; 151
    49e6:	fe 4f       	sbci	r31, 0xFE	; 254
    49e8:	80 81       	ld	r24, Z
    49ea:	8a 95       	dec	r24
    49ec:	f1 f7       	brne	.-4      	; 0x49ea <readgamepad+0xa82>
    49ee:	fe 01       	movw	r30, r28
    49f0:	e7 59       	subi	r30, 0x97	; 151
    49f2:	fe 4f       	sbci	r31, 0xFE	; 254
    49f4:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    49f6:	a5 e3       	ldi	r26, 0x35	; 53
    49f8:	b0 e0       	ldi	r27, 0x00	; 0
    49fa:	e5 e3       	ldi	r30, 0x35	; 53
    49fc:	f0 e0       	ldi	r31, 0x00	; 0
    49fe:	80 81       	ld	r24, Z
    4a00:	81 60       	ori	r24, 0x01	; 1
    4a02:	8c 93       	st	X, r24
    4a04:	fe 01       	movw	r30, r28
    4a06:	eb 59       	subi	r30, 0x9B	; 155
    4a08:	fe 4f       	sbci	r31, 0xFE	; 254
    4a0a:	80 e0       	ldi	r24, 0x00	; 0
    4a0c:	90 e0       	ldi	r25, 0x00	; 0
    4a0e:	a0 e8       	ldi	r26, 0x80	; 128
    4a10:	bf e3       	ldi	r27, 0x3F	; 63
    4a12:	80 83       	st	Z, r24
    4a14:	91 83       	std	Z+1, r25	; 0x01
    4a16:	a2 83       	std	Z+2, r26	; 0x02
    4a18:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4a1a:	8e 01       	movw	r16, r28
    4a1c:	0f 59       	subi	r16, 0x9F	; 159
    4a1e:	1e 4f       	sbci	r17, 0xFE	; 254
    4a20:	fe 01       	movw	r30, r28
    4a22:	eb 59       	subi	r30, 0x9B	; 155
    4a24:	fe 4f       	sbci	r31, 0xFE	; 254
    4a26:	60 81       	ld	r22, Z
    4a28:	71 81       	ldd	r23, Z+1	; 0x01
    4a2a:	82 81       	ldd	r24, Z+2	; 0x02
    4a2c:	93 81       	ldd	r25, Z+3	; 0x03
    4a2e:	2b ea       	ldi	r18, 0xAB	; 171
    4a30:	3a ea       	ldi	r19, 0xAA	; 170
    4a32:	4a ea       	ldi	r20, 0xAA	; 170
    4a34:	50 e4       	ldi	r21, 0x40	; 64
    4a36:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4a3a:	dc 01       	movw	r26, r24
    4a3c:	cb 01       	movw	r24, r22
    4a3e:	f8 01       	movw	r30, r16
    4a40:	80 83       	st	Z, r24
    4a42:	91 83       	std	Z+1, r25	; 0x01
    4a44:	a2 83       	std	Z+2, r26	; 0x02
    4a46:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a48:	fe 01       	movw	r30, r28
    4a4a:	ef 59       	subi	r30, 0x9F	; 159
    4a4c:	fe 4f       	sbci	r31, 0xFE	; 254
    4a4e:	60 81       	ld	r22, Z
    4a50:	71 81       	ldd	r23, Z+1	; 0x01
    4a52:	82 81       	ldd	r24, Z+2	; 0x02
    4a54:	93 81       	ldd	r25, Z+3	; 0x03
    4a56:	20 e0       	ldi	r18, 0x00	; 0
    4a58:	30 e0       	ldi	r19, 0x00	; 0
    4a5a:	40 e8       	ldi	r20, 0x80	; 128
    4a5c:	5f e3       	ldi	r21, 0x3F	; 63
    4a5e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    4a62:	88 23       	and	r24, r24
    4a64:	34 f4       	brge	.+12     	; 0x4a72 <readgamepad+0xb0a>
		__ticks = 1;
    4a66:	fe 01       	movw	r30, r28
    4a68:	e0 5a       	subi	r30, 0xA0	; 160
    4a6a:	fe 4f       	sbci	r31, 0xFE	; 254
    4a6c:	81 e0       	ldi	r24, 0x01	; 1
    4a6e:	80 83       	st	Z, r24
    4a70:	e0 c0       	rjmp	.+448    	; 0x4c32 <readgamepad+0xcca>
	else if (__tmp > 255)
    4a72:	fe 01       	movw	r30, r28
    4a74:	ef 59       	subi	r30, 0x9F	; 159
    4a76:	fe 4f       	sbci	r31, 0xFE	; 254
    4a78:	60 81       	ld	r22, Z
    4a7a:	71 81       	ldd	r23, Z+1	; 0x01
    4a7c:	82 81       	ldd	r24, Z+2	; 0x02
    4a7e:	93 81       	ldd	r25, Z+3	; 0x03
    4a80:	20 e0       	ldi	r18, 0x00	; 0
    4a82:	30 e0       	ldi	r19, 0x00	; 0
    4a84:	4f e7       	ldi	r20, 0x7F	; 127
    4a86:	53 e4       	ldi	r21, 0x43	; 67
    4a88:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    4a8c:	18 16       	cp	r1, r24
    4a8e:	0c f0       	brlt	.+2      	; 0x4a92 <readgamepad+0xb2a>
    4a90:	c0 c0       	rjmp	.+384    	; 0x4c12 <readgamepad+0xcaa>
	{
		_delay_ms(__us / 1000.0);
    4a92:	fe 01       	movw	r30, r28
    4a94:	eb 59       	subi	r30, 0x9B	; 155
    4a96:	fe 4f       	sbci	r31, 0xFE	; 254
    4a98:	60 81       	ld	r22, Z
    4a9a:	71 81       	ldd	r23, Z+1	; 0x01
    4a9c:	82 81       	ldd	r24, Z+2	; 0x02
    4a9e:	93 81       	ldd	r25, Z+3	; 0x03
    4aa0:	20 e0       	ldi	r18, 0x00	; 0
    4aa2:	30 e0       	ldi	r19, 0x00	; 0
    4aa4:	4a e7       	ldi	r20, 0x7A	; 122
    4aa6:	54 e4       	ldi	r21, 0x44	; 68
    4aa8:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    4aac:	dc 01       	movw	r26, r24
    4aae:	cb 01       	movw	r24, r22
    4ab0:	fe 01       	movw	r30, r28
    4ab2:	e4 5a       	subi	r30, 0xA4	; 164
    4ab4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ab6:	80 83       	st	Z, r24
    4ab8:	91 83       	std	Z+1, r25	; 0x01
    4aba:	a2 83       	std	Z+2, r26	; 0x02
    4abc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4abe:	8e 01       	movw	r16, r28
    4ac0:	08 5a       	subi	r16, 0xA8	; 168
    4ac2:	1e 4f       	sbci	r17, 0xFE	; 254
    4ac4:	fe 01       	movw	r30, r28
    4ac6:	e4 5a       	subi	r30, 0xA4	; 164
    4ac8:	fe 4f       	sbci	r31, 0xFE	; 254
    4aca:	60 81       	ld	r22, Z
    4acc:	71 81       	ldd	r23, Z+1	; 0x01
    4ace:	82 81       	ldd	r24, Z+2	; 0x02
    4ad0:	93 81       	ldd	r25, Z+3	; 0x03
    4ad2:	20 e0       	ldi	r18, 0x00	; 0
    4ad4:	30 e0       	ldi	r19, 0x00	; 0
    4ad6:	4a e7       	ldi	r20, 0x7A	; 122
    4ad8:	55 e4       	ldi	r21, 0x45	; 69
    4ada:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4ade:	dc 01       	movw	r26, r24
    4ae0:	cb 01       	movw	r24, r22
    4ae2:	f8 01       	movw	r30, r16
    4ae4:	80 83       	st	Z, r24
    4ae6:	91 83       	std	Z+1, r25	; 0x01
    4ae8:	a2 83       	std	Z+2, r26	; 0x02
    4aea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4aec:	fe 01       	movw	r30, r28
    4aee:	e8 5a       	subi	r30, 0xA8	; 168
    4af0:	fe 4f       	sbci	r31, 0xFE	; 254
    4af2:	60 81       	ld	r22, Z
    4af4:	71 81       	ldd	r23, Z+1	; 0x01
    4af6:	82 81       	ldd	r24, Z+2	; 0x02
    4af8:	93 81       	ldd	r25, Z+3	; 0x03
    4afa:	20 e0       	ldi	r18, 0x00	; 0
    4afc:	30 e0       	ldi	r19, 0x00	; 0
    4afe:	40 e8       	ldi	r20, 0x80	; 128
    4b00:	5f e3       	ldi	r21, 0x3F	; 63
    4b02:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    4b06:	88 23       	and	r24, r24
    4b08:	44 f4       	brge	.+16     	; 0x4b1a <readgamepad+0xbb2>
		__ticks = 1;
    4b0a:	fe 01       	movw	r30, r28
    4b0c:	ea 5a       	subi	r30, 0xAA	; 170
    4b0e:	fe 4f       	sbci	r31, 0xFE	; 254
    4b10:	81 e0       	ldi	r24, 0x01	; 1
    4b12:	90 e0       	ldi	r25, 0x00	; 0
    4b14:	91 83       	std	Z+1, r25	; 0x01
    4b16:	80 83       	st	Z, r24
    4b18:	64 c0       	rjmp	.+200    	; 0x4be2 <readgamepad+0xc7a>
	else if (__tmp > 65535)
    4b1a:	fe 01       	movw	r30, r28
    4b1c:	e8 5a       	subi	r30, 0xA8	; 168
    4b1e:	fe 4f       	sbci	r31, 0xFE	; 254
    4b20:	60 81       	ld	r22, Z
    4b22:	71 81       	ldd	r23, Z+1	; 0x01
    4b24:	82 81       	ldd	r24, Z+2	; 0x02
    4b26:	93 81       	ldd	r25, Z+3	; 0x03
    4b28:	20 e0       	ldi	r18, 0x00	; 0
    4b2a:	3f ef       	ldi	r19, 0xFF	; 255
    4b2c:	4f e7       	ldi	r20, 0x7F	; 127
    4b2e:	57 e4       	ldi	r21, 0x47	; 71
    4b30:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    4b34:	18 16       	cp	r1, r24
    4b36:	0c f0       	brlt	.+2      	; 0x4b3a <readgamepad+0xbd2>
    4b38:	43 c0       	rjmp	.+134    	; 0x4bc0 <readgamepad+0xc58>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b3a:	fe 01       	movw	r30, r28
    4b3c:	e4 5a       	subi	r30, 0xA4	; 164
    4b3e:	fe 4f       	sbci	r31, 0xFE	; 254
    4b40:	60 81       	ld	r22, Z
    4b42:	71 81       	ldd	r23, Z+1	; 0x01
    4b44:	82 81       	ldd	r24, Z+2	; 0x02
    4b46:	93 81       	ldd	r25, Z+3	; 0x03
    4b48:	20 e0       	ldi	r18, 0x00	; 0
    4b4a:	30 e0       	ldi	r19, 0x00	; 0
    4b4c:	40 e2       	ldi	r20, 0x20	; 32
    4b4e:	51 e4       	ldi	r21, 0x41	; 65
    4b50:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4b54:	dc 01       	movw	r26, r24
    4b56:	cb 01       	movw	r24, r22
    4b58:	8e 01       	movw	r16, r28
    4b5a:	0a 5a       	subi	r16, 0xAA	; 170
    4b5c:	1e 4f       	sbci	r17, 0xFE	; 254
    4b5e:	bc 01       	movw	r22, r24
    4b60:	cd 01       	movw	r24, r26
    4b62:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4b66:	dc 01       	movw	r26, r24
    4b68:	cb 01       	movw	r24, r22
    4b6a:	f8 01       	movw	r30, r16
    4b6c:	91 83       	std	Z+1, r25	; 0x01
    4b6e:	80 83       	st	Z, r24
    4b70:	1f c0       	rjmp	.+62     	; 0x4bb0 <readgamepad+0xc48>
    4b72:	fe 01       	movw	r30, r28
    4b74:	ec 5a       	subi	r30, 0xAC	; 172
    4b76:	fe 4f       	sbci	r31, 0xFE	; 254
    4b78:	80 e9       	ldi	r24, 0x90	; 144
    4b7a:	91 e0       	ldi	r25, 0x01	; 1
    4b7c:	91 83       	std	Z+1, r25	; 0x01
    4b7e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4b80:	fe 01       	movw	r30, r28
    4b82:	ec 5a       	subi	r30, 0xAC	; 172
    4b84:	fe 4f       	sbci	r31, 0xFE	; 254
    4b86:	80 81       	ld	r24, Z
    4b88:	91 81       	ldd	r25, Z+1	; 0x01
    4b8a:	01 97       	sbiw	r24, 0x01	; 1
    4b8c:	f1 f7       	brne	.-4      	; 0x4b8a <readgamepad+0xc22>
    4b8e:	fe 01       	movw	r30, r28
    4b90:	ec 5a       	subi	r30, 0xAC	; 172
    4b92:	fe 4f       	sbci	r31, 0xFE	; 254
    4b94:	91 83       	std	Z+1, r25	; 0x01
    4b96:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b98:	de 01       	movw	r26, r28
    4b9a:	aa 5a       	subi	r26, 0xAA	; 170
    4b9c:	be 4f       	sbci	r27, 0xFE	; 254
    4b9e:	fe 01       	movw	r30, r28
    4ba0:	ea 5a       	subi	r30, 0xAA	; 170
    4ba2:	fe 4f       	sbci	r31, 0xFE	; 254
    4ba4:	80 81       	ld	r24, Z
    4ba6:	91 81       	ldd	r25, Z+1	; 0x01
    4ba8:	01 97       	sbiw	r24, 0x01	; 1
    4baa:	11 96       	adiw	r26, 0x01	; 1
    4bac:	9c 93       	st	X, r25
    4bae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4bb0:	fe 01       	movw	r30, r28
    4bb2:	ea 5a       	subi	r30, 0xAA	; 170
    4bb4:	fe 4f       	sbci	r31, 0xFE	; 254
    4bb6:	80 81       	ld	r24, Z
    4bb8:	91 81       	ldd	r25, Z+1	; 0x01
    4bba:	00 97       	sbiw	r24, 0x00	; 0
    4bbc:	d1 f6       	brne	.-76     	; 0x4b72 <readgamepad+0xc0a>
    4bbe:	4b c0       	rjmp	.+150    	; 0x4c56 <readgamepad+0xcee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4bc0:	8e 01       	movw	r16, r28
    4bc2:	0a 5a       	subi	r16, 0xAA	; 170
    4bc4:	1e 4f       	sbci	r17, 0xFE	; 254
    4bc6:	fe 01       	movw	r30, r28
    4bc8:	e8 5a       	subi	r30, 0xA8	; 168
    4bca:	fe 4f       	sbci	r31, 0xFE	; 254
    4bcc:	60 81       	ld	r22, Z
    4bce:	71 81       	ldd	r23, Z+1	; 0x01
    4bd0:	82 81       	ldd	r24, Z+2	; 0x02
    4bd2:	93 81       	ldd	r25, Z+3	; 0x03
    4bd4:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4bd8:	dc 01       	movw	r26, r24
    4bda:	cb 01       	movw	r24, r22
    4bdc:	f8 01       	movw	r30, r16
    4bde:	91 83       	std	Z+1, r25	; 0x01
    4be0:	80 83       	st	Z, r24
    4be2:	de 01       	movw	r26, r28
    4be4:	ae 5a       	subi	r26, 0xAE	; 174
    4be6:	be 4f       	sbci	r27, 0xFE	; 254
    4be8:	fe 01       	movw	r30, r28
    4bea:	ea 5a       	subi	r30, 0xAA	; 170
    4bec:	fe 4f       	sbci	r31, 0xFE	; 254
    4bee:	80 81       	ld	r24, Z
    4bf0:	91 81       	ldd	r25, Z+1	; 0x01
    4bf2:	11 96       	adiw	r26, 0x01	; 1
    4bf4:	9c 93       	st	X, r25
    4bf6:	8e 93       	st	-X, r24
    4bf8:	fe 01       	movw	r30, r28
    4bfa:	ee 5a       	subi	r30, 0xAE	; 174
    4bfc:	fe 4f       	sbci	r31, 0xFE	; 254
    4bfe:	80 81       	ld	r24, Z
    4c00:	91 81       	ldd	r25, Z+1	; 0x01
    4c02:	01 97       	sbiw	r24, 0x01	; 1
    4c04:	f1 f7       	brne	.-4      	; 0x4c02 <readgamepad+0xc9a>
    4c06:	fe 01       	movw	r30, r28
    4c08:	ee 5a       	subi	r30, 0xAE	; 174
    4c0a:	fe 4f       	sbci	r31, 0xFE	; 254
    4c0c:	91 83       	std	Z+1, r25	; 0x01
    4c0e:	80 83       	st	Z, r24
    4c10:	22 c0       	rjmp	.+68     	; 0x4c56 <readgamepad+0xcee>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4c12:	8e 01       	movw	r16, r28
    4c14:	00 5a       	subi	r16, 0xA0	; 160
    4c16:	1e 4f       	sbci	r17, 0xFE	; 254
    4c18:	fe 01       	movw	r30, r28
    4c1a:	ef 59       	subi	r30, 0x9F	; 159
    4c1c:	fe 4f       	sbci	r31, 0xFE	; 254
    4c1e:	60 81       	ld	r22, Z
    4c20:	71 81       	ldd	r23, Z+1	; 0x01
    4c22:	82 81       	ldd	r24, Z+2	; 0x02
    4c24:	93 81       	ldd	r25, Z+3	; 0x03
    4c26:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4c2a:	dc 01       	movw	r26, r24
    4c2c:	cb 01       	movw	r24, r22
    4c2e:	f8 01       	movw	r30, r16
    4c30:	80 83       	st	Z, r24
    4c32:	de 01       	movw	r26, r28
    4c34:	af 5a       	subi	r26, 0xAF	; 175
    4c36:	be 4f       	sbci	r27, 0xFE	; 254
    4c38:	fe 01       	movw	r30, r28
    4c3a:	e0 5a       	subi	r30, 0xA0	; 160
    4c3c:	fe 4f       	sbci	r31, 0xFE	; 254
    4c3e:	80 81       	ld	r24, Z
    4c40:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4c42:	fe 01       	movw	r30, r28
    4c44:	ef 5a       	subi	r30, 0xAF	; 175
    4c46:	fe 4f       	sbci	r31, 0xFE	; 254
    4c48:	80 81       	ld	r24, Z
    4c4a:	8a 95       	dec	r24
    4c4c:	f1 f7       	brne	.-4      	; 0x4c4a <readgamepad+0xce2>
    4c4e:	fe 01       	movw	r30, r28
    4c50:	ef 5a       	subi	r30, 0xAF	; 175
    4c52:	fe 4f       	sbci	r31, 0xFE	; 254
    4c54:	80 83       	st	Z, r24

	
	
	ps2byte = 0x42;			//byte2
	
	for(i=0;i<8;i++)
    4c56:	80 91 66 00 	lds	r24, 0x0066
    4c5a:	90 91 67 00 	lds	r25, 0x0067
    4c5e:	01 96       	adiw	r24, 0x01	; 1
    4c60:	90 93 67 00 	sts	0x0067, r25
    4c64:	80 93 66 00 	sts	0x0066, r24
    4c68:	80 91 66 00 	lds	r24, 0x0066
    4c6c:	90 91 67 00 	lds	r25, 0x0067
    4c70:	88 30       	cpi	r24, 0x08	; 8
    4c72:	91 05       	cpc	r25, r1
    4c74:	0c f4       	brge	.+2      	; 0x4c78 <readgamepad+0xd10>
    4c76:	6d cd       	rjmp	.-1318   	; 0x4752 <readgamepad+0x7ea>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    4c78:	a5 e3       	ldi	r26, 0x35	; 53
    4c7a:	b0 e0       	ldi	r27, 0x00	; 0
    4c7c:	e5 e3       	ldi	r30, 0x35	; 53
    4c7e:	f0 e0       	ldi	r31, 0x00	; 0
    4c80:	80 81       	ld	r24, Z
    4c82:	84 60       	ori	r24, 0x04	; 4
    4c84:	8c 93       	st	X, r24
	
	
	
		
	for(i=0;i<8;i++)		//byte3
    4c86:	10 92 67 00 	sts	0x0067, r1
    4c8a:	10 92 66 00 	sts	0x0066, r1
    4c8e:	70 c2       	rjmp	.+1248   	; 0x5170 <readgamepad+0x1208>
	{	
		cbi(ps2port,ps2cmd);
    4c90:	a5 e3       	ldi	r26, 0x35	; 53
    4c92:	b0 e0       	ldi	r27, 0x00	; 0
    4c94:	e5 e3       	ldi	r30, 0x35	; 53
    4c96:	f0 e0       	ldi	r31, 0x00	; 0
    4c98:	80 81       	ld	r24, Z
    4c9a:	8b 7f       	andi	r24, 0xFB	; 251
    4c9c:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk);
    4c9e:	a5 e3       	ldi	r26, 0x35	; 53
    4ca0:	b0 e0       	ldi	r27, 0x00	; 0
    4ca2:	e5 e3       	ldi	r30, 0x35	; 53
    4ca4:	f0 e0       	ldi	r31, 0x00	; 0
    4ca6:	80 81       	ld	r24, Z
    4ca8:	8e 7f       	andi	r24, 0xFE	; 254
    4caa:	8c 93       	st	X, r24
    4cac:	fe 01       	movw	r30, r28
    4cae:	e3 5b       	subi	r30, 0xB3	; 179
    4cb0:	fe 4f       	sbci	r31, 0xFE	; 254
    4cb2:	80 e0       	ldi	r24, 0x00	; 0
    4cb4:	90 e0       	ldi	r25, 0x00	; 0
    4cb6:	a0 e8       	ldi	r26, 0x80	; 128
    4cb8:	bf e3       	ldi	r27, 0x3F	; 63
    4cba:	80 83       	st	Z, r24
    4cbc:	91 83       	std	Z+1, r25	; 0x01
    4cbe:	a2 83       	std	Z+2, r26	; 0x02
    4cc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4cc2:	8e 01       	movw	r16, r28
    4cc4:	07 5b       	subi	r16, 0xB7	; 183
    4cc6:	1e 4f       	sbci	r17, 0xFE	; 254
    4cc8:	fe 01       	movw	r30, r28
    4cca:	e3 5b       	subi	r30, 0xB3	; 179
    4ccc:	fe 4f       	sbci	r31, 0xFE	; 254
    4cce:	60 81       	ld	r22, Z
    4cd0:	71 81       	ldd	r23, Z+1	; 0x01
    4cd2:	82 81       	ldd	r24, Z+2	; 0x02
    4cd4:	93 81       	ldd	r25, Z+3	; 0x03
    4cd6:	2b ea       	ldi	r18, 0xAB	; 171
    4cd8:	3a ea       	ldi	r19, 0xAA	; 170
    4cda:	4a ea       	ldi	r20, 0xAA	; 170
    4cdc:	50 e4       	ldi	r21, 0x40	; 64
    4cde:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4ce2:	dc 01       	movw	r26, r24
    4ce4:	cb 01       	movw	r24, r22
    4ce6:	f8 01       	movw	r30, r16
    4ce8:	80 83       	st	Z, r24
    4cea:	91 83       	std	Z+1, r25	; 0x01
    4cec:	a2 83       	std	Z+2, r26	; 0x02
    4cee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4cf0:	fe 01       	movw	r30, r28
    4cf2:	e7 5b       	subi	r30, 0xB7	; 183
    4cf4:	fe 4f       	sbci	r31, 0xFE	; 254
    4cf6:	60 81       	ld	r22, Z
    4cf8:	71 81       	ldd	r23, Z+1	; 0x01
    4cfa:	82 81       	ldd	r24, Z+2	; 0x02
    4cfc:	93 81       	ldd	r25, Z+3	; 0x03
    4cfe:	20 e0       	ldi	r18, 0x00	; 0
    4d00:	30 e0       	ldi	r19, 0x00	; 0
    4d02:	40 e8       	ldi	r20, 0x80	; 128
    4d04:	5f e3       	ldi	r21, 0x3F	; 63
    4d06:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    4d0a:	88 23       	and	r24, r24
    4d0c:	34 f4       	brge	.+12     	; 0x4d1a <readgamepad+0xdb2>
		__ticks = 1;
    4d0e:	fe 01       	movw	r30, r28
    4d10:	e8 5b       	subi	r30, 0xB8	; 184
    4d12:	fe 4f       	sbci	r31, 0xFE	; 254
    4d14:	81 e0       	ldi	r24, 0x01	; 1
    4d16:	80 83       	st	Z, r24
    4d18:	e0 c0       	rjmp	.+448    	; 0x4eda <readgamepad+0xf72>
	else if (__tmp > 255)
    4d1a:	fe 01       	movw	r30, r28
    4d1c:	e7 5b       	subi	r30, 0xB7	; 183
    4d1e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d20:	60 81       	ld	r22, Z
    4d22:	71 81       	ldd	r23, Z+1	; 0x01
    4d24:	82 81       	ldd	r24, Z+2	; 0x02
    4d26:	93 81       	ldd	r25, Z+3	; 0x03
    4d28:	20 e0       	ldi	r18, 0x00	; 0
    4d2a:	30 e0       	ldi	r19, 0x00	; 0
    4d2c:	4f e7       	ldi	r20, 0x7F	; 127
    4d2e:	53 e4       	ldi	r21, 0x43	; 67
    4d30:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    4d34:	18 16       	cp	r1, r24
    4d36:	0c f0       	brlt	.+2      	; 0x4d3a <readgamepad+0xdd2>
    4d38:	c0 c0       	rjmp	.+384    	; 0x4eba <readgamepad+0xf52>
	{
		_delay_ms(__us / 1000.0);
    4d3a:	fe 01       	movw	r30, r28
    4d3c:	e3 5b       	subi	r30, 0xB3	; 179
    4d3e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d40:	60 81       	ld	r22, Z
    4d42:	71 81       	ldd	r23, Z+1	; 0x01
    4d44:	82 81       	ldd	r24, Z+2	; 0x02
    4d46:	93 81       	ldd	r25, Z+3	; 0x03
    4d48:	20 e0       	ldi	r18, 0x00	; 0
    4d4a:	30 e0       	ldi	r19, 0x00	; 0
    4d4c:	4a e7       	ldi	r20, 0x7A	; 122
    4d4e:	54 e4       	ldi	r21, 0x44	; 68
    4d50:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    4d54:	dc 01       	movw	r26, r24
    4d56:	cb 01       	movw	r24, r22
    4d58:	fe 01       	movw	r30, r28
    4d5a:	ec 5b       	subi	r30, 0xBC	; 188
    4d5c:	fe 4f       	sbci	r31, 0xFE	; 254
    4d5e:	80 83       	st	Z, r24
    4d60:	91 83       	std	Z+1, r25	; 0x01
    4d62:	a2 83       	std	Z+2, r26	; 0x02
    4d64:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d66:	8e 01       	movw	r16, r28
    4d68:	00 5c       	subi	r16, 0xC0	; 192
    4d6a:	1e 4f       	sbci	r17, 0xFE	; 254
    4d6c:	fe 01       	movw	r30, r28
    4d6e:	ec 5b       	subi	r30, 0xBC	; 188
    4d70:	fe 4f       	sbci	r31, 0xFE	; 254
    4d72:	60 81       	ld	r22, Z
    4d74:	71 81       	ldd	r23, Z+1	; 0x01
    4d76:	82 81       	ldd	r24, Z+2	; 0x02
    4d78:	93 81       	ldd	r25, Z+3	; 0x03
    4d7a:	20 e0       	ldi	r18, 0x00	; 0
    4d7c:	30 e0       	ldi	r19, 0x00	; 0
    4d7e:	4a e7       	ldi	r20, 0x7A	; 122
    4d80:	55 e4       	ldi	r21, 0x45	; 69
    4d82:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4d86:	dc 01       	movw	r26, r24
    4d88:	cb 01       	movw	r24, r22
    4d8a:	f8 01       	movw	r30, r16
    4d8c:	80 83       	st	Z, r24
    4d8e:	91 83       	std	Z+1, r25	; 0x01
    4d90:	a2 83       	std	Z+2, r26	; 0x02
    4d92:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4d94:	fe 01       	movw	r30, r28
    4d96:	e0 5c       	subi	r30, 0xC0	; 192
    4d98:	fe 4f       	sbci	r31, 0xFE	; 254
    4d9a:	60 81       	ld	r22, Z
    4d9c:	71 81       	ldd	r23, Z+1	; 0x01
    4d9e:	82 81       	ldd	r24, Z+2	; 0x02
    4da0:	93 81       	ldd	r25, Z+3	; 0x03
    4da2:	20 e0       	ldi	r18, 0x00	; 0
    4da4:	30 e0       	ldi	r19, 0x00	; 0
    4da6:	40 e8       	ldi	r20, 0x80	; 128
    4da8:	5f e3       	ldi	r21, 0x3F	; 63
    4daa:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    4dae:	88 23       	and	r24, r24
    4db0:	44 f4       	brge	.+16     	; 0x4dc2 <readgamepad+0xe5a>
		__ticks = 1;
    4db2:	fe 01       	movw	r30, r28
    4db4:	e2 5c       	subi	r30, 0xC2	; 194
    4db6:	fe 4f       	sbci	r31, 0xFE	; 254
    4db8:	81 e0       	ldi	r24, 0x01	; 1
    4dba:	90 e0       	ldi	r25, 0x00	; 0
    4dbc:	91 83       	std	Z+1, r25	; 0x01
    4dbe:	80 83       	st	Z, r24
    4dc0:	64 c0       	rjmp	.+200    	; 0x4e8a <readgamepad+0xf22>
	else if (__tmp > 65535)
    4dc2:	fe 01       	movw	r30, r28
    4dc4:	e0 5c       	subi	r30, 0xC0	; 192
    4dc6:	fe 4f       	sbci	r31, 0xFE	; 254
    4dc8:	60 81       	ld	r22, Z
    4dca:	71 81       	ldd	r23, Z+1	; 0x01
    4dcc:	82 81       	ldd	r24, Z+2	; 0x02
    4dce:	93 81       	ldd	r25, Z+3	; 0x03
    4dd0:	20 e0       	ldi	r18, 0x00	; 0
    4dd2:	3f ef       	ldi	r19, 0xFF	; 255
    4dd4:	4f e7       	ldi	r20, 0x7F	; 127
    4dd6:	57 e4       	ldi	r21, 0x47	; 71
    4dd8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    4ddc:	18 16       	cp	r1, r24
    4dde:	0c f0       	brlt	.+2      	; 0x4de2 <readgamepad+0xe7a>
    4de0:	43 c0       	rjmp	.+134    	; 0x4e68 <readgamepad+0xf00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4de2:	fe 01       	movw	r30, r28
    4de4:	ec 5b       	subi	r30, 0xBC	; 188
    4de6:	fe 4f       	sbci	r31, 0xFE	; 254
    4de8:	60 81       	ld	r22, Z
    4dea:	71 81       	ldd	r23, Z+1	; 0x01
    4dec:	82 81       	ldd	r24, Z+2	; 0x02
    4dee:	93 81       	ldd	r25, Z+3	; 0x03
    4df0:	20 e0       	ldi	r18, 0x00	; 0
    4df2:	30 e0       	ldi	r19, 0x00	; 0
    4df4:	40 e2       	ldi	r20, 0x20	; 32
    4df6:	51 e4       	ldi	r21, 0x41	; 65
    4df8:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4dfc:	dc 01       	movw	r26, r24
    4dfe:	cb 01       	movw	r24, r22
    4e00:	8e 01       	movw	r16, r28
    4e02:	02 5c       	subi	r16, 0xC2	; 194
    4e04:	1e 4f       	sbci	r17, 0xFE	; 254
    4e06:	bc 01       	movw	r22, r24
    4e08:	cd 01       	movw	r24, r26
    4e0a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4e0e:	dc 01       	movw	r26, r24
    4e10:	cb 01       	movw	r24, r22
    4e12:	f8 01       	movw	r30, r16
    4e14:	91 83       	std	Z+1, r25	; 0x01
    4e16:	80 83       	st	Z, r24
    4e18:	1f c0       	rjmp	.+62     	; 0x4e58 <readgamepad+0xef0>
    4e1a:	fe 01       	movw	r30, r28
    4e1c:	e4 5c       	subi	r30, 0xC4	; 196
    4e1e:	fe 4f       	sbci	r31, 0xFE	; 254
    4e20:	80 e9       	ldi	r24, 0x90	; 144
    4e22:	91 e0       	ldi	r25, 0x01	; 1
    4e24:	91 83       	std	Z+1, r25	; 0x01
    4e26:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4e28:	fe 01       	movw	r30, r28
    4e2a:	e4 5c       	subi	r30, 0xC4	; 196
    4e2c:	fe 4f       	sbci	r31, 0xFE	; 254
    4e2e:	80 81       	ld	r24, Z
    4e30:	91 81       	ldd	r25, Z+1	; 0x01
    4e32:	01 97       	sbiw	r24, 0x01	; 1
    4e34:	f1 f7       	brne	.-4      	; 0x4e32 <readgamepad+0xeca>
    4e36:	fe 01       	movw	r30, r28
    4e38:	e4 5c       	subi	r30, 0xC4	; 196
    4e3a:	fe 4f       	sbci	r31, 0xFE	; 254
    4e3c:	91 83       	std	Z+1, r25	; 0x01
    4e3e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e40:	de 01       	movw	r26, r28
    4e42:	a2 5c       	subi	r26, 0xC2	; 194
    4e44:	be 4f       	sbci	r27, 0xFE	; 254
    4e46:	fe 01       	movw	r30, r28
    4e48:	e2 5c       	subi	r30, 0xC2	; 194
    4e4a:	fe 4f       	sbci	r31, 0xFE	; 254
    4e4c:	80 81       	ld	r24, Z
    4e4e:	91 81       	ldd	r25, Z+1	; 0x01
    4e50:	01 97       	sbiw	r24, 0x01	; 1
    4e52:	11 96       	adiw	r26, 0x01	; 1
    4e54:	9c 93       	st	X, r25
    4e56:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e58:	fe 01       	movw	r30, r28
    4e5a:	e2 5c       	subi	r30, 0xC2	; 194
    4e5c:	fe 4f       	sbci	r31, 0xFE	; 254
    4e5e:	80 81       	ld	r24, Z
    4e60:	91 81       	ldd	r25, Z+1	; 0x01
    4e62:	00 97       	sbiw	r24, 0x00	; 0
    4e64:	d1 f6       	brne	.-76     	; 0x4e1a <readgamepad+0xeb2>
    4e66:	4b c0       	rjmp	.+150    	; 0x4efe <readgamepad+0xf96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e68:	8e 01       	movw	r16, r28
    4e6a:	02 5c       	subi	r16, 0xC2	; 194
    4e6c:	1e 4f       	sbci	r17, 0xFE	; 254
    4e6e:	fe 01       	movw	r30, r28
    4e70:	e0 5c       	subi	r30, 0xC0	; 192
    4e72:	fe 4f       	sbci	r31, 0xFE	; 254
    4e74:	60 81       	ld	r22, Z
    4e76:	71 81       	ldd	r23, Z+1	; 0x01
    4e78:	82 81       	ldd	r24, Z+2	; 0x02
    4e7a:	93 81       	ldd	r25, Z+3	; 0x03
    4e7c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4e80:	dc 01       	movw	r26, r24
    4e82:	cb 01       	movw	r24, r22
    4e84:	f8 01       	movw	r30, r16
    4e86:	91 83       	std	Z+1, r25	; 0x01
    4e88:	80 83       	st	Z, r24
    4e8a:	de 01       	movw	r26, r28
    4e8c:	a6 5c       	subi	r26, 0xC6	; 198
    4e8e:	be 4f       	sbci	r27, 0xFE	; 254
    4e90:	fe 01       	movw	r30, r28
    4e92:	e2 5c       	subi	r30, 0xC2	; 194
    4e94:	fe 4f       	sbci	r31, 0xFE	; 254
    4e96:	80 81       	ld	r24, Z
    4e98:	91 81       	ldd	r25, Z+1	; 0x01
    4e9a:	11 96       	adiw	r26, 0x01	; 1
    4e9c:	9c 93       	st	X, r25
    4e9e:	8e 93       	st	-X, r24
    4ea0:	fe 01       	movw	r30, r28
    4ea2:	e6 5c       	subi	r30, 0xC6	; 198
    4ea4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ea6:	80 81       	ld	r24, Z
    4ea8:	91 81       	ldd	r25, Z+1	; 0x01
    4eaa:	01 97       	sbiw	r24, 0x01	; 1
    4eac:	f1 f7       	brne	.-4      	; 0x4eaa <readgamepad+0xf42>
    4eae:	fe 01       	movw	r30, r28
    4eb0:	e6 5c       	subi	r30, 0xC6	; 198
    4eb2:	fe 4f       	sbci	r31, 0xFE	; 254
    4eb4:	91 83       	std	Z+1, r25	; 0x01
    4eb6:	80 83       	st	Z, r24
    4eb8:	22 c0       	rjmp	.+68     	; 0x4efe <readgamepad+0xf96>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4eba:	8e 01       	movw	r16, r28
    4ebc:	08 5b       	subi	r16, 0xB8	; 184
    4ebe:	1e 4f       	sbci	r17, 0xFE	; 254
    4ec0:	fe 01       	movw	r30, r28
    4ec2:	e7 5b       	subi	r30, 0xB7	; 183
    4ec4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ec6:	60 81       	ld	r22, Z
    4ec8:	71 81       	ldd	r23, Z+1	; 0x01
    4eca:	82 81       	ldd	r24, Z+2	; 0x02
    4ecc:	93 81       	ldd	r25, Z+3	; 0x03
    4ece:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    4ed2:	dc 01       	movw	r26, r24
    4ed4:	cb 01       	movw	r24, r22
    4ed6:	f8 01       	movw	r30, r16
    4ed8:	80 83       	st	Z, r24
    4eda:	de 01       	movw	r26, r28
    4edc:	a7 5c       	subi	r26, 0xC7	; 199
    4ede:	be 4f       	sbci	r27, 0xFE	; 254
    4ee0:	fe 01       	movw	r30, r28
    4ee2:	e8 5b       	subi	r30, 0xB8	; 184
    4ee4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ee6:	80 81       	ld	r24, Z
    4ee8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4eea:	fe 01       	movw	r30, r28
    4eec:	e7 5c       	subi	r30, 0xC7	; 199
    4eee:	fe 4f       	sbci	r31, 0xFE	; 254
    4ef0:	80 81       	ld	r24, Z
    4ef2:	8a 95       	dec	r24
    4ef4:	f1 f7       	brne	.-4      	; 0x4ef2 <readgamepad+0xf8a>
    4ef6:	fe 01       	movw	r30, r28
    4ef8:	e7 5c       	subi	r30, 0xC7	; 199
    4efa:	fe 4f       	sbci	r31, 0xFE	; 254
    4efc:	80 83       	st	Z, r24
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
    4efe:	a5 e3       	ldi	r26, 0x35	; 53
    4f00:	b0 e0       	ldi	r27, 0x00	; 0
    4f02:	e5 e3       	ldi	r30, 0x35	; 53
    4f04:	f0 e0       	ldi	r31, 0x00	; 0
    4f06:	80 81       	ld	r24, Z
    4f08:	81 60       	ori	r24, 0x01	; 1
    4f0a:	8c 93       	st	X, r24
    4f0c:	fe 01       	movw	r30, r28
    4f0e:	eb 5c       	subi	r30, 0xCB	; 203
    4f10:	fe 4f       	sbci	r31, 0xFE	; 254
    4f12:	80 e0       	ldi	r24, 0x00	; 0
    4f14:	90 e0       	ldi	r25, 0x00	; 0
    4f16:	a0 e8       	ldi	r26, 0x80	; 128
    4f18:	bf e3       	ldi	r27, 0x3F	; 63
    4f1a:	80 83       	st	Z, r24
    4f1c:	91 83       	std	Z+1, r25	; 0x01
    4f1e:	a2 83       	std	Z+2, r26	; 0x02
    4f20:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4f22:	8e 01       	movw	r16, r28
    4f24:	0f 5c       	subi	r16, 0xCF	; 207
    4f26:	1e 4f       	sbci	r17, 0xFE	; 254
    4f28:	fe 01       	movw	r30, r28
    4f2a:	eb 5c       	subi	r30, 0xCB	; 203
    4f2c:	fe 4f       	sbci	r31, 0xFE	; 254
    4f2e:	60 81       	ld	r22, Z
    4f30:	71 81       	ldd	r23, Z+1	; 0x01
    4f32:	82 81       	ldd	r24, Z+2	; 0x02
    4f34:	93 81       	ldd	r25, Z+3	; 0x03
    4f36:	2b ea       	ldi	r18, 0xAB	; 171
    4f38:	3a ea       	ldi	r19, 0xAA	; 170
    4f3a:	4a ea       	ldi	r20, 0xAA	; 170
    4f3c:	50 e4       	ldi	r21, 0x40	; 64
    4f3e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4f42:	dc 01       	movw	r26, r24
    4f44:	cb 01       	movw	r24, r22
    4f46:	f8 01       	movw	r30, r16
    4f48:	80 83       	st	Z, r24
    4f4a:	91 83       	std	Z+1, r25	; 0x01
    4f4c:	a2 83       	std	Z+2, r26	; 0x02
    4f4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4f50:	fe 01       	movw	r30, r28
    4f52:	ef 5c       	subi	r30, 0xCF	; 207
    4f54:	fe 4f       	sbci	r31, 0xFE	; 254
    4f56:	60 81       	ld	r22, Z
    4f58:	71 81       	ldd	r23, Z+1	; 0x01
    4f5a:	82 81       	ldd	r24, Z+2	; 0x02
    4f5c:	93 81       	ldd	r25, Z+3	; 0x03
    4f5e:	20 e0       	ldi	r18, 0x00	; 0
    4f60:	30 e0       	ldi	r19, 0x00	; 0
    4f62:	40 e8       	ldi	r20, 0x80	; 128
    4f64:	5f e3       	ldi	r21, 0x3F	; 63
    4f66:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    4f6a:	88 23       	and	r24, r24
    4f6c:	34 f4       	brge	.+12     	; 0x4f7a <readgamepad+0x1012>
		__ticks = 1;
    4f6e:	fe 01       	movw	r30, r28
    4f70:	e0 5d       	subi	r30, 0xD0	; 208
    4f72:	fe 4f       	sbci	r31, 0xFE	; 254
    4f74:	81 e0       	ldi	r24, 0x01	; 1
    4f76:	80 83       	st	Z, r24
    4f78:	e0 c0       	rjmp	.+448    	; 0x513a <readgamepad+0x11d2>
	else if (__tmp > 255)
    4f7a:	fe 01       	movw	r30, r28
    4f7c:	ef 5c       	subi	r30, 0xCF	; 207
    4f7e:	fe 4f       	sbci	r31, 0xFE	; 254
    4f80:	60 81       	ld	r22, Z
    4f82:	71 81       	ldd	r23, Z+1	; 0x01
    4f84:	82 81       	ldd	r24, Z+2	; 0x02
    4f86:	93 81       	ldd	r25, Z+3	; 0x03
    4f88:	20 e0       	ldi	r18, 0x00	; 0
    4f8a:	30 e0       	ldi	r19, 0x00	; 0
    4f8c:	4f e7       	ldi	r20, 0x7F	; 127
    4f8e:	53 e4       	ldi	r21, 0x43	; 67
    4f90:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    4f94:	18 16       	cp	r1, r24
    4f96:	0c f0       	brlt	.+2      	; 0x4f9a <readgamepad+0x1032>
    4f98:	c0 c0       	rjmp	.+384    	; 0x511a <readgamepad+0x11b2>
	{
		_delay_ms(__us / 1000.0);
    4f9a:	fe 01       	movw	r30, r28
    4f9c:	eb 5c       	subi	r30, 0xCB	; 203
    4f9e:	fe 4f       	sbci	r31, 0xFE	; 254
    4fa0:	60 81       	ld	r22, Z
    4fa2:	71 81       	ldd	r23, Z+1	; 0x01
    4fa4:	82 81       	ldd	r24, Z+2	; 0x02
    4fa6:	93 81       	ldd	r25, Z+3	; 0x03
    4fa8:	20 e0       	ldi	r18, 0x00	; 0
    4faa:	30 e0       	ldi	r19, 0x00	; 0
    4fac:	4a e7       	ldi	r20, 0x7A	; 122
    4fae:	54 e4       	ldi	r21, 0x44	; 68
    4fb0:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    4fb4:	dc 01       	movw	r26, r24
    4fb6:	cb 01       	movw	r24, r22
    4fb8:	fe 01       	movw	r30, r28
    4fba:	e4 5d       	subi	r30, 0xD4	; 212
    4fbc:	fe 4f       	sbci	r31, 0xFE	; 254
    4fbe:	80 83       	st	Z, r24
    4fc0:	91 83       	std	Z+1, r25	; 0x01
    4fc2:	a2 83       	std	Z+2, r26	; 0x02
    4fc4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4fc6:	8e 01       	movw	r16, r28
    4fc8:	08 5d       	subi	r16, 0xD8	; 216
    4fca:	1e 4f       	sbci	r17, 0xFE	; 254
    4fcc:	fe 01       	movw	r30, r28
    4fce:	e4 5d       	subi	r30, 0xD4	; 212
    4fd0:	fe 4f       	sbci	r31, 0xFE	; 254
    4fd2:	60 81       	ld	r22, Z
    4fd4:	71 81       	ldd	r23, Z+1	; 0x01
    4fd6:	82 81       	ldd	r24, Z+2	; 0x02
    4fd8:	93 81       	ldd	r25, Z+3	; 0x03
    4fda:	20 e0       	ldi	r18, 0x00	; 0
    4fdc:	30 e0       	ldi	r19, 0x00	; 0
    4fde:	4a e7       	ldi	r20, 0x7A	; 122
    4fe0:	55 e4       	ldi	r21, 0x45	; 69
    4fe2:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    4fe6:	dc 01       	movw	r26, r24
    4fe8:	cb 01       	movw	r24, r22
    4fea:	f8 01       	movw	r30, r16
    4fec:	80 83       	st	Z, r24
    4fee:	91 83       	std	Z+1, r25	; 0x01
    4ff0:	a2 83       	std	Z+2, r26	; 0x02
    4ff2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ff4:	fe 01       	movw	r30, r28
    4ff6:	e8 5d       	subi	r30, 0xD8	; 216
    4ff8:	fe 4f       	sbci	r31, 0xFE	; 254
    4ffa:	60 81       	ld	r22, Z
    4ffc:	71 81       	ldd	r23, Z+1	; 0x01
    4ffe:	82 81       	ldd	r24, Z+2	; 0x02
    5000:	93 81       	ldd	r25, Z+3	; 0x03
    5002:	20 e0       	ldi	r18, 0x00	; 0
    5004:	30 e0       	ldi	r19, 0x00	; 0
    5006:	40 e8       	ldi	r20, 0x80	; 128
    5008:	5f e3       	ldi	r21, 0x3F	; 63
    500a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    500e:	88 23       	and	r24, r24
    5010:	44 f4       	brge	.+16     	; 0x5022 <readgamepad+0x10ba>
		__ticks = 1;
    5012:	fe 01       	movw	r30, r28
    5014:	ea 5d       	subi	r30, 0xDA	; 218
    5016:	fe 4f       	sbci	r31, 0xFE	; 254
    5018:	81 e0       	ldi	r24, 0x01	; 1
    501a:	90 e0       	ldi	r25, 0x00	; 0
    501c:	91 83       	std	Z+1, r25	; 0x01
    501e:	80 83       	st	Z, r24
    5020:	64 c0       	rjmp	.+200    	; 0x50ea <readgamepad+0x1182>
	else if (__tmp > 65535)
    5022:	fe 01       	movw	r30, r28
    5024:	e8 5d       	subi	r30, 0xD8	; 216
    5026:	fe 4f       	sbci	r31, 0xFE	; 254
    5028:	60 81       	ld	r22, Z
    502a:	71 81       	ldd	r23, Z+1	; 0x01
    502c:	82 81       	ldd	r24, Z+2	; 0x02
    502e:	93 81       	ldd	r25, Z+3	; 0x03
    5030:	20 e0       	ldi	r18, 0x00	; 0
    5032:	3f ef       	ldi	r19, 0xFF	; 255
    5034:	4f e7       	ldi	r20, 0x7F	; 127
    5036:	57 e4       	ldi	r21, 0x47	; 71
    5038:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    503c:	18 16       	cp	r1, r24
    503e:	0c f0       	brlt	.+2      	; 0x5042 <readgamepad+0x10da>
    5040:	43 c0       	rjmp	.+134    	; 0x50c8 <readgamepad+0x1160>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5042:	fe 01       	movw	r30, r28
    5044:	e4 5d       	subi	r30, 0xD4	; 212
    5046:	fe 4f       	sbci	r31, 0xFE	; 254
    5048:	60 81       	ld	r22, Z
    504a:	71 81       	ldd	r23, Z+1	; 0x01
    504c:	82 81       	ldd	r24, Z+2	; 0x02
    504e:	93 81       	ldd	r25, Z+3	; 0x03
    5050:	20 e0       	ldi	r18, 0x00	; 0
    5052:	30 e0       	ldi	r19, 0x00	; 0
    5054:	40 e2       	ldi	r20, 0x20	; 32
    5056:	51 e4       	ldi	r21, 0x41	; 65
    5058:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    505c:	dc 01       	movw	r26, r24
    505e:	cb 01       	movw	r24, r22
    5060:	8e 01       	movw	r16, r28
    5062:	0a 5d       	subi	r16, 0xDA	; 218
    5064:	1e 4f       	sbci	r17, 0xFE	; 254
    5066:	bc 01       	movw	r22, r24
    5068:	cd 01       	movw	r24, r26
    506a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    506e:	dc 01       	movw	r26, r24
    5070:	cb 01       	movw	r24, r22
    5072:	f8 01       	movw	r30, r16
    5074:	91 83       	std	Z+1, r25	; 0x01
    5076:	80 83       	st	Z, r24
    5078:	1f c0       	rjmp	.+62     	; 0x50b8 <readgamepad+0x1150>
    507a:	fe 01       	movw	r30, r28
    507c:	ec 5d       	subi	r30, 0xDC	; 220
    507e:	fe 4f       	sbci	r31, 0xFE	; 254
    5080:	80 e9       	ldi	r24, 0x90	; 144
    5082:	91 e0       	ldi	r25, 0x01	; 1
    5084:	91 83       	std	Z+1, r25	; 0x01
    5086:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5088:	fe 01       	movw	r30, r28
    508a:	ec 5d       	subi	r30, 0xDC	; 220
    508c:	fe 4f       	sbci	r31, 0xFE	; 254
    508e:	80 81       	ld	r24, Z
    5090:	91 81       	ldd	r25, Z+1	; 0x01
    5092:	01 97       	sbiw	r24, 0x01	; 1
    5094:	f1 f7       	brne	.-4      	; 0x5092 <readgamepad+0x112a>
    5096:	fe 01       	movw	r30, r28
    5098:	ec 5d       	subi	r30, 0xDC	; 220
    509a:	fe 4f       	sbci	r31, 0xFE	; 254
    509c:	91 83       	std	Z+1, r25	; 0x01
    509e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50a0:	de 01       	movw	r26, r28
    50a2:	aa 5d       	subi	r26, 0xDA	; 218
    50a4:	be 4f       	sbci	r27, 0xFE	; 254
    50a6:	fe 01       	movw	r30, r28
    50a8:	ea 5d       	subi	r30, 0xDA	; 218
    50aa:	fe 4f       	sbci	r31, 0xFE	; 254
    50ac:	80 81       	ld	r24, Z
    50ae:	91 81       	ldd	r25, Z+1	; 0x01
    50b0:	01 97       	sbiw	r24, 0x01	; 1
    50b2:	11 96       	adiw	r26, 0x01	; 1
    50b4:	9c 93       	st	X, r25
    50b6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50b8:	fe 01       	movw	r30, r28
    50ba:	ea 5d       	subi	r30, 0xDA	; 218
    50bc:	fe 4f       	sbci	r31, 0xFE	; 254
    50be:	80 81       	ld	r24, Z
    50c0:	91 81       	ldd	r25, Z+1	; 0x01
    50c2:	00 97       	sbiw	r24, 0x00	; 0
    50c4:	d1 f6       	brne	.-76     	; 0x507a <readgamepad+0x1112>
    50c6:	4b c0       	rjmp	.+150    	; 0x515e <readgamepad+0x11f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50c8:	8e 01       	movw	r16, r28
    50ca:	0a 5d       	subi	r16, 0xDA	; 218
    50cc:	1e 4f       	sbci	r17, 0xFE	; 254
    50ce:	fe 01       	movw	r30, r28
    50d0:	e8 5d       	subi	r30, 0xD8	; 216
    50d2:	fe 4f       	sbci	r31, 0xFE	; 254
    50d4:	60 81       	ld	r22, Z
    50d6:	71 81       	ldd	r23, Z+1	; 0x01
    50d8:	82 81       	ldd	r24, Z+2	; 0x02
    50da:	93 81       	ldd	r25, Z+3	; 0x03
    50dc:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    50e0:	dc 01       	movw	r26, r24
    50e2:	cb 01       	movw	r24, r22
    50e4:	f8 01       	movw	r30, r16
    50e6:	91 83       	std	Z+1, r25	; 0x01
    50e8:	80 83       	st	Z, r24
    50ea:	de 01       	movw	r26, r28
    50ec:	ae 5d       	subi	r26, 0xDE	; 222
    50ee:	be 4f       	sbci	r27, 0xFE	; 254
    50f0:	fe 01       	movw	r30, r28
    50f2:	ea 5d       	subi	r30, 0xDA	; 218
    50f4:	fe 4f       	sbci	r31, 0xFE	; 254
    50f6:	80 81       	ld	r24, Z
    50f8:	91 81       	ldd	r25, Z+1	; 0x01
    50fa:	11 96       	adiw	r26, 0x01	; 1
    50fc:	9c 93       	st	X, r25
    50fe:	8e 93       	st	-X, r24
    5100:	fe 01       	movw	r30, r28
    5102:	ee 5d       	subi	r30, 0xDE	; 222
    5104:	fe 4f       	sbci	r31, 0xFE	; 254
    5106:	80 81       	ld	r24, Z
    5108:	91 81       	ldd	r25, Z+1	; 0x01
    510a:	01 97       	sbiw	r24, 0x01	; 1
    510c:	f1 f7       	brne	.-4      	; 0x510a <readgamepad+0x11a2>
    510e:	fe 01       	movw	r30, r28
    5110:	ee 5d       	subi	r30, 0xDE	; 222
    5112:	fe 4f       	sbci	r31, 0xFE	; 254
    5114:	91 83       	std	Z+1, r25	; 0x01
    5116:	80 83       	st	Z, r24
    5118:	22 c0       	rjmp	.+68     	; 0x515e <readgamepad+0x11f6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    511a:	8e 01       	movw	r16, r28
    511c:	00 5d       	subi	r16, 0xD0	; 208
    511e:	1e 4f       	sbci	r17, 0xFE	; 254
    5120:	fe 01       	movw	r30, r28
    5122:	ef 5c       	subi	r30, 0xCF	; 207
    5124:	fe 4f       	sbci	r31, 0xFE	; 254
    5126:	60 81       	ld	r22, Z
    5128:	71 81       	ldd	r23, Z+1	; 0x01
    512a:	82 81       	ldd	r24, Z+2	; 0x02
    512c:	93 81       	ldd	r25, Z+3	; 0x03
    512e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5132:	dc 01       	movw	r26, r24
    5134:	cb 01       	movw	r24, r22
    5136:	f8 01       	movw	r30, r16
    5138:	80 83       	st	Z, r24
    513a:	de 01       	movw	r26, r28
    513c:	af 5d       	subi	r26, 0xDF	; 223
    513e:	be 4f       	sbci	r27, 0xFE	; 254
    5140:	fe 01       	movw	r30, r28
    5142:	e0 5d       	subi	r30, 0xD0	; 208
    5144:	fe 4f       	sbci	r31, 0xFE	; 254
    5146:	80 81       	ld	r24, Z
    5148:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    514a:	fe 01       	movw	r30, r28
    514c:	ef 5d       	subi	r30, 0xDF	; 223
    514e:	fe 4f       	sbci	r31, 0xFE	; 254
    5150:	80 81       	ld	r24, Z
    5152:	8a 95       	dec	r24
    5154:	f1 f7       	brne	.-4      	; 0x5152 <readgamepad+0x11ea>
    5156:	fe 01       	movw	r30, r28
    5158:	ef 5d       	subi	r30, 0xDF	; 223
    515a:	fe 4f       	sbci	r31, 0xFE	; 254
    515c:	80 83       	st	Z, r24
	sbi(ps2port,ps2cmd); 
	
	
	
		
	for(i=0;i<8;i++)		//byte3
    515e:	80 91 66 00 	lds	r24, 0x0066
    5162:	90 91 67 00 	lds	r25, 0x0067
    5166:	01 96       	adiw	r24, 0x01	; 1
    5168:	90 93 67 00 	sts	0x0067, r25
    516c:	80 93 66 00 	sts	0x0066, r24
    5170:	80 91 66 00 	lds	r24, 0x0066
    5174:	90 91 67 00 	lds	r25, 0x0067
    5178:	88 30       	cpi	r24, 0x08	; 8
    517a:	91 05       	cpc	r25, r1
    517c:	0c f4       	brge	.+2      	; 0x5180 <readgamepad+0x1218>
    517e:	88 cd       	rjmp	.-1264   	; 0x4c90 <readgamepad+0xd28>
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
		
	}
	sbi(ps2port,ps2cmd); 
    5180:	a5 e3       	ldi	r26, 0x35	; 53
    5182:	b0 e0       	ldi	r27, 0x00	; 0
    5184:	e5 e3       	ldi	r30, 0x35	; 53
    5186:	f0 e0       	ldi	r31, 0x00	; 0
    5188:	80 81       	ld	r24, Z
    518a:	84 60       	ori	r24, 0x04	; 4
    518c:	8c 93       	st	X, r24
	
	
	ps2data4=0;
    518e:	10 92 65 00 	sts	0x0065, r1
	for(i=0;i<8;i++)  // 4 byte
    5192:	10 92 67 00 	sts	0x0067, r1
    5196:	10 92 66 00 	sts	0x0066, r1
    519a:	9e c2       	rjmp	.+1340   	; 0x56d8 <readgamepad+0x1770>
	{
		cbi(ps2port,ps2cmd);
    519c:	a5 e3       	ldi	r26, 0x35	; 53
    519e:	b0 e0       	ldi	r27, 0x00	; 0
    51a0:	e5 e3       	ldi	r30, 0x35	; 53
    51a2:	f0 e0       	ldi	r31, 0x00	; 0
    51a4:	80 81       	ld	r24, Z
    51a6:	8b 7f       	andi	r24, 0xFB	; 251
    51a8:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk);
    51aa:	a5 e3       	ldi	r26, 0x35	; 53
    51ac:	b0 e0       	ldi	r27, 0x00	; 0
    51ae:	e5 e3       	ldi	r30, 0x35	; 53
    51b0:	f0 e0       	ldi	r31, 0x00	; 0
    51b2:	80 81       	ld	r24, Z
    51b4:	8e 7f       	andi	r24, 0xFE	; 254
    51b6:	8c 93       	st	X, r24
    51b8:	fe 01       	movw	r30, r28
    51ba:	e3 5e       	subi	r30, 0xE3	; 227
    51bc:	fe 4f       	sbci	r31, 0xFE	; 254
    51be:	80 e0       	ldi	r24, 0x00	; 0
    51c0:	90 e0       	ldi	r25, 0x00	; 0
    51c2:	a0 e8       	ldi	r26, 0x80	; 128
    51c4:	bf e3       	ldi	r27, 0x3F	; 63
    51c6:	80 83       	st	Z, r24
    51c8:	91 83       	std	Z+1, r25	; 0x01
    51ca:	a2 83       	std	Z+2, r26	; 0x02
    51cc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    51ce:	8e 01       	movw	r16, r28
    51d0:	07 5e       	subi	r16, 0xE7	; 231
    51d2:	1e 4f       	sbci	r17, 0xFE	; 254
    51d4:	fe 01       	movw	r30, r28
    51d6:	e3 5e       	subi	r30, 0xE3	; 227
    51d8:	fe 4f       	sbci	r31, 0xFE	; 254
    51da:	60 81       	ld	r22, Z
    51dc:	71 81       	ldd	r23, Z+1	; 0x01
    51de:	82 81       	ldd	r24, Z+2	; 0x02
    51e0:	93 81       	ldd	r25, Z+3	; 0x03
    51e2:	2b ea       	ldi	r18, 0xAB	; 171
    51e4:	3a ea       	ldi	r19, 0xAA	; 170
    51e6:	4a ea       	ldi	r20, 0xAA	; 170
    51e8:	50 e4       	ldi	r21, 0x40	; 64
    51ea:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    51ee:	dc 01       	movw	r26, r24
    51f0:	cb 01       	movw	r24, r22
    51f2:	f8 01       	movw	r30, r16
    51f4:	80 83       	st	Z, r24
    51f6:	91 83       	std	Z+1, r25	; 0x01
    51f8:	a2 83       	std	Z+2, r26	; 0x02
    51fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    51fc:	fe 01       	movw	r30, r28
    51fe:	e7 5e       	subi	r30, 0xE7	; 231
    5200:	fe 4f       	sbci	r31, 0xFE	; 254
    5202:	60 81       	ld	r22, Z
    5204:	71 81       	ldd	r23, Z+1	; 0x01
    5206:	82 81       	ldd	r24, Z+2	; 0x02
    5208:	93 81       	ldd	r25, Z+3	; 0x03
    520a:	20 e0       	ldi	r18, 0x00	; 0
    520c:	30 e0       	ldi	r19, 0x00	; 0
    520e:	40 e8       	ldi	r20, 0x80	; 128
    5210:	5f e3       	ldi	r21, 0x3F	; 63
    5212:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    5216:	88 23       	and	r24, r24
    5218:	34 f4       	brge	.+12     	; 0x5226 <readgamepad+0x12be>
		__ticks = 1;
    521a:	fe 01       	movw	r30, r28
    521c:	e8 5e       	subi	r30, 0xE8	; 232
    521e:	fe 4f       	sbci	r31, 0xFE	; 254
    5220:	81 e0       	ldi	r24, 0x01	; 1
    5222:	80 83       	st	Z, r24
    5224:	e0 c0       	rjmp	.+448    	; 0x53e6 <readgamepad+0x147e>
	else if (__tmp > 255)
    5226:	fe 01       	movw	r30, r28
    5228:	e7 5e       	subi	r30, 0xE7	; 231
    522a:	fe 4f       	sbci	r31, 0xFE	; 254
    522c:	60 81       	ld	r22, Z
    522e:	71 81       	ldd	r23, Z+1	; 0x01
    5230:	82 81       	ldd	r24, Z+2	; 0x02
    5232:	93 81       	ldd	r25, Z+3	; 0x03
    5234:	20 e0       	ldi	r18, 0x00	; 0
    5236:	30 e0       	ldi	r19, 0x00	; 0
    5238:	4f e7       	ldi	r20, 0x7F	; 127
    523a:	53 e4       	ldi	r21, 0x43	; 67
    523c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    5240:	18 16       	cp	r1, r24
    5242:	0c f0       	brlt	.+2      	; 0x5246 <readgamepad+0x12de>
    5244:	c0 c0       	rjmp	.+384    	; 0x53c6 <readgamepad+0x145e>
	{
		_delay_ms(__us / 1000.0);
    5246:	fe 01       	movw	r30, r28
    5248:	e3 5e       	subi	r30, 0xE3	; 227
    524a:	fe 4f       	sbci	r31, 0xFE	; 254
    524c:	60 81       	ld	r22, Z
    524e:	71 81       	ldd	r23, Z+1	; 0x01
    5250:	82 81       	ldd	r24, Z+2	; 0x02
    5252:	93 81       	ldd	r25, Z+3	; 0x03
    5254:	20 e0       	ldi	r18, 0x00	; 0
    5256:	30 e0       	ldi	r19, 0x00	; 0
    5258:	4a e7       	ldi	r20, 0x7A	; 122
    525a:	54 e4       	ldi	r21, 0x44	; 68
    525c:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    5260:	dc 01       	movw	r26, r24
    5262:	cb 01       	movw	r24, r22
    5264:	fe 01       	movw	r30, r28
    5266:	ec 5e       	subi	r30, 0xEC	; 236
    5268:	fe 4f       	sbci	r31, 0xFE	; 254
    526a:	80 83       	st	Z, r24
    526c:	91 83       	std	Z+1, r25	; 0x01
    526e:	a2 83       	std	Z+2, r26	; 0x02
    5270:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5272:	8e 01       	movw	r16, r28
    5274:	00 5f       	subi	r16, 0xF0	; 240
    5276:	1e 4f       	sbci	r17, 0xFE	; 254
    5278:	fe 01       	movw	r30, r28
    527a:	ec 5e       	subi	r30, 0xEC	; 236
    527c:	fe 4f       	sbci	r31, 0xFE	; 254
    527e:	60 81       	ld	r22, Z
    5280:	71 81       	ldd	r23, Z+1	; 0x01
    5282:	82 81       	ldd	r24, Z+2	; 0x02
    5284:	93 81       	ldd	r25, Z+3	; 0x03
    5286:	20 e0       	ldi	r18, 0x00	; 0
    5288:	30 e0       	ldi	r19, 0x00	; 0
    528a:	4a e7       	ldi	r20, 0x7A	; 122
    528c:	55 e4       	ldi	r21, 0x45	; 69
    528e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5292:	dc 01       	movw	r26, r24
    5294:	cb 01       	movw	r24, r22
    5296:	f8 01       	movw	r30, r16
    5298:	80 83       	st	Z, r24
    529a:	91 83       	std	Z+1, r25	; 0x01
    529c:	a2 83       	std	Z+2, r26	; 0x02
    529e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    52a0:	fe 01       	movw	r30, r28
    52a2:	e0 5f       	subi	r30, 0xF0	; 240
    52a4:	fe 4f       	sbci	r31, 0xFE	; 254
    52a6:	60 81       	ld	r22, Z
    52a8:	71 81       	ldd	r23, Z+1	; 0x01
    52aa:	82 81       	ldd	r24, Z+2	; 0x02
    52ac:	93 81       	ldd	r25, Z+3	; 0x03
    52ae:	20 e0       	ldi	r18, 0x00	; 0
    52b0:	30 e0       	ldi	r19, 0x00	; 0
    52b2:	40 e8       	ldi	r20, 0x80	; 128
    52b4:	5f e3       	ldi	r21, 0x3F	; 63
    52b6:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    52ba:	88 23       	and	r24, r24
    52bc:	44 f4       	brge	.+16     	; 0x52ce <readgamepad+0x1366>
		__ticks = 1;
    52be:	fe 01       	movw	r30, r28
    52c0:	e2 5f       	subi	r30, 0xF2	; 242
    52c2:	fe 4f       	sbci	r31, 0xFE	; 254
    52c4:	81 e0       	ldi	r24, 0x01	; 1
    52c6:	90 e0       	ldi	r25, 0x00	; 0
    52c8:	91 83       	std	Z+1, r25	; 0x01
    52ca:	80 83       	st	Z, r24
    52cc:	64 c0       	rjmp	.+200    	; 0x5396 <readgamepad+0x142e>
	else if (__tmp > 65535)
    52ce:	fe 01       	movw	r30, r28
    52d0:	e0 5f       	subi	r30, 0xF0	; 240
    52d2:	fe 4f       	sbci	r31, 0xFE	; 254
    52d4:	60 81       	ld	r22, Z
    52d6:	71 81       	ldd	r23, Z+1	; 0x01
    52d8:	82 81       	ldd	r24, Z+2	; 0x02
    52da:	93 81       	ldd	r25, Z+3	; 0x03
    52dc:	20 e0       	ldi	r18, 0x00	; 0
    52de:	3f ef       	ldi	r19, 0xFF	; 255
    52e0:	4f e7       	ldi	r20, 0x7F	; 127
    52e2:	57 e4       	ldi	r21, 0x47	; 71
    52e4:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    52e8:	18 16       	cp	r1, r24
    52ea:	0c f0       	brlt	.+2      	; 0x52ee <readgamepad+0x1386>
    52ec:	43 c0       	rjmp	.+134    	; 0x5374 <readgamepad+0x140c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52ee:	fe 01       	movw	r30, r28
    52f0:	ec 5e       	subi	r30, 0xEC	; 236
    52f2:	fe 4f       	sbci	r31, 0xFE	; 254
    52f4:	60 81       	ld	r22, Z
    52f6:	71 81       	ldd	r23, Z+1	; 0x01
    52f8:	82 81       	ldd	r24, Z+2	; 0x02
    52fa:	93 81       	ldd	r25, Z+3	; 0x03
    52fc:	20 e0       	ldi	r18, 0x00	; 0
    52fe:	30 e0       	ldi	r19, 0x00	; 0
    5300:	40 e2       	ldi	r20, 0x20	; 32
    5302:	51 e4       	ldi	r21, 0x41	; 65
    5304:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5308:	dc 01       	movw	r26, r24
    530a:	cb 01       	movw	r24, r22
    530c:	8e 01       	movw	r16, r28
    530e:	02 5f       	subi	r16, 0xF2	; 242
    5310:	1e 4f       	sbci	r17, 0xFE	; 254
    5312:	bc 01       	movw	r22, r24
    5314:	cd 01       	movw	r24, r26
    5316:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    531a:	dc 01       	movw	r26, r24
    531c:	cb 01       	movw	r24, r22
    531e:	f8 01       	movw	r30, r16
    5320:	91 83       	std	Z+1, r25	; 0x01
    5322:	80 83       	st	Z, r24
    5324:	1f c0       	rjmp	.+62     	; 0x5364 <readgamepad+0x13fc>
    5326:	fe 01       	movw	r30, r28
    5328:	e4 5f       	subi	r30, 0xF4	; 244
    532a:	fe 4f       	sbci	r31, 0xFE	; 254
    532c:	80 e9       	ldi	r24, 0x90	; 144
    532e:	91 e0       	ldi	r25, 0x01	; 1
    5330:	91 83       	std	Z+1, r25	; 0x01
    5332:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5334:	fe 01       	movw	r30, r28
    5336:	e4 5f       	subi	r30, 0xF4	; 244
    5338:	fe 4f       	sbci	r31, 0xFE	; 254
    533a:	80 81       	ld	r24, Z
    533c:	91 81       	ldd	r25, Z+1	; 0x01
    533e:	01 97       	sbiw	r24, 0x01	; 1
    5340:	f1 f7       	brne	.-4      	; 0x533e <readgamepad+0x13d6>
    5342:	fe 01       	movw	r30, r28
    5344:	e4 5f       	subi	r30, 0xF4	; 244
    5346:	fe 4f       	sbci	r31, 0xFE	; 254
    5348:	91 83       	std	Z+1, r25	; 0x01
    534a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    534c:	de 01       	movw	r26, r28
    534e:	a2 5f       	subi	r26, 0xF2	; 242
    5350:	be 4f       	sbci	r27, 0xFE	; 254
    5352:	fe 01       	movw	r30, r28
    5354:	e2 5f       	subi	r30, 0xF2	; 242
    5356:	fe 4f       	sbci	r31, 0xFE	; 254
    5358:	80 81       	ld	r24, Z
    535a:	91 81       	ldd	r25, Z+1	; 0x01
    535c:	01 97       	sbiw	r24, 0x01	; 1
    535e:	11 96       	adiw	r26, 0x01	; 1
    5360:	9c 93       	st	X, r25
    5362:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5364:	fe 01       	movw	r30, r28
    5366:	e2 5f       	subi	r30, 0xF2	; 242
    5368:	fe 4f       	sbci	r31, 0xFE	; 254
    536a:	80 81       	ld	r24, Z
    536c:	91 81       	ldd	r25, Z+1	; 0x01
    536e:	00 97       	sbiw	r24, 0x00	; 0
    5370:	d1 f6       	brne	.-76     	; 0x5326 <readgamepad+0x13be>
    5372:	4b c0       	rjmp	.+150    	; 0x540a <readgamepad+0x14a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5374:	8e 01       	movw	r16, r28
    5376:	02 5f       	subi	r16, 0xF2	; 242
    5378:	1e 4f       	sbci	r17, 0xFE	; 254
    537a:	fe 01       	movw	r30, r28
    537c:	e0 5f       	subi	r30, 0xF0	; 240
    537e:	fe 4f       	sbci	r31, 0xFE	; 254
    5380:	60 81       	ld	r22, Z
    5382:	71 81       	ldd	r23, Z+1	; 0x01
    5384:	82 81       	ldd	r24, Z+2	; 0x02
    5386:	93 81       	ldd	r25, Z+3	; 0x03
    5388:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    538c:	dc 01       	movw	r26, r24
    538e:	cb 01       	movw	r24, r22
    5390:	f8 01       	movw	r30, r16
    5392:	91 83       	std	Z+1, r25	; 0x01
    5394:	80 83       	st	Z, r24
    5396:	de 01       	movw	r26, r28
    5398:	a6 5f       	subi	r26, 0xF6	; 246
    539a:	be 4f       	sbci	r27, 0xFE	; 254
    539c:	fe 01       	movw	r30, r28
    539e:	e2 5f       	subi	r30, 0xF2	; 242
    53a0:	fe 4f       	sbci	r31, 0xFE	; 254
    53a2:	80 81       	ld	r24, Z
    53a4:	91 81       	ldd	r25, Z+1	; 0x01
    53a6:	11 96       	adiw	r26, 0x01	; 1
    53a8:	9c 93       	st	X, r25
    53aa:	8e 93       	st	-X, r24
    53ac:	fe 01       	movw	r30, r28
    53ae:	e6 5f       	subi	r30, 0xF6	; 246
    53b0:	fe 4f       	sbci	r31, 0xFE	; 254
    53b2:	80 81       	ld	r24, Z
    53b4:	91 81       	ldd	r25, Z+1	; 0x01
    53b6:	01 97       	sbiw	r24, 0x01	; 1
    53b8:	f1 f7       	brne	.-4      	; 0x53b6 <readgamepad+0x144e>
    53ba:	fe 01       	movw	r30, r28
    53bc:	e6 5f       	subi	r30, 0xF6	; 246
    53be:	fe 4f       	sbci	r31, 0xFE	; 254
    53c0:	91 83       	std	Z+1, r25	; 0x01
    53c2:	80 83       	st	Z, r24
    53c4:	22 c0       	rjmp	.+68     	; 0x540a <readgamepad+0x14a2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    53c6:	8e 01       	movw	r16, r28
    53c8:	08 5e       	subi	r16, 0xE8	; 232
    53ca:	1e 4f       	sbci	r17, 0xFE	; 254
    53cc:	fe 01       	movw	r30, r28
    53ce:	e7 5e       	subi	r30, 0xE7	; 231
    53d0:	fe 4f       	sbci	r31, 0xFE	; 254
    53d2:	60 81       	ld	r22, Z
    53d4:	71 81       	ldd	r23, Z+1	; 0x01
    53d6:	82 81       	ldd	r24, Z+2	; 0x02
    53d8:	93 81       	ldd	r25, Z+3	; 0x03
    53da:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    53de:	dc 01       	movw	r26, r24
    53e0:	cb 01       	movw	r24, r22
    53e2:	f8 01       	movw	r30, r16
    53e4:	80 83       	st	Z, r24
    53e6:	de 01       	movw	r26, r28
    53e8:	a7 5f       	subi	r26, 0xF7	; 247
    53ea:	be 4f       	sbci	r27, 0xFE	; 254
    53ec:	fe 01       	movw	r30, r28
    53ee:	e8 5e       	subi	r30, 0xE8	; 232
    53f0:	fe 4f       	sbci	r31, 0xFE	; 254
    53f2:	80 81       	ld	r24, Z
    53f4:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    53f6:	fe 01       	movw	r30, r28
    53f8:	e7 5f       	subi	r30, 0xF7	; 247
    53fa:	fe 4f       	sbci	r31, 0xFE	; 254
    53fc:	80 81       	ld	r24, Z
    53fe:	8a 95       	dec	r24
    5400:	f1 f7       	brne	.-4      	; 0x53fe <readgamepad+0x1496>
    5402:	fe 01       	movw	r30, r28
    5404:	e7 5f       	subi	r30, 0xF7	; 247
    5406:	fe 4f       	sbci	r31, 0xFE	; 254
    5408:	80 83       	st	Z, r24
		_delay_us(1);
		if((ps2in&(0x02))==0x00)
    540a:	e3 e3       	ldi	r30, 0x33	; 51
    540c:	f0 e0       	ldi	r31, 0x00	; 0
    540e:	80 81       	ld	r24, Z
    5410:	88 2f       	mov	r24, r24
    5412:	90 e0       	ldi	r25, 0x00	; 0
    5414:	82 70       	andi	r24, 0x02	; 2
    5416:	90 70       	andi	r25, 0x00	; 0
    5418:	00 97       	sbiw	r24, 0x00	; 0
    541a:	a1 f4       	brne	.+40     	; 0x5444 <readgamepad+0x14dc>
			cbi(ps2data4,i); 
    541c:	20 91 66 00 	lds	r18, 0x0066
    5420:	30 91 67 00 	lds	r19, 0x0067
    5424:	81 e0       	ldi	r24, 0x01	; 1
    5426:	90 e0       	ldi	r25, 0x00	; 0
    5428:	02 2e       	mov	r0, r18
    542a:	02 c0       	rjmp	.+4      	; 0x5430 <readgamepad+0x14c8>
    542c:	88 0f       	add	r24, r24
    542e:	99 1f       	adc	r25, r25
    5430:	0a 94       	dec	r0
    5432:	e2 f7       	brpl	.-8      	; 0x542c <readgamepad+0x14c4>
    5434:	98 2f       	mov	r25, r24
    5436:	90 95       	com	r25
    5438:	80 91 65 00 	lds	r24, 0x0065
    543c:	89 23       	and	r24, r25
    543e:	80 93 65 00 	sts	0x0065, r24
    5442:	11 c0       	rjmp	.+34     	; 0x5466 <readgamepad+0x14fe>
		else
			sbi(ps2data4,i); 
    5444:	20 91 66 00 	lds	r18, 0x0066
    5448:	30 91 67 00 	lds	r19, 0x0067
    544c:	81 e0       	ldi	r24, 0x01	; 1
    544e:	90 e0       	ldi	r25, 0x00	; 0
    5450:	02 c0       	rjmp	.+4      	; 0x5456 <readgamepad+0x14ee>
    5452:	88 0f       	add	r24, r24
    5454:	99 1f       	adc	r25, r25
    5456:	2a 95       	dec	r18
    5458:	e2 f7       	brpl	.-8      	; 0x5452 <readgamepad+0x14ea>
    545a:	98 2f       	mov	r25, r24
    545c:	80 91 65 00 	lds	r24, 0x0065
    5460:	89 2b       	or	r24, r25
    5462:	80 93 65 00 	sts	0x0065, r24
		sbi(ps2port,ps2clk);
    5466:	a5 e3       	ldi	r26, 0x35	; 53
    5468:	b0 e0       	ldi	r27, 0x00	; 0
    546a:	e5 e3       	ldi	r30, 0x35	; 53
    546c:	f0 e0       	ldi	r31, 0x00	; 0
    546e:	80 81       	ld	r24, Z
    5470:	81 60       	ori	r24, 0x01	; 1
    5472:	8c 93       	st	X, r24
    5474:	fe 01       	movw	r30, r28
    5476:	eb 5f       	subi	r30, 0xFB	; 251
    5478:	fe 4f       	sbci	r31, 0xFE	; 254
    547a:	80 e0       	ldi	r24, 0x00	; 0
    547c:	90 e0       	ldi	r25, 0x00	; 0
    547e:	a0 e8       	ldi	r26, 0x80	; 128
    5480:	bf e3       	ldi	r27, 0x3F	; 63
    5482:	80 83       	st	Z, r24
    5484:	91 83       	std	Z+1, r25	; 0x01
    5486:	a2 83       	std	Z+2, r26	; 0x02
    5488:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    548a:	8e 01       	movw	r16, r28
    548c:	0f 5f       	subi	r16, 0xFF	; 255
    548e:	1e 4f       	sbci	r17, 0xFE	; 254
    5490:	fe 01       	movw	r30, r28
    5492:	eb 5f       	subi	r30, 0xFB	; 251
    5494:	fe 4f       	sbci	r31, 0xFE	; 254
    5496:	60 81       	ld	r22, Z
    5498:	71 81       	ldd	r23, Z+1	; 0x01
    549a:	82 81       	ldd	r24, Z+2	; 0x02
    549c:	93 81       	ldd	r25, Z+3	; 0x03
    549e:	2b ea       	ldi	r18, 0xAB	; 171
    54a0:	3a ea       	ldi	r19, 0xAA	; 170
    54a2:	4a ea       	ldi	r20, 0xAA	; 170
    54a4:	50 e4       	ldi	r21, 0x40	; 64
    54a6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    54aa:	dc 01       	movw	r26, r24
    54ac:	cb 01       	movw	r24, r22
    54ae:	f8 01       	movw	r30, r16
    54b0:	80 83       	st	Z, r24
    54b2:	91 83       	std	Z+1, r25	; 0x01
    54b4:	a2 83       	std	Z+2, r26	; 0x02
    54b6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    54b8:	fe 01       	movw	r30, r28
    54ba:	ef 5f       	subi	r30, 0xFF	; 255
    54bc:	fe 4f       	sbci	r31, 0xFE	; 254
    54be:	60 81       	ld	r22, Z
    54c0:	71 81       	ldd	r23, Z+1	; 0x01
    54c2:	82 81       	ldd	r24, Z+2	; 0x02
    54c4:	93 81       	ldd	r25, Z+3	; 0x03
    54c6:	20 e0       	ldi	r18, 0x00	; 0
    54c8:	30 e0       	ldi	r19, 0x00	; 0
    54ca:	40 e8       	ldi	r20, 0x80	; 128
    54cc:	5f e3       	ldi	r21, 0x3F	; 63
    54ce:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    54d2:	88 23       	and	r24, r24
    54d4:	34 f4       	brge	.+12     	; 0x54e2 <readgamepad+0x157a>
		__ticks = 1;
    54d6:	fe 01       	movw	r30, r28
    54d8:	e0 50       	subi	r30, 0x00	; 0
    54da:	ff 4f       	sbci	r31, 0xFF	; 255
    54dc:	81 e0       	ldi	r24, 0x01	; 1
    54de:	80 83       	st	Z, r24
    54e0:	e0 c0       	rjmp	.+448    	; 0x56a2 <readgamepad+0x173a>
	else if (__tmp > 255)
    54e2:	fe 01       	movw	r30, r28
    54e4:	ef 5f       	subi	r30, 0xFF	; 255
    54e6:	fe 4f       	sbci	r31, 0xFE	; 254
    54e8:	60 81       	ld	r22, Z
    54ea:	71 81       	ldd	r23, Z+1	; 0x01
    54ec:	82 81       	ldd	r24, Z+2	; 0x02
    54ee:	93 81       	ldd	r25, Z+3	; 0x03
    54f0:	20 e0       	ldi	r18, 0x00	; 0
    54f2:	30 e0       	ldi	r19, 0x00	; 0
    54f4:	4f e7       	ldi	r20, 0x7F	; 127
    54f6:	53 e4       	ldi	r21, 0x43	; 67
    54f8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    54fc:	18 16       	cp	r1, r24
    54fe:	0c f0       	brlt	.+2      	; 0x5502 <readgamepad+0x159a>
    5500:	c0 c0       	rjmp	.+384    	; 0x5682 <readgamepad+0x171a>
	{
		_delay_ms(__us / 1000.0);
    5502:	fe 01       	movw	r30, r28
    5504:	eb 5f       	subi	r30, 0xFB	; 251
    5506:	fe 4f       	sbci	r31, 0xFE	; 254
    5508:	60 81       	ld	r22, Z
    550a:	71 81       	ldd	r23, Z+1	; 0x01
    550c:	82 81       	ldd	r24, Z+2	; 0x02
    550e:	93 81       	ldd	r25, Z+3	; 0x03
    5510:	20 e0       	ldi	r18, 0x00	; 0
    5512:	30 e0       	ldi	r19, 0x00	; 0
    5514:	4a e7       	ldi	r20, 0x7A	; 122
    5516:	54 e4       	ldi	r21, 0x44	; 68
    5518:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    551c:	dc 01       	movw	r26, r24
    551e:	cb 01       	movw	r24, r22
    5520:	fe 01       	movw	r30, r28
    5522:	e4 50       	subi	r30, 0x04	; 4
    5524:	ff 4f       	sbci	r31, 0xFF	; 255
    5526:	80 83       	st	Z, r24
    5528:	91 83       	std	Z+1, r25	; 0x01
    552a:	a2 83       	std	Z+2, r26	; 0x02
    552c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    552e:	8e 01       	movw	r16, r28
    5530:	08 50       	subi	r16, 0x08	; 8
    5532:	1f 4f       	sbci	r17, 0xFF	; 255
    5534:	fe 01       	movw	r30, r28
    5536:	e4 50       	subi	r30, 0x04	; 4
    5538:	ff 4f       	sbci	r31, 0xFF	; 255
    553a:	60 81       	ld	r22, Z
    553c:	71 81       	ldd	r23, Z+1	; 0x01
    553e:	82 81       	ldd	r24, Z+2	; 0x02
    5540:	93 81       	ldd	r25, Z+3	; 0x03
    5542:	20 e0       	ldi	r18, 0x00	; 0
    5544:	30 e0       	ldi	r19, 0x00	; 0
    5546:	4a e7       	ldi	r20, 0x7A	; 122
    5548:	55 e4       	ldi	r21, 0x45	; 69
    554a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    554e:	dc 01       	movw	r26, r24
    5550:	cb 01       	movw	r24, r22
    5552:	f8 01       	movw	r30, r16
    5554:	80 83       	st	Z, r24
    5556:	91 83       	std	Z+1, r25	; 0x01
    5558:	a2 83       	std	Z+2, r26	; 0x02
    555a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    555c:	fe 01       	movw	r30, r28
    555e:	e8 50       	subi	r30, 0x08	; 8
    5560:	ff 4f       	sbci	r31, 0xFF	; 255
    5562:	60 81       	ld	r22, Z
    5564:	71 81       	ldd	r23, Z+1	; 0x01
    5566:	82 81       	ldd	r24, Z+2	; 0x02
    5568:	93 81       	ldd	r25, Z+3	; 0x03
    556a:	20 e0       	ldi	r18, 0x00	; 0
    556c:	30 e0       	ldi	r19, 0x00	; 0
    556e:	40 e8       	ldi	r20, 0x80	; 128
    5570:	5f e3       	ldi	r21, 0x3F	; 63
    5572:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    5576:	88 23       	and	r24, r24
    5578:	44 f4       	brge	.+16     	; 0x558a <readgamepad+0x1622>
		__ticks = 1;
    557a:	fe 01       	movw	r30, r28
    557c:	ea 50       	subi	r30, 0x0A	; 10
    557e:	ff 4f       	sbci	r31, 0xFF	; 255
    5580:	81 e0       	ldi	r24, 0x01	; 1
    5582:	90 e0       	ldi	r25, 0x00	; 0
    5584:	91 83       	std	Z+1, r25	; 0x01
    5586:	80 83       	st	Z, r24
    5588:	64 c0       	rjmp	.+200    	; 0x5652 <readgamepad+0x16ea>
	else if (__tmp > 65535)
    558a:	fe 01       	movw	r30, r28
    558c:	e8 50       	subi	r30, 0x08	; 8
    558e:	ff 4f       	sbci	r31, 0xFF	; 255
    5590:	60 81       	ld	r22, Z
    5592:	71 81       	ldd	r23, Z+1	; 0x01
    5594:	82 81       	ldd	r24, Z+2	; 0x02
    5596:	93 81       	ldd	r25, Z+3	; 0x03
    5598:	20 e0       	ldi	r18, 0x00	; 0
    559a:	3f ef       	ldi	r19, 0xFF	; 255
    559c:	4f e7       	ldi	r20, 0x7F	; 127
    559e:	57 e4       	ldi	r21, 0x47	; 71
    55a0:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    55a4:	18 16       	cp	r1, r24
    55a6:	0c f0       	brlt	.+2      	; 0x55aa <readgamepad+0x1642>
    55a8:	43 c0       	rjmp	.+134    	; 0x5630 <readgamepad+0x16c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    55aa:	fe 01       	movw	r30, r28
    55ac:	e4 50       	subi	r30, 0x04	; 4
    55ae:	ff 4f       	sbci	r31, 0xFF	; 255
    55b0:	60 81       	ld	r22, Z
    55b2:	71 81       	ldd	r23, Z+1	; 0x01
    55b4:	82 81       	ldd	r24, Z+2	; 0x02
    55b6:	93 81       	ldd	r25, Z+3	; 0x03
    55b8:	20 e0       	ldi	r18, 0x00	; 0
    55ba:	30 e0       	ldi	r19, 0x00	; 0
    55bc:	40 e2       	ldi	r20, 0x20	; 32
    55be:	51 e4       	ldi	r21, 0x41	; 65
    55c0:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    55c4:	dc 01       	movw	r26, r24
    55c6:	cb 01       	movw	r24, r22
    55c8:	8e 01       	movw	r16, r28
    55ca:	0a 50       	subi	r16, 0x0A	; 10
    55cc:	1f 4f       	sbci	r17, 0xFF	; 255
    55ce:	bc 01       	movw	r22, r24
    55d0:	cd 01       	movw	r24, r26
    55d2:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    55d6:	dc 01       	movw	r26, r24
    55d8:	cb 01       	movw	r24, r22
    55da:	f8 01       	movw	r30, r16
    55dc:	91 83       	std	Z+1, r25	; 0x01
    55de:	80 83       	st	Z, r24
    55e0:	1f c0       	rjmp	.+62     	; 0x5620 <readgamepad+0x16b8>
    55e2:	fe 01       	movw	r30, r28
    55e4:	ec 50       	subi	r30, 0x0C	; 12
    55e6:	ff 4f       	sbci	r31, 0xFF	; 255
    55e8:	80 e9       	ldi	r24, 0x90	; 144
    55ea:	91 e0       	ldi	r25, 0x01	; 1
    55ec:	91 83       	std	Z+1, r25	; 0x01
    55ee:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    55f0:	fe 01       	movw	r30, r28
    55f2:	ec 50       	subi	r30, 0x0C	; 12
    55f4:	ff 4f       	sbci	r31, 0xFF	; 255
    55f6:	80 81       	ld	r24, Z
    55f8:	91 81       	ldd	r25, Z+1	; 0x01
    55fa:	01 97       	sbiw	r24, 0x01	; 1
    55fc:	f1 f7       	brne	.-4      	; 0x55fa <readgamepad+0x1692>
    55fe:	fe 01       	movw	r30, r28
    5600:	ec 50       	subi	r30, 0x0C	; 12
    5602:	ff 4f       	sbci	r31, 0xFF	; 255
    5604:	91 83       	std	Z+1, r25	; 0x01
    5606:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5608:	de 01       	movw	r26, r28
    560a:	aa 50       	subi	r26, 0x0A	; 10
    560c:	bf 4f       	sbci	r27, 0xFF	; 255
    560e:	fe 01       	movw	r30, r28
    5610:	ea 50       	subi	r30, 0x0A	; 10
    5612:	ff 4f       	sbci	r31, 0xFF	; 255
    5614:	80 81       	ld	r24, Z
    5616:	91 81       	ldd	r25, Z+1	; 0x01
    5618:	01 97       	sbiw	r24, 0x01	; 1
    561a:	11 96       	adiw	r26, 0x01	; 1
    561c:	9c 93       	st	X, r25
    561e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5620:	fe 01       	movw	r30, r28
    5622:	ea 50       	subi	r30, 0x0A	; 10
    5624:	ff 4f       	sbci	r31, 0xFF	; 255
    5626:	80 81       	ld	r24, Z
    5628:	91 81       	ldd	r25, Z+1	; 0x01
    562a:	00 97       	sbiw	r24, 0x00	; 0
    562c:	d1 f6       	brne	.-76     	; 0x55e2 <readgamepad+0x167a>
    562e:	4b c0       	rjmp	.+150    	; 0x56c6 <readgamepad+0x175e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5630:	8e 01       	movw	r16, r28
    5632:	0a 50       	subi	r16, 0x0A	; 10
    5634:	1f 4f       	sbci	r17, 0xFF	; 255
    5636:	fe 01       	movw	r30, r28
    5638:	e8 50       	subi	r30, 0x08	; 8
    563a:	ff 4f       	sbci	r31, 0xFF	; 255
    563c:	60 81       	ld	r22, Z
    563e:	71 81       	ldd	r23, Z+1	; 0x01
    5640:	82 81       	ldd	r24, Z+2	; 0x02
    5642:	93 81       	ldd	r25, Z+3	; 0x03
    5644:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5648:	dc 01       	movw	r26, r24
    564a:	cb 01       	movw	r24, r22
    564c:	f8 01       	movw	r30, r16
    564e:	91 83       	std	Z+1, r25	; 0x01
    5650:	80 83       	st	Z, r24
    5652:	de 01       	movw	r26, r28
    5654:	ae 50       	subi	r26, 0x0E	; 14
    5656:	bf 4f       	sbci	r27, 0xFF	; 255
    5658:	fe 01       	movw	r30, r28
    565a:	ea 50       	subi	r30, 0x0A	; 10
    565c:	ff 4f       	sbci	r31, 0xFF	; 255
    565e:	80 81       	ld	r24, Z
    5660:	91 81       	ldd	r25, Z+1	; 0x01
    5662:	11 96       	adiw	r26, 0x01	; 1
    5664:	9c 93       	st	X, r25
    5666:	8e 93       	st	-X, r24
    5668:	fe 01       	movw	r30, r28
    566a:	ee 50       	subi	r30, 0x0E	; 14
    566c:	ff 4f       	sbci	r31, 0xFF	; 255
    566e:	80 81       	ld	r24, Z
    5670:	91 81       	ldd	r25, Z+1	; 0x01
    5672:	01 97       	sbiw	r24, 0x01	; 1
    5674:	f1 f7       	brne	.-4      	; 0x5672 <readgamepad+0x170a>
    5676:	fe 01       	movw	r30, r28
    5678:	ee 50       	subi	r30, 0x0E	; 14
    567a:	ff 4f       	sbci	r31, 0xFF	; 255
    567c:	91 83       	std	Z+1, r25	; 0x01
    567e:	80 83       	st	Z, r24
    5680:	22 c0       	rjmp	.+68     	; 0x56c6 <readgamepad+0x175e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    5682:	8e 01       	movw	r16, r28
    5684:	00 50       	subi	r16, 0x00	; 0
    5686:	1f 4f       	sbci	r17, 0xFF	; 255
    5688:	fe 01       	movw	r30, r28
    568a:	ef 5f       	subi	r30, 0xFF	; 255
    568c:	fe 4f       	sbci	r31, 0xFE	; 254
    568e:	60 81       	ld	r22, Z
    5690:	71 81       	ldd	r23, Z+1	; 0x01
    5692:	82 81       	ldd	r24, Z+2	; 0x02
    5694:	93 81       	ldd	r25, Z+3	; 0x03
    5696:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    569a:	dc 01       	movw	r26, r24
    569c:	cb 01       	movw	r24, r22
    569e:	f8 01       	movw	r30, r16
    56a0:	80 83       	st	Z, r24
    56a2:	de 01       	movw	r26, r28
    56a4:	af 50       	subi	r26, 0x0F	; 15
    56a6:	bf 4f       	sbci	r27, 0xFF	; 255
    56a8:	fe 01       	movw	r30, r28
    56aa:	e0 50       	subi	r30, 0x00	; 0
    56ac:	ff 4f       	sbci	r31, 0xFF	; 255
    56ae:	80 81       	ld	r24, Z
    56b0:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    56b2:	fe 01       	movw	r30, r28
    56b4:	ef 50       	subi	r30, 0x0F	; 15
    56b6:	ff 4f       	sbci	r31, 0xFF	; 255
    56b8:	80 81       	ld	r24, Z
    56ba:	8a 95       	dec	r24
    56bc:	f1 f7       	brne	.-4      	; 0x56ba <readgamepad+0x1752>
    56be:	fe 01       	movw	r30, r28
    56c0:	ef 50       	subi	r30, 0x0F	; 15
    56c2:	ff 4f       	sbci	r31, 0xFF	; 255
    56c4:	80 83       	st	Z, r24
	}
	sbi(ps2port,ps2cmd); 
	
	
	ps2data4=0;
	for(i=0;i<8;i++)  // 4 byte
    56c6:	80 91 66 00 	lds	r24, 0x0066
    56ca:	90 91 67 00 	lds	r25, 0x0067
    56ce:	01 96       	adiw	r24, 0x01	; 1
    56d0:	90 93 67 00 	sts	0x0067, r25
    56d4:	80 93 66 00 	sts	0x0066, r24
    56d8:	80 91 66 00 	lds	r24, 0x0066
    56dc:	90 91 67 00 	lds	r25, 0x0067
    56e0:	88 30       	cpi	r24, 0x08	; 8
    56e2:	91 05       	cpc	r25, r1
    56e4:	0c f4       	brge	.+2      	; 0x56e8 <readgamepad+0x1780>
    56e6:	5a cd       	rjmp	.-1356   	; 0x519c <readgamepad+0x1234>
		else
			sbi(ps2data4,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    56e8:	a5 e3       	ldi	r26, 0x35	; 53
    56ea:	b0 e0       	ldi	r27, 0x00	; 0
    56ec:	e5 e3       	ldi	r30, 0x35	; 53
    56ee:	f0 e0       	ldi	r31, 0x00	; 0
    56f0:	80 81       	ld	r24, Z
    56f2:	84 60       	ori	r24, 0x04	; 4
    56f4:	8c 93       	st	X, r24
	
	
	
   
	ps2data5=0;
    56f6:	10 92 6a 00 	sts	0x006A, r1
	for(i=0;i<8;i++) // 5 byte digital
    56fa:	10 92 67 00 	sts	0x0067, r1
    56fe:	10 92 66 00 	sts	0x0066, r1
    5702:	9e c2       	rjmp	.+1340   	; 0x5c40 <readgamepad+0x1cd8>
	{
		cbi(ps2port,ps2cmd);
    5704:	a5 e3       	ldi	r26, 0x35	; 53
    5706:	b0 e0       	ldi	r27, 0x00	; 0
    5708:	e5 e3       	ldi	r30, 0x35	; 53
    570a:	f0 e0       	ldi	r31, 0x00	; 0
    570c:	80 81       	ld	r24, Z
    570e:	8b 7f       	andi	r24, 0xFB	; 251
    5710:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    5712:	a5 e3       	ldi	r26, 0x35	; 53
    5714:	b0 e0       	ldi	r27, 0x00	; 0
    5716:	e5 e3       	ldi	r30, 0x35	; 53
    5718:	f0 e0       	ldi	r31, 0x00	; 0
    571a:	80 81       	ld	r24, Z
    571c:	8e 7f       	andi	r24, 0xFE	; 254
    571e:	8c 93       	st	X, r24
    5720:	fe 01       	movw	r30, r28
    5722:	e3 51       	subi	r30, 0x13	; 19
    5724:	ff 4f       	sbci	r31, 0xFF	; 255
    5726:	80 e0       	ldi	r24, 0x00	; 0
    5728:	90 e0       	ldi	r25, 0x00	; 0
    572a:	a0 e8       	ldi	r26, 0x80	; 128
    572c:	bf e3       	ldi	r27, 0x3F	; 63
    572e:	80 83       	st	Z, r24
    5730:	91 83       	std	Z+1, r25	; 0x01
    5732:	a2 83       	std	Z+2, r26	; 0x02
    5734:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    5736:	8e 01       	movw	r16, r28
    5738:	07 51       	subi	r16, 0x17	; 23
    573a:	1f 4f       	sbci	r17, 0xFF	; 255
    573c:	fe 01       	movw	r30, r28
    573e:	e3 51       	subi	r30, 0x13	; 19
    5740:	ff 4f       	sbci	r31, 0xFF	; 255
    5742:	60 81       	ld	r22, Z
    5744:	71 81       	ldd	r23, Z+1	; 0x01
    5746:	82 81       	ldd	r24, Z+2	; 0x02
    5748:	93 81       	ldd	r25, Z+3	; 0x03
    574a:	2b ea       	ldi	r18, 0xAB	; 171
    574c:	3a ea       	ldi	r19, 0xAA	; 170
    574e:	4a ea       	ldi	r20, 0xAA	; 170
    5750:	50 e4       	ldi	r21, 0x40	; 64
    5752:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5756:	dc 01       	movw	r26, r24
    5758:	cb 01       	movw	r24, r22
    575a:	f8 01       	movw	r30, r16
    575c:	80 83       	st	Z, r24
    575e:	91 83       	std	Z+1, r25	; 0x01
    5760:	a2 83       	std	Z+2, r26	; 0x02
    5762:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5764:	fe 01       	movw	r30, r28
    5766:	e7 51       	subi	r30, 0x17	; 23
    5768:	ff 4f       	sbci	r31, 0xFF	; 255
    576a:	60 81       	ld	r22, Z
    576c:	71 81       	ldd	r23, Z+1	; 0x01
    576e:	82 81       	ldd	r24, Z+2	; 0x02
    5770:	93 81       	ldd	r25, Z+3	; 0x03
    5772:	20 e0       	ldi	r18, 0x00	; 0
    5774:	30 e0       	ldi	r19, 0x00	; 0
    5776:	40 e8       	ldi	r20, 0x80	; 128
    5778:	5f e3       	ldi	r21, 0x3F	; 63
    577a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    577e:	88 23       	and	r24, r24
    5780:	34 f4       	brge	.+12     	; 0x578e <readgamepad+0x1826>
		__ticks = 1;
    5782:	fe 01       	movw	r30, r28
    5784:	e8 51       	subi	r30, 0x18	; 24
    5786:	ff 4f       	sbci	r31, 0xFF	; 255
    5788:	81 e0       	ldi	r24, 0x01	; 1
    578a:	80 83       	st	Z, r24
    578c:	e0 c0       	rjmp	.+448    	; 0x594e <readgamepad+0x19e6>
	else if (__tmp > 255)
    578e:	fe 01       	movw	r30, r28
    5790:	e7 51       	subi	r30, 0x17	; 23
    5792:	ff 4f       	sbci	r31, 0xFF	; 255
    5794:	60 81       	ld	r22, Z
    5796:	71 81       	ldd	r23, Z+1	; 0x01
    5798:	82 81       	ldd	r24, Z+2	; 0x02
    579a:	93 81       	ldd	r25, Z+3	; 0x03
    579c:	20 e0       	ldi	r18, 0x00	; 0
    579e:	30 e0       	ldi	r19, 0x00	; 0
    57a0:	4f e7       	ldi	r20, 0x7F	; 127
    57a2:	53 e4       	ldi	r21, 0x43	; 67
    57a4:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    57a8:	18 16       	cp	r1, r24
    57aa:	0c f0       	brlt	.+2      	; 0x57ae <readgamepad+0x1846>
    57ac:	c0 c0       	rjmp	.+384    	; 0x592e <readgamepad+0x19c6>
	{
		_delay_ms(__us / 1000.0);
    57ae:	fe 01       	movw	r30, r28
    57b0:	e3 51       	subi	r30, 0x13	; 19
    57b2:	ff 4f       	sbci	r31, 0xFF	; 255
    57b4:	60 81       	ld	r22, Z
    57b6:	71 81       	ldd	r23, Z+1	; 0x01
    57b8:	82 81       	ldd	r24, Z+2	; 0x02
    57ba:	93 81       	ldd	r25, Z+3	; 0x03
    57bc:	20 e0       	ldi	r18, 0x00	; 0
    57be:	30 e0       	ldi	r19, 0x00	; 0
    57c0:	4a e7       	ldi	r20, 0x7A	; 122
    57c2:	54 e4       	ldi	r21, 0x44	; 68
    57c4:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    57c8:	dc 01       	movw	r26, r24
    57ca:	cb 01       	movw	r24, r22
    57cc:	fe 01       	movw	r30, r28
    57ce:	ec 51       	subi	r30, 0x1C	; 28
    57d0:	ff 4f       	sbci	r31, 0xFF	; 255
    57d2:	80 83       	st	Z, r24
    57d4:	91 83       	std	Z+1, r25	; 0x01
    57d6:	a2 83       	std	Z+2, r26	; 0x02
    57d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    57da:	8e 01       	movw	r16, r28
    57dc:	00 52       	subi	r16, 0x20	; 32
    57de:	1f 4f       	sbci	r17, 0xFF	; 255
    57e0:	fe 01       	movw	r30, r28
    57e2:	ec 51       	subi	r30, 0x1C	; 28
    57e4:	ff 4f       	sbci	r31, 0xFF	; 255
    57e6:	60 81       	ld	r22, Z
    57e8:	71 81       	ldd	r23, Z+1	; 0x01
    57ea:	82 81       	ldd	r24, Z+2	; 0x02
    57ec:	93 81       	ldd	r25, Z+3	; 0x03
    57ee:	20 e0       	ldi	r18, 0x00	; 0
    57f0:	30 e0       	ldi	r19, 0x00	; 0
    57f2:	4a e7       	ldi	r20, 0x7A	; 122
    57f4:	55 e4       	ldi	r21, 0x45	; 69
    57f6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    57fa:	dc 01       	movw	r26, r24
    57fc:	cb 01       	movw	r24, r22
    57fe:	f8 01       	movw	r30, r16
    5800:	80 83       	st	Z, r24
    5802:	91 83       	std	Z+1, r25	; 0x01
    5804:	a2 83       	std	Z+2, r26	; 0x02
    5806:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5808:	fe 01       	movw	r30, r28
    580a:	e0 52       	subi	r30, 0x20	; 32
    580c:	ff 4f       	sbci	r31, 0xFF	; 255
    580e:	60 81       	ld	r22, Z
    5810:	71 81       	ldd	r23, Z+1	; 0x01
    5812:	82 81       	ldd	r24, Z+2	; 0x02
    5814:	93 81       	ldd	r25, Z+3	; 0x03
    5816:	20 e0       	ldi	r18, 0x00	; 0
    5818:	30 e0       	ldi	r19, 0x00	; 0
    581a:	40 e8       	ldi	r20, 0x80	; 128
    581c:	5f e3       	ldi	r21, 0x3F	; 63
    581e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    5822:	88 23       	and	r24, r24
    5824:	44 f4       	brge	.+16     	; 0x5836 <readgamepad+0x18ce>
		__ticks = 1;
    5826:	fe 01       	movw	r30, r28
    5828:	e2 52       	subi	r30, 0x22	; 34
    582a:	ff 4f       	sbci	r31, 0xFF	; 255
    582c:	81 e0       	ldi	r24, 0x01	; 1
    582e:	90 e0       	ldi	r25, 0x00	; 0
    5830:	91 83       	std	Z+1, r25	; 0x01
    5832:	80 83       	st	Z, r24
    5834:	64 c0       	rjmp	.+200    	; 0x58fe <readgamepad+0x1996>
	else if (__tmp > 65535)
    5836:	fe 01       	movw	r30, r28
    5838:	e0 52       	subi	r30, 0x20	; 32
    583a:	ff 4f       	sbci	r31, 0xFF	; 255
    583c:	60 81       	ld	r22, Z
    583e:	71 81       	ldd	r23, Z+1	; 0x01
    5840:	82 81       	ldd	r24, Z+2	; 0x02
    5842:	93 81       	ldd	r25, Z+3	; 0x03
    5844:	20 e0       	ldi	r18, 0x00	; 0
    5846:	3f ef       	ldi	r19, 0xFF	; 255
    5848:	4f e7       	ldi	r20, 0x7F	; 127
    584a:	57 e4       	ldi	r21, 0x47	; 71
    584c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    5850:	18 16       	cp	r1, r24
    5852:	0c f0       	brlt	.+2      	; 0x5856 <readgamepad+0x18ee>
    5854:	43 c0       	rjmp	.+134    	; 0x58dc <readgamepad+0x1974>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5856:	fe 01       	movw	r30, r28
    5858:	ec 51       	subi	r30, 0x1C	; 28
    585a:	ff 4f       	sbci	r31, 0xFF	; 255
    585c:	60 81       	ld	r22, Z
    585e:	71 81       	ldd	r23, Z+1	; 0x01
    5860:	82 81       	ldd	r24, Z+2	; 0x02
    5862:	93 81       	ldd	r25, Z+3	; 0x03
    5864:	20 e0       	ldi	r18, 0x00	; 0
    5866:	30 e0       	ldi	r19, 0x00	; 0
    5868:	40 e2       	ldi	r20, 0x20	; 32
    586a:	51 e4       	ldi	r21, 0x41	; 65
    586c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5870:	dc 01       	movw	r26, r24
    5872:	cb 01       	movw	r24, r22
    5874:	8e 01       	movw	r16, r28
    5876:	02 52       	subi	r16, 0x22	; 34
    5878:	1f 4f       	sbci	r17, 0xFF	; 255
    587a:	bc 01       	movw	r22, r24
    587c:	cd 01       	movw	r24, r26
    587e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5882:	dc 01       	movw	r26, r24
    5884:	cb 01       	movw	r24, r22
    5886:	f8 01       	movw	r30, r16
    5888:	91 83       	std	Z+1, r25	; 0x01
    588a:	80 83       	st	Z, r24
    588c:	1f c0       	rjmp	.+62     	; 0x58cc <readgamepad+0x1964>
    588e:	fe 01       	movw	r30, r28
    5890:	e4 52       	subi	r30, 0x24	; 36
    5892:	ff 4f       	sbci	r31, 0xFF	; 255
    5894:	80 e9       	ldi	r24, 0x90	; 144
    5896:	91 e0       	ldi	r25, 0x01	; 1
    5898:	91 83       	std	Z+1, r25	; 0x01
    589a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    589c:	fe 01       	movw	r30, r28
    589e:	e4 52       	subi	r30, 0x24	; 36
    58a0:	ff 4f       	sbci	r31, 0xFF	; 255
    58a2:	80 81       	ld	r24, Z
    58a4:	91 81       	ldd	r25, Z+1	; 0x01
    58a6:	01 97       	sbiw	r24, 0x01	; 1
    58a8:	f1 f7       	brne	.-4      	; 0x58a6 <readgamepad+0x193e>
    58aa:	fe 01       	movw	r30, r28
    58ac:	e4 52       	subi	r30, 0x24	; 36
    58ae:	ff 4f       	sbci	r31, 0xFF	; 255
    58b0:	91 83       	std	Z+1, r25	; 0x01
    58b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    58b4:	de 01       	movw	r26, r28
    58b6:	a2 52       	subi	r26, 0x22	; 34
    58b8:	bf 4f       	sbci	r27, 0xFF	; 255
    58ba:	fe 01       	movw	r30, r28
    58bc:	e2 52       	subi	r30, 0x22	; 34
    58be:	ff 4f       	sbci	r31, 0xFF	; 255
    58c0:	80 81       	ld	r24, Z
    58c2:	91 81       	ldd	r25, Z+1	; 0x01
    58c4:	01 97       	sbiw	r24, 0x01	; 1
    58c6:	11 96       	adiw	r26, 0x01	; 1
    58c8:	9c 93       	st	X, r25
    58ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    58cc:	fe 01       	movw	r30, r28
    58ce:	e2 52       	subi	r30, 0x22	; 34
    58d0:	ff 4f       	sbci	r31, 0xFF	; 255
    58d2:	80 81       	ld	r24, Z
    58d4:	91 81       	ldd	r25, Z+1	; 0x01
    58d6:	00 97       	sbiw	r24, 0x00	; 0
    58d8:	d1 f6       	brne	.-76     	; 0x588e <readgamepad+0x1926>
    58da:	4b c0       	rjmp	.+150    	; 0x5972 <readgamepad+0x1a0a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    58dc:	8e 01       	movw	r16, r28
    58de:	02 52       	subi	r16, 0x22	; 34
    58e0:	1f 4f       	sbci	r17, 0xFF	; 255
    58e2:	fe 01       	movw	r30, r28
    58e4:	e0 52       	subi	r30, 0x20	; 32
    58e6:	ff 4f       	sbci	r31, 0xFF	; 255
    58e8:	60 81       	ld	r22, Z
    58ea:	71 81       	ldd	r23, Z+1	; 0x01
    58ec:	82 81       	ldd	r24, Z+2	; 0x02
    58ee:	93 81       	ldd	r25, Z+3	; 0x03
    58f0:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    58f4:	dc 01       	movw	r26, r24
    58f6:	cb 01       	movw	r24, r22
    58f8:	f8 01       	movw	r30, r16
    58fa:	91 83       	std	Z+1, r25	; 0x01
    58fc:	80 83       	st	Z, r24
    58fe:	de 01       	movw	r26, r28
    5900:	a6 52       	subi	r26, 0x26	; 38
    5902:	bf 4f       	sbci	r27, 0xFF	; 255
    5904:	fe 01       	movw	r30, r28
    5906:	e2 52       	subi	r30, 0x22	; 34
    5908:	ff 4f       	sbci	r31, 0xFF	; 255
    590a:	80 81       	ld	r24, Z
    590c:	91 81       	ldd	r25, Z+1	; 0x01
    590e:	11 96       	adiw	r26, 0x01	; 1
    5910:	9c 93       	st	X, r25
    5912:	8e 93       	st	-X, r24
    5914:	fe 01       	movw	r30, r28
    5916:	e6 52       	subi	r30, 0x26	; 38
    5918:	ff 4f       	sbci	r31, 0xFF	; 255
    591a:	80 81       	ld	r24, Z
    591c:	91 81       	ldd	r25, Z+1	; 0x01
    591e:	01 97       	sbiw	r24, 0x01	; 1
    5920:	f1 f7       	brne	.-4      	; 0x591e <readgamepad+0x19b6>
    5922:	fe 01       	movw	r30, r28
    5924:	e6 52       	subi	r30, 0x26	; 38
    5926:	ff 4f       	sbci	r31, 0xFF	; 255
    5928:	91 83       	std	Z+1, r25	; 0x01
    592a:	80 83       	st	Z, r24
    592c:	22 c0       	rjmp	.+68     	; 0x5972 <readgamepad+0x1a0a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    592e:	8e 01       	movw	r16, r28
    5930:	08 51       	subi	r16, 0x18	; 24
    5932:	1f 4f       	sbci	r17, 0xFF	; 255
    5934:	fe 01       	movw	r30, r28
    5936:	e7 51       	subi	r30, 0x17	; 23
    5938:	ff 4f       	sbci	r31, 0xFF	; 255
    593a:	60 81       	ld	r22, Z
    593c:	71 81       	ldd	r23, Z+1	; 0x01
    593e:	82 81       	ldd	r24, Z+2	; 0x02
    5940:	93 81       	ldd	r25, Z+3	; 0x03
    5942:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5946:	dc 01       	movw	r26, r24
    5948:	cb 01       	movw	r24, r22
    594a:	f8 01       	movw	r30, r16
    594c:	80 83       	st	Z, r24
    594e:	de 01       	movw	r26, r28
    5950:	a7 52       	subi	r26, 0x27	; 39
    5952:	bf 4f       	sbci	r27, 0xFF	; 255
    5954:	fe 01       	movw	r30, r28
    5956:	e8 51       	subi	r30, 0x18	; 24
    5958:	ff 4f       	sbci	r31, 0xFF	; 255
    595a:	80 81       	ld	r24, Z
    595c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    595e:	fe 01       	movw	r30, r28
    5960:	e7 52       	subi	r30, 0x27	; 39
    5962:	ff 4f       	sbci	r31, 0xFF	; 255
    5964:	80 81       	ld	r24, Z
    5966:	8a 95       	dec	r24
    5968:	f1 f7       	brne	.-4      	; 0x5966 <readgamepad+0x19fe>
    596a:	fe 01       	movw	r30, r28
    596c:	e7 52       	subi	r30, 0x27	; 39
    596e:	ff 4f       	sbci	r31, 0xFF	; 255
    5970:	80 83       	st	Z, r24
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    5972:	e3 e3       	ldi	r30, 0x33	; 51
    5974:	f0 e0       	ldi	r31, 0x00	; 0
    5976:	80 81       	ld	r24, Z
    5978:	88 2f       	mov	r24, r24
    597a:	90 e0       	ldi	r25, 0x00	; 0
    597c:	82 70       	andi	r24, 0x02	; 2
    597e:	90 70       	andi	r25, 0x00	; 0
    5980:	00 97       	sbiw	r24, 0x00	; 0
    5982:	a1 f4       	brne	.+40     	; 0x59ac <readgamepad+0x1a44>
			cbi(ps2data5,i); 
    5984:	20 91 66 00 	lds	r18, 0x0066
    5988:	30 91 67 00 	lds	r19, 0x0067
    598c:	81 e0       	ldi	r24, 0x01	; 1
    598e:	90 e0       	ldi	r25, 0x00	; 0
    5990:	02 2e       	mov	r0, r18
    5992:	02 c0       	rjmp	.+4      	; 0x5998 <readgamepad+0x1a30>
    5994:	88 0f       	add	r24, r24
    5996:	99 1f       	adc	r25, r25
    5998:	0a 94       	dec	r0
    599a:	e2 f7       	brpl	.-8      	; 0x5994 <readgamepad+0x1a2c>
    599c:	98 2f       	mov	r25, r24
    599e:	90 95       	com	r25
    59a0:	80 91 6a 00 	lds	r24, 0x006A
    59a4:	89 23       	and	r24, r25
    59a6:	80 93 6a 00 	sts	0x006A, r24
    59aa:	11 c0       	rjmp	.+34     	; 0x59ce <readgamepad+0x1a66>
		else
			sbi(ps2data5,i); 
    59ac:	20 91 66 00 	lds	r18, 0x0066
    59b0:	30 91 67 00 	lds	r19, 0x0067
    59b4:	81 e0       	ldi	r24, 0x01	; 1
    59b6:	90 e0       	ldi	r25, 0x00	; 0
    59b8:	02 c0       	rjmp	.+4      	; 0x59be <readgamepad+0x1a56>
    59ba:	88 0f       	add	r24, r24
    59bc:	99 1f       	adc	r25, r25
    59be:	2a 95       	dec	r18
    59c0:	e2 f7       	brpl	.-8      	; 0x59ba <readgamepad+0x1a52>
    59c2:	98 2f       	mov	r25, r24
    59c4:	80 91 6a 00 	lds	r24, 0x006A
    59c8:	89 2b       	or	r24, r25
    59ca:	80 93 6a 00 	sts	0x006A, r24
		sbi(ps2port,ps2clk);
    59ce:	a5 e3       	ldi	r26, 0x35	; 53
    59d0:	b0 e0       	ldi	r27, 0x00	; 0
    59d2:	e5 e3       	ldi	r30, 0x35	; 53
    59d4:	f0 e0       	ldi	r31, 0x00	; 0
    59d6:	80 81       	ld	r24, Z
    59d8:	81 60       	ori	r24, 0x01	; 1
    59da:	8c 93       	st	X, r24
    59dc:	fe 01       	movw	r30, r28
    59de:	eb 52       	subi	r30, 0x2B	; 43
    59e0:	ff 4f       	sbci	r31, 0xFF	; 255
    59e2:	80 e0       	ldi	r24, 0x00	; 0
    59e4:	90 e0       	ldi	r25, 0x00	; 0
    59e6:	a0 e8       	ldi	r26, 0x80	; 128
    59e8:	bf e3       	ldi	r27, 0x3F	; 63
    59ea:	80 83       	st	Z, r24
    59ec:	91 83       	std	Z+1, r25	; 0x01
    59ee:	a2 83       	std	Z+2, r26	; 0x02
    59f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    59f2:	8e 01       	movw	r16, r28
    59f4:	0f 52       	subi	r16, 0x2F	; 47
    59f6:	1f 4f       	sbci	r17, 0xFF	; 255
    59f8:	fe 01       	movw	r30, r28
    59fa:	eb 52       	subi	r30, 0x2B	; 43
    59fc:	ff 4f       	sbci	r31, 0xFF	; 255
    59fe:	60 81       	ld	r22, Z
    5a00:	71 81       	ldd	r23, Z+1	; 0x01
    5a02:	82 81       	ldd	r24, Z+2	; 0x02
    5a04:	93 81       	ldd	r25, Z+3	; 0x03
    5a06:	2b ea       	ldi	r18, 0xAB	; 171
    5a08:	3a ea       	ldi	r19, 0xAA	; 170
    5a0a:	4a ea       	ldi	r20, 0xAA	; 170
    5a0c:	50 e4       	ldi	r21, 0x40	; 64
    5a0e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5a12:	dc 01       	movw	r26, r24
    5a14:	cb 01       	movw	r24, r22
    5a16:	f8 01       	movw	r30, r16
    5a18:	80 83       	st	Z, r24
    5a1a:	91 83       	std	Z+1, r25	; 0x01
    5a1c:	a2 83       	std	Z+2, r26	; 0x02
    5a1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5a20:	fe 01       	movw	r30, r28
    5a22:	ef 52       	subi	r30, 0x2F	; 47
    5a24:	ff 4f       	sbci	r31, 0xFF	; 255
    5a26:	60 81       	ld	r22, Z
    5a28:	71 81       	ldd	r23, Z+1	; 0x01
    5a2a:	82 81       	ldd	r24, Z+2	; 0x02
    5a2c:	93 81       	ldd	r25, Z+3	; 0x03
    5a2e:	20 e0       	ldi	r18, 0x00	; 0
    5a30:	30 e0       	ldi	r19, 0x00	; 0
    5a32:	40 e8       	ldi	r20, 0x80	; 128
    5a34:	5f e3       	ldi	r21, 0x3F	; 63
    5a36:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    5a3a:	88 23       	and	r24, r24
    5a3c:	34 f4       	brge	.+12     	; 0x5a4a <readgamepad+0x1ae2>
		__ticks = 1;
    5a3e:	fe 01       	movw	r30, r28
    5a40:	e0 53       	subi	r30, 0x30	; 48
    5a42:	ff 4f       	sbci	r31, 0xFF	; 255
    5a44:	81 e0       	ldi	r24, 0x01	; 1
    5a46:	80 83       	st	Z, r24
    5a48:	e0 c0       	rjmp	.+448    	; 0x5c0a <readgamepad+0x1ca2>
	else if (__tmp > 255)
    5a4a:	fe 01       	movw	r30, r28
    5a4c:	ef 52       	subi	r30, 0x2F	; 47
    5a4e:	ff 4f       	sbci	r31, 0xFF	; 255
    5a50:	60 81       	ld	r22, Z
    5a52:	71 81       	ldd	r23, Z+1	; 0x01
    5a54:	82 81       	ldd	r24, Z+2	; 0x02
    5a56:	93 81       	ldd	r25, Z+3	; 0x03
    5a58:	20 e0       	ldi	r18, 0x00	; 0
    5a5a:	30 e0       	ldi	r19, 0x00	; 0
    5a5c:	4f e7       	ldi	r20, 0x7F	; 127
    5a5e:	53 e4       	ldi	r21, 0x43	; 67
    5a60:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    5a64:	18 16       	cp	r1, r24
    5a66:	0c f0       	brlt	.+2      	; 0x5a6a <readgamepad+0x1b02>
    5a68:	c0 c0       	rjmp	.+384    	; 0x5bea <readgamepad+0x1c82>
	{
		_delay_ms(__us / 1000.0);
    5a6a:	fe 01       	movw	r30, r28
    5a6c:	eb 52       	subi	r30, 0x2B	; 43
    5a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    5a70:	60 81       	ld	r22, Z
    5a72:	71 81       	ldd	r23, Z+1	; 0x01
    5a74:	82 81       	ldd	r24, Z+2	; 0x02
    5a76:	93 81       	ldd	r25, Z+3	; 0x03
    5a78:	20 e0       	ldi	r18, 0x00	; 0
    5a7a:	30 e0       	ldi	r19, 0x00	; 0
    5a7c:	4a e7       	ldi	r20, 0x7A	; 122
    5a7e:	54 e4       	ldi	r21, 0x44	; 68
    5a80:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    5a84:	dc 01       	movw	r26, r24
    5a86:	cb 01       	movw	r24, r22
    5a88:	fe 01       	movw	r30, r28
    5a8a:	e4 53       	subi	r30, 0x34	; 52
    5a8c:	ff 4f       	sbci	r31, 0xFF	; 255
    5a8e:	80 83       	st	Z, r24
    5a90:	91 83       	std	Z+1, r25	; 0x01
    5a92:	a2 83       	std	Z+2, r26	; 0x02
    5a94:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5a96:	8e 01       	movw	r16, r28
    5a98:	08 53       	subi	r16, 0x38	; 56
    5a9a:	1f 4f       	sbci	r17, 0xFF	; 255
    5a9c:	fe 01       	movw	r30, r28
    5a9e:	e4 53       	subi	r30, 0x34	; 52
    5aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    5aa2:	60 81       	ld	r22, Z
    5aa4:	71 81       	ldd	r23, Z+1	; 0x01
    5aa6:	82 81       	ldd	r24, Z+2	; 0x02
    5aa8:	93 81       	ldd	r25, Z+3	; 0x03
    5aaa:	20 e0       	ldi	r18, 0x00	; 0
    5aac:	30 e0       	ldi	r19, 0x00	; 0
    5aae:	4a e7       	ldi	r20, 0x7A	; 122
    5ab0:	55 e4       	ldi	r21, 0x45	; 69
    5ab2:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5ab6:	dc 01       	movw	r26, r24
    5ab8:	cb 01       	movw	r24, r22
    5aba:	f8 01       	movw	r30, r16
    5abc:	80 83       	st	Z, r24
    5abe:	91 83       	std	Z+1, r25	; 0x01
    5ac0:	a2 83       	std	Z+2, r26	; 0x02
    5ac2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ac4:	fe 01       	movw	r30, r28
    5ac6:	e8 53       	subi	r30, 0x38	; 56
    5ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    5aca:	60 81       	ld	r22, Z
    5acc:	71 81       	ldd	r23, Z+1	; 0x01
    5ace:	82 81       	ldd	r24, Z+2	; 0x02
    5ad0:	93 81       	ldd	r25, Z+3	; 0x03
    5ad2:	20 e0       	ldi	r18, 0x00	; 0
    5ad4:	30 e0       	ldi	r19, 0x00	; 0
    5ad6:	40 e8       	ldi	r20, 0x80	; 128
    5ad8:	5f e3       	ldi	r21, 0x3F	; 63
    5ada:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    5ade:	88 23       	and	r24, r24
    5ae0:	44 f4       	brge	.+16     	; 0x5af2 <readgamepad+0x1b8a>
		__ticks = 1;
    5ae2:	fe 01       	movw	r30, r28
    5ae4:	ea 53       	subi	r30, 0x3A	; 58
    5ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    5ae8:	81 e0       	ldi	r24, 0x01	; 1
    5aea:	90 e0       	ldi	r25, 0x00	; 0
    5aec:	91 83       	std	Z+1, r25	; 0x01
    5aee:	80 83       	st	Z, r24
    5af0:	64 c0       	rjmp	.+200    	; 0x5bba <readgamepad+0x1c52>
	else if (__tmp > 65535)
    5af2:	fe 01       	movw	r30, r28
    5af4:	e8 53       	subi	r30, 0x38	; 56
    5af6:	ff 4f       	sbci	r31, 0xFF	; 255
    5af8:	60 81       	ld	r22, Z
    5afa:	71 81       	ldd	r23, Z+1	; 0x01
    5afc:	82 81       	ldd	r24, Z+2	; 0x02
    5afe:	93 81       	ldd	r25, Z+3	; 0x03
    5b00:	20 e0       	ldi	r18, 0x00	; 0
    5b02:	3f ef       	ldi	r19, 0xFF	; 255
    5b04:	4f e7       	ldi	r20, 0x7F	; 127
    5b06:	57 e4       	ldi	r21, 0x47	; 71
    5b08:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    5b0c:	18 16       	cp	r1, r24
    5b0e:	0c f0       	brlt	.+2      	; 0x5b12 <readgamepad+0x1baa>
    5b10:	43 c0       	rjmp	.+134    	; 0x5b98 <readgamepad+0x1c30>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b12:	fe 01       	movw	r30, r28
    5b14:	e4 53       	subi	r30, 0x34	; 52
    5b16:	ff 4f       	sbci	r31, 0xFF	; 255
    5b18:	60 81       	ld	r22, Z
    5b1a:	71 81       	ldd	r23, Z+1	; 0x01
    5b1c:	82 81       	ldd	r24, Z+2	; 0x02
    5b1e:	93 81       	ldd	r25, Z+3	; 0x03
    5b20:	20 e0       	ldi	r18, 0x00	; 0
    5b22:	30 e0       	ldi	r19, 0x00	; 0
    5b24:	40 e2       	ldi	r20, 0x20	; 32
    5b26:	51 e4       	ldi	r21, 0x41	; 65
    5b28:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5b2c:	dc 01       	movw	r26, r24
    5b2e:	cb 01       	movw	r24, r22
    5b30:	8e 01       	movw	r16, r28
    5b32:	0a 53       	subi	r16, 0x3A	; 58
    5b34:	1f 4f       	sbci	r17, 0xFF	; 255
    5b36:	bc 01       	movw	r22, r24
    5b38:	cd 01       	movw	r24, r26
    5b3a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5b3e:	dc 01       	movw	r26, r24
    5b40:	cb 01       	movw	r24, r22
    5b42:	f8 01       	movw	r30, r16
    5b44:	91 83       	std	Z+1, r25	; 0x01
    5b46:	80 83       	st	Z, r24
    5b48:	1f c0       	rjmp	.+62     	; 0x5b88 <readgamepad+0x1c20>
    5b4a:	fe 01       	movw	r30, r28
    5b4c:	ec 53       	subi	r30, 0x3C	; 60
    5b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    5b50:	80 e9       	ldi	r24, 0x90	; 144
    5b52:	91 e0       	ldi	r25, 0x01	; 1
    5b54:	91 83       	std	Z+1, r25	; 0x01
    5b56:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5b58:	fe 01       	movw	r30, r28
    5b5a:	ec 53       	subi	r30, 0x3C	; 60
    5b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    5b5e:	80 81       	ld	r24, Z
    5b60:	91 81       	ldd	r25, Z+1	; 0x01
    5b62:	01 97       	sbiw	r24, 0x01	; 1
    5b64:	f1 f7       	brne	.-4      	; 0x5b62 <readgamepad+0x1bfa>
    5b66:	fe 01       	movw	r30, r28
    5b68:	ec 53       	subi	r30, 0x3C	; 60
    5b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    5b6c:	91 83       	std	Z+1, r25	; 0x01
    5b6e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5b70:	de 01       	movw	r26, r28
    5b72:	aa 53       	subi	r26, 0x3A	; 58
    5b74:	bf 4f       	sbci	r27, 0xFF	; 255
    5b76:	fe 01       	movw	r30, r28
    5b78:	ea 53       	subi	r30, 0x3A	; 58
    5b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    5b7c:	80 81       	ld	r24, Z
    5b7e:	91 81       	ldd	r25, Z+1	; 0x01
    5b80:	01 97       	sbiw	r24, 0x01	; 1
    5b82:	11 96       	adiw	r26, 0x01	; 1
    5b84:	9c 93       	st	X, r25
    5b86:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5b88:	fe 01       	movw	r30, r28
    5b8a:	ea 53       	subi	r30, 0x3A	; 58
    5b8c:	ff 4f       	sbci	r31, 0xFF	; 255
    5b8e:	80 81       	ld	r24, Z
    5b90:	91 81       	ldd	r25, Z+1	; 0x01
    5b92:	00 97       	sbiw	r24, 0x00	; 0
    5b94:	d1 f6       	brne	.-76     	; 0x5b4a <readgamepad+0x1be2>
    5b96:	4b c0       	rjmp	.+150    	; 0x5c2e <readgamepad+0x1cc6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5b98:	8e 01       	movw	r16, r28
    5b9a:	0a 53       	subi	r16, 0x3A	; 58
    5b9c:	1f 4f       	sbci	r17, 0xFF	; 255
    5b9e:	fe 01       	movw	r30, r28
    5ba0:	e8 53       	subi	r30, 0x38	; 56
    5ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    5ba4:	60 81       	ld	r22, Z
    5ba6:	71 81       	ldd	r23, Z+1	; 0x01
    5ba8:	82 81       	ldd	r24, Z+2	; 0x02
    5baa:	93 81       	ldd	r25, Z+3	; 0x03
    5bac:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5bb0:	dc 01       	movw	r26, r24
    5bb2:	cb 01       	movw	r24, r22
    5bb4:	f8 01       	movw	r30, r16
    5bb6:	91 83       	std	Z+1, r25	; 0x01
    5bb8:	80 83       	st	Z, r24
    5bba:	de 01       	movw	r26, r28
    5bbc:	ae 53       	subi	r26, 0x3E	; 62
    5bbe:	bf 4f       	sbci	r27, 0xFF	; 255
    5bc0:	fe 01       	movw	r30, r28
    5bc2:	ea 53       	subi	r30, 0x3A	; 58
    5bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    5bc6:	80 81       	ld	r24, Z
    5bc8:	91 81       	ldd	r25, Z+1	; 0x01
    5bca:	11 96       	adiw	r26, 0x01	; 1
    5bcc:	9c 93       	st	X, r25
    5bce:	8e 93       	st	-X, r24
    5bd0:	fe 01       	movw	r30, r28
    5bd2:	ee 53       	subi	r30, 0x3E	; 62
    5bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    5bd6:	80 81       	ld	r24, Z
    5bd8:	91 81       	ldd	r25, Z+1	; 0x01
    5bda:	01 97       	sbiw	r24, 0x01	; 1
    5bdc:	f1 f7       	brne	.-4      	; 0x5bda <readgamepad+0x1c72>
    5bde:	fe 01       	movw	r30, r28
    5be0:	ee 53       	subi	r30, 0x3E	; 62
    5be2:	ff 4f       	sbci	r31, 0xFF	; 255
    5be4:	91 83       	std	Z+1, r25	; 0x01
    5be6:	80 83       	st	Z, r24
    5be8:	22 c0       	rjmp	.+68     	; 0x5c2e <readgamepad+0x1cc6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    5bea:	8e 01       	movw	r16, r28
    5bec:	00 53       	subi	r16, 0x30	; 48
    5bee:	1f 4f       	sbci	r17, 0xFF	; 255
    5bf0:	fe 01       	movw	r30, r28
    5bf2:	ef 52       	subi	r30, 0x2F	; 47
    5bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    5bf6:	60 81       	ld	r22, Z
    5bf8:	71 81       	ldd	r23, Z+1	; 0x01
    5bfa:	82 81       	ldd	r24, Z+2	; 0x02
    5bfc:	93 81       	ldd	r25, Z+3	; 0x03
    5bfe:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5c02:	dc 01       	movw	r26, r24
    5c04:	cb 01       	movw	r24, r22
    5c06:	f8 01       	movw	r30, r16
    5c08:	80 83       	st	Z, r24
    5c0a:	de 01       	movw	r26, r28
    5c0c:	af 53       	subi	r26, 0x3F	; 63
    5c0e:	bf 4f       	sbci	r27, 0xFF	; 255
    5c10:	fe 01       	movw	r30, r28
    5c12:	e0 53       	subi	r30, 0x30	; 48
    5c14:	ff 4f       	sbci	r31, 0xFF	; 255
    5c16:	80 81       	ld	r24, Z
    5c18:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    5c1a:	fe 01       	movw	r30, r28
    5c1c:	ef 53       	subi	r30, 0x3F	; 63
    5c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    5c20:	80 81       	ld	r24, Z
    5c22:	8a 95       	dec	r24
    5c24:	f1 f7       	brne	.-4      	; 0x5c22 <readgamepad+0x1cba>
    5c26:	fe 01       	movw	r30, r28
    5c28:	ef 53       	subi	r30, 0x3F	; 63
    5c2a:	ff 4f       	sbci	r31, 0xFF	; 255
    5c2c:	80 83       	st	Z, r24
	
	
	
   
	ps2data5=0;
	for(i=0;i<8;i++) // 5 byte digital
    5c2e:	80 91 66 00 	lds	r24, 0x0066
    5c32:	90 91 67 00 	lds	r25, 0x0067
    5c36:	01 96       	adiw	r24, 0x01	; 1
    5c38:	90 93 67 00 	sts	0x0067, r25
    5c3c:	80 93 66 00 	sts	0x0066, r24
    5c40:	80 91 66 00 	lds	r24, 0x0066
    5c44:	90 91 67 00 	lds	r25, 0x0067
    5c48:	88 30       	cpi	r24, 0x08	; 8
    5c4a:	91 05       	cpc	r25, r1
    5c4c:	0c f4       	brge	.+2      	; 0x5c50 <readgamepad+0x1ce8>
    5c4e:	5a cd       	rjmp	.-1356   	; 0x5704 <readgamepad+0x179c>
		else
			sbi(ps2data5,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    5c50:	a5 e3       	ldi	r26, 0x35	; 53
    5c52:	b0 e0       	ldi	r27, 0x00	; 0
    5c54:	e5 e3       	ldi	r30, 0x35	; 53
    5c56:	f0 e0       	ldi	r31, 0x00	; 0
    5c58:	80 81       	ld	r24, Z
    5c5a:	84 60       	ori	r24, 0x04	; 4
    5c5c:	8c 93       	st	X, r24
	
	
	
	
	ps2data6=0;
    5c5e:	10 92 68 00 	sts	0x0068, r1
	for(i=0;i<8;i++) // 6byte xaxis of left
    5c62:	10 92 67 00 	sts	0x0067, r1
    5c66:	10 92 66 00 	sts	0x0066, r1
    5c6a:	9e c2       	rjmp	.+1340   	; 0x61a8 <readgamepad+0x2240>
	{
		cbi(ps2port,ps2cmd);
    5c6c:	a5 e3       	ldi	r26, 0x35	; 53
    5c6e:	b0 e0       	ldi	r27, 0x00	; 0
    5c70:	e5 e3       	ldi	r30, 0x35	; 53
    5c72:	f0 e0       	ldi	r31, 0x00	; 0
    5c74:	80 81       	ld	r24, Z
    5c76:	8b 7f       	andi	r24, 0xFB	; 251
    5c78:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    5c7a:	a5 e3       	ldi	r26, 0x35	; 53
    5c7c:	b0 e0       	ldi	r27, 0x00	; 0
    5c7e:	e5 e3       	ldi	r30, 0x35	; 53
    5c80:	f0 e0       	ldi	r31, 0x00	; 0
    5c82:	80 81       	ld	r24, Z
    5c84:	8e 7f       	andi	r24, 0xFE	; 254
    5c86:	8c 93       	st	X, r24
    5c88:	fe 01       	movw	r30, r28
    5c8a:	e3 54       	subi	r30, 0x43	; 67
    5c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    5c8e:	80 e0       	ldi	r24, 0x00	; 0
    5c90:	90 e0       	ldi	r25, 0x00	; 0
    5c92:	a0 e8       	ldi	r26, 0x80	; 128
    5c94:	bf e3       	ldi	r27, 0x3F	; 63
    5c96:	80 83       	st	Z, r24
    5c98:	91 83       	std	Z+1, r25	; 0x01
    5c9a:	a2 83       	std	Z+2, r26	; 0x02
    5c9c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    5c9e:	8e 01       	movw	r16, r28
    5ca0:	07 54       	subi	r16, 0x47	; 71
    5ca2:	1f 4f       	sbci	r17, 0xFF	; 255
    5ca4:	fe 01       	movw	r30, r28
    5ca6:	e3 54       	subi	r30, 0x43	; 67
    5ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    5caa:	60 81       	ld	r22, Z
    5cac:	71 81       	ldd	r23, Z+1	; 0x01
    5cae:	82 81       	ldd	r24, Z+2	; 0x02
    5cb0:	93 81       	ldd	r25, Z+3	; 0x03
    5cb2:	2b ea       	ldi	r18, 0xAB	; 171
    5cb4:	3a ea       	ldi	r19, 0xAA	; 170
    5cb6:	4a ea       	ldi	r20, 0xAA	; 170
    5cb8:	50 e4       	ldi	r21, 0x40	; 64
    5cba:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5cbe:	dc 01       	movw	r26, r24
    5cc0:	cb 01       	movw	r24, r22
    5cc2:	f8 01       	movw	r30, r16
    5cc4:	80 83       	st	Z, r24
    5cc6:	91 83       	std	Z+1, r25	; 0x01
    5cc8:	a2 83       	std	Z+2, r26	; 0x02
    5cca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ccc:	fe 01       	movw	r30, r28
    5cce:	e7 54       	subi	r30, 0x47	; 71
    5cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    5cd2:	60 81       	ld	r22, Z
    5cd4:	71 81       	ldd	r23, Z+1	; 0x01
    5cd6:	82 81       	ldd	r24, Z+2	; 0x02
    5cd8:	93 81       	ldd	r25, Z+3	; 0x03
    5cda:	20 e0       	ldi	r18, 0x00	; 0
    5cdc:	30 e0       	ldi	r19, 0x00	; 0
    5cde:	40 e8       	ldi	r20, 0x80	; 128
    5ce0:	5f e3       	ldi	r21, 0x3F	; 63
    5ce2:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    5ce6:	88 23       	and	r24, r24
    5ce8:	34 f4       	brge	.+12     	; 0x5cf6 <readgamepad+0x1d8e>
		__ticks = 1;
    5cea:	fe 01       	movw	r30, r28
    5cec:	e8 54       	subi	r30, 0x48	; 72
    5cee:	ff 4f       	sbci	r31, 0xFF	; 255
    5cf0:	81 e0       	ldi	r24, 0x01	; 1
    5cf2:	80 83       	st	Z, r24
    5cf4:	e0 c0       	rjmp	.+448    	; 0x5eb6 <readgamepad+0x1f4e>
	else if (__tmp > 255)
    5cf6:	fe 01       	movw	r30, r28
    5cf8:	e7 54       	subi	r30, 0x47	; 71
    5cfa:	ff 4f       	sbci	r31, 0xFF	; 255
    5cfc:	60 81       	ld	r22, Z
    5cfe:	71 81       	ldd	r23, Z+1	; 0x01
    5d00:	82 81       	ldd	r24, Z+2	; 0x02
    5d02:	93 81       	ldd	r25, Z+3	; 0x03
    5d04:	20 e0       	ldi	r18, 0x00	; 0
    5d06:	30 e0       	ldi	r19, 0x00	; 0
    5d08:	4f e7       	ldi	r20, 0x7F	; 127
    5d0a:	53 e4       	ldi	r21, 0x43	; 67
    5d0c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    5d10:	18 16       	cp	r1, r24
    5d12:	0c f0       	brlt	.+2      	; 0x5d16 <readgamepad+0x1dae>
    5d14:	c0 c0       	rjmp	.+384    	; 0x5e96 <readgamepad+0x1f2e>
	{
		_delay_ms(__us / 1000.0);
    5d16:	fe 01       	movw	r30, r28
    5d18:	e3 54       	subi	r30, 0x43	; 67
    5d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    5d1c:	60 81       	ld	r22, Z
    5d1e:	71 81       	ldd	r23, Z+1	; 0x01
    5d20:	82 81       	ldd	r24, Z+2	; 0x02
    5d22:	93 81       	ldd	r25, Z+3	; 0x03
    5d24:	20 e0       	ldi	r18, 0x00	; 0
    5d26:	30 e0       	ldi	r19, 0x00	; 0
    5d28:	4a e7       	ldi	r20, 0x7A	; 122
    5d2a:	54 e4       	ldi	r21, 0x44	; 68
    5d2c:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    5d30:	dc 01       	movw	r26, r24
    5d32:	cb 01       	movw	r24, r22
    5d34:	fe 01       	movw	r30, r28
    5d36:	ec 54       	subi	r30, 0x4C	; 76
    5d38:	ff 4f       	sbci	r31, 0xFF	; 255
    5d3a:	80 83       	st	Z, r24
    5d3c:	91 83       	std	Z+1, r25	; 0x01
    5d3e:	a2 83       	std	Z+2, r26	; 0x02
    5d40:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d42:	8e 01       	movw	r16, r28
    5d44:	00 55       	subi	r16, 0x50	; 80
    5d46:	1f 4f       	sbci	r17, 0xFF	; 255
    5d48:	fe 01       	movw	r30, r28
    5d4a:	ec 54       	subi	r30, 0x4C	; 76
    5d4c:	ff 4f       	sbci	r31, 0xFF	; 255
    5d4e:	60 81       	ld	r22, Z
    5d50:	71 81       	ldd	r23, Z+1	; 0x01
    5d52:	82 81       	ldd	r24, Z+2	; 0x02
    5d54:	93 81       	ldd	r25, Z+3	; 0x03
    5d56:	20 e0       	ldi	r18, 0x00	; 0
    5d58:	30 e0       	ldi	r19, 0x00	; 0
    5d5a:	4a e7       	ldi	r20, 0x7A	; 122
    5d5c:	55 e4       	ldi	r21, 0x45	; 69
    5d5e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5d62:	dc 01       	movw	r26, r24
    5d64:	cb 01       	movw	r24, r22
    5d66:	f8 01       	movw	r30, r16
    5d68:	80 83       	st	Z, r24
    5d6a:	91 83       	std	Z+1, r25	; 0x01
    5d6c:	a2 83       	std	Z+2, r26	; 0x02
    5d6e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5d70:	fe 01       	movw	r30, r28
    5d72:	e0 55       	subi	r30, 0x50	; 80
    5d74:	ff 4f       	sbci	r31, 0xFF	; 255
    5d76:	60 81       	ld	r22, Z
    5d78:	71 81       	ldd	r23, Z+1	; 0x01
    5d7a:	82 81       	ldd	r24, Z+2	; 0x02
    5d7c:	93 81       	ldd	r25, Z+3	; 0x03
    5d7e:	20 e0       	ldi	r18, 0x00	; 0
    5d80:	30 e0       	ldi	r19, 0x00	; 0
    5d82:	40 e8       	ldi	r20, 0x80	; 128
    5d84:	5f e3       	ldi	r21, 0x3F	; 63
    5d86:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    5d8a:	88 23       	and	r24, r24
    5d8c:	44 f4       	brge	.+16     	; 0x5d9e <readgamepad+0x1e36>
		__ticks = 1;
    5d8e:	fe 01       	movw	r30, r28
    5d90:	e2 55       	subi	r30, 0x52	; 82
    5d92:	ff 4f       	sbci	r31, 0xFF	; 255
    5d94:	81 e0       	ldi	r24, 0x01	; 1
    5d96:	90 e0       	ldi	r25, 0x00	; 0
    5d98:	91 83       	std	Z+1, r25	; 0x01
    5d9a:	80 83       	st	Z, r24
    5d9c:	64 c0       	rjmp	.+200    	; 0x5e66 <readgamepad+0x1efe>
	else if (__tmp > 65535)
    5d9e:	fe 01       	movw	r30, r28
    5da0:	e0 55       	subi	r30, 0x50	; 80
    5da2:	ff 4f       	sbci	r31, 0xFF	; 255
    5da4:	60 81       	ld	r22, Z
    5da6:	71 81       	ldd	r23, Z+1	; 0x01
    5da8:	82 81       	ldd	r24, Z+2	; 0x02
    5daa:	93 81       	ldd	r25, Z+3	; 0x03
    5dac:	20 e0       	ldi	r18, 0x00	; 0
    5dae:	3f ef       	ldi	r19, 0xFF	; 255
    5db0:	4f e7       	ldi	r20, 0x7F	; 127
    5db2:	57 e4       	ldi	r21, 0x47	; 71
    5db4:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    5db8:	18 16       	cp	r1, r24
    5dba:	0c f0       	brlt	.+2      	; 0x5dbe <readgamepad+0x1e56>
    5dbc:	43 c0       	rjmp	.+134    	; 0x5e44 <readgamepad+0x1edc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5dbe:	fe 01       	movw	r30, r28
    5dc0:	ec 54       	subi	r30, 0x4C	; 76
    5dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    5dc4:	60 81       	ld	r22, Z
    5dc6:	71 81       	ldd	r23, Z+1	; 0x01
    5dc8:	82 81       	ldd	r24, Z+2	; 0x02
    5dca:	93 81       	ldd	r25, Z+3	; 0x03
    5dcc:	20 e0       	ldi	r18, 0x00	; 0
    5dce:	30 e0       	ldi	r19, 0x00	; 0
    5dd0:	40 e2       	ldi	r20, 0x20	; 32
    5dd2:	51 e4       	ldi	r21, 0x41	; 65
    5dd4:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5dd8:	dc 01       	movw	r26, r24
    5dda:	cb 01       	movw	r24, r22
    5ddc:	8e 01       	movw	r16, r28
    5dde:	02 55       	subi	r16, 0x52	; 82
    5de0:	1f 4f       	sbci	r17, 0xFF	; 255
    5de2:	bc 01       	movw	r22, r24
    5de4:	cd 01       	movw	r24, r26
    5de6:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5dea:	dc 01       	movw	r26, r24
    5dec:	cb 01       	movw	r24, r22
    5dee:	f8 01       	movw	r30, r16
    5df0:	91 83       	std	Z+1, r25	; 0x01
    5df2:	80 83       	st	Z, r24
    5df4:	1f c0       	rjmp	.+62     	; 0x5e34 <readgamepad+0x1ecc>
    5df6:	fe 01       	movw	r30, r28
    5df8:	e4 55       	subi	r30, 0x54	; 84
    5dfa:	ff 4f       	sbci	r31, 0xFF	; 255
    5dfc:	80 e9       	ldi	r24, 0x90	; 144
    5dfe:	91 e0       	ldi	r25, 0x01	; 1
    5e00:	91 83       	std	Z+1, r25	; 0x01
    5e02:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5e04:	fe 01       	movw	r30, r28
    5e06:	e4 55       	subi	r30, 0x54	; 84
    5e08:	ff 4f       	sbci	r31, 0xFF	; 255
    5e0a:	80 81       	ld	r24, Z
    5e0c:	91 81       	ldd	r25, Z+1	; 0x01
    5e0e:	01 97       	sbiw	r24, 0x01	; 1
    5e10:	f1 f7       	brne	.-4      	; 0x5e0e <readgamepad+0x1ea6>
    5e12:	fe 01       	movw	r30, r28
    5e14:	e4 55       	subi	r30, 0x54	; 84
    5e16:	ff 4f       	sbci	r31, 0xFF	; 255
    5e18:	91 83       	std	Z+1, r25	; 0x01
    5e1a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5e1c:	de 01       	movw	r26, r28
    5e1e:	a2 55       	subi	r26, 0x52	; 82
    5e20:	bf 4f       	sbci	r27, 0xFF	; 255
    5e22:	fe 01       	movw	r30, r28
    5e24:	e2 55       	subi	r30, 0x52	; 82
    5e26:	ff 4f       	sbci	r31, 0xFF	; 255
    5e28:	80 81       	ld	r24, Z
    5e2a:	91 81       	ldd	r25, Z+1	; 0x01
    5e2c:	01 97       	sbiw	r24, 0x01	; 1
    5e2e:	11 96       	adiw	r26, 0x01	; 1
    5e30:	9c 93       	st	X, r25
    5e32:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5e34:	fe 01       	movw	r30, r28
    5e36:	e2 55       	subi	r30, 0x52	; 82
    5e38:	ff 4f       	sbci	r31, 0xFF	; 255
    5e3a:	80 81       	ld	r24, Z
    5e3c:	91 81       	ldd	r25, Z+1	; 0x01
    5e3e:	00 97       	sbiw	r24, 0x00	; 0
    5e40:	d1 f6       	brne	.-76     	; 0x5df6 <readgamepad+0x1e8e>
    5e42:	4b c0       	rjmp	.+150    	; 0x5eda <readgamepad+0x1f72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5e44:	8e 01       	movw	r16, r28
    5e46:	02 55       	subi	r16, 0x52	; 82
    5e48:	1f 4f       	sbci	r17, 0xFF	; 255
    5e4a:	fe 01       	movw	r30, r28
    5e4c:	e0 55       	subi	r30, 0x50	; 80
    5e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    5e50:	60 81       	ld	r22, Z
    5e52:	71 81       	ldd	r23, Z+1	; 0x01
    5e54:	82 81       	ldd	r24, Z+2	; 0x02
    5e56:	93 81       	ldd	r25, Z+3	; 0x03
    5e58:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5e5c:	dc 01       	movw	r26, r24
    5e5e:	cb 01       	movw	r24, r22
    5e60:	f8 01       	movw	r30, r16
    5e62:	91 83       	std	Z+1, r25	; 0x01
    5e64:	80 83       	st	Z, r24
    5e66:	de 01       	movw	r26, r28
    5e68:	a6 55       	subi	r26, 0x56	; 86
    5e6a:	bf 4f       	sbci	r27, 0xFF	; 255
    5e6c:	fe 01       	movw	r30, r28
    5e6e:	e2 55       	subi	r30, 0x52	; 82
    5e70:	ff 4f       	sbci	r31, 0xFF	; 255
    5e72:	80 81       	ld	r24, Z
    5e74:	91 81       	ldd	r25, Z+1	; 0x01
    5e76:	11 96       	adiw	r26, 0x01	; 1
    5e78:	9c 93       	st	X, r25
    5e7a:	8e 93       	st	-X, r24
    5e7c:	fe 01       	movw	r30, r28
    5e7e:	e6 55       	subi	r30, 0x56	; 86
    5e80:	ff 4f       	sbci	r31, 0xFF	; 255
    5e82:	80 81       	ld	r24, Z
    5e84:	91 81       	ldd	r25, Z+1	; 0x01
    5e86:	01 97       	sbiw	r24, 0x01	; 1
    5e88:	f1 f7       	brne	.-4      	; 0x5e86 <readgamepad+0x1f1e>
    5e8a:	fe 01       	movw	r30, r28
    5e8c:	e6 55       	subi	r30, 0x56	; 86
    5e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    5e90:	91 83       	std	Z+1, r25	; 0x01
    5e92:	80 83       	st	Z, r24
    5e94:	22 c0       	rjmp	.+68     	; 0x5eda <readgamepad+0x1f72>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    5e96:	8e 01       	movw	r16, r28
    5e98:	08 54       	subi	r16, 0x48	; 72
    5e9a:	1f 4f       	sbci	r17, 0xFF	; 255
    5e9c:	fe 01       	movw	r30, r28
    5e9e:	e7 54       	subi	r30, 0x47	; 71
    5ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    5ea2:	60 81       	ld	r22, Z
    5ea4:	71 81       	ldd	r23, Z+1	; 0x01
    5ea6:	82 81       	ldd	r24, Z+2	; 0x02
    5ea8:	93 81       	ldd	r25, Z+3	; 0x03
    5eaa:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    5eae:	dc 01       	movw	r26, r24
    5eb0:	cb 01       	movw	r24, r22
    5eb2:	f8 01       	movw	r30, r16
    5eb4:	80 83       	st	Z, r24
    5eb6:	de 01       	movw	r26, r28
    5eb8:	a7 55       	subi	r26, 0x57	; 87
    5eba:	bf 4f       	sbci	r27, 0xFF	; 255
    5ebc:	fe 01       	movw	r30, r28
    5ebe:	e8 54       	subi	r30, 0x48	; 72
    5ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    5ec2:	80 81       	ld	r24, Z
    5ec4:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    5ec6:	fe 01       	movw	r30, r28
    5ec8:	e7 55       	subi	r30, 0x57	; 87
    5eca:	ff 4f       	sbci	r31, 0xFF	; 255
    5ecc:	80 81       	ld	r24, Z
    5ece:	8a 95       	dec	r24
    5ed0:	f1 f7       	brne	.-4      	; 0x5ece <readgamepad+0x1f66>
    5ed2:	fe 01       	movw	r30, r28
    5ed4:	e7 55       	subi	r30, 0x57	; 87
    5ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    5ed8:	80 83       	st	Z, r24
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    5eda:	e3 e3       	ldi	r30, 0x33	; 51
    5edc:	f0 e0       	ldi	r31, 0x00	; 0
    5ede:	80 81       	ld	r24, Z
    5ee0:	88 2f       	mov	r24, r24
    5ee2:	90 e0       	ldi	r25, 0x00	; 0
    5ee4:	82 70       	andi	r24, 0x02	; 2
    5ee6:	90 70       	andi	r25, 0x00	; 0
    5ee8:	00 97       	sbiw	r24, 0x00	; 0
    5eea:	a1 f4       	brne	.+40     	; 0x5f14 <readgamepad+0x1fac>
			cbi(ps2data6,i); 
    5eec:	20 91 66 00 	lds	r18, 0x0066
    5ef0:	30 91 67 00 	lds	r19, 0x0067
    5ef4:	81 e0       	ldi	r24, 0x01	; 1
    5ef6:	90 e0       	ldi	r25, 0x00	; 0
    5ef8:	02 2e       	mov	r0, r18
    5efa:	02 c0       	rjmp	.+4      	; 0x5f00 <readgamepad+0x1f98>
    5efc:	88 0f       	add	r24, r24
    5efe:	99 1f       	adc	r25, r25
    5f00:	0a 94       	dec	r0
    5f02:	e2 f7       	brpl	.-8      	; 0x5efc <readgamepad+0x1f94>
    5f04:	98 2f       	mov	r25, r24
    5f06:	90 95       	com	r25
    5f08:	80 91 68 00 	lds	r24, 0x0068
    5f0c:	89 23       	and	r24, r25
    5f0e:	80 93 68 00 	sts	0x0068, r24
    5f12:	11 c0       	rjmp	.+34     	; 0x5f36 <readgamepad+0x1fce>
		else
			sbi(ps2data6,i); 
    5f14:	20 91 66 00 	lds	r18, 0x0066
    5f18:	30 91 67 00 	lds	r19, 0x0067
    5f1c:	81 e0       	ldi	r24, 0x01	; 1
    5f1e:	90 e0       	ldi	r25, 0x00	; 0
    5f20:	02 c0       	rjmp	.+4      	; 0x5f26 <readgamepad+0x1fbe>
    5f22:	88 0f       	add	r24, r24
    5f24:	99 1f       	adc	r25, r25
    5f26:	2a 95       	dec	r18
    5f28:	e2 f7       	brpl	.-8      	; 0x5f22 <readgamepad+0x1fba>
    5f2a:	98 2f       	mov	r25, r24
    5f2c:	80 91 68 00 	lds	r24, 0x0068
    5f30:	89 2b       	or	r24, r25
    5f32:	80 93 68 00 	sts	0x0068, r24
		sbi(ps2port,ps2clk);
    5f36:	a5 e3       	ldi	r26, 0x35	; 53
    5f38:	b0 e0       	ldi	r27, 0x00	; 0
    5f3a:	e5 e3       	ldi	r30, 0x35	; 53
    5f3c:	f0 e0       	ldi	r31, 0x00	; 0
    5f3e:	80 81       	ld	r24, Z
    5f40:	81 60       	ori	r24, 0x01	; 1
    5f42:	8c 93       	st	X, r24
    5f44:	fe 01       	movw	r30, r28
    5f46:	eb 55       	subi	r30, 0x5B	; 91
    5f48:	ff 4f       	sbci	r31, 0xFF	; 255
    5f4a:	80 e0       	ldi	r24, 0x00	; 0
    5f4c:	90 e0       	ldi	r25, 0x00	; 0
    5f4e:	a0 e8       	ldi	r26, 0x80	; 128
    5f50:	bf e3       	ldi	r27, 0x3F	; 63
    5f52:	80 83       	st	Z, r24
    5f54:	91 83       	std	Z+1, r25	; 0x01
    5f56:	a2 83       	std	Z+2, r26	; 0x02
    5f58:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    5f5a:	8e 01       	movw	r16, r28
    5f5c:	0f 55       	subi	r16, 0x5F	; 95
    5f5e:	1f 4f       	sbci	r17, 0xFF	; 255
    5f60:	fe 01       	movw	r30, r28
    5f62:	eb 55       	subi	r30, 0x5B	; 91
    5f64:	ff 4f       	sbci	r31, 0xFF	; 255
    5f66:	60 81       	ld	r22, Z
    5f68:	71 81       	ldd	r23, Z+1	; 0x01
    5f6a:	82 81       	ldd	r24, Z+2	; 0x02
    5f6c:	93 81       	ldd	r25, Z+3	; 0x03
    5f6e:	2b ea       	ldi	r18, 0xAB	; 171
    5f70:	3a ea       	ldi	r19, 0xAA	; 170
    5f72:	4a ea       	ldi	r20, 0xAA	; 170
    5f74:	50 e4       	ldi	r21, 0x40	; 64
    5f76:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    5f7a:	dc 01       	movw	r26, r24
    5f7c:	cb 01       	movw	r24, r22
    5f7e:	f8 01       	movw	r30, r16
    5f80:	80 83       	st	Z, r24
    5f82:	91 83       	std	Z+1, r25	; 0x01
    5f84:	a2 83       	std	Z+2, r26	; 0x02
    5f86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5f88:	fe 01       	movw	r30, r28
    5f8a:	ef 55       	subi	r30, 0x5F	; 95
    5f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    5f8e:	60 81       	ld	r22, Z
    5f90:	71 81       	ldd	r23, Z+1	; 0x01
    5f92:	82 81       	ldd	r24, Z+2	; 0x02
    5f94:	93 81       	ldd	r25, Z+3	; 0x03
    5f96:	20 e0       	ldi	r18, 0x00	; 0
    5f98:	30 e0       	ldi	r19, 0x00	; 0
    5f9a:	40 e8       	ldi	r20, 0x80	; 128
    5f9c:	5f e3       	ldi	r21, 0x3F	; 63
    5f9e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    5fa2:	88 23       	and	r24, r24
    5fa4:	34 f4       	brge	.+12     	; 0x5fb2 <readgamepad+0x204a>
		__ticks = 1;
    5fa6:	fe 01       	movw	r30, r28
    5fa8:	e0 56       	subi	r30, 0x60	; 96
    5faa:	ff 4f       	sbci	r31, 0xFF	; 255
    5fac:	81 e0       	ldi	r24, 0x01	; 1
    5fae:	80 83       	st	Z, r24
    5fb0:	e0 c0       	rjmp	.+448    	; 0x6172 <readgamepad+0x220a>
	else if (__tmp > 255)
    5fb2:	fe 01       	movw	r30, r28
    5fb4:	ef 55       	subi	r30, 0x5F	; 95
    5fb6:	ff 4f       	sbci	r31, 0xFF	; 255
    5fb8:	60 81       	ld	r22, Z
    5fba:	71 81       	ldd	r23, Z+1	; 0x01
    5fbc:	82 81       	ldd	r24, Z+2	; 0x02
    5fbe:	93 81       	ldd	r25, Z+3	; 0x03
    5fc0:	20 e0       	ldi	r18, 0x00	; 0
    5fc2:	30 e0       	ldi	r19, 0x00	; 0
    5fc4:	4f e7       	ldi	r20, 0x7F	; 127
    5fc6:	53 e4       	ldi	r21, 0x43	; 67
    5fc8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    5fcc:	18 16       	cp	r1, r24
    5fce:	0c f0       	brlt	.+2      	; 0x5fd2 <readgamepad+0x206a>
    5fd0:	c0 c0       	rjmp	.+384    	; 0x6152 <readgamepad+0x21ea>
	{
		_delay_ms(__us / 1000.0);
    5fd2:	fe 01       	movw	r30, r28
    5fd4:	eb 55       	subi	r30, 0x5B	; 91
    5fd6:	ff 4f       	sbci	r31, 0xFF	; 255
    5fd8:	60 81       	ld	r22, Z
    5fda:	71 81       	ldd	r23, Z+1	; 0x01
    5fdc:	82 81       	ldd	r24, Z+2	; 0x02
    5fde:	93 81       	ldd	r25, Z+3	; 0x03
    5fe0:	20 e0       	ldi	r18, 0x00	; 0
    5fe2:	30 e0       	ldi	r19, 0x00	; 0
    5fe4:	4a e7       	ldi	r20, 0x7A	; 122
    5fe6:	54 e4       	ldi	r21, 0x44	; 68
    5fe8:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    5fec:	dc 01       	movw	r26, r24
    5fee:	cb 01       	movw	r24, r22
    5ff0:	fe 01       	movw	r30, r28
    5ff2:	e4 56       	subi	r30, 0x64	; 100
    5ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    5ff6:	80 83       	st	Z, r24
    5ff8:	91 83       	std	Z+1, r25	; 0x01
    5ffa:	a2 83       	std	Z+2, r26	; 0x02
    5ffc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5ffe:	8e 01       	movw	r16, r28
    6000:	08 56       	subi	r16, 0x68	; 104
    6002:	1f 4f       	sbci	r17, 0xFF	; 255
    6004:	fe 01       	movw	r30, r28
    6006:	e4 56       	subi	r30, 0x64	; 100
    6008:	ff 4f       	sbci	r31, 0xFF	; 255
    600a:	60 81       	ld	r22, Z
    600c:	71 81       	ldd	r23, Z+1	; 0x01
    600e:	82 81       	ldd	r24, Z+2	; 0x02
    6010:	93 81       	ldd	r25, Z+3	; 0x03
    6012:	20 e0       	ldi	r18, 0x00	; 0
    6014:	30 e0       	ldi	r19, 0x00	; 0
    6016:	4a e7       	ldi	r20, 0x7A	; 122
    6018:	55 e4       	ldi	r21, 0x45	; 69
    601a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    601e:	dc 01       	movw	r26, r24
    6020:	cb 01       	movw	r24, r22
    6022:	f8 01       	movw	r30, r16
    6024:	80 83       	st	Z, r24
    6026:	91 83       	std	Z+1, r25	; 0x01
    6028:	a2 83       	std	Z+2, r26	; 0x02
    602a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    602c:	fe 01       	movw	r30, r28
    602e:	e8 56       	subi	r30, 0x68	; 104
    6030:	ff 4f       	sbci	r31, 0xFF	; 255
    6032:	60 81       	ld	r22, Z
    6034:	71 81       	ldd	r23, Z+1	; 0x01
    6036:	82 81       	ldd	r24, Z+2	; 0x02
    6038:	93 81       	ldd	r25, Z+3	; 0x03
    603a:	20 e0       	ldi	r18, 0x00	; 0
    603c:	30 e0       	ldi	r19, 0x00	; 0
    603e:	40 e8       	ldi	r20, 0x80	; 128
    6040:	5f e3       	ldi	r21, 0x3F	; 63
    6042:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    6046:	88 23       	and	r24, r24
    6048:	44 f4       	brge	.+16     	; 0x605a <readgamepad+0x20f2>
		__ticks = 1;
    604a:	fe 01       	movw	r30, r28
    604c:	ea 56       	subi	r30, 0x6A	; 106
    604e:	ff 4f       	sbci	r31, 0xFF	; 255
    6050:	81 e0       	ldi	r24, 0x01	; 1
    6052:	90 e0       	ldi	r25, 0x00	; 0
    6054:	91 83       	std	Z+1, r25	; 0x01
    6056:	80 83       	st	Z, r24
    6058:	64 c0       	rjmp	.+200    	; 0x6122 <readgamepad+0x21ba>
	else if (__tmp > 65535)
    605a:	fe 01       	movw	r30, r28
    605c:	e8 56       	subi	r30, 0x68	; 104
    605e:	ff 4f       	sbci	r31, 0xFF	; 255
    6060:	60 81       	ld	r22, Z
    6062:	71 81       	ldd	r23, Z+1	; 0x01
    6064:	82 81       	ldd	r24, Z+2	; 0x02
    6066:	93 81       	ldd	r25, Z+3	; 0x03
    6068:	20 e0       	ldi	r18, 0x00	; 0
    606a:	3f ef       	ldi	r19, 0xFF	; 255
    606c:	4f e7       	ldi	r20, 0x7F	; 127
    606e:	57 e4       	ldi	r21, 0x47	; 71
    6070:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6074:	18 16       	cp	r1, r24
    6076:	0c f0       	brlt	.+2      	; 0x607a <readgamepad+0x2112>
    6078:	43 c0       	rjmp	.+134    	; 0x6100 <readgamepad+0x2198>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    607a:	fe 01       	movw	r30, r28
    607c:	e4 56       	subi	r30, 0x64	; 100
    607e:	ff 4f       	sbci	r31, 0xFF	; 255
    6080:	60 81       	ld	r22, Z
    6082:	71 81       	ldd	r23, Z+1	; 0x01
    6084:	82 81       	ldd	r24, Z+2	; 0x02
    6086:	93 81       	ldd	r25, Z+3	; 0x03
    6088:	20 e0       	ldi	r18, 0x00	; 0
    608a:	30 e0       	ldi	r19, 0x00	; 0
    608c:	40 e2       	ldi	r20, 0x20	; 32
    608e:	51 e4       	ldi	r21, 0x41	; 65
    6090:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6094:	dc 01       	movw	r26, r24
    6096:	cb 01       	movw	r24, r22
    6098:	8e 01       	movw	r16, r28
    609a:	0a 56       	subi	r16, 0x6A	; 106
    609c:	1f 4f       	sbci	r17, 0xFF	; 255
    609e:	bc 01       	movw	r22, r24
    60a0:	cd 01       	movw	r24, r26
    60a2:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    60a6:	dc 01       	movw	r26, r24
    60a8:	cb 01       	movw	r24, r22
    60aa:	f8 01       	movw	r30, r16
    60ac:	91 83       	std	Z+1, r25	; 0x01
    60ae:	80 83       	st	Z, r24
    60b0:	1f c0       	rjmp	.+62     	; 0x60f0 <readgamepad+0x2188>
    60b2:	fe 01       	movw	r30, r28
    60b4:	ec 56       	subi	r30, 0x6C	; 108
    60b6:	ff 4f       	sbci	r31, 0xFF	; 255
    60b8:	80 e9       	ldi	r24, 0x90	; 144
    60ba:	91 e0       	ldi	r25, 0x01	; 1
    60bc:	91 83       	std	Z+1, r25	; 0x01
    60be:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    60c0:	fe 01       	movw	r30, r28
    60c2:	ec 56       	subi	r30, 0x6C	; 108
    60c4:	ff 4f       	sbci	r31, 0xFF	; 255
    60c6:	80 81       	ld	r24, Z
    60c8:	91 81       	ldd	r25, Z+1	; 0x01
    60ca:	01 97       	sbiw	r24, 0x01	; 1
    60cc:	f1 f7       	brne	.-4      	; 0x60ca <readgamepad+0x2162>
    60ce:	fe 01       	movw	r30, r28
    60d0:	ec 56       	subi	r30, 0x6C	; 108
    60d2:	ff 4f       	sbci	r31, 0xFF	; 255
    60d4:	91 83       	std	Z+1, r25	; 0x01
    60d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    60d8:	de 01       	movw	r26, r28
    60da:	aa 56       	subi	r26, 0x6A	; 106
    60dc:	bf 4f       	sbci	r27, 0xFF	; 255
    60de:	fe 01       	movw	r30, r28
    60e0:	ea 56       	subi	r30, 0x6A	; 106
    60e2:	ff 4f       	sbci	r31, 0xFF	; 255
    60e4:	80 81       	ld	r24, Z
    60e6:	91 81       	ldd	r25, Z+1	; 0x01
    60e8:	01 97       	sbiw	r24, 0x01	; 1
    60ea:	11 96       	adiw	r26, 0x01	; 1
    60ec:	9c 93       	st	X, r25
    60ee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    60f0:	fe 01       	movw	r30, r28
    60f2:	ea 56       	subi	r30, 0x6A	; 106
    60f4:	ff 4f       	sbci	r31, 0xFF	; 255
    60f6:	80 81       	ld	r24, Z
    60f8:	91 81       	ldd	r25, Z+1	; 0x01
    60fa:	00 97       	sbiw	r24, 0x00	; 0
    60fc:	d1 f6       	brne	.-76     	; 0x60b2 <readgamepad+0x214a>
    60fe:	4b c0       	rjmp	.+150    	; 0x6196 <readgamepad+0x222e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6100:	8e 01       	movw	r16, r28
    6102:	0a 56       	subi	r16, 0x6A	; 106
    6104:	1f 4f       	sbci	r17, 0xFF	; 255
    6106:	fe 01       	movw	r30, r28
    6108:	e8 56       	subi	r30, 0x68	; 104
    610a:	ff 4f       	sbci	r31, 0xFF	; 255
    610c:	60 81       	ld	r22, Z
    610e:	71 81       	ldd	r23, Z+1	; 0x01
    6110:	82 81       	ldd	r24, Z+2	; 0x02
    6112:	93 81       	ldd	r25, Z+3	; 0x03
    6114:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6118:	dc 01       	movw	r26, r24
    611a:	cb 01       	movw	r24, r22
    611c:	f8 01       	movw	r30, r16
    611e:	91 83       	std	Z+1, r25	; 0x01
    6120:	80 83       	st	Z, r24
    6122:	de 01       	movw	r26, r28
    6124:	ae 56       	subi	r26, 0x6E	; 110
    6126:	bf 4f       	sbci	r27, 0xFF	; 255
    6128:	fe 01       	movw	r30, r28
    612a:	ea 56       	subi	r30, 0x6A	; 106
    612c:	ff 4f       	sbci	r31, 0xFF	; 255
    612e:	80 81       	ld	r24, Z
    6130:	91 81       	ldd	r25, Z+1	; 0x01
    6132:	11 96       	adiw	r26, 0x01	; 1
    6134:	9c 93       	st	X, r25
    6136:	8e 93       	st	-X, r24
    6138:	fe 01       	movw	r30, r28
    613a:	ee 56       	subi	r30, 0x6E	; 110
    613c:	ff 4f       	sbci	r31, 0xFF	; 255
    613e:	80 81       	ld	r24, Z
    6140:	91 81       	ldd	r25, Z+1	; 0x01
    6142:	01 97       	sbiw	r24, 0x01	; 1
    6144:	f1 f7       	brne	.-4      	; 0x6142 <readgamepad+0x21da>
    6146:	fe 01       	movw	r30, r28
    6148:	ee 56       	subi	r30, 0x6E	; 110
    614a:	ff 4f       	sbci	r31, 0xFF	; 255
    614c:	91 83       	std	Z+1, r25	; 0x01
    614e:	80 83       	st	Z, r24
    6150:	22 c0       	rjmp	.+68     	; 0x6196 <readgamepad+0x222e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    6152:	8e 01       	movw	r16, r28
    6154:	00 56       	subi	r16, 0x60	; 96
    6156:	1f 4f       	sbci	r17, 0xFF	; 255
    6158:	fe 01       	movw	r30, r28
    615a:	ef 55       	subi	r30, 0x5F	; 95
    615c:	ff 4f       	sbci	r31, 0xFF	; 255
    615e:	60 81       	ld	r22, Z
    6160:	71 81       	ldd	r23, Z+1	; 0x01
    6162:	82 81       	ldd	r24, Z+2	; 0x02
    6164:	93 81       	ldd	r25, Z+3	; 0x03
    6166:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    616a:	dc 01       	movw	r26, r24
    616c:	cb 01       	movw	r24, r22
    616e:	f8 01       	movw	r30, r16
    6170:	80 83       	st	Z, r24
    6172:	de 01       	movw	r26, r28
    6174:	af 56       	subi	r26, 0x6F	; 111
    6176:	bf 4f       	sbci	r27, 0xFF	; 255
    6178:	fe 01       	movw	r30, r28
    617a:	e0 56       	subi	r30, 0x60	; 96
    617c:	ff 4f       	sbci	r31, 0xFF	; 255
    617e:	80 81       	ld	r24, Z
    6180:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    6182:	fe 01       	movw	r30, r28
    6184:	ef 56       	subi	r30, 0x6F	; 111
    6186:	ff 4f       	sbci	r31, 0xFF	; 255
    6188:	80 81       	ld	r24, Z
    618a:	8a 95       	dec	r24
    618c:	f1 f7       	brne	.-4      	; 0x618a <readgamepad+0x2222>
    618e:	fe 01       	movw	r30, r28
    6190:	ef 56       	subi	r30, 0x6F	; 111
    6192:	ff 4f       	sbci	r31, 0xFF	; 255
    6194:	80 83       	st	Z, r24
	
	
	
	
	ps2data6=0;
	for(i=0;i<8;i++) // 6byte xaxis of left
    6196:	80 91 66 00 	lds	r24, 0x0066
    619a:	90 91 67 00 	lds	r25, 0x0067
    619e:	01 96       	adiw	r24, 0x01	; 1
    61a0:	90 93 67 00 	sts	0x0067, r25
    61a4:	80 93 66 00 	sts	0x0066, r24
    61a8:	80 91 66 00 	lds	r24, 0x0066
    61ac:	90 91 67 00 	lds	r25, 0x0067
    61b0:	88 30       	cpi	r24, 0x08	; 8
    61b2:	91 05       	cpc	r25, r1
    61b4:	0c f4       	brge	.+2      	; 0x61b8 <readgamepad+0x2250>
    61b6:	5a cd       	rjmp	.-1356   	; 0x5c6c <readgamepad+0x1d04>
		else
			sbi(ps2data6,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    61b8:	a5 e3       	ldi	r26, 0x35	; 53
    61ba:	b0 e0       	ldi	r27, 0x00	; 0
    61bc:	e5 e3       	ldi	r30, 0x35	; 53
    61be:	f0 e0       	ldi	r31, 0x00	; 0
    61c0:	80 81       	ld	r24, Z
    61c2:	84 60       	ori	r24, 0x04	; 4
    61c4:	8c 93       	st	X, r24
	
	
	
	
	ps2data7=0;
    61c6:	10 92 62 00 	sts	0x0062, r1
	for(i=0;i<8;i++) // 7 byte yaxis of left
    61ca:	10 92 67 00 	sts	0x0067, r1
    61ce:	10 92 66 00 	sts	0x0066, r1
    61d2:	9e c2       	rjmp	.+1340   	; 0x6710 <readgamepad+0x27a8>
	{
		cbi(ps2port,ps2cmd);
    61d4:	a5 e3       	ldi	r26, 0x35	; 53
    61d6:	b0 e0       	ldi	r27, 0x00	; 0
    61d8:	e5 e3       	ldi	r30, 0x35	; 53
    61da:	f0 e0       	ldi	r31, 0x00	; 0
    61dc:	80 81       	ld	r24, Z
    61de:	8b 7f       	andi	r24, 0xFB	; 251
    61e0:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    61e2:	a5 e3       	ldi	r26, 0x35	; 53
    61e4:	b0 e0       	ldi	r27, 0x00	; 0
    61e6:	e5 e3       	ldi	r30, 0x35	; 53
    61e8:	f0 e0       	ldi	r31, 0x00	; 0
    61ea:	80 81       	ld	r24, Z
    61ec:	8e 7f       	andi	r24, 0xFE	; 254
    61ee:	8c 93       	st	X, r24
    61f0:	fe 01       	movw	r30, r28
    61f2:	e3 57       	subi	r30, 0x73	; 115
    61f4:	ff 4f       	sbci	r31, 0xFF	; 255
    61f6:	80 e0       	ldi	r24, 0x00	; 0
    61f8:	90 e0       	ldi	r25, 0x00	; 0
    61fa:	a0 e8       	ldi	r26, 0x80	; 128
    61fc:	bf e3       	ldi	r27, 0x3F	; 63
    61fe:	80 83       	st	Z, r24
    6200:	91 83       	std	Z+1, r25	; 0x01
    6202:	a2 83       	std	Z+2, r26	; 0x02
    6204:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    6206:	8e 01       	movw	r16, r28
    6208:	07 57       	subi	r16, 0x77	; 119
    620a:	1f 4f       	sbci	r17, 0xFF	; 255
    620c:	fe 01       	movw	r30, r28
    620e:	e3 57       	subi	r30, 0x73	; 115
    6210:	ff 4f       	sbci	r31, 0xFF	; 255
    6212:	60 81       	ld	r22, Z
    6214:	71 81       	ldd	r23, Z+1	; 0x01
    6216:	82 81       	ldd	r24, Z+2	; 0x02
    6218:	93 81       	ldd	r25, Z+3	; 0x03
    621a:	2b ea       	ldi	r18, 0xAB	; 171
    621c:	3a ea       	ldi	r19, 0xAA	; 170
    621e:	4a ea       	ldi	r20, 0xAA	; 170
    6220:	50 e4       	ldi	r21, 0x40	; 64
    6222:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6226:	dc 01       	movw	r26, r24
    6228:	cb 01       	movw	r24, r22
    622a:	f8 01       	movw	r30, r16
    622c:	80 83       	st	Z, r24
    622e:	91 83       	std	Z+1, r25	; 0x01
    6230:	a2 83       	std	Z+2, r26	; 0x02
    6232:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6234:	fe 01       	movw	r30, r28
    6236:	e7 57       	subi	r30, 0x77	; 119
    6238:	ff 4f       	sbci	r31, 0xFF	; 255
    623a:	60 81       	ld	r22, Z
    623c:	71 81       	ldd	r23, Z+1	; 0x01
    623e:	82 81       	ldd	r24, Z+2	; 0x02
    6240:	93 81       	ldd	r25, Z+3	; 0x03
    6242:	20 e0       	ldi	r18, 0x00	; 0
    6244:	30 e0       	ldi	r19, 0x00	; 0
    6246:	40 e8       	ldi	r20, 0x80	; 128
    6248:	5f e3       	ldi	r21, 0x3F	; 63
    624a:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    624e:	88 23       	and	r24, r24
    6250:	34 f4       	brge	.+12     	; 0x625e <readgamepad+0x22f6>
		__ticks = 1;
    6252:	fe 01       	movw	r30, r28
    6254:	e8 57       	subi	r30, 0x78	; 120
    6256:	ff 4f       	sbci	r31, 0xFF	; 255
    6258:	81 e0       	ldi	r24, 0x01	; 1
    625a:	80 83       	st	Z, r24
    625c:	e0 c0       	rjmp	.+448    	; 0x641e <readgamepad+0x24b6>
	else if (__tmp > 255)
    625e:	fe 01       	movw	r30, r28
    6260:	e7 57       	subi	r30, 0x77	; 119
    6262:	ff 4f       	sbci	r31, 0xFF	; 255
    6264:	60 81       	ld	r22, Z
    6266:	71 81       	ldd	r23, Z+1	; 0x01
    6268:	82 81       	ldd	r24, Z+2	; 0x02
    626a:	93 81       	ldd	r25, Z+3	; 0x03
    626c:	20 e0       	ldi	r18, 0x00	; 0
    626e:	30 e0       	ldi	r19, 0x00	; 0
    6270:	4f e7       	ldi	r20, 0x7F	; 127
    6272:	53 e4       	ldi	r21, 0x43	; 67
    6274:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6278:	18 16       	cp	r1, r24
    627a:	0c f0       	brlt	.+2      	; 0x627e <readgamepad+0x2316>
    627c:	c0 c0       	rjmp	.+384    	; 0x63fe <readgamepad+0x2496>
	{
		_delay_ms(__us / 1000.0);
    627e:	fe 01       	movw	r30, r28
    6280:	e3 57       	subi	r30, 0x73	; 115
    6282:	ff 4f       	sbci	r31, 0xFF	; 255
    6284:	60 81       	ld	r22, Z
    6286:	71 81       	ldd	r23, Z+1	; 0x01
    6288:	82 81       	ldd	r24, Z+2	; 0x02
    628a:	93 81       	ldd	r25, Z+3	; 0x03
    628c:	20 e0       	ldi	r18, 0x00	; 0
    628e:	30 e0       	ldi	r19, 0x00	; 0
    6290:	4a e7       	ldi	r20, 0x7A	; 122
    6292:	54 e4       	ldi	r21, 0x44	; 68
    6294:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    6298:	dc 01       	movw	r26, r24
    629a:	cb 01       	movw	r24, r22
    629c:	fe 01       	movw	r30, r28
    629e:	ec 57       	subi	r30, 0x7C	; 124
    62a0:	ff 4f       	sbci	r31, 0xFF	; 255
    62a2:	80 83       	st	Z, r24
    62a4:	91 83       	std	Z+1, r25	; 0x01
    62a6:	a2 83       	std	Z+2, r26	; 0x02
    62a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    62aa:	8e 01       	movw	r16, r28
    62ac:	00 58       	subi	r16, 0x80	; 128
    62ae:	1f 4f       	sbci	r17, 0xFF	; 255
    62b0:	fe 01       	movw	r30, r28
    62b2:	ec 57       	subi	r30, 0x7C	; 124
    62b4:	ff 4f       	sbci	r31, 0xFF	; 255
    62b6:	60 81       	ld	r22, Z
    62b8:	71 81       	ldd	r23, Z+1	; 0x01
    62ba:	82 81       	ldd	r24, Z+2	; 0x02
    62bc:	93 81       	ldd	r25, Z+3	; 0x03
    62be:	20 e0       	ldi	r18, 0x00	; 0
    62c0:	30 e0       	ldi	r19, 0x00	; 0
    62c2:	4a e7       	ldi	r20, 0x7A	; 122
    62c4:	55 e4       	ldi	r21, 0x45	; 69
    62c6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    62ca:	dc 01       	movw	r26, r24
    62cc:	cb 01       	movw	r24, r22
    62ce:	f8 01       	movw	r30, r16
    62d0:	80 83       	st	Z, r24
    62d2:	91 83       	std	Z+1, r25	; 0x01
    62d4:	a2 83       	std	Z+2, r26	; 0x02
    62d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    62d8:	fe 01       	movw	r30, r28
    62da:	e0 58       	subi	r30, 0x80	; 128
    62dc:	ff 4f       	sbci	r31, 0xFF	; 255
    62de:	60 81       	ld	r22, Z
    62e0:	71 81       	ldd	r23, Z+1	; 0x01
    62e2:	82 81       	ldd	r24, Z+2	; 0x02
    62e4:	93 81       	ldd	r25, Z+3	; 0x03
    62e6:	20 e0       	ldi	r18, 0x00	; 0
    62e8:	30 e0       	ldi	r19, 0x00	; 0
    62ea:	40 e8       	ldi	r20, 0x80	; 128
    62ec:	5f e3       	ldi	r21, 0x3F	; 63
    62ee:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    62f2:	88 23       	and	r24, r24
    62f4:	44 f4       	brge	.+16     	; 0x6306 <readgamepad+0x239e>
		__ticks = 1;
    62f6:	fe 01       	movw	r30, r28
    62f8:	e2 58       	subi	r30, 0x82	; 130
    62fa:	ff 4f       	sbci	r31, 0xFF	; 255
    62fc:	81 e0       	ldi	r24, 0x01	; 1
    62fe:	90 e0       	ldi	r25, 0x00	; 0
    6300:	91 83       	std	Z+1, r25	; 0x01
    6302:	80 83       	st	Z, r24
    6304:	64 c0       	rjmp	.+200    	; 0x63ce <readgamepad+0x2466>
	else if (__tmp > 65535)
    6306:	fe 01       	movw	r30, r28
    6308:	e0 58       	subi	r30, 0x80	; 128
    630a:	ff 4f       	sbci	r31, 0xFF	; 255
    630c:	60 81       	ld	r22, Z
    630e:	71 81       	ldd	r23, Z+1	; 0x01
    6310:	82 81       	ldd	r24, Z+2	; 0x02
    6312:	93 81       	ldd	r25, Z+3	; 0x03
    6314:	20 e0       	ldi	r18, 0x00	; 0
    6316:	3f ef       	ldi	r19, 0xFF	; 255
    6318:	4f e7       	ldi	r20, 0x7F	; 127
    631a:	57 e4       	ldi	r21, 0x47	; 71
    631c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6320:	18 16       	cp	r1, r24
    6322:	0c f0       	brlt	.+2      	; 0x6326 <readgamepad+0x23be>
    6324:	43 c0       	rjmp	.+134    	; 0x63ac <readgamepad+0x2444>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6326:	fe 01       	movw	r30, r28
    6328:	ec 57       	subi	r30, 0x7C	; 124
    632a:	ff 4f       	sbci	r31, 0xFF	; 255
    632c:	60 81       	ld	r22, Z
    632e:	71 81       	ldd	r23, Z+1	; 0x01
    6330:	82 81       	ldd	r24, Z+2	; 0x02
    6332:	93 81       	ldd	r25, Z+3	; 0x03
    6334:	20 e0       	ldi	r18, 0x00	; 0
    6336:	30 e0       	ldi	r19, 0x00	; 0
    6338:	40 e2       	ldi	r20, 0x20	; 32
    633a:	51 e4       	ldi	r21, 0x41	; 65
    633c:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6340:	dc 01       	movw	r26, r24
    6342:	cb 01       	movw	r24, r22
    6344:	8e 01       	movw	r16, r28
    6346:	02 58       	subi	r16, 0x82	; 130
    6348:	1f 4f       	sbci	r17, 0xFF	; 255
    634a:	bc 01       	movw	r22, r24
    634c:	cd 01       	movw	r24, r26
    634e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6352:	dc 01       	movw	r26, r24
    6354:	cb 01       	movw	r24, r22
    6356:	f8 01       	movw	r30, r16
    6358:	91 83       	std	Z+1, r25	; 0x01
    635a:	80 83       	st	Z, r24
    635c:	1f c0       	rjmp	.+62     	; 0x639c <readgamepad+0x2434>
    635e:	fe 01       	movw	r30, r28
    6360:	e4 58       	subi	r30, 0x84	; 132
    6362:	ff 4f       	sbci	r31, 0xFF	; 255
    6364:	80 e9       	ldi	r24, 0x90	; 144
    6366:	91 e0       	ldi	r25, 0x01	; 1
    6368:	91 83       	std	Z+1, r25	; 0x01
    636a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    636c:	fe 01       	movw	r30, r28
    636e:	e4 58       	subi	r30, 0x84	; 132
    6370:	ff 4f       	sbci	r31, 0xFF	; 255
    6372:	80 81       	ld	r24, Z
    6374:	91 81       	ldd	r25, Z+1	; 0x01
    6376:	01 97       	sbiw	r24, 0x01	; 1
    6378:	f1 f7       	brne	.-4      	; 0x6376 <readgamepad+0x240e>
    637a:	fe 01       	movw	r30, r28
    637c:	e4 58       	subi	r30, 0x84	; 132
    637e:	ff 4f       	sbci	r31, 0xFF	; 255
    6380:	91 83       	std	Z+1, r25	; 0x01
    6382:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6384:	de 01       	movw	r26, r28
    6386:	a2 58       	subi	r26, 0x82	; 130
    6388:	bf 4f       	sbci	r27, 0xFF	; 255
    638a:	fe 01       	movw	r30, r28
    638c:	e2 58       	subi	r30, 0x82	; 130
    638e:	ff 4f       	sbci	r31, 0xFF	; 255
    6390:	80 81       	ld	r24, Z
    6392:	91 81       	ldd	r25, Z+1	; 0x01
    6394:	01 97       	sbiw	r24, 0x01	; 1
    6396:	11 96       	adiw	r26, 0x01	; 1
    6398:	9c 93       	st	X, r25
    639a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    639c:	fe 01       	movw	r30, r28
    639e:	e2 58       	subi	r30, 0x82	; 130
    63a0:	ff 4f       	sbci	r31, 0xFF	; 255
    63a2:	80 81       	ld	r24, Z
    63a4:	91 81       	ldd	r25, Z+1	; 0x01
    63a6:	00 97       	sbiw	r24, 0x00	; 0
    63a8:	d1 f6       	brne	.-76     	; 0x635e <readgamepad+0x23f6>
    63aa:	4b c0       	rjmp	.+150    	; 0x6442 <readgamepad+0x24da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    63ac:	8e 01       	movw	r16, r28
    63ae:	02 58       	subi	r16, 0x82	; 130
    63b0:	1f 4f       	sbci	r17, 0xFF	; 255
    63b2:	fe 01       	movw	r30, r28
    63b4:	e0 58       	subi	r30, 0x80	; 128
    63b6:	ff 4f       	sbci	r31, 0xFF	; 255
    63b8:	60 81       	ld	r22, Z
    63ba:	71 81       	ldd	r23, Z+1	; 0x01
    63bc:	82 81       	ldd	r24, Z+2	; 0x02
    63be:	93 81       	ldd	r25, Z+3	; 0x03
    63c0:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    63c4:	dc 01       	movw	r26, r24
    63c6:	cb 01       	movw	r24, r22
    63c8:	f8 01       	movw	r30, r16
    63ca:	91 83       	std	Z+1, r25	; 0x01
    63cc:	80 83       	st	Z, r24
    63ce:	de 01       	movw	r26, r28
    63d0:	a6 58       	subi	r26, 0x86	; 134
    63d2:	bf 4f       	sbci	r27, 0xFF	; 255
    63d4:	fe 01       	movw	r30, r28
    63d6:	e2 58       	subi	r30, 0x82	; 130
    63d8:	ff 4f       	sbci	r31, 0xFF	; 255
    63da:	80 81       	ld	r24, Z
    63dc:	91 81       	ldd	r25, Z+1	; 0x01
    63de:	11 96       	adiw	r26, 0x01	; 1
    63e0:	9c 93       	st	X, r25
    63e2:	8e 93       	st	-X, r24
    63e4:	fe 01       	movw	r30, r28
    63e6:	e6 58       	subi	r30, 0x86	; 134
    63e8:	ff 4f       	sbci	r31, 0xFF	; 255
    63ea:	80 81       	ld	r24, Z
    63ec:	91 81       	ldd	r25, Z+1	; 0x01
    63ee:	01 97       	sbiw	r24, 0x01	; 1
    63f0:	f1 f7       	brne	.-4      	; 0x63ee <readgamepad+0x2486>
    63f2:	fe 01       	movw	r30, r28
    63f4:	e6 58       	subi	r30, 0x86	; 134
    63f6:	ff 4f       	sbci	r31, 0xFF	; 255
    63f8:	91 83       	std	Z+1, r25	; 0x01
    63fa:	80 83       	st	Z, r24
    63fc:	22 c0       	rjmp	.+68     	; 0x6442 <readgamepad+0x24da>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    63fe:	8e 01       	movw	r16, r28
    6400:	08 57       	subi	r16, 0x78	; 120
    6402:	1f 4f       	sbci	r17, 0xFF	; 255
    6404:	fe 01       	movw	r30, r28
    6406:	e7 57       	subi	r30, 0x77	; 119
    6408:	ff 4f       	sbci	r31, 0xFF	; 255
    640a:	60 81       	ld	r22, Z
    640c:	71 81       	ldd	r23, Z+1	; 0x01
    640e:	82 81       	ldd	r24, Z+2	; 0x02
    6410:	93 81       	ldd	r25, Z+3	; 0x03
    6412:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6416:	dc 01       	movw	r26, r24
    6418:	cb 01       	movw	r24, r22
    641a:	f8 01       	movw	r30, r16
    641c:	80 83       	st	Z, r24
    641e:	de 01       	movw	r26, r28
    6420:	a7 58       	subi	r26, 0x87	; 135
    6422:	bf 4f       	sbci	r27, 0xFF	; 255
    6424:	fe 01       	movw	r30, r28
    6426:	e8 57       	subi	r30, 0x78	; 120
    6428:	ff 4f       	sbci	r31, 0xFF	; 255
    642a:	80 81       	ld	r24, Z
    642c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    642e:	fe 01       	movw	r30, r28
    6430:	e7 58       	subi	r30, 0x87	; 135
    6432:	ff 4f       	sbci	r31, 0xFF	; 255
    6434:	80 81       	ld	r24, Z
    6436:	8a 95       	dec	r24
    6438:	f1 f7       	brne	.-4      	; 0x6436 <readgamepad+0x24ce>
    643a:	fe 01       	movw	r30, r28
    643c:	e7 58       	subi	r30, 0x87	; 135
    643e:	ff 4f       	sbci	r31, 0xFF	; 255
    6440:	80 83       	st	Z, r24
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    6442:	e3 e3       	ldi	r30, 0x33	; 51
    6444:	f0 e0       	ldi	r31, 0x00	; 0
    6446:	80 81       	ld	r24, Z
    6448:	88 2f       	mov	r24, r24
    644a:	90 e0       	ldi	r25, 0x00	; 0
    644c:	82 70       	andi	r24, 0x02	; 2
    644e:	90 70       	andi	r25, 0x00	; 0
    6450:	00 97       	sbiw	r24, 0x00	; 0
    6452:	a1 f4       	brne	.+40     	; 0x647c <readgamepad+0x2514>
			cbi(ps2data7,i); 
    6454:	20 91 66 00 	lds	r18, 0x0066
    6458:	30 91 67 00 	lds	r19, 0x0067
    645c:	81 e0       	ldi	r24, 0x01	; 1
    645e:	90 e0       	ldi	r25, 0x00	; 0
    6460:	02 2e       	mov	r0, r18
    6462:	02 c0       	rjmp	.+4      	; 0x6468 <readgamepad+0x2500>
    6464:	88 0f       	add	r24, r24
    6466:	99 1f       	adc	r25, r25
    6468:	0a 94       	dec	r0
    646a:	e2 f7       	brpl	.-8      	; 0x6464 <readgamepad+0x24fc>
    646c:	98 2f       	mov	r25, r24
    646e:	90 95       	com	r25
    6470:	80 91 62 00 	lds	r24, 0x0062
    6474:	89 23       	and	r24, r25
    6476:	80 93 62 00 	sts	0x0062, r24
    647a:	11 c0       	rjmp	.+34     	; 0x649e <readgamepad+0x2536>
		else
			sbi(ps2data7,i); 
    647c:	20 91 66 00 	lds	r18, 0x0066
    6480:	30 91 67 00 	lds	r19, 0x0067
    6484:	81 e0       	ldi	r24, 0x01	; 1
    6486:	90 e0       	ldi	r25, 0x00	; 0
    6488:	02 c0       	rjmp	.+4      	; 0x648e <readgamepad+0x2526>
    648a:	88 0f       	add	r24, r24
    648c:	99 1f       	adc	r25, r25
    648e:	2a 95       	dec	r18
    6490:	e2 f7       	brpl	.-8      	; 0x648a <readgamepad+0x2522>
    6492:	98 2f       	mov	r25, r24
    6494:	80 91 62 00 	lds	r24, 0x0062
    6498:	89 2b       	or	r24, r25
    649a:	80 93 62 00 	sts	0x0062, r24
		sbi(ps2port,ps2clk);
    649e:	a5 e3       	ldi	r26, 0x35	; 53
    64a0:	b0 e0       	ldi	r27, 0x00	; 0
    64a2:	e5 e3       	ldi	r30, 0x35	; 53
    64a4:	f0 e0       	ldi	r31, 0x00	; 0
    64a6:	80 81       	ld	r24, Z
    64a8:	81 60       	ori	r24, 0x01	; 1
    64aa:	8c 93       	st	X, r24
    64ac:	fe 01       	movw	r30, r28
    64ae:	eb 58       	subi	r30, 0x8B	; 139
    64b0:	ff 4f       	sbci	r31, 0xFF	; 255
    64b2:	80 e0       	ldi	r24, 0x00	; 0
    64b4:	90 e0       	ldi	r25, 0x00	; 0
    64b6:	a0 e8       	ldi	r26, 0x80	; 128
    64b8:	bf e3       	ldi	r27, 0x3F	; 63
    64ba:	80 83       	st	Z, r24
    64bc:	91 83       	std	Z+1, r25	; 0x01
    64be:	a2 83       	std	Z+2, r26	; 0x02
    64c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    64c2:	8e 01       	movw	r16, r28
    64c4:	0f 58       	subi	r16, 0x8F	; 143
    64c6:	1f 4f       	sbci	r17, 0xFF	; 255
    64c8:	fe 01       	movw	r30, r28
    64ca:	eb 58       	subi	r30, 0x8B	; 139
    64cc:	ff 4f       	sbci	r31, 0xFF	; 255
    64ce:	60 81       	ld	r22, Z
    64d0:	71 81       	ldd	r23, Z+1	; 0x01
    64d2:	82 81       	ldd	r24, Z+2	; 0x02
    64d4:	93 81       	ldd	r25, Z+3	; 0x03
    64d6:	2b ea       	ldi	r18, 0xAB	; 171
    64d8:	3a ea       	ldi	r19, 0xAA	; 170
    64da:	4a ea       	ldi	r20, 0xAA	; 170
    64dc:	50 e4       	ldi	r21, 0x40	; 64
    64de:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    64e2:	dc 01       	movw	r26, r24
    64e4:	cb 01       	movw	r24, r22
    64e6:	f8 01       	movw	r30, r16
    64e8:	80 83       	st	Z, r24
    64ea:	91 83       	std	Z+1, r25	; 0x01
    64ec:	a2 83       	std	Z+2, r26	; 0x02
    64ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    64f0:	fe 01       	movw	r30, r28
    64f2:	ef 58       	subi	r30, 0x8F	; 143
    64f4:	ff 4f       	sbci	r31, 0xFF	; 255
    64f6:	60 81       	ld	r22, Z
    64f8:	71 81       	ldd	r23, Z+1	; 0x01
    64fa:	82 81       	ldd	r24, Z+2	; 0x02
    64fc:	93 81       	ldd	r25, Z+3	; 0x03
    64fe:	20 e0       	ldi	r18, 0x00	; 0
    6500:	30 e0       	ldi	r19, 0x00	; 0
    6502:	40 e8       	ldi	r20, 0x80	; 128
    6504:	5f e3       	ldi	r21, 0x3F	; 63
    6506:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    650a:	88 23       	and	r24, r24
    650c:	34 f4       	brge	.+12     	; 0x651a <readgamepad+0x25b2>
		__ticks = 1;
    650e:	fe 01       	movw	r30, r28
    6510:	e0 59       	subi	r30, 0x90	; 144
    6512:	ff 4f       	sbci	r31, 0xFF	; 255
    6514:	81 e0       	ldi	r24, 0x01	; 1
    6516:	80 83       	st	Z, r24
    6518:	e0 c0       	rjmp	.+448    	; 0x66da <readgamepad+0x2772>
	else if (__tmp > 255)
    651a:	fe 01       	movw	r30, r28
    651c:	ef 58       	subi	r30, 0x8F	; 143
    651e:	ff 4f       	sbci	r31, 0xFF	; 255
    6520:	60 81       	ld	r22, Z
    6522:	71 81       	ldd	r23, Z+1	; 0x01
    6524:	82 81       	ldd	r24, Z+2	; 0x02
    6526:	93 81       	ldd	r25, Z+3	; 0x03
    6528:	20 e0       	ldi	r18, 0x00	; 0
    652a:	30 e0       	ldi	r19, 0x00	; 0
    652c:	4f e7       	ldi	r20, 0x7F	; 127
    652e:	53 e4       	ldi	r21, 0x43	; 67
    6530:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6534:	18 16       	cp	r1, r24
    6536:	0c f0       	brlt	.+2      	; 0x653a <readgamepad+0x25d2>
    6538:	c0 c0       	rjmp	.+384    	; 0x66ba <readgamepad+0x2752>
	{
		_delay_ms(__us / 1000.0);
    653a:	fe 01       	movw	r30, r28
    653c:	eb 58       	subi	r30, 0x8B	; 139
    653e:	ff 4f       	sbci	r31, 0xFF	; 255
    6540:	60 81       	ld	r22, Z
    6542:	71 81       	ldd	r23, Z+1	; 0x01
    6544:	82 81       	ldd	r24, Z+2	; 0x02
    6546:	93 81       	ldd	r25, Z+3	; 0x03
    6548:	20 e0       	ldi	r18, 0x00	; 0
    654a:	30 e0       	ldi	r19, 0x00	; 0
    654c:	4a e7       	ldi	r20, 0x7A	; 122
    654e:	54 e4       	ldi	r21, 0x44	; 68
    6550:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    6554:	dc 01       	movw	r26, r24
    6556:	cb 01       	movw	r24, r22
    6558:	fe 01       	movw	r30, r28
    655a:	e4 59       	subi	r30, 0x94	; 148
    655c:	ff 4f       	sbci	r31, 0xFF	; 255
    655e:	80 83       	st	Z, r24
    6560:	91 83       	std	Z+1, r25	; 0x01
    6562:	a2 83       	std	Z+2, r26	; 0x02
    6564:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6566:	8e 01       	movw	r16, r28
    6568:	08 59       	subi	r16, 0x98	; 152
    656a:	1f 4f       	sbci	r17, 0xFF	; 255
    656c:	fe 01       	movw	r30, r28
    656e:	e4 59       	subi	r30, 0x94	; 148
    6570:	ff 4f       	sbci	r31, 0xFF	; 255
    6572:	60 81       	ld	r22, Z
    6574:	71 81       	ldd	r23, Z+1	; 0x01
    6576:	82 81       	ldd	r24, Z+2	; 0x02
    6578:	93 81       	ldd	r25, Z+3	; 0x03
    657a:	20 e0       	ldi	r18, 0x00	; 0
    657c:	30 e0       	ldi	r19, 0x00	; 0
    657e:	4a e7       	ldi	r20, 0x7A	; 122
    6580:	55 e4       	ldi	r21, 0x45	; 69
    6582:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6586:	dc 01       	movw	r26, r24
    6588:	cb 01       	movw	r24, r22
    658a:	f8 01       	movw	r30, r16
    658c:	80 83       	st	Z, r24
    658e:	91 83       	std	Z+1, r25	; 0x01
    6590:	a2 83       	std	Z+2, r26	; 0x02
    6592:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6594:	fe 01       	movw	r30, r28
    6596:	e8 59       	subi	r30, 0x98	; 152
    6598:	ff 4f       	sbci	r31, 0xFF	; 255
    659a:	60 81       	ld	r22, Z
    659c:	71 81       	ldd	r23, Z+1	; 0x01
    659e:	82 81       	ldd	r24, Z+2	; 0x02
    65a0:	93 81       	ldd	r25, Z+3	; 0x03
    65a2:	20 e0       	ldi	r18, 0x00	; 0
    65a4:	30 e0       	ldi	r19, 0x00	; 0
    65a6:	40 e8       	ldi	r20, 0x80	; 128
    65a8:	5f e3       	ldi	r21, 0x3F	; 63
    65aa:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    65ae:	88 23       	and	r24, r24
    65b0:	44 f4       	brge	.+16     	; 0x65c2 <readgamepad+0x265a>
		__ticks = 1;
    65b2:	fe 01       	movw	r30, r28
    65b4:	ea 59       	subi	r30, 0x9A	; 154
    65b6:	ff 4f       	sbci	r31, 0xFF	; 255
    65b8:	81 e0       	ldi	r24, 0x01	; 1
    65ba:	90 e0       	ldi	r25, 0x00	; 0
    65bc:	91 83       	std	Z+1, r25	; 0x01
    65be:	80 83       	st	Z, r24
    65c0:	64 c0       	rjmp	.+200    	; 0x668a <readgamepad+0x2722>
	else if (__tmp > 65535)
    65c2:	fe 01       	movw	r30, r28
    65c4:	e8 59       	subi	r30, 0x98	; 152
    65c6:	ff 4f       	sbci	r31, 0xFF	; 255
    65c8:	60 81       	ld	r22, Z
    65ca:	71 81       	ldd	r23, Z+1	; 0x01
    65cc:	82 81       	ldd	r24, Z+2	; 0x02
    65ce:	93 81       	ldd	r25, Z+3	; 0x03
    65d0:	20 e0       	ldi	r18, 0x00	; 0
    65d2:	3f ef       	ldi	r19, 0xFF	; 255
    65d4:	4f e7       	ldi	r20, 0x7F	; 127
    65d6:	57 e4       	ldi	r21, 0x47	; 71
    65d8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    65dc:	18 16       	cp	r1, r24
    65de:	0c f0       	brlt	.+2      	; 0x65e2 <readgamepad+0x267a>
    65e0:	43 c0       	rjmp	.+134    	; 0x6668 <readgamepad+0x2700>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    65e2:	fe 01       	movw	r30, r28
    65e4:	e4 59       	subi	r30, 0x94	; 148
    65e6:	ff 4f       	sbci	r31, 0xFF	; 255
    65e8:	60 81       	ld	r22, Z
    65ea:	71 81       	ldd	r23, Z+1	; 0x01
    65ec:	82 81       	ldd	r24, Z+2	; 0x02
    65ee:	93 81       	ldd	r25, Z+3	; 0x03
    65f0:	20 e0       	ldi	r18, 0x00	; 0
    65f2:	30 e0       	ldi	r19, 0x00	; 0
    65f4:	40 e2       	ldi	r20, 0x20	; 32
    65f6:	51 e4       	ldi	r21, 0x41	; 65
    65f8:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    65fc:	dc 01       	movw	r26, r24
    65fe:	cb 01       	movw	r24, r22
    6600:	8e 01       	movw	r16, r28
    6602:	0a 59       	subi	r16, 0x9A	; 154
    6604:	1f 4f       	sbci	r17, 0xFF	; 255
    6606:	bc 01       	movw	r22, r24
    6608:	cd 01       	movw	r24, r26
    660a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    660e:	dc 01       	movw	r26, r24
    6610:	cb 01       	movw	r24, r22
    6612:	f8 01       	movw	r30, r16
    6614:	91 83       	std	Z+1, r25	; 0x01
    6616:	80 83       	st	Z, r24
    6618:	1f c0       	rjmp	.+62     	; 0x6658 <readgamepad+0x26f0>
    661a:	fe 01       	movw	r30, r28
    661c:	ec 59       	subi	r30, 0x9C	; 156
    661e:	ff 4f       	sbci	r31, 0xFF	; 255
    6620:	80 e9       	ldi	r24, 0x90	; 144
    6622:	91 e0       	ldi	r25, 0x01	; 1
    6624:	91 83       	std	Z+1, r25	; 0x01
    6626:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    6628:	fe 01       	movw	r30, r28
    662a:	ec 59       	subi	r30, 0x9C	; 156
    662c:	ff 4f       	sbci	r31, 0xFF	; 255
    662e:	80 81       	ld	r24, Z
    6630:	91 81       	ldd	r25, Z+1	; 0x01
    6632:	01 97       	sbiw	r24, 0x01	; 1
    6634:	f1 f7       	brne	.-4      	; 0x6632 <readgamepad+0x26ca>
    6636:	fe 01       	movw	r30, r28
    6638:	ec 59       	subi	r30, 0x9C	; 156
    663a:	ff 4f       	sbci	r31, 0xFF	; 255
    663c:	91 83       	std	Z+1, r25	; 0x01
    663e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6640:	de 01       	movw	r26, r28
    6642:	aa 59       	subi	r26, 0x9A	; 154
    6644:	bf 4f       	sbci	r27, 0xFF	; 255
    6646:	fe 01       	movw	r30, r28
    6648:	ea 59       	subi	r30, 0x9A	; 154
    664a:	ff 4f       	sbci	r31, 0xFF	; 255
    664c:	80 81       	ld	r24, Z
    664e:	91 81       	ldd	r25, Z+1	; 0x01
    6650:	01 97       	sbiw	r24, 0x01	; 1
    6652:	11 96       	adiw	r26, 0x01	; 1
    6654:	9c 93       	st	X, r25
    6656:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6658:	fe 01       	movw	r30, r28
    665a:	ea 59       	subi	r30, 0x9A	; 154
    665c:	ff 4f       	sbci	r31, 0xFF	; 255
    665e:	80 81       	ld	r24, Z
    6660:	91 81       	ldd	r25, Z+1	; 0x01
    6662:	00 97       	sbiw	r24, 0x00	; 0
    6664:	d1 f6       	brne	.-76     	; 0x661a <readgamepad+0x26b2>
    6666:	4b c0       	rjmp	.+150    	; 0x66fe <readgamepad+0x2796>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6668:	8e 01       	movw	r16, r28
    666a:	0a 59       	subi	r16, 0x9A	; 154
    666c:	1f 4f       	sbci	r17, 0xFF	; 255
    666e:	fe 01       	movw	r30, r28
    6670:	e8 59       	subi	r30, 0x98	; 152
    6672:	ff 4f       	sbci	r31, 0xFF	; 255
    6674:	60 81       	ld	r22, Z
    6676:	71 81       	ldd	r23, Z+1	; 0x01
    6678:	82 81       	ldd	r24, Z+2	; 0x02
    667a:	93 81       	ldd	r25, Z+3	; 0x03
    667c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6680:	dc 01       	movw	r26, r24
    6682:	cb 01       	movw	r24, r22
    6684:	f8 01       	movw	r30, r16
    6686:	91 83       	std	Z+1, r25	; 0x01
    6688:	80 83       	st	Z, r24
    668a:	de 01       	movw	r26, r28
    668c:	ae 59       	subi	r26, 0x9E	; 158
    668e:	bf 4f       	sbci	r27, 0xFF	; 255
    6690:	fe 01       	movw	r30, r28
    6692:	ea 59       	subi	r30, 0x9A	; 154
    6694:	ff 4f       	sbci	r31, 0xFF	; 255
    6696:	80 81       	ld	r24, Z
    6698:	91 81       	ldd	r25, Z+1	; 0x01
    669a:	11 96       	adiw	r26, 0x01	; 1
    669c:	9c 93       	st	X, r25
    669e:	8e 93       	st	-X, r24
    66a0:	fe 01       	movw	r30, r28
    66a2:	ee 59       	subi	r30, 0x9E	; 158
    66a4:	ff 4f       	sbci	r31, 0xFF	; 255
    66a6:	80 81       	ld	r24, Z
    66a8:	91 81       	ldd	r25, Z+1	; 0x01
    66aa:	01 97       	sbiw	r24, 0x01	; 1
    66ac:	f1 f7       	brne	.-4      	; 0x66aa <readgamepad+0x2742>
    66ae:	fe 01       	movw	r30, r28
    66b0:	ee 59       	subi	r30, 0x9E	; 158
    66b2:	ff 4f       	sbci	r31, 0xFF	; 255
    66b4:	91 83       	std	Z+1, r25	; 0x01
    66b6:	80 83       	st	Z, r24
    66b8:	22 c0       	rjmp	.+68     	; 0x66fe <readgamepad+0x2796>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    66ba:	8e 01       	movw	r16, r28
    66bc:	00 59       	subi	r16, 0x90	; 144
    66be:	1f 4f       	sbci	r17, 0xFF	; 255
    66c0:	fe 01       	movw	r30, r28
    66c2:	ef 58       	subi	r30, 0x8F	; 143
    66c4:	ff 4f       	sbci	r31, 0xFF	; 255
    66c6:	60 81       	ld	r22, Z
    66c8:	71 81       	ldd	r23, Z+1	; 0x01
    66ca:	82 81       	ldd	r24, Z+2	; 0x02
    66cc:	93 81       	ldd	r25, Z+3	; 0x03
    66ce:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    66d2:	dc 01       	movw	r26, r24
    66d4:	cb 01       	movw	r24, r22
    66d6:	f8 01       	movw	r30, r16
    66d8:	80 83       	st	Z, r24
    66da:	de 01       	movw	r26, r28
    66dc:	af 59       	subi	r26, 0x9F	; 159
    66de:	bf 4f       	sbci	r27, 0xFF	; 255
    66e0:	fe 01       	movw	r30, r28
    66e2:	e0 59       	subi	r30, 0x90	; 144
    66e4:	ff 4f       	sbci	r31, 0xFF	; 255
    66e6:	80 81       	ld	r24, Z
    66e8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    66ea:	fe 01       	movw	r30, r28
    66ec:	ef 59       	subi	r30, 0x9F	; 159
    66ee:	ff 4f       	sbci	r31, 0xFF	; 255
    66f0:	80 81       	ld	r24, Z
    66f2:	8a 95       	dec	r24
    66f4:	f1 f7       	brne	.-4      	; 0x66f2 <readgamepad+0x278a>
    66f6:	fe 01       	movw	r30, r28
    66f8:	ef 59       	subi	r30, 0x9F	; 159
    66fa:	ff 4f       	sbci	r31, 0xFF	; 255
    66fc:	80 83       	st	Z, r24
	
	
	
	
	ps2data7=0;
	for(i=0;i<8;i++) // 7 byte yaxis of left
    66fe:	80 91 66 00 	lds	r24, 0x0066
    6702:	90 91 67 00 	lds	r25, 0x0067
    6706:	01 96       	adiw	r24, 0x01	; 1
    6708:	90 93 67 00 	sts	0x0067, r25
    670c:	80 93 66 00 	sts	0x0066, r24
    6710:	80 91 66 00 	lds	r24, 0x0066
    6714:	90 91 67 00 	lds	r25, 0x0067
    6718:	88 30       	cpi	r24, 0x08	; 8
    671a:	91 05       	cpc	r25, r1
    671c:	0c f4       	brge	.+2      	; 0x6720 <readgamepad+0x27b8>
    671e:	5a cd       	rjmp	.-1356   	; 0x61d4 <readgamepad+0x226c>
		else
			sbi(ps2data7,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    6720:	a5 e3       	ldi	r26, 0x35	; 53
    6722:	b0 e0       	ldi	r27, 0x00	; 0
    6724:	e5 e3       	ldi	r30, 0x35	; 53
    6726:	f0 e0       	ldi	r31, 0x00	; 0
    6728:	80 81       	ld	r24, Z
    672a:	84 60       	ori	r24, 0x04	; 4
    672c:	8c 93       	st	X, r24
	

	
	
	ps2data8=0;
    672e:	10 92 69 00 	sts	0x0069, r1
	for(i=0;i<8;i++) // 8 byte xaxis of right
    6732:	10 92 67 00 	sts	0x0067, r1
    6736:	10 92 66 00 	sts	0x0066, r1
    673a:	52 c2       	rjmp	.+1188   	; 0x6be0 <readgamepad+0x2c78>
	{
		cbi(ps2port,ps2cmd);
    673c:	a5 e3       	ldi	r26, 0x35	; 53
    673e:	b0 e0       	ldi	r27, 0x00	; 0
    6740:	e5 e3       	ldi	r30, 0x35	; 53
    6742:	f0 e0       	ldi	r31, 0x00	; 0
    6744:	80 81       	ld	r24, Z
    6746:	8b 7f       	andi	r24, 0xFB	; 251
    6748:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    674a:	a5 e3       	ldi	r26, 0x35	; 53
    674c:	b0 e0       	ldi	r27, 0x00	; 0
    674e:	e5 e3       	ldi	r30, 0x35	; 53
    6750:	f0 e0       	ldi	r31, 0x00	; 0
    6752:	80 81       	ld	r24, Z
    6754:	8e 7f       	andi	r24, 0xFE	; 254
    6756:	8c 93       	st	X, r24
    6758:	fe 01       	movw	r30, r28
    675a:	e3 5a       	subi	r30, 0xA3	; 163
    675c:	ff 4f       	sbci	r31, 0xFF	; 255
    675e:	80 e0       	ldi	r24, 0x00	; 0
    6760:	90 e0       	ldi	r25, 0x00	; 0
    6762:	a0 e8       	ldi	r26, 0x80	; 128
    6764:	bf e3       	ldi	r27, 0x3F	; 63
    6766:	80 83       	st	Z, r24
    6768:	91 83       	std	Z+1, r25	; 0x01
    676a:	a2 83       	std	Z+2, r26	; 0x02
    676c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    676e:	8e 01       	movw	r16, r28
    6770:	07 5a       	subi	r16, 0xA7	; 167
    6772:	1f 4f       	sbci	r17, 0xFF	; 255
    6774:	fe 01       	movw	r30, r28
    6776:	e3 5a       	subi	r30, 0xA3	; 163
    6778:	ff 4f       	sbci	r31, 0xFF	; 255
    677a:	60 81       	ld	r22, Z
    677c:	71 81       	ldd	r23, Z+1	; 0x01
    677e:	82 81       	ldd	r24, Z+2	; 0x02
    6780:	93 81       	ldd	r25, Z+3	; 0x03
    6782:	2b ea       	ldi	r18, 0xAB	; 171
    6784:	3a ea       	ldi	r19, 0xAA	; 170
    6786:	4a ea       	ldi	r20, 0xAA	; 170
    6788:	50 e4       	ldi	r21, 0x40	; 64
    678a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    678e:	dc 01       	movw	r26, r24
    6790:	cb 01       	movw	r24, r22
    6792:	f8 01       	movw	r30, r16
    6794:	80 83       	st	Z, r24
    6796:	91 83       	std	Z+1, r25	; 0x01
    6798:	a2 83       	std	Z+2, r26	; 0x02
    679a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    679c:	fe 01       	movw	r30, r28
    679e:	e7 5a       	subi	r30, 0xA7	; 167
    67a0:	ff 4f       	sbci	r31, 0xFF	; 255
    67a2:	60 81       	ld	r22, Z
    67a4:	71 81       	ldd	r23, Z+1	; 0x01
    67a6:	82 81       	ldd	r24, Z+2	; 0x02
    67a8:	93 81       	ldd	r25, Z+3	; 0x03
    67aa:	20 e0       	ldi	r18, 0x00	; 0
    67ac:	30 e0       	ldi	r19, 0x00	; 0
    67ae:	40 e8       	ldi	r20, 0x80	; 128
    67b0:	5f e3       	ldi	r21, 0x3F	; 63
    67b2:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    67b6:	88 23       	and	r24, r24
    67b8:	34 f4       	brge	.+12     	; 0x67c6 <readgamepad+0x285e>
		__ticks = 1;
    67ba:	fe 01       	movw	r30, r28
    67bc:	e8 5a       	subi	r30, 0xA8	; 168
    67be:	ff 4f       	sbci	r31, 0xFF	; 255
    67c0:	81 e0       	ldi	r24, 0x01	; 1
    67c2:	80 83       	st	Z, r24
    67c4:	e0 c0       	rjmp	.+448    	; 0x6986 <readgamepad+0x2a1e>
	else if (__tmp > 255)
    67c6:	fe 01       	movw	r30, r28
    67c8:	e7 5a       	subi	r30, 0xA7	; 167
    67ca:	ff 4f       	sbci	r31, 0xFF	; 255
    67cc:	60 81       	ld	r22, Z
    67ce:	71 81       	ldd	r23, Z+1	; 0x01
    67d0:	82 81       	ldd	r24, Z+2	; 0x02
    67d2:	93 81       	ldd	r25, Z+3	; 0x03
    67d4:	20 e0       	ldi	r18, 0x00	; 0
    67d6:	30 e0       	ldi	r19, 0x00	; 0
    67d8:	4f e7       	ldi	r20, 0x7F	; 127
    67da:	53 e4       	ldi	r21, 0x43	; 67
    67dc:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    67e0:	18 16       	cp	r1, r24
    67e2:	0c f0       	brlt	.+2      	; 0x67e6 <readgamepad+0x287e>
    67e4:	c0 c0       	rjmp	.+384    	; 0x6966 <readgamepad+0x29fe>
	{
		_delay_ms(__us / 1000.0);
    67e6:	fe 01       	movw	r30, r28
    67e8:	e3 5a       	subi	r30, 0xA3	; 163
    67ea:	ff 4f       	sbci	r31, 0xFF	; 255
    67ec:	60 81       	ld	r22, Z
    67ee:	71 81       	ldd	r23, Z+1	; 0x01
    67f0:	82 81       	ldd	r24, Z+2	; 0x02
    67f2:	93 81       	ldd	r25, Z+3	; 0x03
    67f4:	20 e0       	ldi	r18, 0x00	; 0
    67f6:	30 e0       	ldi	r19, 0x00	; 0
    67f8:	4a e7       	ldi	r20, 0x7A	; 122
    67fa:	54 e4       	ldi	r21, 0x44	; 68
    67fc:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    6800:	dc 01       	movw	r26, r24
    6802:	cb 01       	movw	r24, r22
    6804:	fe 01       	movw	r30, r28
    6806:	ec 5a       	subi	r30, 0xAC	; 172
    6808:	ff 4f       	sbci	r31, 0xFF	; 255
    680a:	80 83       	st	Z, r24
    680c:	91 83       	std	Z+1, r25	; 0x01
    680e:	a2 83       	std	Z+2, r26	; 0x02
    6810:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6812:	8e 01       	movw	r16, r28
    6814:	00 5b       	subi	r16, 0xB0	; 176
    6816:	1f 4f       	sbci	r17, 0xFF	; 255
    6818:	fe 01       	movw	r30, r28
    681a:	ec 5a       	subi	r30, 0xAC	; 172
    681c:	ff 4f       	sbci	r31, 0xFF	; 255
    681e:	60 81       	ld	r22, Z
    6820:	71 81       	ldd	r23, Z+1	; 0x01
    6822:	82 81       	ldd	r24, Z+2	; 0x02
    6824:	93 81       	ldd	r25, Z+3	; 0x03
    6826:	20 e0       	ldi	r18, 0x00	; 0
    6828:	30 e0       	ldi	r19, 0x00	; 0
    682a:	4a e7       	ldi	r20, 0x7A	; 122
    682c:	55 e4       	ldi	r21, 0x45	; 69
    682e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6832:	dc 01       	movw	r26, r24
    6834:	cb 01       	movw	r24, r22
    6836:	f8 01       	movw	r30, r16
    6838:	80 83       	st	Z, r24
    683a:	91 83       	std	Z+1, r25	; 0x01
    683c:	a2 83       	std	Z+2, r26	; 0x02
    683e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6840:	fe 01       	movw	r30, r28
    6842:	e0 5b       	subi	r30, 0xB0	; 176
    6844:	ff 4f       	sbci	r31, 0xFF	; 255
    6846:	60 81       	ld	r22, Z
    6848:	71 81       	ldd	r23, Z+1	; 0x01
    684a:	82 81       	ldd	r24, Z+2	; 0x02
    684c:	93 81       	ldd	r25, Z+3	; 0x03
    684e:	20 e0       	ldi	r18, 0x00	; 0
    6850:	30 e0       	ldi	r19, 0x00	; 0
    6852:	40 e8       	ldi	r20, 0x80	; 128
    6854:	5f e3       	ldi	r21, 0x3F	; 63
    6856:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    685a:	88 23       	and	r24, r24
    685c:	44 f4       	brge	.+16     	; 0x686e <readgamepad+0x2906>
		__ticks = 1;
    685e:	fe 01       	movw	r30, r28
    6860:	e2 5b       	subi	r30, 0xB2	; 178
    6862:	ff 4f       	sbci	r31, 0xFF	; 255
    6864:	81 e0       	ldi	r24, 0x01	; 1
    6866:	90 e0       	ldi	r25, 0x00	; 0
    6868:	91 83       	std	Z+1, r25	; 0x01
    686a:	80 83       	st	Z, r24
    686c:	64 c0       	rjmp	.+200    	; 0x6936 <readgamepad+0x29ce>
	else if (__tmp > 65535)
    686e:	fe 01       	movw	r30, r28
    6870:	e0 5b       	subi	r30, 0xB0	; 176
    6872:	ff 4f       	sbci	r31, 0xFF	; 255
    6874:	60 81       	ld	r22, Z
    6876:	71 81       	ldd	r23, Z+1	; 0x01
    6878:	82 81       	ldd	r24, Z+2	; 0x02
    687a:	93 81       	ldd	r25, Z+3	; 0x03
    687c:	20 e0       	ldi	r18, 0x00	; 0
    687e:	3f ef       	ldi	r19, 0xFF	; 255
    6880:	4f e7       	ldi	r20, 0x7F	; 127
    6882:	57 e4       	ldi	r21, 0x47	; 71
    6884:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6888:	18 16       	cp	r1, r24
    688a:	0c f0       	brlt	.+2      	; 0x688e <readgamepad+0x2926>
    688c:	43 c0       	rjmp	.+134    	; 0x6914 <readgamepad+0x29ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    688e:	fe 01       	movw	r30, r28
    6890:	ec 5a       	subi	r30, 0xAC	; 172
    6892:	ff 4f       	sbci	r31, 0xFF	; 255
    6894:	60 81       	ld	r22, Z
    6896:	71 81       	ldd	r23, Z+1	; 0x01
    6898:	82 81       	ldd	r24, Z+2	; 0x02
    689a:	93 81       	ldd	r25, Z+3	; 0x03
    689c:	20 e0       	ldi	r18, 0x00	; 0
    689e:	30 e0       	ldi	r19, 0x00	; 0
    68a0:	40 e2       	ldi	r20, 0x20	; 32
    68a2:	51 e4       	ldi	r21, 0x41	; 65
    68a4:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    68a8:	dc 01       	movw	r26, r24
    68aa:	cb 01       	movw	r24, r22
    68ac:	8e 01       	movw	r16, r28
    68ae:	02 5b       	subi	r16, 0xB2	; 178
    68b0:	1f 4f       	sbci	r17, 0xFF	; 255
    68b2:	bc 01       	movw	r22, r24
    68b4:	cd 01       	movw	r24, r26
    68b6:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    68ba:	dc 01       	movw	r26, r24
    68bc:	cb 01       	movw	r24, r22
    68be:	f8 01       	movw	r30, r16
    68c0:	91 83       	std	Z+1, r25	; 0x01
    68c2:	80 83       	st	Z, r24
    68c4:	1f c0       	rjmp	.+62     	; 0x6904 <readgamepad+0x299c>
    68c6:	fe 01       	movw	r30, r28
    68c8:	e4 5b       	subi	r30, 0xB4	; 180
    68ca:	ff 4f       	sbci	r31, 0xFF	; 255
    68cc:	80 e9       	ldi	r24, 0x90	; 144
    68ce:	91 e0       	ldi	r25, 0x01	; 1
    68d0:	91 83       	std	Z+1, r25	; 0x01
    68d2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    68d4:	fe 01       	movw	r30, r28
    68d6:	e4 5b       	subi	r30, 0xB4	; 180
    68d8:	ff 4f       	sbci	r31, 0xFF	; 255
    68da:	80 81       	ld	r24, Z
    68dc:	91 81       	ldd	r25, Z+1	; 0x01
    68de:	01 97       	sbiw	r24, 0x01	; 1
    68e0:	f1 f7       	brne	.-4      	; 0x68de <readgamepad+0x2976>
    68e2:	fe 01       	movw	r30, r28
    68e4:	e4 5b       	subi	r30, 0xB4	; 180
    68e6:	ff 4f       	sbci	r31, 0xFF	; 255
    68e8:	91 83       	std	Z+1, r25	; 0x01
    68ea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    68ec:	de 01       	movw	r26, r28
    68ee:	a2 5b       	subi	r26, 0xB2	; 178
    68f0:	bf 4f       	sbci	r27, 0xFF	; 255
    68f2:	fe 01       	movw	r30, r28
    68f4:	e2 5b       	subi	r30, 0xB2	; 178
    68f6:	ff 4f       	sbci	r31, 0xFF	; 255
    68f8:	80 81       	ld	r24, Z
    68fa:	91 81       	ldd	r25, Z+1	; 0x01
    68fc:	01 97       	sbiw	r24, 0x01	; 1
    68fe:	11 96       	adiw	r26, 0x01	; 1
    6900:	9c 93       	st	X, r25
    6902:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6904:	fe 01       	movw	r30, r28
    6906:	e2 5b       	subi	r30, 0xB2	; 178
    6908:	ff 4f       	sbci	r31, 0xFF	; 255
    690a:	80 81       	ld	r24, Z
    690c:	91 81       	ldd	r25, Z+1	; 0x01
    690e:	00 97       	sbiw	r24, 0x00	; 0
    6910:	d1 f6       	brne	.-76     	; 0x68c6 <readgamepad+0x295e>
    6912:	4b c0       	rjmp	.+150    	; 0x69aa <readgamepad+0x2a42>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6914:	8e 01       	movw	r16, r28
    6916:	02 5b       	subi	r16, 0xB2	; 178
    6918:	1f 4f       	sbci	r17, 0xFF	; 255
    691a:	fe 01       	movw	r30, r28
    691c:	e0 5b       	subi	r30, 0xB0	; 176
    691e:	ff 4f       	sbci	r31, 0xFF	; 255
    6920:	60 81       	ld	r22, Z
    6922:	71 81       	ldd	r23, Z+1	; 0x01
    6924:	82 81       	ldd	r24, Z+2	; 0x02
    6926:	93 81       	ldd	r25, Z+3	; 0x03
    6928:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    692c:	dc 01       	movw	r26, r24
    692e:	cb 01       	movw	r24, r22
    6930:	f8 01       	movw	r30, r16
    6932:	91 83       	std	Z+1, r25	; 0x01
    6934:	80 83       	st	Z, r24
    6936:	de 01       	movw	r26, r28
    6938:	a6 5b       	subi	r26, 0xB6	; 182
    693a:	bf 4f       	sbci	r27, 0xFF	; 255
    693c:	fe 01       	movw	r30, r28
    693e:	e2 5b       	subi	r30, 0xB2	; 178
    6940:	ff 4f       	sbci	r31, 0xFF	; 255
    6942:	80 81       	ld	r24, Z
    6944:	91 81       	ldd	r25, Z+1	; 0x01
    6946:	11 96       	adiw	r26, 0x01	; 1
    6948:	9c 93       	st	X, r25
    694a:	8e 93       	st	-X, r24
    694c:	fe 01       	movw	r30, r28
    694e:	e6 5b       	subi	r30, 0xB6	; 182
    6950:	ff 4f       	sbci	r31, 0xFF	; 255
    6952:	80 81       	ld	r24, Z
    6954:	91 81       	ldd	r25, Z+1	; 0x01
    6956:	01 97       	sbiw	r24, 0x01	; 1
    6958:	f1 f7       	brne	.-4      	; 0x6956 <readgamepad+0x29ee>
    695a:	fe 01       	movw	r30, r28
    695c:	e6 5b       	subi	r30, 0xB6	; 182
    695e:	ff 4f       	sbci	r31, 0xFF	; 255
    6960:	91 83       	std	Z+1, r25	; 0x01
    6962:	80 83       	st	Z, r24
    6964:	22 c0       	rjmp	.+68     	; 0x69aa <readgamepad+0x2a42>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    6966:	8e 01       	movw	r16, r28
    6968:	08 5a       	subi	r16, 0xA8	; 168
    696a:	1f 4f       	sbci	r17, 0xFF	; 255
    696c:	fe 01       	movw	r30, r28
    696e:	e7 5a       	subi	r30, 0xA7	; 167
    6970:	ff 4f       	sbci	r31, 0xFF	; 255
    6972:	60 81       	ld	r22, Z
    6974:	71 81       	ldd	r23, Z+1	; 0x01
    6976:	82 81       	ldd	r24, Z+2	; 0x02
    6978:	93 81       	ldd	r25, Z+3	; 0x03
    697a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    697e:	dc 01       	movw	r26, r24
    6980:	cb 01       	movw	r24, r22
    6982:	f8 01       	movw	r30, r16
    6984:	80 83       	st	Z, r24
    6986:	de 01       	movw	r26, r28
    6988:	a7 5b       	subi	r26, 0xB7	; 183
    698a:	bf 4f       	sbci	r27, 0xFF	; 255
    698c:	fe 01       	movw	r30, r28
    698e:	e8 5a       	subi	r30, 0xA8	; 168
    6990:	ff 4f       	sbci	r31, 0xFF	; 255
    6992:	80 81       	ld	r24, Z
    6994:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    6996:	fe 01       	movw	r30, r28
    6998:	e7 5b       	subi	r30, 0xB7	; 183
    699a:	ff 4f       	sbci	r31, 0xFF	; 255
    699c:	80 81       	ld	r24, Z
    699e:	8a 95       	dec	r24
    69a0:	f1 f7       	brne	.-4      	; 0x699e <readgamepad+0x2a36>
    69a2:	fe 01       	movw	r30, r28
    69a4:	e7 5b       	subi	r30, 0xB7	; 183
    69a6:	ff 4f       	sbci	r31, 0xFF	; 255
    69a8:	80 83       	st	Z, r24
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    69aa:	e3 e3       	ldi	r30, 0x33	; 51
    69ac:	f0 e0       	ldi	r31, 0x00	; 0
    69ae:	80 81       	ld	r24, Z
    69b0:	88 2f       	mov	r24, r24
    69b2:	90 e0       	ldi	r25, 0x00	; 0
    69b4:	82 70       	andi	r24, 0x02	; 2
    69b6:	90 70       	andi	r25, 0x00	; 0
    69b8:	00 97       	sbiw	r24, 0x00	; 0
    69ba:	a1 f4       	brne	.+40     	; 0x69e4 <readgamepad+0x2a7c>
			cbi(ps2data8,i); 
    69bc:	20 91 66 00 	lds	r18, 0x0066
    69c0:	30 91 67 00 	lds	r19, 0x0067
    69c4:	81 e0       	ldi	r24, 0x01	; 1
    69c6:	90 e0       	ldi	r25, 0x00	; 0
    69c8:	02 2e       	mov	r0, r18
    69ca:	02 c0       	rjmp	.+4      	; 0x69d0 <readgamepad+0x2a68>
    69cc:	88 0f       	add	r24, r24
    69ce:	99 1f       	adc	r25, r25
    69d0:	0a 94       	dec	r0
    69d2:	e2 f7       	brpl	.-8      	; 0x69cc <readgamepad+0x2a64>
    69d4:	98 2f       	mov	r25, r24
    69d6:	90 95       	com	r25
    69d8:	80 91 69 00 	lds	r24, 0x0069
    69dc:	89 23       	and	r24, r25
    69de:	80 93 69 00 	sts	0x0069, r24
    69e2:	11 c0       	rjmp	.+34     	; 0x6a06 <readgamepad+0x2a9e>
		else
			sbi(ps2data8,i); 
    69e4:	20 91 66 00 	lds	r18, 0x0066
    69e8:	30 91 67 00 	lds	r19, 0x0067
    69ec:	81 e0       	ldi	r24, 0x01	; 1
    69ee:	90 e0       	ldi	r25, 0x00	; 0
    69f0:	02 c0       	rjmp	.+4      	; 0x69f6 <readgamepad+0x2a8e>
    69f2:	88 0f       	add	r24, r24
    69f4:	99 1f       	adc	r25, r25
    69f6:	2a 95       	dec	r18
    69f8:	e2 f7       	brpl	.-8      	; 0x69f2 <readgamepad+0x2a8a>
    69fa:	98 2f       	mov	r25, r24
    69fc:	80 91 69 00 	lds	r24, 0x0069
    6a00:	89 2b       	or	r24, r25
    6a02:	80 93 69 00 	sts	0x0069, r24
		sbi(ps2port,ps2clk);
    6a06:	a5 e3       	ldi	r26, 0x35	; 53
    6a08:	b0 e0       	ldi	r27, 0x00	; 0
    6a0a:	e5 e3       	ldi	r30, 0x35	; 53
    6a0c:	f0 e0       	ldi	r31, 0x00	; 0
    6a0e:	80 81       	ld	r24, Z
    6a10:	81 60       	ori	r24, 0x01	; 1
    6a12:	8c 93       	st	X, r24
    6a14:	fe 01       	movw	r30, r28
    6a16:	eb 5b       	subi	r30, 0xBB	; 187
    6a18:	ff 4f       	sbci	r31, 0xFF	; 255
    6a1a:	80 e0       	ldi	r24, 0x00	; 0
    6a1c:	90 e0       	ldi	r25, 0x00	; 0
    6a1e:	a0 e8       	ldi	r26, 0x80	; 128
    6a20:	bf e3       	ldi	r27, 0x3F	; 63
    6a22:	80 83       	st	Z, r24
    6a24:	91 83       	std	Z+1, r25	; 0x01
    6a26:	a2 83       	std	Z+2, r26	; 0x02
    6a28:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    6a2a:	8e 01       	movw	r16, r28
    6a2c:	0f 5b       	subi	r16, 0xBF	; 191
    6a2e:	1f 4f       	sbci	r17, 0xFF	; 255
    6a30:	fe 01       	movw	r30, r28
    6a32:	eb 5b       	subi	r30, 0xBB	; 187
    6a34:	ff 4f       	sbci	r31, 0xFF	; 255
    6a36:	60 81       	ld	r22, Z
    6a38:	71 81       	ldd	r23, Z+1	; 0x01
    6a3a:	82 81       	ldd	r24, Z+2	; 0x02
    6a3c:	93 81       	ldd	r25, Z+3	; 0x03
    6a3e:	2b ea       	ldi	r18, 0xAB	; 171
    6a40:	3a ea       	ldi	r19, 0xAA	; 170
    6a42:	4a ea       	ldi	r20, 0xAA	; 170
    6a44:	50 e4       	ldi	r21, 0x40	; 64
    6a46:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6a4a:	dc 01       	movw	r26, r24
    6a4c:	cb 01       	movw	r24, r22
    6a4e:	f8 01       	movw	r30, r16
    6a50:	80 83       	st	Z, r24
    6a52:	91 83       	std	Z+1, r25	; 0x01
    6a54:	a2 83       	std	Z+2, r26	; 0x02
    6a56:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6a58:	fe 01       	movw	r30, r28
    6a5a:	ef 5b       	subi	r30, 0xBF	; 191
    6a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    6a5e:	60 81       	ld	r22, Z
    6a60:	71 81       	ldd	r23, Z+1	; 0x01
    6a62:	82 81       	ldd	r24, Z+2	; 0x02
    6a64:	93 81       	ldd	r25, Z+3	; 0x03
    6a66:	20 e0       	ldi	r18, 0x00	; 0
    6a68:	30 e0       	ldi	r19, 0x00	; 0
    6a6a:	40 e8       	ldi	r20, 0x80	; 128
    6a6c:	5f e3       	ldi	r21, 0x3F	; 63
    6a6e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    6a72:	88 23       	and	r24, r24
    6a74:	34 f4       	brge	.+12     	; 0x6a82 <readgamepad+0x2b1a>
		__ticks = 1;
    6a76:	81 e0       	ldi	r24, 0x01	; 1
    6a78:	fe 01       	movw	r30, r28
    6a7a:	e0 5c       	subi	r30, 0xC0	; 192
    6a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    6a7e:	80 83       	st	Z, r24
    6a80:	9d c0       	rjmp	.+314    	; 0x6bbc <readgamepad+0x2c54>
	else if (__tmp > 255)
    6a82:	fe 01       	movw	r30, r28
    6a84:	ef 5b       	subi	r30, 0xBF	; 191
    6a86:	ff 4f       	sbci	r31, 0xFF	; 255
    6a88:	60 81       	ld	r22, Z
    6a8a:	71 81       	ldd	r23, Z+1	; 0x01
    6a8c:	82 81       	ldd	r24, Z+2	; 0x02
    6a8e:	93 81       	ldd	r25, Z+3	; 0x03
    6a90:	20 e0       	ldi	r18, 0x00	; 0
    6a92:	30 e0       	ldi	r19, 0x00	; 0
    6a94:	4f e7       	ldi	r20, 0x7F	; 127
    6a96:	53 e4       	ldi	r21, 0x43	; 67
    6a98:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6a9c:	18 16       	cp	r1, r24
    6a9e:	0c f0       	brlt	.+2      	; 0x6aa2 <readgamepad+0x2b3a>
    6aa0:	7e c0       	rjmp	.+252    	; 0x6b9e <readgamepad+0x2c36>
	{
		_delay_ms(__us / 1000.0);
    6aa2:	fe 01       	movw	r30, r28
    6aa4:	eb 5b       	subi	r30, 0xBB	; 187
    6aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    6aa8:	60 81       	ld	r22, Z
    6aaa:	71 81       	ldd	r23, Z+1	; 0x01
    6aac:	82 81       	ldd	r24, Z+2	; 0x02
    6aae:	93 81       	ldd	r25, Z+3	; 0x03
    6ab0:	20 e0       	ldi	r18, 0x00	; 0
    6ab2:	30 e0       	ldi	r19, 0x00	; 0
    6ab4:	4a e7       	ldi	r20, 0x7A	; 122
    6ab6:	54 e4       	ldi	r21, 0x44	; 68
    6ab8:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    6abc:	dc 01       	movw	r26, r24
    6abe:	cb 01       	movw	r24, r22
    6ac0:	8c af       	std	Y+60, r24	; 0x3c
    6ac2:	9d af       	std	Y+61, r25	; 0x3d
    6ac4:	ae af       	std	Y+62, r26	; 0x3e
    6ac6:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6ac8:	6c ad       	ldd	r22, Y+60	; 0x3c
    6aca:	7d ad       	ldd	r23, Y+61	; 0x3d
    6acc:	8e ad       	ldd	r24, Y+62	; 0x3e
    6ace:	9f ad       	ldd	r25, Y+63	; 0x3f
    6ad0:	20 e0       	ldi	r18, 0x00	; 0
    6ad2:	30 e0       	ldi	r19, 0x00	; 0
    6ad4:	4a e7       	ldi	r20, 0x7A	; 122
    6ad6:	55 e4       	ldi	r21, 0x45	; 69
    6ad8:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6adc:	dc 01       	movw	r26, r24
    6ade:	cb 01       	movw	r24, r22
    6ae0:	88 af       	std	Y+56, r24	; 0x38
    6ae2:	99 af       	std	Y+57, r25	; 0x39
    6ae4:	aa af       	std	Y+58, r26	; 0x3a
    6ae6:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    6ae8:	68 ad       	ldd	r22, Y+56	; 0x38
    6aea:	79 ad       	ldd	r23, Y+57	; 0x39
    6aec:	8a ad       	ldd	r24, Y+58	; 0x3a
    6aee:	9b ad       	ldd	r25, Y+59	; 0x3b
    6af0:	20 e0       	ldi	r18, 0x00	; 0
    6af2:	30 e0       	ldi	r19, 0x00	; 0
    6af4:	40 e8       	ldi	r20, 0x80	; 128
    6af6:	5f e3       	ldi	r21, 0x3F	; 63
    6af8:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    6afc:	88 23       	and	r24, r24
    6afe:	2c f4       	brge	.+10     	; 0x6b0a <readgamepad+0x2ba2>
		__ticks = 1;
    6b00:	81 e0       	ldi	r24, 0x01	; 1
    6b02:	90 e0       	ldi	r25, 0x00	; 0
    6b04:	9f ab       	std	Y+55, r25	; 0x37
    6b06:	8e ab       	std	Y+54, r24	; 0x36
    6b08:	3f c0       	rjmp	.+126    	; 0x6b88 <readgamepad+0x2c20>
	else if (__tmp > 65535)
    6b0a:	68 ad       	ldd	r22, Y+56	; 0x38
    6b0c:	79 ad       	ldd	r23, Y+57	; 0x39
    6b0e:	8a ad       	ldd	r24, Y+58	; 0x3a
    6b10:	9b ad       	ldd	r25, Y+59	; 0x3b
    6b12:	20 e0       	ldi	r18, 0x00	; 0
    6b14:	3f ef       	ldi	r19, 0xFF	; 255
    6b16:	4f e7       	ldi	r20, 0x7F	; 127
    6b18:	57 e4       	ldi	r21, 0x47	; 71
    6b1a:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6b1e:	18 16       	cp	r1, r24
    6b20:	4c f5       	brge	.+82     	; 0x6b74 <readgamepad+0x2c0c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6b22:	6c ad       	ldd	r22, Y+60	; 0x3c
    6b24:	7d ad       	ldd	r23, Y+61	; 0x3d
    6b26:	8e ad       	ldd	r24, Y+62	; 0x3e
    6b28:	9f ad       	ldd	r25, Y+63	; 0x3f
    6b2a:	20 e0       	ldi	r18, 0x00	; 0
    6b2c:	30 e0       	ldi	r19, 0x00	; 0
    6b2e:	40 e2       	ldi	r20, 0x20	; 32
    6b30:	51 e4       	ldi	r21, 0x41	; 65
    6b32:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6b36:	dc 01       	movw	r26, r24
    6b38:	cb 01       	movw	r24, r22
    6b3a:	bc 01       	movw	r22, r24
    6b3c:	cd 01       	movw	r24, r26
    6b3e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6b42:	dc 01       	movw	r26, r24
    6b44:	cb 01       	movw	r24, r22
    6b46:	9f ab       	std	Y+55, r25	; 0x37
    6b48:	8e ab       	std	Y+54, r24	; 0x36
    6b4a:	0f c0       	rjmp	.+30     	; 0x6b6a <readgamepad+0x2c02>
    6b4c:	80 e9       	ldi	r24, 0x90	; 144
    6b4e:	91 e0       	ldi	r25, 0x01	; 1
    6b50:	9d ab       	std	Y+53, r25	; 0x35
    6b52:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    6b54:	8c a9       	ldd	r24, Y+52	; 0x34
    6b56:	9d a9       	ldd	r25, Y+53	; 0x35
    6b58:	01 97       	sbiw	r24, 0x01	; 1
    6b5a:	f1 f7       	brne	.-4      	; 0x6b58 <readgamepad+0x2bf0>
    6b5c:	9d ab       	std	Y+53, r25	; 0x35
    6b5e:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6b60:	8e a9       	ldd	r24, Y+54	; 0x36
    6b62:	9f a9       	ldd	r25, Y+55	; 0x37
    6b64:	01 97       	sbiw	r24, 0x01	; 1
    6b66:	9f ab       	std	Y+55, r25	; 0x37
    6b68:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6b6a:	8e a9       	ldd	r24, Y+54	; 0x36
    6b6c:	9f a9       	ldd	r25, Y+55	; 0x37
    6b6e:	00 97       	sbiw	r24, 0x00	; 0
    6b70:	69 f7       	brne	.-38     	; 0x6b4c <readgamepad+0x2be4>
    6b72:	2d c0       	rjmp	.+90     	; 0x6bce <readgamepad+0x2c66>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6b74:	68 ad       	ldd	r22, Y+56	; 0x38
    6b76:	79 ad       	ldd	r23, Y+57	; 0x39
    6b78:	8a ad       	ldd	r24, Y+58	; 0x3a
    6b7a:	9b ad       	ldd	r25, Y+59	; 0x3b
    6b7c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6b80:	dc 01       	movw	r26, r24
    6b82:	cb 01       	movw	r24, r22
    6b84:	9f ab       	std	Y+55, r25	; 0x37
    6b86:	8e ab       	std	Y+54, r24	; 0x36
    6b88:	8e a9       	ldd	r24, Y+54	; 0x36
    6b8a:	9f a9       	ldd	r25, Y+55	; 0x37
    6b8c:	9b ab       	std	Y+51, r25	; 0x33
    6b8e:	8a ab       	std	Y+50, r24	; 0x32
    6b90:	8a a9       	ldd	r24, Y+50	; 0x32
    6b92:	9b a9       	ldd	r25, Y+51	; 0x33
    6b94:	01 97       	sbiw	r24, 0x01	; 1
    6b96:	f1 f7       	brne	.-4      	; 0x6b94 <readgamepad+0x2c2c>
    6b98:	9b ab       	std	Y+51, r25	; 0x33
    6b9a:	8a ab       	std	Y+50, r24	; 0x32
    6b9c:	18 c0       	rjmp	.+48     	; 0x6bce <readgamepad+0x2c66>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    6b9e:	fe 01       	movw	r30, r28
    6ba0:	ef 5b       	subi	r30, 0xBF	; 191
    6ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    6ba4:	60 81       	ld	r22, Z
    6ba6:	71 81       	ldd	r23, Z+1	; 0x01
    6ba8:	82 81       	ldd	r24, Z+2	; 0x02
    6baa:	93 81       	ldd	r25, Z+3	; 0x03
    6bac:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6bb0:	dc 01       	movw	r26, r24
    6bb2:	cb 01       	movw	r24, r22
    6bb4:	fe 01       	movw	r30, r28
    6bb6:	e0 5c       	subi	r30, 0xC0	; 192
    6bb8:	ff 4f       	sbci	r31, 0xFF	; 255
    6bba:	80 83       	st	Z, r24
    6bbc:	fe 01       	movw	r30, r28
    6bbe:	e0 5c       	subi	r30, 0xC0	; 192
    6bc0:	ff 4f       	sbci	r31, 0xFF	; 255
    6bc2:	80 81       	ld	r24, Z
    6bc4:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    6bc6:	89 a9       	ldd	r24, Y+49	; 0x31
    6bc8:	8a 95       	dec	r24
    6bca:	f1 f7       	brne	.-4      	; 0x6bc8 <readgamepad+0x2c60>
    6bcc:	89 ab       	std	Y+49, r24	; 0x31
	

	
	
	ps2data8=0;
	for(i=0;i<8;i++) // 8 byte xaxis of right
    6bce:	80 91 66 00 	lds	r24, 0x0066
    6bd2:	90 91 67 00 	lds	r25, 0x0067
    6bd6:	01 96       	adiw	r24, 0x01	; 1
    6bd8:	90 93 67 00 	sts	0x0067, r25
    6bdc:	80 93 66 00 	sts	0x0066, r24
    6be0:	80 91 66 00 	lds	r24, 0x0066
    6be4:	90 91 67 00 	lds	r25, 0x0067
    6be8:	88 30       	cpi	r24, 0x08	; 8
    6bea:	91 05       	cpc	r25, r1
    6bec:	0c f4       	brge	.+2      	; 0x6bf0 <readgamepad+0x2c88>
    6bee:	a6 cd       	rjmp	.-1204   	; 0x673c <readgamepad+0x27d4>
		else
			sbi(ps2data8,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    6bf0:	a5 e3       	ldi	r26, 0x35	; 53
    6bf2:	b0 e0       	ldi	r27, 0x00	; 0
    6bf4:	e5 e3       	ldi	r30, 0x35	; 53
    6bf6:	f0 e0       	ldi	r31, 0x00	; 0
    6bf8:	80 81       	ld	r24, Z
    6bfa:	84 60       	ori	r24, 0x04	; 4
    6bfc:	8c 93       	st	X, r24
	

	
	
	ps2data9=0;
    6bfe:	10 92 60 00 	sts	0x0060, r1
	for(i=0;i<8;i++) // 9 byte yaxis of right
    6c02:	10 92 67 00 	sts	0x0067, r1
    6c06:	10 92 66 00 	sts	0x0066, r1
    6c0a:	c8 c1       	rjmp	.+912    	; 0x6f9c <readgamepad+0x3034>
	{
		cbi(ps2port,ps2cmd);
    6c0c:	a5 e3       	ldi	r26, 0x35	; 53
    6c0e:	b0 e0       	ldi	r27, 0x00	; 0
    6c10:	e5 e3       	ldi	r30, 0x35	; 53
    6c12:	f0 e0       	ldi	r31, 0x00	; 0
    6c14:	80 81       	ld	r24, Z
    6c16:	8b 7f       	andi	r24, 0xFB	; 251
    6c18:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    6c1a:	a5 e3       	ldi	r26, 0x35	; 53
    6c1c:	b0 e0       	ldi	r27, 0x00	; 0
    6c1e:	e5 e3       	ldi	r30, 0x35	; 53
    6c20:	f0 e0       	ldi	r31, 0x00	; 0
    6c22:	80 81       	ld	r24, Z
    6c24:	8e 7f       	andi	r24, 0xFE	; 254
    6c26:	8c 93       	st	X, r24
    6c28:	80 e0       	ldi	r24, 0x00	; 0
    6c2a:	90 e0       	ldi	r25, 0x00	; 0
    6c2c:	a0 e8       	ldi	r26, 0x80	; 128
    6c2e:	bf e3       	ldi	r27, 0x3F	; 63
    6c30:	8d a7       	std	Y+45, r24	; 0x2d
    6c32:	9e a7       	std	Y+46, r25	; 0x2e
    6c34:	af a7       	std	Y+47, r26	; 0x2f
    6c36:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    6c38:	6d a5       	ldd	r22, Y+45	; 0x2d
    6c3a:	7e a5       	ldd	r23, Y+46	; 0x2e
    6c3c:	8f a5       	ldd	r24, Y+47	; 0x2f
    6c3e:	98 a9       	ldd	r25, Y+48	; 0x30
    6c40:	2b ea       	ldi	r18, 0xAB	; 171
    6c42:	3a ea       	ldi	r19, 0xAA	; 170
    6c44:	4a ea       	ldi	r20, 0xAA	; 170
    6c46:	50 e4       	ldi	r21, 0x40	; 64
    6c48:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6c4c:	dc 01       	movw	r26, r24
    6c4e:	cb 01       	movw	r24, r22
    6c50:	89 a7       	std	Y+41, r24	; 0x29
    6c52:	9a a7       	std	Y+42, r25	; 0x2a
    6c54:	ab a7       	std	Y+43, r26	; 0x2b
    6c56:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    6c58:	69 a5       	ldd	r22, Y+41	; 0x29
    6c5a:	7a a5       	ldd	r23, Y+42	; 0x2a
    6c5c:	8b a5       	ldd	r24, Y+43	; 0x2b
    6c5e:	9c a5       	ldd	r25, Y+44	; 0x2c
    6c60:	20 e0       	ldi	r18, 0x00	; 0
    6c62:	30 e0       	ldi	r19, 0x00	; 0
    6c64:	40 e8       	ldi	r20, 0x80	; 128
    6c66:	5f e3       	ldi	r21, 0x3F	; 63
    6c68:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    6c6c:	88 23       	and	r24, r24
    6c6e:	1c f4       	brge	.+6      	; 0x6c76 <readgamepad+0x2d0e>
		__ticks = 1;
    6c70:	81 e0       	ldi	r24, 0x01	; 1
    6c72:	88 a7       	std	Y+40, r24	; 0x28
    6c74:	91 c0       	rjmp	.+290    	; 0x6d98 <readgamepad+0x2e30>
	else if (__tmp > 255)
    6c76:	69 a5       	ldd	r22, Y+41	; 0x29
    6c78:	7a a5       	ldd	r23, Y+42	; 0x2a
    6c7a:	8b a5       	ldd	r24, Y+43	; 0x2b
    6c7c:	9c a5       	ldd	r25, Y+44	; 0x2c
    6c7e:	20 e0       	ldi	r18, 0x00	; 0
    6c80:	30 e0       	ldi	r19, 0x00	; 0
    6c82:	4f e7       	ldi	r20, 0x7F	; 127
    6c84:	53 e4       	ldi	r21, 0x43	; 67
    6c86:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6c8a:	18 16       	cp	r1, r24
    6c8c:	0c f0       	brlt	.+2      	; 0x6c90 <readgamepad+0x2d28>
    6c8e:	7b c0       	rjmp	.+246    	; 0x6d86 <readgamepad+0x2e1e>
	{
		_delay_ms(__us / 1000.0);
    6c90:	6d a5       	ldd	r22, Y+45	; 0x2d
    6c92:	7e a5       	ldd	r23, Y+46	; 0x2e
    6c94:	8f a5       	ldd	r24, Y+47	; 0x2f
    6c96:	98 a9       	ldd	r25, Y+48	; 0x30
    6c98:	20 e0       	ldi	r18, 0x00	; 0
    6c9a:	30 e0       	ldi	r19, 0x00	; 0
    6c9c:	4a e7       	ldi	r20, 0x7A	; 122
    6c9e:	54 e4       	ldi	r21, 0x44	; 68
    6ca0:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    6ca4:	dc 01       	movw	r26, r24
    6ca6:	cb 01       	movw	r24, r22
    6ca8:	8c a3       	std	Y+36, r24	; 0x24
    6caa:	9d a3       	std	Y+37, r25	; 0x25
    6cac:	ae a3       	std	Y+38, r26	; 0x26
    6cae:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6cb0:	6c a1       	ldd	r22, Y+36	; 0x24
    6cb2:	7d a1       	ldd	r23, Y+37	; 0x25
    6cb4:	8e a1       	ldd	r24, Y+38	; 0x26
    6cb6:	9f a1       	ldd	r25, Y+39	; 0x27
    6cb8:	20 e0       	ldi	r18, 0x00	; 0
    6cba:	30 e0       	ldi	r19, 0x00	; 0
    6cbc:	4a e7       	ldi	r20, 0x7A	; 122
    6cbe:	55 e4       	ldi	r21, 0x45	; 69
    6cc0:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6cc4:	dc 01       	movw	r26, r24
    6cc6:	cb 01       	movw	r24, r22
    6cc8:	88 a3       	std	Y+32, r24	; 0x20
    6cca:	99 a3       	std	Y+33, r25	; 0x21
    6ccc:	aa a3       	std	Y+34, r26	; 0x22
    6cce:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    6cd0:	68 a1       	ldd	r22, Y+32	; 0x20
    6cd2:	79 a1       	ldd	r23, Y+33	; 0x21
    6cd4:	8a a1       	ldd	r24, Y+34	; 0x22
    6cd6:	9b a1       	ldd	r25, Y+35	; 0x23
    6cd8:	20 e0       	ldi	r18, 0x00	; 0
    6cda:	30 e0       	ldi	r19, 0x00	; 0
    6cdc:	40 e8       	ldi	r20, 0x80	; 128
    6cde:	5f e3       	ldi	r21, 0x3F	; 63
    6ce0:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    6ce4:	88 23       	and	r24, r24
    6ce6:	2c f4       	brge	.+10     	; 0x6cf2 <readgamepad+0x2d8a>
		__ticks = 1;
    6ce8:	81 e0       	ldi	r24, 0x01	; 1
    6cea:	90 e0       	ldi	r25, 0x00	; 0
    6cec:	9f 8f       	std	Y+31, r25	; 0x1f
    6cee:	8e 8f       	std	Y+30, r24	; 0x1e
    6cf0:	3f c0       	rjmp	.+126    	; 0x6d70 <readgamepad+0x2e08>
	else if (__tmp > 65535)
    6cf2:	68 a1       	ldd	r22, Y+32	; 0x20
    6cf4:	79 a1       	ldd	r23, Y+33	; 0x21
    6cf6:	8a a1       	ldd	r24, Y+34	; 0x22
    6cf8:	9b a1       	ldd	r25, Y+35	; 0x23
    6cfa:	20 e0       	ldi	r18, 0x00	; 0
    6cfc:	3f ef       	ldi	r19, 0xFF	; 255
    6cfe:	4f e7       	ldi	r20, 0x7F	; 127
    6d00:	57 e4       	ldi	r21, 0x47	; 71
    6d02:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6d06:	18 16       	cp	r1, r24
    6d08:	4c f5       	brge	.+82     	; 0x6d5c <readgamepad+0x2df4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6d0a:	6c a1       	ldd	r22, Y+36	; 0x24
    6d0c:	7d a1       	ldd	r23, Y+37	; 0x25
    6d0e:	8e a1       	ldd	r24, Y+38	; 0x26
    6d10:	9f a1       	ldd	r25, Y+39	; 0x27
    6d12:	20 e0       	ldi	r18, 0x00	; 0
    6d14:	30 e0       	ldi	r19, 0x00	; 0
    6d16:	40 e2       	ldi	r20, 0x20	; 32
    6d18:	51 e4       	ldi	r21, 0x41	; 65
    6d1a:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6d1e:	dc 01       	movw	r26, r24
    6d20:	cb 01       	movw	r24, r22
    6d22:	bc 01       	movw	r22, r24
    6d24:	cd 01       	movw	r24, r26
    6d26:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6d2a:	dc 01       	movw	r26, r24
    6d2c:	cb 01       	movw	r24, r22
    6d2e:	9f 8f       	std	Y+31, r25	; 0x1f
    6d30:	8e 8f       	std	Y+30, r24	; 0x1e
    6d32:	0f c0       	rjmp	.+30     	; 0x6d52 <readgamepad+0x2dea>
    6d34:	80 e9       	ldi	r24, 0x90	; 144
    6d36:	91 e0       	ldi	r25, 0x01	; 1
    6d38:	9d 8f       	std	Y+29, r25	; 0x1d
    6d3a:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    6d3c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6d3e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6d40:	01 97       	sbiw	r24, 0x01	; 1
    6d42:	f1 f7       	brne	.-4      	; 0x6d40 <readgamepad+0x2dd8>
    6d44:	9d 8f       	std	Y+29, r25	; 0x1d
    6d46:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6d48:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6d4a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6d4c:	01 97       	sbiw	r24, 0x01	; 1
    6d4e:	9f 8f       	std	Y+31, r25	; 0x1f
    6d50:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6d52:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6d54:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6d56:	00 97       	sbiw	r24, 0x00	; 0
    6d58:	69 f7       	brne	.-38     	; 0x6d34 <readgamepad+0x2dcc>
    6d5a:	24 c0       	rjmp	.+72     	; 0x6da4 <readgamepad+0x2e3c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6d5c:	68 a1       	ldd	r22, Y+32	; 0x20
    6d5e:	79 a1       	ldd	r23, Y+33	; 0x21
    6d60:	8a a1       	ldd	r24, Y+34	; 0x22
    6d62:	9b a1       	ldd	r25, Y+35	; 0x23
    6d64:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6d68:	dc 01       	movw	r26, r24
    6d6a:	cb 01       	movw	r24, r22
    6d6c:	9f 8f       	std	Y+31, r25	; 0x1f
    6d6e:	8e 8f       	std	Y+30, r24	; 0x1e
    6d70:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6d72:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6d74:	9b 8f       	std	Y+27, r25	; 0x1b
    6d76:	8a 8f       	std	Y+26, r24	; 0x1a
    6d78:	8a 8d       	ldd	r24, Y+26	; 0x1a
    6d7a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    6d7c:	01 97       	sbiw	r24, 0x01	; 1
    6d7e:	f1 f7       	brne	.-4      	; 0x6d7c <readgamepad+0x2e14>
    6d80:	9b 8f       	std	Y+27, r25	; 0x1b
    6d82:	8a 8f       	std	Y+26, r24	; 0x1a
    6d84:	0f c0       	rjmp	.+30     	; 0x6da4 <readgamepad+0x2e3c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    6d86:	69 a5       	ldd	r22, Y+41	; 0x29
    6d88:	7a a5       	ldd	r23, Y+42	; 0x2a
    6d8a:	8b a5       	ldd	r24, Y+43	; 0x2b
    6d8c:	9c a5       	ldd	r25, Y+44	; 0x2c
    6d8e:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6d92:	dc 01       	movw	r26, r24
    6d94:	cb 01       	movw	r24, r22
    6d96:	88 a7       	std	Y+40, r24	; 0x28
    6d98:	88 a5       	ldd	r24, Y+40	; 0x28
    6d9a:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    6d9c:	89 8d       	ldd	r24, Y+25	; 0x19
    6d9e:	8a 95       	dec	r24
    6da0:	f1 f7       	brne	.-4      	; 0x6d9e <readgamepad+0x2e36>
    6da2:	89 8f       	std	Y+25, r24	; 0x19
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    6da4:	e3 e3       	ldi	r30, 0x33	; 51
    6da6:	f0 e0       	ldi	r31, 0x00	; 0
    6da8:	80 81       	ld	r24, Z
    6daa:	88 2f       	mov	r24, r24
    6dac:	90 e0       	ldi	r25, 0x00	; 0
    6dae:	82 70       	andi	r24, 0x02	; 2
    6db0:	90 70       	andi	r25, 0x00	; 0
    6db2:	00 97       	sbiw	r24, 0x00	; 0
    6db4:	a1 f4       	brne	.+40     	; 0x6dde <readgamepad+0x2e76>
			cbi(ps2data9,i); 
    6db6:	20 91 66 00 	lds	r18, 0x0066
    6dba:	30 91 67 00 	lds	r19, 0x0067
    6dbe:	81 e0       	ldi	r24, 0x01	; 1
    6dc0:	90 e0       	ldi	r25, 0x00	; 0
    6dc2:	02 2e       	mov	r0, r18
    6dc4:	02 c0       	rjmp	.+4      	; 0x6dca <readgamepad+0x2e62>
    6dc6:	88 0f       	add	r24, r24
    6dc8:	99 1f       	adc	r25, r25
    6dca:	0a 94       	dec	r0
    6dcc:	e2 f7       	brpl	.-8      	; 0x6dc6 <readgamepad+0x2e5e>
    6dce:	98 2f       	mov	r25, r24
    6dd0:	90 95       	com	r25
    6dd2:	80 91 60 00 	lds	r24, 0x0060
    6dd6:	89 23       	and	r24, r25
    6dd8:	80 93 60 00 	sts	0x0060, r24
    6ddc:	11 c0       	rjmp	.+34     	; 0x6e00 <readgamepad+0x2e98>
		else
			sbi(ps2data9,i); 
    6dde:	20 91 66 00 	lds	r18, 0x0066
    6de2:	30 91 67 00 	lds	r19, 0x0067
    6de6:	81 e0       	ldi	r24, 0x01	; 1
    6de8:	90 e0       	ldi	r25, 0x00	; 0
    6dea:	02 c0       	rjmp	.+4      	; 0x6df0 <readgamepad+0x2e88>
    6dec:	88 0f       	add	r24, r24
    6dee:	99 1f       	adc	r25, r25
    6df0:	2a 95       	dec	r18
    6df2:	e2 f7       	brpl	.-8      	; 0x6dec <readgamepad+0x2e84>
    6df4:	98 2f       	mov	r25, r24
    6df6:	80 91 60 00 	lds	r24, 0x0060
    6dfa:	89 2b       	or	r24, r25
    6dfc:	80 93 60 00 	sts	0x0060, r24
		sbi(ps2port,ps2clk);
    6e00:	a5 e3       	ldi	r26, 0x35	; 53
    6e02:	b0 e0       	ldi	r27, 0x00	; 0
    6e04:	e5 e3       	ldi	r30, 0x35	; 53
    6e06:	f0 e0       	ldi	r31, 0x00	; 0
    6e08:	80 81       	ld	r24, Z
    6e0a:	81 60       	ori	r24, 0x01	; 1
    6e0c:	8c 93       	st	X, r24
    6e0e:	80 e0       	ldi	r24, 0x00	; 0
    6e10:	90 e0       	ldi	r25, 0x00	; 0
    6e12:	a0 e8       	ldi	r26, 0x80	; 128
    6e14:	bf e3       	ldi	r27, 0x3F	; 63
    6e16:	8d 8b       	std	Y+21, r24	; 0x15
    6e18:	9e 8b       	std	Y+22, r25	; 0x16
    6e1a:	af 8b       	std	Y+23, r26	; 0x17
    6e1c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    6e1e:	6d 89       	ldd	r22, Y+21	; 0x15
    6e20:	7e 89       	ldd	r23, Y+22	; 0x16
    6e22:	8f 89       	ldd	r24, Y+23	; 0x17
    6e24:	98 8d       	ldd	r25, Y+24	; 0x18
    6e26:	2b ea       	ldi	r18, 0xAB	; 171
    6e28:	3a ea       	ldi	r19, 0xAA	; 170
    6e2a:	4a ea       	ldi	r20, 0xAA	; 170
    6e2c:	50 e4       	ldi	r21, 0x40	; 64
    6e2e:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6e32:	dc 01       	movw	r26, r24
    6e34:	cb 01       	movw	r24, r22
    6e36:	89 8b       	std	Y+17, r24	; 0x11
    6e38:	9a 8b       	std	Y+18, r25	; 0x12
    6e3a:	ab 8b       	std	Y+19, r26	; 0x13
    6e3c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    6e3e:	69 89       	ldd	r22, Y+17	; 0x11
    6e40:	7a 89       	ldd	r23, Y+18	; 0x12
    6e42:	8b 89       	ldd	r24, Y+19	; 0x13
    6e44:	9c 89       	ldd	r25, Y+20	; 0x14
    6e46:	20 e0       	ldi	r18, 0x00	; 0
    6e48:	30 e0       	ldi	r19, 0x00	; 0
    6e4a:	40 e8       	ldi	r20, 0x80	; 128
    6e4c:	5f e3       	ldi	r21, 0x3F	; 63
    6e4e:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    6e52:	88 23       	and	r24, r24
    6e54:	1c f4       	brge	.+6      	; 0x6e5c <readgamepad+0x2ef4>
		__ticks = 1;
    6e56:	81 e0       	ldi	r24, 0x01	; 1
    6e58:	88 8b       	std	Y+16, r24	; 0x10
    6e5a:	91 c0       	rjmp	.+290    	; 0x6f7e <readgamepad+0x3016>
	else if (__tmp > 255)
    6e5c:	69 89       	ldd	r22, Y+17	; 0x11
    6e5e:	7a 89       	ldd	r23, Y+18	; 0x12
    6e60:	8b 89       	ldd	r24, Y+19	; 0x13
    6e62:	9c 89       	ldd	r25, Y+20	; 0x14
    6e64:	20 e0       	ldi	r18, 0x00	; 0
    6e66:	30 e0       	ldi	r19, 0x00	; 0
    6e68:	4f e7       	ldi	r20, 0x7F	; 127
    6e6a:	53 e4       	ldi	r21, 0x43	; 67
    6e6c:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6e70:	18 16       	cp	r1, r24
    6e72:	0c f0       	brlt	.+2      	; 0x6e76 <readgamepad+0x2f0e>
    6e74:	7b c0       	rjmp	.+246    	; 0x6f6c <readgamepad+0x3004>
	{
		_delay_ms(__us / 1000.0);
    6e76:	6d 89       	ldd	r22, Y+21	; 0x15
    6e78:	7e 89       	ldd	r23, Y+22	; 0x16
    6e7a:	8f 89       	ldd	r24, Y+23	; 0x17
    6e7c:	98 8d       	ldd	r25, Y+24	; 0x18
    6e7e:	20 e0       	ldi	r18, 0x00	; 0
    6e80:	30 e0       	ldi	r19, 0x00	; 0
    6e82:	4a e7       	ldi	r20, 0x7A	; 122
    6e84:	54 e4       	ldi	r21, 0x44	; 68
    6e86:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__divsf3>
    6e8a:	dc 01       	movw	r26, r24
    6e8c:	cb 01       	movw	r24, r22
    6e8e:	8c 87       	std	Y+12, r24	; 0x0c
    6e90:	9d 87       	std	Y+13, r25	; 0x0d
    6e92:	ae 87       	std	Y+14, r26	; 0x0e
    6e94:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6e96:	6c 85       	ldd	r22, Y+12	; 0x0c
    6e98:	7d 85       	ldd	r23, Y+13	; 0x0d
    6e9a:	8e 85       	ldd	r24, Y+14	; 0x0e
    6e9c:	9f 85       	ldd	r25, Y+15	; 0x0f
    6e9e:	20 e0       	ldi	r18, 0x00	; 0
    6ea0:	30 e0       	ldi	r19, 0x00	; 0
    6ea2:	4a e7       	ldi	r20, 0x7A	; 122
    6ea4:	55 e4       	ldi	r21, 0x45	; 69
    6ea6:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6eaa:	dc 01       	movw	r26, r24
    6eac:	cb 01       	movw	r24, r22
    6eae:	88 87       	std	Y+8, r24	; 0x08
    6eb0:	99 87       	std	Y+9, r25	; 0x09
    6eb2:	aa 87       	std	Y+10, r26	; 0x0a
    6eb4:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    6eb6:	68 85       	ldd	r22, Y+8	; 0x08
    6eb8:	79 85       	ldd	r23, Y+9	; 0x09
    6eba:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ebc:	9b 85       	ldd	r25, Y+11	; 0x0b
    6ebe:	20 e0       	ldi	r18, 0x00	; 0
    6ec0:	30 e0       	ldi	r19, 0x00	; 0
    6ec2:	40 e8       	ldi	r20, 0x80	; 128
    6ec4:	5f e3       	ldi	r21, 0x3F	; 63
    6ec6:	0e 94 f0 37 	call	0x6fe0	; 0x6fe0 <__cmpsf2>
    6eca:	88 23       	and	r24, r24
    6ecc:	2c f4       	brge	.+10     	; 0x6ed8 <readgamepad+0x2f70>
		__ticks = 1;
    6ece:	81 e0       	ldi	r24, 0x01	; 1
    6ed0:	90 e0       	ldi	r25, 0x00	; 0
    6ed2:	9f 83       	std	Y+7, r25	; 0x07
    6ed4:	8e 83       	std	Y+6, r24	; 0x06
    6ed6:	3f c0       	rjmp	.+126    	; 0x6f56 <readgamepad+0x2fee>
	else if (__tmp > 65535)
    6ed8:	68 85       	ldd	r22, Y+8	; 0x08
    6eda:	79 85       	ldd	r23, Y+9	; 0x09
    6edc:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ede:	9b 85       	ldd	r25, Y+11	; 0x0b
    6ee0:	20 e0       	ldi	r18, 0x00	; 0
    6ee2:	3f ef       	ldi	r19, 0xFF	; 255
    6ee4:	4f e7       	ldi	r20, 0x7F	; 127
    6ee6:	57 e4       	ldi	r21, 0x47	; 71
    6ee8:	0e 94 fd 38 	call	0x71fa	; 0x71fa <__gesf2>
    6eec:	18 16       	cp	r1, r24
    6eee:	4c f5       	brge	.+82     	; 0x6f42 <readgamepad+0x2fda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6ef0:	6c 85       	ldd	r22, Y+12	; 0x0c
    6ef2:	7d 85       	ldd	r23, Y+13	; 0x0d
    6ef4:	8e 85       	ldd	r24, Y+14	; 0x0e
    6ef6:	9f 85       	ldd	r25, Y+15	; 0x0f
    6ef8:	20 e0       	ldi	r18, 0x00	; 0
    6efa:	30 e0       	ldi	r19, 0x00	; 0
    6efc:	40 e2       	ldi	r20, 0x20	; 32
    6efe:	51 e4       	ldi	r21, 0x41	; 65
    6f00:	0e 94 01 39 	call	0x7202	; 0x7202 <__mulsf3>
    6f04:	dc 01       	movw	r26, r24
    6f06:	cb 01       	movw	r24, r22
    6f08:	bc 01       	movw	r22, r24
    6f0a:	cd 01       	movw	r24, r26
    6f0c:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6f10:	dc 01       	movw	r26, r24
    6f12:	cb 01       	movw	r24, r22
    6f14:	9f 83       	std	Y+7, r25	; 0x07
    6f16:	8e 83       	std	Y+6, r24	; 0x06
    6f18:	0f c0       	rjmp	.+30     	; 0x6f38 <readgamepad+0x2fd0>
    6f1a:	80 e9       	ldi	r24, 0x90	; 144
    6f1c:	91 e0       	ldi	r25, 0x01	; 1
    6f1e:	9d 83       	std	Y+5, r25	; 0x05
    6f20:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    6f22:	8c 81       	ldd	r24, Y+4	; 0x04
    6f24:	9d 81       	ldd	r25, Y+5	; 0x05
    6f26:	01 97       	sbiw	r24, 0x01	; 1
    6f28:	f1 f7       	brne	.-4      	; 0x6f26 <readgamepad+0x2fbe>
    6f2a:	9d 83       	std	Y+5, r25	; 0x05
    6f2c:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6f2e:	8e 81       	ldd	r24, Y+6	; 0x06
    6f30:	9f 81       	ldd	r25, Y+7	; 0x07
    6f32:	01 97       	sbiw	r24, 0x01	; 1
    6f34:	9f 83       	std	Y+7, r25	; 0x07
    6f36:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6f38:	8e 81       	ldd	r24, Y+6	; 0x06
    6f3a:	9f 81       	ldd	r25, Y+7	; 0x07
    6f3c:	00 97       	sbiw	r24, 0x00	; 0
    6f3e:	69 f7       	brne	.-38     	; 0x6f1a <readgamepad+0x2fb2>
    6f40:	24 c0       	rjmp	.+72     	; 0x6f8a <readgamepad+0x3022>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6f42:	68 85       	ldd	r22, Y+8	; 0x08
    6f44:	79 85       	ldd	r23, Y+9	; 0x09
    6f46:	8a 85       	ldd	r24, Y+10	; 0x0a
    6f48:	9b 85       	ldd	r25, Y+11	; 0x0b
    6f4a:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6f4e:	dc 01       	movw	r26, r24
    6f50:	cb 01       	movw	r24, r22
    6f52:	9f 83       	std	Y+7, r25	; 0x07
    6f54:	8e 83       	std	Y+6, r24	; 0x06
    6f56:	8e 81       	ldd	r24, Y+6	; 0x06
    6f58:	9f 81       	ldd	r25, Y+7	; 0x07
    6f5a:	9b 83       	std	Y+3, r25	; 0x03
    6f5c:	8a 83       	std	Y+2, r24	; 0x02
    6f5e:	8a 81       	ldd	r24, Y+2	; 0x02
    6f60:	9b 81       	ldd	r25, Y+3	; 0x03
    6f62:	01 97       	sbiw	r24, 0x01	; 1
    6f64:	f1 f7       	brne	.-4      	; 0x6f62 <readgamepad+0x2ffa>
    6f66:	9b 83       	std	Y+3, r25	; 0x03
    6f68:	8a 83       	std	Y+2, r24	; 0x02
    6f6a:	0f c0       	rjmp	.+30     	; 0x6f8a <readgamepad+0x3022>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    6f6c:	69 89       	ldd	r22, Y+17	; 0x11
    6f6e:	7a 89       	ldd	r23, Y+18	; 0x12
    6f70:	8b 89       	ldd	r24, Y+19	; 0x13
    6f72:	9c 89       	ldd	r25, Y+20	; 0x14
    6f74:	0e 94 5c 38 	call	0x70b8	; 0x70b8 <__fixunssfsi>
    6f78:	dc 01       	movw	r26, r24
    6f7a:	cb 01       	movw	r24, r22
    6f7c:	88 8b       	std	Y+16, r24	; 0x10
    6f7e:	88 89       	ldd	r24, Y+16	; 0x10
    6f80:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    6f82:	89 81       	ldd	r24, Y+1	; 0x01
    6f84:	8a 95       	dec	r24
    6f86:	f1 f7       	brne	.-4      	; 0x6f84 <readgamepad+0x301c>
    6f88:	89 83       	std	Y+1, r24	; 0x01
	

	
	
	ps2data9=0;
	for(i=0;i<8;i++) // 9 byte yaxis of right
    6f8a:	80 91 66 00 	lds	r24, 0x0066
    6f8e:	90 91 67 00 	lds	r25, 0x0067
    6f92:	01 96       	adiw	r24, 0x01	; 1
    6f94:	90 93 67 00 	sts	0x0067, r25
    6f98:	80 93 66 00 	sts	0x0066, r24
    6f9c:	80 91 66 00 	lds	r24, 0x0066
    6fa0:	90 91 67 00 	lds	r25, 0x0067
    6fa4:	88 30       	cpi	r24, 0x08	; 8
    6fa6:	91 05       	cpc	r25, r1
    6fa8:	0c f4       	brge	.+2      	; 0x6fac <readgamepad+0x3044>
    6faa:	30 ce       	rjmp	.-928    	; 0x6c0c <readgamepad+0x2ca4>
		else
			sbi(ps2data9,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    6fac:	a5 e3       	ldi	r26, 0x35	; 53
    6fae:	b0 e0       	ldi	r27, 0x00	; 0
    6fb0:	e5 e3       	ldi	r30, 0x35	; 53
    6fb2:	f0 e0       	ldi	r31, 0x00	; 0
    6fb4:	80 81       	ld	r24, Z
    6fb6:	84 60       	ori	r24, 0x04	; 4
    6fb8:	8c 93       	st	X, r24
	
	
	
	sbi(ps2port,ps2att);
    6fba:	a5 e3       	ldi	r26, 0x35	; 53
    6fbc:	b0 e0       	ldi	r27, 0x00	; 0
    6fbe:	e5 e3       	ldi	r30, 0x35	; 53
    6fc0:	f0 e0       	ldi	r31, 0x00	; 0
    6fc2:	80 81       	ld	r24, Z
    6fc4:	80 61       	ori	r24, 0x10	; 16
    6fc6:	8c 93       	st	X, r24
}
    6fc8:	c8 53       	subi	r28, 0x38	; 56
    6fca:	de 4f       	sbci	r29, 0xFE	; 254
    6fcc:	0f b6       	in	r0, 0x3f	; 63
    6fce:	f8 94       	cli
    6fd0:	de bf       	out	0x3e, r29	; 62
    6fd2:	0f be       	out	0x3f, r0	; 63
    6fd4:	cd bf       	out	0x3d, r28	; 61
    6fd6:	cf 91       	pop	r28
    6fd8:	df 91       	pop	r29
    6fda:	1f 91       	pop	r17
    6fdc:	0f 91       	pop	r16
    6fde:	08 95       	ret

00006fe0 <__cmpsf2>:
    6fe0:	97 d0       	rcall	.+302    	; 0x7110 <__fp_cmp>
    6fe2:	08 f4       	brcc	.+2      	; 0x6fe6 <__cmpsf2+0x6>
    6fe4:	81 e0       	ldi	r24, 0x01	; 1
    6fe6:	08 95       	ret

00006fe8 <__divsf3>:
    6fe8:	0c d0       	rcall	.+24     	; 0x7002 <__divsf3x>
    6fea:	cd c0       	rjmp	.+410    	; 0x7186 <__fp_round>
    6fec:	c5 d0       	rcall	.+394    	; 0x7178 <__fp_pscB>
    6fee:	40 f0       	brcs	.+16     	; 0x7000 <__divsf3+0x18>
    6ff0:	bc d0       	rcall	.+376    	; 0x716a <__fp_pscA>
    6ff2:	30 f0       	brcs	.+12     	; 0x7000 <__divsf3+0x18>
    6ff4:	21 f4       	brne	.+8      	; 0x6ffe <__divsf3+0x16>
    6ff6:	5f 3f       	cpi	r21, 0xFF	; 255
    6ff8:	19 f0       	breq	.+6      	; 0x7000 <__divsf3+0x18>
    6ffa:	ae c0       	rjmp	.+348    	; 0x7158 <__fp_inf>
    6ffc:	51 11       	cpse	r21, r1
    6ffe:	f7 c0       	rjmp	.+494    	; 0x71ee <__fp_szero>
    7000:	b1 c0       	rjmp	.+354    	; 0x7164 <__fp_nan>

00007002 <__divsf3x>:
    7002:	d2 d0       	rcall	.+420    	; 0x71a8 <__fp_split3>
    7004:	98 f3       	brcs	.-26     	; 0x6fec <__divsf3+0x4>

00007006 <__divsf3_pse>:
    7006:	99 23       	and	r25, r25
    7008:	c9 f3       	breq	.-14     	; 0x6ffc <__divsf3+0x14>
    700a:	55 23       	and	r21, r21
    700c:	b1 f3       	breq	.-20     	; 0x6ffa <__divsf3+0x12>
    700e:	95 1b       	sub	r25, r21
    7010:	55 0b       	sbc	r21, r21
    7012:	bb 27       	eor	r27, r27
    7014:	aa 27       	eor	r26, r26
    7016:	62 17       	cp	r22, r18
    7018:	73 07       	cpc	r23, r19
    701a:	84 07       	cpc	r24, r20
    701c:	38 f0       	brcs	.+14     	; 0x702c <__divsf3_pse+0x26>
    701e:	9f 5f       	subi	r25, 0xFF	; 255
    7020:	5f 4f       	sbci	r21, 0xFF	; 255
    7022:	22 0f       	add	r18, r18
    7024:	33 1f       	adc	r19, r19
    7026:	44 1f       	adc	r20, r20
    7028:	aa 1f       	adc	r26, r26
    702a:	a9 f3       	breq	.-22     	; 0x7016 <__divsf3_pse+0x10>
    702c:	33 d0       	rcall	.+102    	; 0x7094 <__divsf3_pse+0x8e>
    702e:	0e 2e       	mov	r0, r30
    7030:	3a f0       	brmi	.+14     	; 0x7040 <__divsf3_pse+0x3a>
    7032:	e0 e8       	ldi	r30, 0x80	; 128
    7034:	30 d0       	rcall	.+96     	; 0x7096 <__divsf3_pse+0x90>
    7036:	91 50       	subi	r25, 0x01	; 1
    7038:	50 40       	sbci	r21, 0x00	; 0
    703a:	e6 95       	lsr	r30
    703c:	00 1c       	adc	r0, r0
    703e:	ca f7       	brpl	.-14     	; 0x7032 <__divsf3_pse+0x2c>
    7040:	29 d0       	rcall	.+82     	; 0x7094 <__divsf3_pse+0x8e>
    7042:	fe 2f       	mov	r31, r30
    7044:	27 d0       	rcall	.+78     	; 0x7094 <__divsf3_pse+0x8e>
    7046:	66 0f       	add	r22, r22
    7048:	77 1f       	adc	r23, r23
    704a:	88 1f       	adc	r24, r24
    704c:	bb 1f       	adc	r27, r27
    704e:	26 17       	cp	r18, r22
    7050:	37 07       	cpc	r19, r23
    7052:	48 07       	cpc	r20, r24
    7054:	ab 07       	cpc	r26, r27
    7056:	b0 e8       	ldi	r27, 0x80	; 128
    7058:	09 f0       	breq	.+2      	; 0x705c <__divsf3_pse+0x56>
    705a:	bb 0b       	sbc	r27, r27
    705c:	80 2d       	mov	r24, r0
    705e:	bf 01       	movw	r22, r30
    7060:	ff 27       	eor	r31, r31
    7062:	93 58       	subi	r25, 0x83	; 131
    7064:	5f 4f       	sbci	r21, 0xFF	; 255
    7066:	2a f0       	brmi	.+10     	; 0x7072 <__divsf3_pse+0x6c>
    7068:	9e 3f       	cpi	r25, 0xFE	; 254
    706a:	51 05       	cpc	r21, r1
    706c:	68 f0       	brcs	.+26     	; 0x7088 <__divsf3_pse+0x82>
    706e:	74 c0       	rjmp	.+232    	; 0x7158 <__fp_inf>
    7070:	be c0       	rjmp	.+380    	; 0x71ee <__fp_szero>
    7072:	5f 3f       	cpi	r21, 0xFF	; 255
    7074:	ec f3       	brlt	.-6      	; 0x7070 <__divsf3_pse+0x6a>
    7076:	98 3e       	cpi	r25, 0xE8	; 232
    7078:	dc f3       	brlt	.-10     	; 0x7070 <__divsf3_pse+0x6a>
    707a:	86 95       	lsr	r24
    707c:	77 95       	ror	r23
    707e:	67 95       	ror	r22
    7080:	b7 95       	ror	r27
    7082:	f7 95       	ror	r31
    7084:	9f 5f       	subi	r25, 0xFF	; 255
    7086:	c9 f7       	brne	.-14     	; 0x707a <__divsf3_pse+0x74>
    7088:	88 0f       	add	r24, r24
    708a:	91 1d       	adc	r25, r1
    708c:	96 95       	lsr	r25
    708e:	87 95       	ror	r24
    7090:	97 f9       	bld	r25, 7
    7092:	08 95       	ret
    7094:	e1 e0       	ldi	r30, 0x01	; 1
    7096:	66 0f       	add	r22, r22
    7098:	77 1f       	adc	r23, r23
    709a:	88 1f       	adc	r24, r24
    709c:	bb 1f       	adc	r27, r27
    709e:	62 17       	cp	r22, r18
    70a0:	73 07       	cpc	r23, r19
    70a2:	84 07       	cpc	r24, r20
    70a4:	ba 07       	cpc	r27, r26
    70a6:	20 f0       	brcs	.+8      	; 0x70b0 <__divsf3_pse+0xaa>
    70a8:	62 1b       	sub	r22, r18
    70aa:	73 0b       	sbc	r23, r19
    70ac:	84 0b       	sbc	r24, r20
    70ae:	ba 0b       	sbc	r27, r26
    70b0:	ee 1f       	adc	r30, r30
    70b2:	88 f7       	brcc	.-30     	; 0x7096 <__divsf3_pse+0x90>
    70b4:	e0 95       	com	r30
    70b6:	08 95       	ret

000070b8 <__fixunssfsi>:
    70b8:	7f d0       	rcall	.+254    	; 0x71b8 <__fp_splitA>
    70ba:	88 f0       	brcs	.+34     	; 0x70de <__fixunssfsi+0x26>
    70bc:	9f 57       	subi	r25, 0x7F	; 127
    70be:	90 f0       	brcs	.+36     	; 0x70e4 <__fixunssfsi+0x2c>
    70c0:	b9 2f       	mov	r27, r25
    70c2:	99 27       	eor	r25, r25
    70c4:	b7 51       	subi	r27, 0x17	; 23
    70c6:	a0 f0       	brcs	.+40     	; 0x70f0 <__fixunssfsi+0x38>
    70c8:	d1 f0       	breq	.+52     	; 0x70fe <__fixunssfsi+0x46>
    70ca:	66 0f       	add	r22, r22
    70cc:	77 1f       	adc	r23, r23
    70ce:	88 1f       	adc	r24, r24
    70d0:	99 1f       	adc	r25, r25
    70d2:	1a f0       	brmi	.+6      	; 0x70da <__fixunssfsi+0x22>
    70d4:	ba 95       	dec	r27
    70d6:	c9 f7       	brne	.-14     	; 0x70ca <__fixunssfsi+0x12>
    70d8:	12 c0       	rjmp	.+36     	; 0x70fe <__fixunssfsi+0x46>
    70da:	b1 30       	cpi	r27, 0x01	; 1
    70dc:	81 f0       	breq	.+32     	; 0x70fe <__fixunssfsi+0x46>
    70de:	86 d0       	rcall	.+268    	; 0x71ec <__fp_zero>
    70e0:	b1 e0       	ldi	r27, 0x01	; 1
    70e2:	08 95       	ret
    70e4:	83 c0       	rjmp	.+262    	; 0x71ec <__fp_zero>
    70e6:	67 2f       	mov	r22, r23
    70e8:	78 2f       	mov	r23, r24
    70ea:	88 27       	eor	r24, r24
    70ec:	b8 5f       	subi	r27, 0xF8	; 248
    70ee:	39 f0       	breq	.+14     	; 0x70fe <__fixunssfsi+0x46>
    70f0:	b9 3f       	cpi	r27, 0xF9	; 249
    70f2:	cc f3       	brlt	.-14     	; 0x70e6 <__fixunssfsi+0x2e>
    70f4:	86 95       	lsr	r24
    70f6:	77 95       	ror	r23
    70f8:	67 95       	ror	r22
    70fa:	b3 95       	inc	r27
    70fc:	d9 f7       	brne	.-10     	; 0x70f4 <__fixunssfsi+0x3c>
    70fe:	3e f4       	brtc	.+14     	; 0x710e <__fixunssfsi+0x56>
    7100:	90 95       	com	r25
    7102:	80 95       	com	r24
    7104:	70 95       	com	r23
    7106:	61 95       	neg	r22
    7108:	7f 4f       	sbci	r23, 0xFF	; 255
    710a:	8f 4f       	sbci	r24, 0xFF	; 255
    710c:	9f 4f       	sbci	r25, 0xFF	; 255
    710e:	08 95       	ret

00007110 <__fp_cmp>:
    7110:	99 0f       	add	r25, r25
    7112:	00 08       	sbc	r0, r0
    7114:	55 0f       	add	r21, r21
    7116:	aa 0b       	sbc	r26, r26
    7118:	e0 e8       	ldi	r30, 0x80	; 128
    711a:	fe ef       	ldi	r31, 0xFE	; 254
    711c:	16 16       	cp	r1, r22
    711e:	17 06       	cpc	r1, r23
    7120:	e8 07       	cpc	r30, r24
    7122:	f9 07       	cpc	r31, r25
    7124:	c0 f0       	brcs	.+48     	; 0x7156 <__fp_cmp+0x46>
    7126:	12 16       	cp	r1, r18
    7128:	13 06       	cpc	r1, r19
    712a:	e4 07       	cpc	r30, r20
    712c:	f5 07       	cpc	r31, r21
    712e:	98 f0       	brcs	.+38     	; 0x7156 <__fp_cmp+0x46>
    7130:	62 1b       	sub	r22, r18
    7132:	73 0b       	sbc	r23, r19
    7134:	84 0b       	sbc	r24, r20
    7136:	95 0b       	sbc	r25, r21
    7138:	39 f4       	brne	.+14     	; 0x7148 <__fp_cmp+0x38>
    713a:	0a 26       	eor	r0, r26
    713c:	61 f0       	breq	.+24     	; 0x7156 <__fp_cmp+0x46>
    713e:	23 2b       	or	r18, r19
    7140:	24 2b       	or	r18, r20
    7142:	25 2b       	or	r18, r21
    7144:	21 f4       	brne	.+8      	; 0x714e <__fp_cmp+0x3e>
    7146:	08 95       	ret
    7148:	0a 26       	eor	r0, r26
    714a:	09 f4       	brne	.+2      	; 0x714e <__fp_cmp+0x3e>
    714c:	a1 40       	sbci	r26, 0x01	; 1
    714e:	a6 95       	lsr	r26
    7150:	8f ef       	ldi	r24, 0xFF	; 255
    7152:	81 1d       	adc	r24, r1
    7154:	81 1d       	adc	r24, r1
    7156:	08 95       	ret

00007158 <__fp_inf>:
    7158:	97 f9       	bld	r25, 7
    715a:	9f 67       	ori	r25, 0x7F	; 127
    715c:	80 e8       	ldi	r24, 0x80	; 128
    715e:	70 e0       	ldi	r23, 0x00	; 0
    7160:	60 e0       	ldi	r22, 0x00	; 0
    7162:	08 95       	ret

00007164 <__fp_nan>:
    7164:	9f ef       	ldi	r25, 0xFF	; 255
    7166:	80 ec       	ldi	r24, 0xC0	; 192
    7168:	08 95       	ret

0000716a <__fp_pscA>:
    716a:	00 24       	eor	r0, r0
    716c:	0a 94       	dec	r0
    716e:	16 16       	cp	r1, r22
    7170:	17 06       	cpc	r1, r23
    7172:	18 06       	cpc	r1, r24
    7174:	09 06       	cpc	r0, r25
    7176:	08 95       	ret

00007178 <__fp_pscB>:
    7178:	00 24       	eor	r0, r0
    717a:	0a 94       	dec	r0
    717c:	12 16       	cp	r1, r18
    717e:	13 06       	cpc	r1, r19
    7180:	14 06       	cpc	r1, r20
    7182:	05 06       	cpc	r0, r21
    7184:	08 95       	ret

00007186 <__fp_round>:
    7186:	09 2e       	mov	r0, r25
    7188:	03 94       	inc	r0
    718a:	00 0c       	add	r0, r0
    718c:	11 f4       	brne	.+4      	; 0x7192 <__fp_round+0xc>
    718e:	88 23       	and	r24, r24
    7190:	52 f0       	brmi	.+20     	; 0x71a6 <__fp_round+0x20>
    7192:	bb 0f       	add	r27, r27
    7194:	40 f4       	brcc	.+16     	; 0x71a6 <__fp_round+0x20>
    7196:	bf 2b       	or	r27, r31
    7198:	11 f4       	brne	.+4      	; 0x719e <__fp_round+0x18>
    719a:	60 ff       	sbrs	r22, 0
    719c:	04 c0       	rjmp	.+8      	; 0x71a6 <__fp_round+0x20>
    719e:	6f 5f       	subi	r22, 0xFF	; 255
    71a0:	7f 4f       	sbci	r23, 0xFF	; 255
    71a2:	8f 4f       	sbci	r24, 0xFF	; 255
    71a4:	9f 4f       	sbci	r25, 0xFF	; 255
    71a6:	08 95       	ret

000071a8 <__fp_split3>:
    71a8:	57 fd       	sbrc	r21, 7
    71aa:	90 58       	subi	r25, 0x80	; 128
    71ac:	44 0f       	add	r20, r20
    71ae:	55 1f       	adc	r21, r21
    71b0:	59 f0       	breq	.+22     	; 0x71c8 <__fp_splitA+0x10>
    71b2:	5f 3f       	cpi	r21, 0xFF	; 255
    71b4:	71 f0       	breq	.+28     	; 0x71d2 <__fp_splitA+0x1a>
    71b6:	47 95       	ror	r20

000071b8 <__fp_splitA>:
    71b8:	88 0f       	add	r24, r24
    71ba:	97 fb       	bst	r25, 7
    71bc:	99 1f       	adc	r25, r25
    71be:	61 f0       	breq	.+24     	; 0x71d8 <__fp_splitA+0x20>
    71c0:	9f 3f       	cpi	r25, 0xFF	; 255
    71c2:	79 f0       	breq	.+30     	; 0x71e2 <__fp_splitA+0x2a>
    71c4:	87 95       	ror	r24
    71c6:	08 95       	ret
    71c8:	12 16       	cp	r1, r18
    71ca:	13 06       	cpc	r1, r19
    71cc:	14 06       	cpc	r1, r20
    71ce:	55 1f       	adc	r21, r21
    71d0:	f2 cf       	rjmp	.-28     	; 0x71b6 <__fp_split3+0xe>
    71d2:	46 95       	lsr	r20
    71d4:	f1 df       	rcall	.-30     	; 0x71b8 <__fp_splitA>
    71d6:	08 c0       	rjmp	.+16     	; 0x71e8 <__fp_splitA+0x30>
    71d8:	16 16       	cp	r1, r22
    71da:	17 06       	cpc	r1, r23
    71dc:	18 06       	cpc	r1, r24
    71de:	99 1f       	adc	r25, r25
    71e0:	f1 cf       	rjmp	.-30     	; 0x71c4 <__fp_splitA+0xc>
    71e2:	86 95       	lsr	r24
    71e4:	71 05       	cpc	r23, r1
    71e6:	61 05       	cpc	r22, r1
    71e8:	08 94       	sec
    71ea:	08 95       	ret

000071ec <__fp_zero>:
    71ec:	e8 94       	clt

000071ee <__fp_szero>:
    71ee:	bb 27       	eor	r27, r27
    71f0:	66 27       	eor	r22, r22
    71f2:	77 27       	eor	r23, r23
    71f4:	cb 01       	movw	r24, r22
    71f6:	97 f9       	bld	r25, 7
    71f8:	08 95       	ret

000071fa <__gesf2>:
    71fa:	8a df       	rcall	.-236    	; 0x7110 <__fp_cmp>
    71fc:	08 f4       	brcc	.+2      	; 0x7200 <__gesf2+0x6>
    71fe:	8f ef       	ldi	r24, 0xFF	; 255
    7200:	08 95       	ret

00007202 <__mulsf3>:
    7202:	0b d0       	rcall	.+22     	; 0x721a <__mulsf3x>
    7204:	c0 cf       	rjmp	.-128    	; 0x7186 <__fp_round>
    7206:	b1 df       	rcall	.-158    	; 0x716a <__fp_pscA>
    7208:	28 f0       	brcs	.+10     	; 0x7214 <__mulsf3+0x12>
    720a:	b6 df       	rcall	.-148    	; 0x7178 <__fp_pscB>
    720c:	18 f0       	brcs	.+6      	; 0x7214 <__mulsf3+0x12>
    720e:	95 23       	and	r25, r21
    7210:	09 f0       	breq	.+2      	; 0x7214 <__mulsf3+0x12>
    7212:	a2 cf       	rjmp	.-188    	; 0x7158 <__fp_inf>
    7214:	a7 cf       	rjmp	.-178    	; 0x7164 <__fp_nan>
    7216:	11 24       	eor	r1, r1
    7218:	ea cf       	rjmp	.-44     	; 0x71ee <__fp_szero>

0000721a <__mulsf3x>:
    721a:	c6 df       	rcall	.-116    	; 0x71a8 <__fp_split3>
    721c:	a0 f3       	brcs	.-24     	; 0x7206 <__mulsf3+0x4>

0000721e <__mulsf3_pse>:
    721e:	95 9f       	mul	r25, r21
    7220:	d1 f3       	breq	.-12     	; 0x7216 <__mulsf3+0x14>
    7222:	95 0f       	add	r25, r21
    7224:	50 e0       	ldi	r21, 0x00	; 0
    7226:	55 1f       	adc	r21, r21
    7228:	62 9f       	mul	r22, r18
    722a:	f0 01       	movw	r30, r0
    722c:	72 9f       	mul	r23, r18
    722e:	bb 27       	eor	r27, r27
    7230:	f0 0d       	add	r31, r0
    7232:	b1 1d       	adc	r27, r1
    7234:	63 9f       	mul	r22, r19
    7236:	aa 27       	eor	r26, r26
    7238:	f0 0d       	add	r31, r0
    723a:	b1 1d       	adc	r27, r1
    723c:	aa 1f       	adc	r26, r26
    723e:	64 9f       	mul	r22, r20
    7240:	66 27       	eor	r22, r22
    7242:	b0 0d       	add	r27, r0
    7244:	a1 1d       	adc	r26, r1
    7246:	66 1f       	adc	r22, r22
    7248:	82 9f       	mul	r24, r18
    724a:	22 27       	eor	r18, r18
    724c:	b0 0d       	add	r27, r0
    724e:	a1 1d       	adc	r26, r1
    7250:	62 1f       	adc	r22, r18
    7252:	73 9f       	mul	r23, r19
    7254:	b0 0d       	add	r27, r0
    7256:	a1 1d       	adc	r26, r1
    7258:	62 1f       	adc	r22, r18
    725a:	83 9f       	mul	r24, r19
    725c:	a0 0d       	add	r26, r0
    725e:	61 1d       	adc	r22, r1
    7260:	22 1f       	adc	r18, r18
    7262:	74 9f       	mul	r23, r20
    7264:	33 27       	eor	r19, r19
    7266:	a0 0d       	add	r26, r0
    7268:	61 1d       	adc	r22, r1
    726a:	23 1f       	adc	r18, r19
    726c:	84 9f       	mul	r24, r20
    726e:	60 0d       	add	r22, r0
    7270:	21 1d       	adc	r18, r1
    7272:	82 2f       	mov	r24, r18
    7274:	76 2f       	mov	r23, r22
    7276:	6a 2f       	mov	r22, r26
    7278:	11 24       	eor	r1, r1
    727a:	9f 57       	subi	r25, 0x7F	; 127
    727c:	50 40       	sbci	r21, 0x00	; 0
    727e:	8a f0       	brmi	.+34     	; 0x72a2 <__mulsf3_pse+0x84>
    7280:	e1 f0       	breq	.+56     	; 0x72ba <__mulsf3_pse+0x9c>
    7282:	88 23       	and	r24, r24
    7284:	4a f0       	brmi	.+18     	; 0x7298 <__mulsf3_pse+0x7a>
    7286:	ee 0f       	add	r30, r30
    7288:	ff 1f       	adc	r31, r31
    728a:	bb 1f       	adc	r27, r27
    728c:	66 1f       	adc	r22, r22
    728e:	77 1f       	adc	r23, r23
    7290:	88 1f       	adc	r24, r24
    7292:	91 50       	subi	r25, 0x01	; 1
    7294:	50 40       	sbci	r21, 0x00	; 0
    7296:	a9 f7       	brne	.-22     	; 0x7282 <__mulsf3_pse+0x64>
    7298:	9e 3f       	cpi	r25, 0xFE	; 254
    729a:	51 05       	cpc	r21, r1
    729c:	70 f0       	brcs	.+28     	; 0x72ba <__mulsf3_pse+0x9c>
    729e:	5c cf       	rjmp	.-328    	; 0x7158 <__fp_inf>
    72a0:	a6 cf       	rjmp	.-180    	; 0x71ee <__fp_szero>
    72a2:	5f 3f       	cpi	r21, 0xFF	; 255
    72a4:	ec f3       	brlt	.-6      	; 0x72a0 <__mulsf3_pse+0x82>
    72a6:	98 3e       	cpi	r25, 0xE8	; 232
    72a8:	dc f3       	brlt	.-10     	; 0x72a0 <__mulsf3_pse+0x82>
    72aa:	86 95       	lsr	r24
    72ac:	77 95       	ror	r23
    72ae:	67 95       	ror	r22
    72b0:	b7 95       	ror	r27
    72b2:	f7 95       	ror	r31
    72b4:	e7 95       	ror	r30
    72b6:	9f 5f       	subi	r25, 0xFF	; 255
    72b8:	c1 f7       	brne	.-16     	; 0x72aa <__mulsf3_pse+0x8c>
    72ba:	fe 2b       	or	r31, r30
    72bc:	88 0f       	add	r24, r24
    72be:	91 1d       	adc	r25, r1
    72c0:	96 95       	lsr	r25
    72c2:	87 95       	ror	r24
    72c4:	97 f9       	bld	r25, 7
    72c6:	08 95       	ret

000072c8 <_exit>:
    72c8:	f8 94       	cli

000072ca <__stop_program>:
    72ca:	ff cf       	rjmp	.-2      	; 0x72ca <__stop_program>
