
slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008fa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000094e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000053  00000000  00000000  0000096e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000002c8  00000000  00000000  000009c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000100  00000000  00000000  00000c89  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000002e2  00000000  00000000  00000d89  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000060  00000000  00000000  0000106c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000100  00000000  00000000  000010cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 82 02 	jmp	0x504	; 0x504 <__vector_12>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 70 02 	call	0x4e0	; 0x4e0 <main>
  64:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <delay>:
		__ticks = (uint16_t)__tmp;
	_delay_loop_2(__ticks);
}

void delay(double seconds)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	64 97       	sbiw	r28, 0x14	; 20
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	69 8b       	std	Y+17, r22	; 0x11
  82:	7a 8b       	std	Y+18, r23	; 0x12
  84:	8b 8b       	std	Y+19, r24	; 0x13
  86:	9c 8b       	std	Y+20, r25	; 0x14
  88:	90 c0       	rjmp	.+288    	; 0x1aa <delay+0x13e>

	int i;
	for(;seconds;seconds--)
	for(i=0;i<100;i++)
  8a:	18 8a       	std	Y+16, r1	; 0x10
  8c:	1f 86       	std	Y+15, r1	; 0x0f
  8e:	77 c0       	rjmp	.+238    	; 0x17e <delay+0x112>
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	a0 e2       	ldi	r26, 0x20	; 32
  96:	b1 e4       	ldi	r27, 0x41	; 65
  98:	8b 87       	std	Y+11, r24	; 0x0b
  9a:	9c 87       	std	Y+12, r25	; 0x0c
  9c:	ad 87       	std	Y+13, r26	; 0x0d
  9e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  a0:	6b 85       	ldd	r22, Y+11	; 0x0b
  a2:	7c 85       	ldd	r23, Y+12	; 0x0c
  a4:	8d 85       	ldd	r24, Y+13	; 0x0d
  a6:	9e 85       	ldd	r25, Y+14	; 0x0e
  a8:	20 e0       	ldi	r18, 0x00	; 0
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	4a e7       	ldi	r20, 0x7A	; 122
  ae:	55 e4       	ldi	r21, 0x45	; 69
  b0:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
  b4:	dc 01       	movw	r26, r24
  b6:	cb 01       	movw	r24, r22
  b8:	8f 83       	std	Y+7, r24	; 0x07
  ba:	98 87       	std	Y+8, r25	; 0x08
  bc:	a9 87       	std	Y+9, r26	; 0x09
  be:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
  c0:	6f 81       	ldd	r22, Y+7	; 0x07
  c2:	78 85       	ldd	r23, Y+8	; 0x08
  c4:	89 85       	ldd	r24, Y+9	; 0x09
  c6:	9a 85       	ldd	r25, Y+10	; 0x0a
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	40 e8       	ldi	r20, 0x80	; 128
  ce:	5f e3       	ldi	r21, 0x3F	; 63
  d0:	0e 94 07 03 	call	0x60e	; 0x60e <__cmpsf2>
  d4:	88 23       	and	r24, r24
  d6:	2c f4       	brge	.+10     	; 0xe2 <delay+0x76>
		__ticks = 1;
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	9e 83       	std	Y+6, r25	; 0x06
  de:	8d 83       	std	Y+5, r24	; 0x05
  e0:	3f c0       	rjmp	.+126    	; 0x160 <delay+0xf4>
	else if (__tmp > 65535)
  e2:	6f 81       	ldd	r22, Y+7	; 0x07
  e4:	78 85       	ldd	r23, Y+8	; 0x08
  e6:	89 85       	ldd	r24, Y+9	; 0x09
  e8:	9a 85       	ldd	r25, Y+10	; 0x0a
  ea:	20 e0       	ldi	r18, 0x00	; 0
  ec:	3f ef       	ldi	r19, 0xFF	; 255
  ee:	4f e7       	ldi	r20, 0x7F	; 127
  f0:	57 e4       	ldi	r21, 0x47	; 71
  f2:	0e 94 14 04 	call	0x828	; 0x828 <__gesf2>
  f6:	18 16       	cp	r1, r24
  f8:	4c f5       	brge	.+82     	; 0x14c <delay+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
  fa:	6b 85       	ldd	r22, Y+11	; 0x0b
  fc:	7c 85       	ldd	r23, Y+12	; 0x0c
  fe:	8d 85       	ldd	r24, Y+13	; 0x0d
 100:	9e 85       	ldd	r25, Y+14	; 0x0e
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	40 e2       	ldi	r20, 0x20	; 32
 108:	51 e4       	ldi	r21, 0x41	; 65
 10a:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
 10e:	dc 01       	movw	r26, r24
 110:	cb 01       	movw	r24, r22
 112:	bc 01       	movw	r22, r24
 114:	cd 01       	movw	r24, r26
 116:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fixunssfsi>
 11a:	dc 01       	movw	r26, r24
 11c:	cb 01       	movw	r24, r22
 11e:	9e 83       	std	Y+6, r25	; 0x06
 120:	8d 83       	std	Y+5, r24	; 0x05
 122:	0f c0       	rjmp	.+30     	; 0x142 <delay+0xd6>
 124:	80 e9       	ldi	r24, 0x90	; 144
 126:	91 e0       	ldi	r25, 0x01	; 1
 128:	9c 83       	std	Y+4, r25	; 0x04
 12a:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 12c:	8b 81       	ldd	r24, Y+3	; 0x03
 12e:	9c 81       	ldd	r25, Y+4	; 0x04
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <delay+0xc4>
 134:	9c 83       	std	Y+4, r25	; 0x04
 136:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 138:	8d 81       	ldd	r24, Y+5	; 0x05
 13a:	9e 81       	ldd	r25, Y+6	; 0x06
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	9e 83       	std	Y+6, r25	; 0x06
 140:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 142:	8d 81       	ldd	r24, Y+5	; 0x05
 144:	9e 81       	ldd	r25, Y+6	; 0x06
 146:	00 97       	sbiw	r24, 0x00	; 0
 148:	69 f7       	brne	.-38     	; 0x124 <delay+0xb8>
 14a:	14 c0       	rjmp	.+40     	; 0x174 <delay+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 14c:	6f 81       	ldd	r22, Y+7	; 0x07
 14e:	78 85       	ldd	r23, Y+8	; 0x08
 150:	89 85       	ldd	r24, Y+9	; 0x09
 152:	9a 85       	ldd	r25, Y+10	; 0x0a
 154:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fixunssfsi>
 158:	dc 01       	movw	r26, r24
 15a:	cb 01       	movw	r24, r22
 15c:	9e 83       	std	Y+6, r25	; 0x06
 15e:	8d 83       	std	Y+5, r24	; 0x05
 160:	8d 81       	ldd	r24, Y+5	; 0x05
 162:	9e 81       	ldd	r25, Y+6	; 0x06
 164:	9a 83       	std	Y+2, r25	; 0x02
 166:	89 83       	std	Y+1, r24	; 0x01
 168:	89 81       	ldd	r24, Y+1	; 0x01
 16a:	9a 81       	ldd	r25, Y+2	; 0x02
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <delay+0x100>
 170:	9a 83       	std	Y+2, r25	; 0x02
 172:	89 83       	std	Y+1, r24	; 0x01
void delay(double seconds)
{

	int i;
	for(;seconds;seconds--)
	for(i=0;i<100;i++)
 174:	8f 85       	ldd	r24, Y+15	; 0x0f
 176:	98 89       	ldd	r25, Y+16	; 0x10
 178:	01 96       	adiw	r24, 0x01	; 1
 17a:	98 8b       	std	Y+16, r25	; 0x10
 17c:	8f 87       	std	Y+15, r24	; 0x0f
 17e:	8f 85       	ldd	r24, Y+15	; 0x0f
 180:	98 89       	ldd	r25, Y+16	; 0x10
 182:	84 36       	cpi	r24, 0x64	; 100
 184:	91 05       	cpc	r25, r1
 186:	0c f4       	brge	.+2      	; 0x18a <delay+0x11e>
 188:	83 cf       	rjmp	.-250    	; 0x90 <delay+0x24>

void delay(double seconds)
{

	int i;
	for(;seconds;seconds--)
 18a:	69 89       	ldd	r22, Y+17	; 0x11
 18c:	7a 89       	ldd	r23, Y+18	; 0x12
 18e:	8b 89       	ldd	r24, Y+19	; 0x13
 190:	9c 89       	ldd	r25, Y+20	; 0x14
 192:	20 e0       	ldi	r18, 0x00	; 0
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	40 e8       	ldi	r20, 0x80	; 128
 198:	5f e3       	ldi	r21, 0x3F	; 63
 19a:	0e 94 a2 02 	call	0x544	; 0x544 <__subsf3>
 19e:	dc 01       	movw	r26, r24
 1a0:	cb 01       	movw	r24, r22
 1a2:	89 8b       	std	Y+17, r24	; 0x11
 1a4:	9a 8b       	std	Y+18, r25	; 0x12
 1a6:	ab 8b       	std	Y+19, r26	; 0x13
 1a8:	bc 8b       	std	Y+20, r27	; 0x14
 1aa:	69 89       	ldd	r22, Y+17	; 0x11
 1ac:	7a 89       	ldd	r23, Y+18	; 0x12
 1ae:	8b 89       	ldd	r24, Y+19	; 0x13
 1b0:	9c 89       	ldd	r25, Y+20	; 0x14
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	50 e0       	ldi	r21, 0x00	; 0
 1ba:	0e 94 07 03 	call	0x60e	; 0x60e <__cmpsf2>
 1be:	88 23       	and	r24, r24
 1c0:	09 f0       	breq	.+2      	; 0x1c4 <delay+0x158>
 1c2:	63 cf       	rjmp	.-314    	; 0x8a <delay+0x1e>
	for(i=0;i<100;i++)
		_delay_ms(10);
}
 1c4:	64 96       	adiw	r28, 0x14	; 20
 1c6:	0f b6       	in	r0, 0x3f	; 63
 1c8:	f8 94       	cli
 1ca:	de bf       	out	0x3e, r29	; 62
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	cd bf       	out	0x3d, r28	; 61
 1d0:	cf 91       	pop	r28
 1d2:	df 91       	pop	r29
 1d4:	08 95       	ret

000001d6 <delay_10ms>:


void delay_10ms(double seconds)
{
 1d6:	df 93       	push	r29
 1d8:	cf 93       	push	r28
 1da:	cd b7       	in	r28, 0x3d	; 61
 1dc:	de b7       	in	r29, 0x3e	; 62
 1de:	62 97       	sbiw	r28, 0x12	; 18
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	f8 94       	cli
 1e4:	de bf       	out	0x3e, r29	; 62
 1e6:	0f be       	out	0x3f, r0	; 63
 1e8:	cd bf       	out	0x3d, r28	; 61
 1ea:	6f 87       	std	Y+15, r22	; 0x0f
 1ec:	78 8b       	std	Y+16, r23	; 0x10
 1ee:	89 8b       	std	Y+17, r24	; 0x11
 1f0:	9a 8b       	std	Y+18, r25	; 0x12
 1f2:	82 c0       	rjmp	.+260    	; 0x2f8 <delay_10ms+0x122>

	for(;seconds;seconds--)
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	a0 e2       	ldi	r26, 0x20	; 32
 1fa:	b1 e4       	ldi	r27, 0x41	; 65
 1fc:	8b 87       	std	Y+11, r24	; 0x0b
 1fe:	9c 87       	std	Y+12, r25	; 0x0c
 200:	ad 87       	std	Y+13, r26	; 0x0d
 202:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 204:	6b 85       	ldd	r22, Y+11	; 0x0b
 206:	7c 85       	ldd	r23, Y+12	; 0x0c
 208:	8d 85       	ldd	r24, Y+13	; 0x0d
 20a:	9e 85       	ldd	r25, Y+14	; 0x0e
 20c:	20 e0       	ldi	r18, 0x00	; 0
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	4a e7       	ldi	r20, 0x7A	; 122
 212:	55 e4       	ldi	r21, 0x45	; 69
 214:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
 218:	dc 01       	movw	r26, r24
 21a:	cb 01       	movw	r24, r22
 21c:	8f 83       	std	Y+7, r24	; 0x07
 21e:	98 87       	std	Y+8, r25	; 0x08
 220:	a9 87       	std	Y+9, r26	; 0x09
 222:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 224:	6f 81       	ldd	r22, Y+7	; 0x07
 226:	78 85       	ldd	r23, Y+8	; 0x08
 228:	89 85       	ldd	r24, Y+9	; 0x09
 22a:	9a 85       	ldd	r25, Y+10	; 0x0a
 22c:	20 e0       	ldi	r18, 0x00	; 0
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	40 e8       	ldi	r20, 0x80	; 128
 232:	5f e3       	ldi	r21, 0x3F	; 63
 234:	0e 94 07 03 	call	0x60e	; 0x60e <__cmpsf2>
 238:	88 23       	and	r24, r24
 23a:	2c f4       	brge	.+10     	; 0x246 <delay_10ms+0x70>
		__ticks = 1;
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	9e 83       	std	Y+6, r25	; 0x06
 242:	8d 83       	std	Y+5, r24	; 0x05
 244:	3f c0       	rjmp	.+126    	; 0x2c4 <delay_10ms+0xee>
	else if (__tmp > 65535)
 246:	6f 81       	ldd	r22, Y+7	; 0x07
 248:	78 85       	ldd	r23, Y+8	; 0x08
 24a:	89 85       	ldd	r24, Y+9	; 0x09
 24c:	9a 85       	ldd	r25, Y+10	; 0x0a
 24e:	20 e0       	ldi	r18, 0x00	; 0
 250:	3f ef       	ldi	r19, 0xFF	; 255
 252:	4f e7       	ldi	r20, 0x7F	; 127
 254:	57 e4       	ldi	r21, 0x47	; 71
 256:	0e 94 14 04 	call	0x828	; 0x828 <__gesf2>
 25a:	18 16       	cp	r1, r24
 25c:	4c f5       	brge	.+82     	; 0x2b0 <delay_10ms+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 25e:	6b 85       	ldd	r22, Y+11	; 0x0b
 260:	7c 85       	ldd	r23, Y+12	; 0x0c
 262:	8d 85       	ldd	r24, Y+13	; 0x0d
 264:	9e 85       	ldd	r25, Y+14	; 0x0e
 266:	20 e0       	ldi	r18, 0x00	; 0
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	40 e2       	ldi	r20, 0x20	; 32
 26c:	51 e4       	ldi	r21, 0x41	; 65
 26e:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
 272:	dc 01       	movw	r26, r24
 274:	cb 01       	movw	r24, r22
 276:	bc 01       	movw	r22, r24
 278:	cd 01       	movw	r24, r26
 27a:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fixunssfsi>
 27e:	dc 01       	movw	r26, r24
 280:	cb 01       	movw	r24, r22
 282:	9e 83       	std	Y+6, r25	; 0x06
 284:	8d 83       	std	Y+5, r24	; 0x05
 286:	0f c0       	rjmp	.+30     	; 0x2a6 <delay_10ms+0xd0>
 288:	80 e9       	ldi	r24, 0x90	; 144
 28a:	91 e0       	ldi	r25, 0x01	; 1
 28c:	9c 83       	std	Y+4, r25	; 0x04
 28e:	8b 83       	std	Y+3, r24	; 0x03
 290:	8b 81       	ldd	r24, Y+3	; 0x03
 292:	9c 81       	ldd	r25, Y+4	; 0x04
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <delay_10ms+0xbe>
 298:	9c 83       	std	Y+4, r25	; 0x04
 29a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 29c:	8d 81       	ldd	r24, Y+5	; 0x05
 29e:	9e 81       	ldd	r25, Y+6	; 0x06
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	9e 83       	std	Y+6, r25	; 0x06
 2a4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2a6:	8d 81       	ldd	r24, Y+5	; 0x05
 2a8:	9e 81       	ldd	r25, Y+6	; 0x06
 2aa:	00 97       	sbiw	r24, 0x00	; 0
 2ac:	69 f7       	brne	.-38     	; 0x288 <delay_10ms+0xb2>
 2ae:	14 c0       	rjmp	.+40     	; 0x2d8 <delay_10ms+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2b0:	6f 81       	ldd	r22, Y+7	; 0x07
 2b2:	78 85       	ldd	r23, Y+8	; 0x08
 2b4:	89 85       	ldd	r24, Y+9	; 0x09
 2b6:	9a 85       	ldd	r25, Y+10	; 0x0a
 2b8:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fixunssfsi>
 2bc:	dc 01       	movw	r26, r24
 2be:	cb 01       	movw	r24, r22
 2c0:	9e 83       	std	Y+6, r25	; 0x06
 2c2:	8d 83       	std	Y+5, r24	; 0x05
 2c4:	8d 81       	ldd	r24, Y+5	; 0x05
 2c6:	9e 81       	ldd	r25, Y+6	; 0x06
 2c8:	9a 83       	std	Y+2, r25	; 0x02
 2ca:	89 83       	std	Y+1, r24	; 0x01
 2cc:	89 81       	ldd	r24, Y+1	; 0x01
 2ce:	9a 81       	ldd	r25, Y+2	; 0x02
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <delay_10ms+0xfa>
 2d4:	9a 83       	std	Y+2, r25	; 0x02
 2d6:	89 83       	std	Y+1, r24	; 0x01


void delay_10ms(double seconds)
{

	for(;seconds;seconds--)
 2d8:	6f 85       	ldd	r22, Y+15	; 0x0f
 2da:	78 89       	ldd	r23, Y+16	; 0x10
 2dc:	89 89       	ldd	r24, Y+17	; 0x11
 2de:	9a 89       	ldd	r25, Y+18	; 0x12
 2e0:	20 e0       	ldi	r18, 0x00	; 0
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	40 e8       	ldi	r20, 0x80	; 128
 2e6:	5f e3       	ldi	r21, 0x3F	; 63
 2e8:	0e 94 a2 02 	call	0x544	; 0x544 <__subsf3>
 2ec:	dc 01       	movw	r26, r24
 2ee:	cb 01       	movw	r24, r22
 2f0:	8f 87       	std	Y+15, r24	; 0x0f
 2f2:	98 8b       	std	Y+16, r25	; 0x10
 2f4:	a9 8b       	std	Y+17, r26	; 0x11
 2f6:	ba 8b       	std	Y+18, r27	; 0x12
 2f8:	6f 85       	ldd	r22, Y+15	; 0x0f
 2fa:	78 89       	ldd	r23, Y+16	; 0x10
 2fc:	89 89       	ldd	r24, Y+17	; 0x11
 2fe:	9a 89       	ldd	r25, Y+18	; 0x12
 300:	20 e0       	ldi	r18, 0x00	; 0
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	0e 94 07 03 	call	0x60e	; 0x60e <__cmpsf2>
 30c:	88 23       	and	r24, r24
 30e:	09 f0       	breq	.+2      	; 0x312 <delay_10ms+0x13c>
 310:	71 cf       	rjmp	.-286    	; 0x1f4 <delay_10ms+0x1e>
	_delay_ms(10);
}
 312:	62 96       	adiw	r28, 0x12	; 18
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
 31e:	cf 91       	pop	r28
 320:	df 91       	pop	r29
 322:	08 95       	ret

00000324 <delay_10us>:

void delay_10us(int seconds)
{
 324:	df 93       	push	r29
 326:	cf 93       	push	r28
 328:	cd b7       	in	r28, 0x3d	; 61
 32a:	de b7       	in	r29, 0x3e	; 62
 32c:	6a 97       	sbiw	r28, 0x1a	; 26
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	f8 94       	cli
 332:	de bf       	out	0x3e, r29	; 62
 334:	0f be       	out	0x3f, r0	; 63
 336:	cd bf       	out	0x3d, r28	; 61
 338:	9a 8f       	std	Y+26, r25	; 0x1a
 33a:	89 8f       	std	Y+25, r24	; 0x19
 33c:	c3 c0       	rjmp	.+390    	; 0x4c4 <delay_10us+0x1a0>

	for(;seconds;seconds--)
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	a0 e2       	ldi	r26, 0x20	; 32
 344:	b1 e4       	ldi	r27, 0x41	; 65
 346:	8d 8b       	std	Y+21, r24	; 0x15
 348:	9e 8b       	std	Y+22, r25	; 0x16
 34a:	af 8b       	std	Y+23, r26	; 0x17
 34c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
 34e:	6d 89       	ldd	r22, Y+21	; 0x15
 350:	7e 89       	ldd	r23, Y+22	; 0x16
 352:	8f 89       	ldd	r24, Y+23	; 0x17
 354:	98 8d       	ldd	r25, Y+24	; 0x18
 356:	2b ea       	ldi	r18, 0xAB	; 171
 358:	3a ea       	ldi	r19, 0xAA	; 170
 35a:	4a ea       	ldi	r20, 0xAA	; 170
 35c:	50 e4       	ldi	r21, 0x40	; 64
 35e:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
 362:	dc 01       	movw	r26, r24
 364:	cb 01       	movw	r24, r22
 366:	89 8b       	std	Y+17, r24	; 0x11
 368:	9a 8b       	std	Y+18, r25	; 0x12
 36a:	ab 8b       	std	Y+19, r26	; 0x13
 36c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
 36e:	69 89       	ldd	r22, Y+17	; 0x11
 370:	7a 89       	ldd	r23, Y+18	; 0x12
 372:	8b 89       	ldd	r24, Y+19	; 0x13
 374:	9c 89       	ldd	r25, Y+20	; 0x14
 376:	20 e0       	ldi	r18, 0x00	; 0
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	40 e8       	ldi	r20, 0x80	; 128
 37c:	5f e3       	ldi	r21, 0x3F	; 63
 37e:	0e 94 07 03 	call	0x60e	; 0x60e <__cmpsf2>
 382:	88 23       	and	r24, r24
 384:	1c f4       	brge	.+6      	; 0x38c <delay_10us+0x68>
		__ticks = 1;
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	88 8b       	std	Y+16, r24	; 0x10
 38a:	91 c0       	rjmp	.+290    	; 0x4ae <delay_10us+0x18a>
	else if (__tmp > 255)
 38c:	69 89       	ldd	r22, Y+17	; 0x11
 38e:	7a 89       	ldd	r23, Y+18	; 0x12
 390:	8b 89       	ldd	r24, Y+19	; 0x13
 392:	9c 89       	ldd	r25, Y+20	; 0x14
 394:	20 e0       	ldi	r18, 0x00	; 0
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	4f e7       	ldi	r20, 0x7F	; 127
 39a:	53 e4       	ldi	r21, 0x43	; 67
 39c:	0e 94 14 04 	call	0x828	; 0x828 <__gesf2>
 3a0:	18 16       	cp	r1, r24
 3a2:	0c f0       	brlt	.+2      	; 0x3a6 <delay_10us+0x82>
 3a4:	7b c0       	rjmp	.+246    	; 0x49c <delay_10us+0x178>
	{
		_delay_ms(__us / 1000.0);
 3a6:	6d 89       	ldd	r22, Y+21	; 0x15
 3a8:	7e 89       	ldd	r23, Y+22	; 0x16
 3aa:	8f 89       	ldd	r24, Y+23	; 0x17
 3ac:	98 8d       	ldd	r25, Y+24	; 0x18
 3ae:	20 e0       	ldi	r18, 0x00	; 0
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	4a e7       	ldi	r20, 0x7A	; 122
 3b4:	54 e4       	ldi	r21, 0x44	; 68
 3b6:	0e 94 0b 03 	call	0x616	; 0x616 <__divsf3>
 3ba:	dc 01       	movw	r26, r24
 3bc:	cb 01       	movw	r24, r22
 3be:	8c 87       	std	Y+12, r24	; 0x0c
 3c0:	9d 87       	std	Y+13, r25	; 0x0d
 3c2:	ae 87       	std	Y+14, r26	; 0x0e
 3c4:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 3c6:	6c 85       	ldd	r22, Y+12	; 0x0c
 3c8:	7d 85       	ldd	r23, Y+13	; 0x0d
 3ca:	8e 85       	ldd	r24, Y+14	; 0x0e
 3cc:	9f 85       	ldd	r25, Y+15	; 0x0f
 3ce:	20 e0       	ldi	r18, 0x00	; 0
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	4a e7       	ldi	r20, 0x7A	; 122
 3d4:	55 e4       	ldi	r21, 0x45	; 69
 3d6:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
 3da:	dc 01       	movw	r26, r24
 3dc:	cb 01       	movw	r24, r22
 3de:	88 87       	std	Y+8, r24	; 0x08
 3e0:	99 87       	std	Y+9, r25	; 0x09
 3e2:	aa 87       	std	Y+10, r26	; 0x0a
 3e4:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
 3e6:	68 85       	ldd	r22, Y+8	; 0x08
 3e8:	79 85       	ldd	r23, Y+9	; 0x09
 3ea:	8a 85       	ldd	r24, Y+10	; 0x0a
 3ec:	9b 85       	ldd	r25, Y+11	; 0x0b
 3ee:	20 e0       	ldi	r18, 0x00	; 0
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	40 e8       	ldi	r20, 0x80	; 128
 3f4:	5f e3       	ldi	r21, 0x3F	; 63
 3f6:	0e 94 07 03 	call	0x60e	; 0x60e <__cmpsf2>
 3fa:	88 23       	and	r24, r24
 3fc:	2c f4       	brge	.+10     	; 0x408 <delay_10us+0xe4>
		__ticks = 1;
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	9f 83       	std	Y+7, r25	; 0x07
 404:	8e 83       	std	Y+6, r24	; 0x06
 406:	3f c0       	rjmp	.+126    	; 0x486 <delay_10us+0x162>
	else if (__tmp > 65535)
 408:	68 85       	ldd	r22, Y+8	; 0x08
 40a:	79 85       	ldd	r23, Y+9	; 0x09
 40c:	8a 85       	ldd	r24, Y+10	; 0x0a
 40e:	9b 85       	ldd	r25, Y+11	; 0x0b
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	3f ef       	ldi	r19, 0xFF	; 255
 414:	4f e7       	ldi	r20, 0x7F	; 127
 416:	57 e4       	ldi	r21, 0x47	; 71
 418:	0e 94 14 04 	call	0x828	; 0x828 <__gesf2>
 41c:	18 16       	cp	r1, r24
 41e:	4c f5       	brge	.+82     	; 0x472 <delay_10us+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 420:	6c 85       	ldd	r22, Y+12	; 0x0c
 422:	7d 85       	ldd	r23, Y+13	; 0x0d
 424:	8e 85       	ldd	r24, Y+14	; 0x0e
 426:	9f 85       	ldd	r25, Y+15	; 0x0f
 428:	20 e0       	ldi	r18, 0x00	; 0
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	40 e2       	ldi	r20, 0x20	; 32
 42e:	51 e4       	ldi	r21, 0x41	; 65
 430:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
 434:	dc 01       	movw	r26, r24
 436:	cb 01       	movw	r24, r22
 438:	bc 01       	movw	r22, r24
 43a:	cd 01       	movw	r24, r26
 43c:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fixunssfsi>
 440:	dc 01       	movw	r26, r24
 442:	cb 01       	movw	r24, r22
 444:	9f 83       	std	Y+7, r25	; 0x07
 446:	8e 83       	std	Y+6, r24	; 0x06
 448:	0f c0       	rjmp	.+30     	; 0x468 <delay_10us+0x144>
 44a:	80 e9       	ldi	r24, 0x90	; 144
 44c:	91 e0       	ldi	r25, 0x01	; 1
 44e:	9d 83       	std	Y+5, r25	; 0x05
 450:	8c 83       	std	Y+4, r24	; 0x04
 452:	8c 81       	ldd	r24, Y+4	; 0x04
 454:	9d 81       	ldd	r25, Y+5	; 0x05
 456:	01 97       	sbiw	r24, 0x01	; 1
 458:	f1 f7       	brne	.-4      	; 0x456 <delay_10us+0x132>
 45a:	9d 83       	std	Y+5, r25	; 0x05
 45c:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 45e:	8e 81       	ldd	r24, Y+6	; 0x06
 460:	9f 81       	ldd	r25, Y+7	; 0x07
 462:	01 97       	sbiw	r24, 0x01	; 1
 464:	9f 83       	std	Y+7, r25	; 0x07
 466:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 468:	8e 81       	ldd	r24, Y+6	; 0x06
 46a:	9f 81       	ldd	r25, Y+7	; 0x07
 46c:	00 97       	sbiw	r24, 0x00	; 0
 46e:	69 f7       	brne	.-38     	; 0x44a <delay_10us+0x126>
 470:	24 c0       	rjmp	.+72     	; 0x4ba <delay_10us+0x196>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 472:	68 85       	ldd	r22, Y+8	; 0x08
 474:	79 85       	ldd	r23, Y+9	; 0x09
 476:	8a 85       	ldd	r24, Y+10	; 0x0a
 478:	9b 85       	ldd	r25, Y+11	; 0x0b
 47a:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fixunssfsi>
 47e:	dc 01       	movw	r26, r24
 480:	cb 01       	movw	r24, r22
 482:	9f 83       	std	Y+7, r25	; 0x07
 484:	8e 83       	std	Y+6, r24	; 0x06
 486:	8e 81       	ldd	r24, Y+6	; 0x06
 488:	9f 81       	ldd	r25, Y+7	; 0x07
 48a:	9b 83       	std	Y+3, r25	; 0x03
 48c:	8a 83       	std	Y+2, r24	; 0x02
 48e:	8a 81       	ldd	r24, Y+2	; 0x02
 490:	9b 81       	ldd	r25, Y+3	; 0x03
 492:	01 97       	sbiw	r24, 0x01	; 1
 494:	f1 f7       	brne	.-4      	; 0x492 <delay_10us+0x16e>
 496:	9b 83       	std	Y+3, r25	; 0x03
 498:	8a 83       	std	Y+2, r24	; 0x02
 49a:	0f c0       	rjmp	.+30     	; 0x4ba <delay_10us+0x196>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
 49c:	69 89       	ldd	r22, Y+17	; 0x11
 49e:	7a 89       	ldd	r23, Y+18	; 0x12
 4a0:	8b 89       	ldd	r24, Y+19	; 0x13
 4a2:	9c 89       	ldd	r25, Y+20	; 0x14
 4a4:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fixunssfsi>
 4a8:	dc 01       	movw	r26, r24
 4aa:	cb 01       	movw	r24, r22
 4ac:	88 8b       	std	Y+16, r24	; 0x10
 4ae:	88 89       	ldd	r24, Y+16	; 0x10
 4b0:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 4b2:	89 81       	ldd	r24, Y+1	; 0x01
 4b4:	8a 95       	dec	r24
 4b6:	f1 f7       	brne	.-4      	; 0x4b4 <delay_10us+0x190>
 4b8:	89 83       	std	Y+1, r24	; 0x01
}

void delay_10us(int seconds)
{

	for(;seconds;seconds--)
 4ba:	89 8d       	ldd	r24, Y+25	; 0x19
 4bc:	9a 8d       	ldd	r25, Y+26	; 0x1a
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	9a 8f       	std	Y+26, r25	; 0x1a
 4c2:	89 8f       	std	Y+25, r24	; 0x19
 4c4:	89 8d       	ldd	r24, Y+25	; 0x19
 4c6:	9a 8d       	ldd	r25, Y+26	; 0x1a
 4c8:	00 97       	sbiw	r24, 0x00	; 0
 4ca:	09 f0       	breq	.+2      	; 0x4ce <delay_10us+0x1aa>
 4cc:	38 cf       	rjmp	.-400    	; 0x33e <delay_10us+0x1a>
	_delay_us(10);
}
 4ce:	6a 96       	adiw	r28, 0x1a	; 26
 4d0:	0f b6       	in	r0, 0x3f	; 63
 4d2:	f8 94       	cli
 4d4:	de bf       	out	0x3e, r29	; 62
 4d6:	0f be       	out	0x3f, r0	; 63
 4d8:	cd bf       	out	0x3d, r28	; 61
 4da:	cf 91       	pop	r28
 4dc:	df 91       	pop	r29
 4de:	08 95       	ret

000004e0 <main>:
#include<avr/io.h>
#include<util/delay.h>
#include<avr/interrupt.h>
void main()
{
 4e0:	df 93       	push	r29
 4e2:	cf 93       	push	r28
 4e4:	cd b7       	in	r28, 0x3d	; 61
 4e6:	de b7       	in	r29, 0x3e	; 62
sei();
 4e8:	78 94       	sei
DDRB=(1<<PB6);
 4ea:	e7 e3       	ldi	r30, 0x37	; 55
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	80 e4       	ldi	r24, 0x40	; 64
 4f0:	80 83       	st	Z, r24
SPCR=(1<<SPE);
 4f2:	ed e2       	ldi	r30, 0x2D	; 45
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	80 e4       	ldi	r24, 0x40	; 64
 4f8:	80 83       	st	Z, r24


DDRA = 0xFF;
 4fa:	ea e3       	ldi	r30, 0x3A	; 58
 4fc:	f0 e0       	ldi	r31, 0x00	; 0
 4fe:	8f ef       	ldi	r24, 0xFF	; 255
 500:	80 83       	st	Z, r24
 502:	ff cf       	rjmp	.-2      	; 0x502 <main+0x22>

00000504 <__vector_12>:
	
}

}
ISR(SPI_STC_vect)
{
 504:	1f 92       	push	r1
 506:	0f 92       	push	r0
 508:	0f b6       	in	r0, 0x3f	; 63
 50a:	0f 92       	push	r0
 50c:	11 24       	eor	r1, r1
 50e:	8f 93       	push	r24
 510:	af 93       	push	r26
 512:	bf 93       	push	r27
 514:	ef 93       	push	r30
 516:	ff 93       	push	r31
 518:	df 93       	push	r29
 51a:	cf 93       	push	r28
 51c:	cd b7       	in	r28, 0x3d	; 61
 51e:	de b7       	in	r29, 0x3e	; 62
PORTA = SPDR;
 520:	eb e3       	ldi	r30, 0x3B	; 59
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	af e2       	ldi	r26, 0x2F	; 47
 526:	b0 e0       	ldi	r27, 0x00	; 0
 528:	8c 91       	ld	r24, X
 52a:	80 83       	st	Z, r24
 52c:	cf 91       	pop	r28
 52e:	df 91       	pop	r29
 530:	ff 91       	pop	r31
 532:	ef 91       	pop	r30
 534:	bf 91       	pop	r27
 536:	af 91       	pop	r26
 538:	8f 91       	pop	r24
 53a:	0f 90       	pop	r0
 53c:	0f be       	out	0x3f, r0	; 63
 53e:	0f 90       	pop	r0
 540:	1f 90       	pop	r1
 542:	18 95       	reti

00000544 <__subsf3>:
 544:	50 58       	subi	r21, 0x80	; 128

00000546 <__addsf3>:
 546:	bb 27       	eor	r27, r27
 548:	aa 27       	eor	r26, r26
 54a:	0e d0       	rcall	.+28     	; 0x568 <__addsf3x>
 54c:	33 c1       	rjmp	.+614    	; 0x7b4 <__fp_round>
 54e:	24 d1       	rcall	.+584    	; 0x798 <__fp_pscA>
 550:	30 f0       	brcs	.+12     	; 0x55e <__addsf3+0x18>
 552:	29 d1       	rcall	.+594    	; 0x7a6 <__fp_pscB>
 554:	20 f0       	brcs	.+8      	; 0x55e <__addsf3+0x18>
 556:	31 f4       	brne	.+12     	; 0x564 <__addsf3+0x1e>
 558:	9f 3f       	cpi	r25, 0xFF	; 255
 55a:	11 f4       	brne	.+4      	; 0x560 <__addsf3+0x1a>
 55c:	1e f4       	brtc	.+6      	; 0x564 <__addsf3+0x1e>
 55e:	19 c1       	rjmp	.+562    	; 0x792 <__fp_nan>
 560:	0e f4       	brtc	.+2      	; 0x564 <__addsf3+0x1e>
 562:	e0 95       	com	r30
 564:	e7 fb       	bst	r30, 7
 566:	0f c1       	rjmp	.+542    	; 0x786 <__fp_inf>

00000568 <__addsf3x>:
 568:	e9 2f       	mov	r30, r25
 56a:	35 d1       	rcall	.+618    	; 0x7d6 <__fp_split3>
 56c:	80 f3       	brcs	.-32     	; 0x54e <__addsf3+0x8>
 56e:	ba 17       	cp	r27, r26
 570:	62 07       	cpc	r22, r18
 572:	73 07       	cpc	r23, r19
 574:	84 07       	cpc	r24, r20
 576:	95 07       	cpc	r25, r21
 578:	18 f0       	brcs	.+6      	; 0x580 <__addsf3x+0x18>
 57a:	71 f4       	brne	.+28     	; 0x598 <__addsf3x+0x30>
 57c:	9e f5       	brtc	.+102    	; 0x5e4 <__addsf3x+0x7c>
 57e:	4d c1       	rjmp	.+666    	; 0x81a <__fp_zero>
 580:	0e f4       	brtc	.+2      	; 0x584 <__addsf3x+0x1c>
 582:	e0 95       	com	r30
 584:	0b 2e       	mov	r0, r27
 586:	ba 2f       	mov	r27, r26
 588:	a0 2d       	mov	r26, r0
 58a:	0b 01       	movw	r0, r22
 58c:	b9 01       	movw	r22, r18
 58e:	90 01       	movw	r18, r0
 590:	0c 01       	movw	r0, r24
 592:	ca 01       	movw	r24, r20
 594:	a0 01       	movw	r20, r0
 596:	11 24       	eor	r1, r1
 598:	ff 27       	eor	r31, r31
 59a:	59 1b       	sub	r21, r25
 59c:	99 f0       	breq	.+38     	; 0x5c4 <__addsf3x+0x5c>
 59e:	59 3f       	cpi	r21, 0xF9	; 249
 5a0:	50 f4       	brcc	.+20     	; 0x5b6 <__addsf3x+0x4e>
 5a2:	50 3e       	cpi	r21, 0xE0	; 224
 5a4:	68 f1       	brcs	.+90     	; 0x600 <__addsf3x+0x98>
 5a6:	1a 16       	cp	r1, r26
 5a8:	f0 40       	sbci	r31, 0x00	; 0
 5aa:	a2 2f       	mov	r26, r18
 5ac:	23 2f       	mov	r18, r19
 5ae:	34 2f       	mov	r19, r20
 5b0:	44 27       	eor	r20, r20
 5b2:	58 5f       	subi	r21, 0xF8	; 248
 5b4:	f3 cf       	rjmp	.-26     	; 0x59c <__addsf3x+0x34>
 5b6:	46 95       	lsr	r20
 5b8:	37 95       	ror	r19
 5ba:	27 95       	ror	r18
 5bc:	a7 95       	ror	r26
 5be:	f0 40       	sbci	r31, 0x00	; 0
 5c0:	53 95       	inc	r21
 5c2:	c9 f7       	brne	.-14     	; 0x5b6 <__addsf3x+0x4e>
 5c4:	7e f4       	brtc	.+30     	; 0x5e4 <__addsf3x+0x7c>
 5c6:	1f 16       	cp	r1, r31
 5c8:	ba 0b       	sbc	r27, r26
 5ca:	62 0b       	sbc	r22, r18
 5cc:	73 0b       	sbc	r23, r19
 5ce:	84 0b       	sbc	r24, r20
 5d0:	ba f0       	brmi	.+46     	; 0x600 <__addsf3x+0x98>
 5d2:	91 50       	subi	r25, 0x01	; 1
 5d4:	a1 f0       	breq	.+40     	; 0x5fe <__addsf3x+0x96>
 5d6:	ff 0f       	add	r31, r31
 5d8:	bb 1f       	adc	r27, r27
 5da:	66 1f       	adc	r22, r22
 5dc:	77 1f       	adc	r23, r23
 5de:	88 1f       	adc	r24, r24
 5e0:	c2 f7       	brpl	.-16     	; 0x5d2 <__addsf3x+0x6a>
 5e2:	0e c0       	rjmp	.+28     	; 0x600 <__addsf3x+0x98>
 5e4:	ba 0f       	add	r27, r26
 5e6:	62 1f       	adc	r22, r18
 5e8:	73 1f       	adc	r23, r19
 5ea:	84 1f       	adc	r24, r20
 5ec:	48 f4       	brcc	.+18     	; 0x600 <__addsf3x+0x98>
 5ee:	87 95       	ror	r24
 5f0:	77 95       	ror	r23
 5f2:	67 95       	ror	r22
 5f4:	b7 95       	ror	r27
 5f6:	f7 95       	ror	r31
 5f8:	9e 3f       	cpi	r25, 0xFE	; 254
 5fa:	08 f0       	brcs	.+2      	; 0x5fe <__addsf3x+0x96>
 5fc:	b3 cf       	rjmp	.-154    	; 0x564 <__addsf3+0x1e>
 5fe:	93 95       	inc	r25
 600:	88 0f       	add	r24, r24
 602:	08 f0       	brcs	.+2      	; 0x606 <__addsf3x+0x9e>
 604:	99 27       	eor	r25, r25
 606:	ee 0f       	add	r30, r30
 608:	97 95       	ror	r25
 60a:	87 95       	ror	r24
 60c:	08 95       	ret

0000060e <__cmpsf2>:
 60e:	97 d0       	rcall	.+302    	; 0x73e <__fp_cmp>
 610:	08 f4       	brcc	.+2      	; 0x614 <__cmpsf2+0x6>
 612:	81 e0       	ldi	r24, 0x01	; 1
 614:	08 95       	ret

00000616 <__divsf3>:
 616:	0c d0       	rcall	.+24     	; 0x630 <__divsf3x>
 618:	cd c0       	rjmp	.+410    	; 0x7b4 <__fp_round>
 61a:	c5 d0       	rcall	.+394    	; 0x7a6 <__fp_pscB>
 61c:	40 f0       	brcs	.+16     	; 0x62e <__divsf3+0x18>
 61e:	bc d0       	rcall	.+376    	; 0x798 <__fp_pscA>
 620:	30 f0       	brcs	.+12     	; 0x62e <__divsf3+0x18>
 622:	21 f4       	brne	.+8      	; 0x62c <__divsf3+0x16>
 624:	5f 3f       	cpi	r21, 0xFF	; 255
 626:	19 f0       	breq	.+6      	; 0x62e <__divsf3+0x18>
 628:	ae c0       	rjmp	.+348    	; 0x786 <__fp_inf>
 62a:	51 11       	cpse	r21, r1
 62c:	f7 c0       	rjmp	.+494    	; 0x81c <__fp_szero>
 62e:	b1 c0       	rjmp	.+354    	; 0x792 <__fp_nan>

00000630 <__divsf3x>:
 630:	d2 d0       	rcall	.+420    	; 0x7d6 <__fp_split3>
 632:	98 f3       	brcs	.-26     	; 0x61a <__divsf3+0x4>

00000634 <__divsf3_pse>:
 634:	99 23       	and	r25, r25
 636:	c9 f3       	breq	.-14     	; 0x62a <__divsf3+0x14>
 638:	55 23       	and	r21, r21
 63a:	b1 f3       	breq	.-20     	; 0x628 <__divsf3+0x12>
 63c:	95 1b       	sub	r25, r21
 63e:	55 0b       	sbc	r21, r21
 640:	bb 27       	eor	r27, r27
 642:	aa 27       	eor	r26, r26
 644:	62 17       	cp	r22, r18
 646:	73 07       	cpc	r23, r19
 648:	84 07       	cpc	r24, r20
 64a:	38 f0       	brcs	.+14     	; 0x65a <__divsf3_pse+0x26>
 64c:	9f 5f       	subi	r25, 0xFF	; 255
 64e:	5f 4f       	sbci	r21, 0xFF	; 255
 650:	22 0f       	add	r18, r18
 652:	33 1f       	adc	r19, r19
 654:	44 1f       	adc	r20, r20
 656:	aa 1f       	adc	r26, r26
 658:	a9 f3       	breq	.-22     	; 0x644 <__divsf3_pse+0x10>
 65a:	33 d0       	rcall	.+102    	; 0x6c2 <__divsf3_pse+0x8e>
 65c:	0e 2e       	mov	r0, r30
 65e:	3a f0       	brmi	.+14     	; 0x66e <__divsf3_pse+0x3a>
 660:	e0 e8       	ldi	r30, 0x80	; 128
 662:	30 d0       	rcall	.+96     	; 0x6c4 <__divsf3_pse+0x90>
 664:	91 50       	subi	r25, 0x01	; 1
 666:	50 40       	sbci	r21, 0x00	; 0
 668:	e6 95       	lsr	r30
 66a:	00 1c       	adc	r0, r0
 66c:	ca f7       	brpl	.-14     	; 0x660 <__divsf3_pse+0x2c>
 66e:	29 d0       	rcall	.+82     	; 0x6c2 <__divsf3_pse+0x8e>
 670:	fe 2f       	mov	r31, r30
 672:	27 d0       	rcall	.+78     	; 0x6c2 <__divsf3_pse+0x8e>
 674:	66 0f       	add	r22, r22
 676:	77 1f       	adc	r23, r23
 678:	88 1f       	adc	r24, r24
 67a:	bb 1f       	adc	r27, r27
 67c:	26 17       	cp	r18, r22
 67e:	37 07       	cpc	r19, r23
 680:	48 07       	cpc	r20, r24
 682:	ab 07       	cpc	r26, r27
 684:	b0 e8       	ldi	r27, 0x80	; 128
 686:	09 f0       	breq	.+2      	; 0x68a <__divsf3_pse+0x56>
 688:	bb 0b       	sbc	r27, r27
 68a:	80 2d       	mov	r24, r0
 68c:	bf 01       	movw	r22, r30
 68e:	ff 27       	eor	r31, r31
 690:	93 58       	subi	r25, 0x83	; 131
 692:	5f 4f       	sbci	r21, 0xFF	; 255
 694:	2a f0       	brmi	.+10     	; 0x6a0 <__divsf3_pse+0x6c>
 696:	9e 3f       	cpi	r25, 0xFE	; 254
 698:	51 05       	cpc	r21, r1
 69a:	68 f0       	brcs	.+26     	; 0x6b6 <__divsf3_pse+0x82>
 69c:	74 c0       	rjmp	.+232    	; 0x786 <__fp_inf>
 69e:	be c0       	rjmp	.+380    	; 0x81c <__fp_szero>
 6a0:	5f 3f       	cpi	r21, 0xFF	; 255
 6a2:	ec f3       	brlt	.-6      	; 0x69e <__divsf3_pse+0x6a>
 6a4:	98 3e       	cpi	r25, 0xE8	; 232
 6a6:	dc f3       	brlt	.-10     	; 0x69e <__divsf3_pse+0x6a>
 6a8:	86 95       	lsr	r24
 6aa:	77 95       	ror	r23
 6ac:	67 95       	ror	r22
 6ae:	b7 95       	ror	r27
 6b0:	f7 95       	ror	r31
 6b2:	9f 5f       	subi	r25, 0xFF	; 255
 6b4:	c9 f7       	brne	.-14     	; 0x6a8 <__divsf3_pse+0x74>
 6b6:	88 0f       	add	r24, r24
 6b8:	91 1d       	adc	r25, r1
 6ba:	96 95       	lsr	r25
 6bc:	87 95       	ror	r24
 6be:	97 f9       	bld	r25, 7
 6c0:	08 95       	ret
 6c2:	e1 e0       	ldi	r30, 0x01	; 1
 6c4:	66 0f       	add	r22, r22
 6c6:	77 1f       	adc	r23, r23
 6c8:	88 1f       	adc	r24, r24
 6ca:	bb 1f       	adc	r27, r27
 6cc:	62 17       	cp	r22, r18
 6ce:	73 07       	cpc	r23, r19
 6d0:	84 07       	cpc	r24, r20
 6d2:	ba 07       	cpc	r27, r26
 6d4:	20 f0       	brcs	.+8      	; 0x6de <__divsf3_pse+0xaa>
 6d6:	62 1b       	sub	r22, r18
 6d8:	73 0b       	sbc	r23, r19
 6da:	84 0b       	sbc	r24, r20
 6dc:	ba 0b       	sbc	r27, r26
 6de:	ee 1f       	adc	r30, r30
 6e0:	88 f7       	brcc	.-30     	; 0x6c4 <__divsf3_pse+0x90>
 6e2:	e0 95       	com	r30
 6e4:	08 95       	ret

000006e6 <__fixunssfsi>:
 6e6:	7f d0       	rcall	.+254    	; 0x7e6 <__fp_splitA>
 6e8:	88 f0       	brcs	.+34     	; 0x70c <__fixunssfsi+0x26>
 6ea:	9f 57       	subi	r25, 0x7F	; 127
 6ec:	90 f0       	brcs	.+36     	; 0x712 <__fixunssfsi+0x2c>
 6ee:	b9 2f       	mov	r27, r25
 6f0:	99 27       	eor	r25, r25
 6f2:	b7 51       	subi	r27, 0x17	; 23
 6f4:	a0 f0       	brcs	.+40     	; 0x71e <__fixunssfsi+0x38>
 6f6:	d1 f0       	breq	.+52     	; 0x72c <__fixunssfsi+0x46>
 6f8:	66 0f       	add	r22, r22
 6fa:	77 1f       	adc	r23, r23
 6fc:	88 1f       	adc	r24, r24
 6fe:	99 1f       	adc	r25, r25
 700:	1a f0       	brmi	.+6      	; 0x708 <__fixunssfsi+0x22>
 702:	ba 95       	dec	r27
 704:	c9 f7       	brne	.-14     	; 0x6f8 <__fixunssfsi+0x12>
 706:	12 c0       	rjmp	.+36     	; 0x72c <__fixunssfsi+0x46>
 708:	b1 30       	cpi	r27, 0x01	; 1
 70a:	81 f0       	breq	.+32     	; 0x72c <__fixunssfsi+0x46>
 70c:	86 d0       	rcall	.+268    	; 0x81a <__fp_zero>
 70e:	b1 e0       	ldi	r27, 0x01	; 1
 710:	08 95       	ret
 712:	83 c0       	rjmp	.+262    	; 0x81a <__fp_zero>
 714:	67 2f       	mov	r22, r23
 716:	78 2f       	mov	r23, r24
 718:	88 27       	eor	r24, r24
 71a:	b8 5f       	subi	r27, 0xF8	; 248
 71c:	39 f0       	breq	.+14     	; 0x72c <__fixunssfsi+0x46>
 71e:	b9 3f       	cpi	r27, 0xF9	; 249
 720:	cc f3       	brlt	.-14     	; 0x714 <__fixunssfsi+0x2e>
 722:	86 95       	lsr	r24
 724:	77 95       	ror	r23
 726:	67 95       	ror	r22
 728:	b3 95       	inc	r27
 72a:	d9 f7       	brne	.-10     	; 0x722 <__fixunssfsi+0x3c>
 72c:	3e f4       	brtc	.+14     	; 0x73c <__fixunssfsi+0x56>
 72e:	90 95       	com	r25
 730:	80 95       	com	r24
 732:	70 95       	com	r23
 734:	61 95       	neg	r22
 736:	7f 4f       	sbci	r23, 0xFF	; 255
 738:	8f 4f       	sbci	r24, 0xFF	; 255
 73a:	9f 4f       	sbci	r25, 0xFF	; 255
 73c:	08 95       	ret

0000073e <__fp_cmp>:
 73e:	99 0f       	add	r25, r25
 740:	00 08       	sbc	r0, r0
 742:	55 0f       	add	r21, r21
 744:	aa 0b       	sbc	r26, r26
 746:	e0 e8       	ldi	r30, 0x80	; 128
 748:	fe ef       	ldi	r31, 0xFE	; 254
 74a:	16 16       	cp	r1, r22
 74c:	17 06       	cpc	r1, r23
 74e:	e8 07       	cpc	r30, r24
 750:	f9 07       	cpc	r31, r25
 752:	c0 f0       	brcs	.+48     	; 0x784 <__fp_cmp+0x46>
 754:	12 16       	cp	r1, r18
 756:	13 06       	cpc	r1, r19
 758:	e4 07       	cpc	r30, r20
 75a:	f5 07       	cpc	r31, r21
 75c:	98 f0       	brcs	.+38     	; 0x784 <__fp_cmp+0x46>
 75e:	62 1b       	sub	r22, r18
 760:	73 0b       	sbc	r23, r19
 762:	84 0b       	sbc	r24, r20
 764:	95 0b       	sbc	r25, r21
 766:	39 f4       	brne	.+14     	; 0x776 <__fp_cmp+0x38>
 768:	0a 26       	eor	r0, r26
 76a:	61 f0       	breq	.+24     	; 0x784 <__fp_cmp+0x46>
 76c:	23 2b       	or	r18, r19
 76e:	24 2b       	or	r18, r20
 770:	25 2b       	or	r18, r21
 772:	21 f4       	brne	.+8      	; 0x77c <__fp_cmp+0x3e>
 774:	08 95       	ret
 776:	0a 26       	eor	r0, r26
 778:	09 f4       	brne	.+2      	; 0x77c <__fp_cmp+0x3e>
 77a:	a1 40       	sbci	r26, 0x01	; 1
 77c:	a6 95       	lsr	r26
 77e:	8f ef       	ldi	r24, 0xFF	; 255
 780:	81 1d       	adc	r24, r1
 782:	81 1d       	adc	r24, r1
 784:	08 95       	ret

00000786 <__fp_inf>:
 786:	97 f9       	bld	r25, 7
 788:	9f 67       	ori	r25, 0x7F	; 127
 78a:	80 e8       	ldi	r24, 0x80	; 128
 78c:	70 e0       	ldi	r23, 0x00	; 0
 78e:	60 e0       	ldi	r22, 0x00	; 0
 790:	08 95       	ret

00000792 <__fp_nan>:
 792:	9f ef       	ldi	r25, 0xFF	; 255
 794:	80 ec       	ldi	r24, 0xC0	; 192
 796:	08 95       	ret

00000798 <__fp_pscA>:
 798:	00 24       	eor	r0, r0
 79a:	0a 94       	dec	r0
 79c:	16 16       	cp	r1, r22
 79e:	17 06       	cpc	r1, r23
 7a0:	18 06       	cpc	r1, r24
 7a2:	09 06       	cpc	r0, r25
 7a4:	08 95       	ret

000007a6 <__fp_pscB>:
 7a6:	00 24       	eor	r0, r0
 7a8:	0a 94       	dec	r0
 7aa:	12 16       	cp	r1, r18
 7ac:	13 06       	cpc	r1, r19
 7ae:	14 06       	cpc	r1, r20
 7b0:	05 06       	cpc	r0, r21
 7b2:	08 95       	ret

000007b4 <__fp_round>:
 7b4:	09 2e       	mov	r0, r25
 7b6:	03 94       	inc	r0
 7b8:	00 0c       	add	r0, r0
 7ba:	11 f4       	brne	.+4      	; 0x7c0 <__fp_round+0xc>
 7bc:	88 23       	and	r24, r24
 7be:	52 f0       	brmi	.+20     	; 0x7d4 <__fp_round+0x20>
 7c0:	bb 0f       	add	r27, r27
 7c2:	40 f4       	brcc	.+16     	; 0x7d4 <__fp_round+0x20>
 7c4:	bf 2b       	or	r27, r31
 7c6:	11 f4       	brne	.+4      	; 0x7cc <__fp_round+0x18>
 7c8:	60 ff       	sbrs	r22, 0
 7ca:	04 c0       	rjmp	.+8      	; 0x7d4 <__fp_round+0x20>
 7cc:	6f 5f       	subi	r22, 0xFF	; 255
 7ce:	7f 4f       	sbci	r23, 0xFF	; 255
 7d0:	8f 4f       	sbci	r24, 0xFF	; 255
 7d2:	9f 4f       	sbci	r25, 0xFF	; 255
 7d4:	08 95       	ret

000007d6 <__fp_split3>:
 7d6:	57 fd       	sbrc	r21, 7
 7d8:	90 58       	subi	r25, 0x80	; 128
 7da:	44 0f       	add	r20, r20
 7dc:	55 1f       	adc	r21, r21
 7de:	59 f0       	breq	.+22     	; 0x7f6 <__fp_splitA+0x10>
 7e0:	5f 3f       	cpi	r21, 0xFF	; 255
 7e2:	71 f0       	breq	.+28     	; 0x800 <__fp_splitA+0x1a>
 7e4:	47 95       	ror	r20

000007e6 <__fp_splitA>:
 7e6:	88 0f       	add	r24, r24
 7e8:	97 fb       	bst	r25, 7
 7ea:	99 1f       	adc	r25, r25
 7ec:	61 f0       	breq	.+24     	; 0x806 <__fp_splitA+0x20>
 7ee:	9f 3f       	cpi	r25, 0xFF	; 255
 7f0:	79 f0       	breq	.+30     	; 0x810 <__fp_splitA+0x2a>
 7f2:	87 95       	ror	r24
 7f4:	08 95       	ret
 7f6:	12 16       	cp	r1, r18
 7f8:	13 06       	cpc	r1, r19
 7fa:	14 06       	cpc	r1, r20
 7fc:	55 1f       	adc	r21, r21
 7fe:	f2 cf       	rjmp	.-28     	; 0x7e4 <__fp_split3+0xe>
 800:	46 95       	lsr	r20
 802:	f1 df       	rcall	.-30     	; 0x7e6 <__fp_splitA>
 804:	08 c0       	rjmp	.+16     	; 0x816 <__fp_splitA+0x30>
 806:	16 16       	cp	r1, r22
 808:	17 06       	cpc	r1, r23
 80a:	18 06       	cpc	r1, r24
 80c:	99 1f       	adc	r25, r25
 80e:	f1 cf       	rjmp	.-30     	; 0x7f2 <__fp_splitA+0xc>
 810:	86 95       	lsr	r24
 812:	71 05       	cpc	r23, r1
 814:	61 05       	cpc	r22, r1
 816:	08 94       	sec
 818:	08 95       	ret

0000081a <__fp_zero>:
 81a:	e8 94       	clt

0000081c <__fp_szero>:
 81c:	bb 27       	eor	r27, r27
 81e:	66 27       	eor	r22, r22
 820:	77 27       	eor	r23, r23
 822:	cb 01       	movw	r24, r22
 824:	97 f9       	bld	r25, 7
 826:	08 95       	ret

00000828 <__gesf2>:
 828:	8a df       	rcall	.-236    	; 0x73e <__fp_cmp>
 82a:	08 f4       	brcc	.+2      	; 0x82e <__gesf2+0x6>
 82c:	8f ef       	ldi	r24, 0xFF	; 255
 82e:	08 95       	ret

00000830 <__mulsf3>:
 830:	0b d0       	rcall	.+22     	; 0x848 <__mulsf3x>
 832:	c0 cf       	rjmp	.-128    	; 0x7b4 <__fp_round>
 834:	b1 df       	rcall	.-158    	; 0x798 <__fp_pscA>
 836:	28 f0       	brcs	.+10     	; 0x842 <__mulsf3+0x12>
 838:	b6 df       	rcall	.-148    	; 0x7a6 <__fp_pscB>
 83a:	18 f0       	brcs	.+6      	; 0x842 <__mulsf3+0x12>
 83c:	95 23       	and	r25, r21
 83e:	09 f0       	breq	.+2      	; 0x842 <__mulsf3+0x12>
 840:	a2 cf       	rjmp	.-188    	; 0x786 <__fp_inf>
 842:	a7 cf       	rjmp	.-178    	; 0x792 <__fp_nan>
 844:	11 24       	eor	r1, r1
 846:	ea cf       	rjmp	.-44     	; 0x81c <__fp_szero>

00000848 <__mulsf3x>:
 848:	c6 df       	rcall	.-116    	; 0x7d6 <__fp_split3>
 84a:	a0 f3       	brcs	.-24     	; 0x834 <__mulsf3+0x4>

0000084c <__mulsf3_pse>:
 84c:	95 9f       	mul	r25, r21
 84e:	d1 f3       	breq	.-12     	; 0x844 <__mulsf3+0x14>
 850:	95 0f       	add	r25, r21
 852:	50 e0       	ldi	r21, 0x00	; 0
 854:	55 1f       	adc	r21, r21
 856:	62 9f       	mul	r22, r18
 858:	f0 01       	movw	r30, r0
 85a:	72 9f       	mul	r23, r18
 85c:	bb 27       	eor	r27, r27
 85e:	f0 0d       	add	r31, r0
 860:	b1 1d       	adc	r27, r1
 862:	63 9f       	mul	r22, r19
 864:	aa 27       	eor	r26, r26
 866:	f0 0d       	add	r31, r0
 868:	b1 1d       	adc	r27, r1
 86a:	aa 1f       	adc	r26, r26
 86c:	64 9f       	mul	r22, r20
 86e:	66 27       	eor	r22, r22
 870:	b0 0d       	add	r27, r0
 872:	a1 1d       	adc	r26, r1
 874:	66 1f       	adc	r22, r22
 876:	82 9f       	mul	r24, r18
 878:	22 27       	eor	r18, r18
 87a:	b0 0d       	add	r27, r0
 87c:	a1 1d       	adc	r26, r1
 87e:	62 1f       	adc	r22, r18
 880:	73 9f       	mul	r23, r19
 882:	b0 0d       	add	r27, r0
 884:	a1 1d       	adc	r26, r1
 886:	62 1f       	adc	r22, r18
 888:	83 9f       	mul	r24, r19
 88a:	a0 0d       	add	r26, r0
 88c:	61 1d       	adc	r22, r1
 88e:	22 1f       	adc	r18, r18
 890:	74 9f       	mul	r23, r20
 892:	33 27       	eor	r19, r19
 894:	a0 0d       	add	r26, r0
 896:	61 1d       	adc	r22, r1
 898:	23 1f       	adc	r18, r19
 89a:	84 9f       	mul	r24, r20
 89c:	60 0d       	add	r22, r0
 89e:	21 1d       	adc	r18, r1
 8a0:	82 2f       	mov	r24, r18
 8a2:	76 2f       	mov	r23, r22
 8a4:	6a 2f       	mov	r22, r26
 8a6:	11 24       	eor	r1, r1
 8a8:	9f 57       	subi	r25, 0x7F	; 127
 8aa:	50 40       	sbci	r21, 0x00	; 0
 8ac:	8a f0       	brmi	.+34     	; 0x8d0 <__stack+0x71>
 8ae:	e1 f0       	breq	.+56     	; 0x8e8 <__stack+0x89>
 8b0:	88 23       	and	r24, r24
 8b2:	4a f0       	brmi	.+18     	; 0x8c6 <__stack+0x67>
 8b4:	ee 0f       	add	r30, r30
 8b6:	ff 1f       	adc	r31, r31
 8b8:	bb 1f       	adc	r27, r27
 8ba:	66 1f       	adc	r22, r22
 8bc:	77 1f       	adc	r23, r23
 8be:	88 1f       	adc	r24, r24
 8c0:	91 50       	subi	r25, 0x01	; 1
 8c2:	50 40       	sbci	r21, 0x00	; 0
 8c4:	a9 f7       	brne	.-22     	; 0x8b0 <__stack+0x51>
 8c6:	9e 3f       	cpi	r25, 0xFE	; 254
 8c8:	51 05       	cpc	r21, r1
 8ca:	70 f0       	brcs	.+28     	; 0x8e8 <__stack+0x89>
 8cc:	5c cf       	rjmp	.-328    	; 0x786 <__fp_inf>
 8ce:	a6 cf       	rjmp	.-180    	; 0x81c <__fp_szero>
 8d0:	5f 3f       	cpi	r21, 0xFF	; 255
 8d2:	ec f3       	brlt	.-6      	; 0x8ce <__stack+0x6f>
 8d4:	98 3e       	cpi	r25, 0xE8	; 232
 8d6:	dc f3       	brlt	.-10     	; 0x8ce <__stack+0x6f>
 8d8:	86 95       	lsr	r24
 8da:	77 95       	ror	r23
 8dc:	67 95       	ror	r22
 8de:	b7 95       	ror	r27
 8e0:	f7 95       	ror	r31
 8e2:	e7 95       	ror	r30
 8e4:	9f 5f       	subi	r25, 0xFF	; 255
 8e6:	c1 f7       	brne	.-16     	; 0x8d8 <__stack+0x79>
 8e8:	fe 2b       	or	r31, r30
 8ea:	88 0f       	add	r24, r24
 8ec:	91 1d       	adc	r25, r1
 8ee:	96 95       	lsr	r25
 8f0:	87 95       	ror	r24
 8f2:	97 f9       	bld	r25, 7
 8f4:	08 95       	ret

000008f6 <_exit>:
 8f6:	f8 94       	cli

000008f8 <__stop_program>:
 8f8:	ff cf       	rjmp	.-2      	; 0x8f8 <__stop_program>
