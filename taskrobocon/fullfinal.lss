
fullfinal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d26  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000d7a  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000d9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000032f  00000000  00000000  00000db5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000b8  00000000  00000000  000010e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000531  00000000  00000000  0000119c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000016d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000b5  00000000  00000000  000016f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 91 06 	jmp	0xd22	; 0xd22 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<util/delay.h>
void main(void)
{
  6c:	0f 93       	push	r16
  6e:	1f 93       	push	r17
  70:	df 93       	push	r29
  72:	cf 93       	push	r28
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	c0 57       	subi	r28, 0x70	; 112
  7a:	d0 40       	sbci	r29, 0x00	; 0
  7c:	0f b6       	in	r0, 0x3f	; 63
  7e:	f8 94       	cli
  80:	de bf       	out	0x3e, r29	; 62
  82:	0f be       	out	0x3f, r0	; 63
  84:	cd bf       	out	0x3d, r28	; 61
  DDRA=0b11111111;
  86:	ea e3       	ldi	r30, 0x3A	; 58
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	8f ef       	ldi	r24, 0xFF	; 255
  8c:	80 83       	st	Z, r24
  DDRB=0b11101101;
  8e:	e7 e3       	ldi	r30, 0x37	; 55
  90:	f0 e0       	ldi	r31, 0x00	; 0
  92:	8d ee       	ldi	r24, 0xED	; 237
  94:	80 83       	st	Z, r24
  DDRD=0b11110101;
  96:	e1 e3       	ldi	r30, 0x31	; 49
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	85 ef       	ldi	r24, 0xF5	; 245
  9c:	80 83       	st	Z, r24
  PORTA=0b00001100;
  9e:	eb e3       	ldi	r30, 0x3B	; 59
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	8c e0       	ldi	r24, 0x0C	; 12
  a4:	80 83       	st	Z, r24
  PORTB=0b00010010;
  a6:	e8 e3       	ldi	r30, 0x38	; 56
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	82 e1       	ldi	r24, 0x12	; 18
  ac:	80 83       	st	Z, r24
  PORTD=0b00011010;
  ae:	e2 e3       	ldi	r30, 0x32	; 50
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	8a e1       	ldi	r24, 0x1A	; 26
  b4:	80 83       	st	Z, r24
  b6:	20 c0       	rjmp	.+64     	; 0xf8 <main+0x8c>
 	while((PIND&0b00001000)!=0)	//till back switch not hit
		{
			if((PINB&0x12)==0)
  b8:	e6 e3       	ldi	r30, 0x36	; 54
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	80 81       	ld	r24, Z
  be:	88 2f       	mov	r24, r24
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	82 71       	andi	r24, 0x12	; 18
  c4:	90 70       	andi	r25, 0x00	; 0
  c6:	00 97       	sbiw	r24, 0x00	; 0
  c8:	29 f4       	brne	.+10     	; 0xd4 <main+0x68>
			{
			PORTA=0b00001100;//reverse motion
  ca:	eb e3       	ldi	r30, 0x3B	; 59
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	8c e0       	ldi	r24, 0x0C	; 12
  d0:	80 83       	st	Z, r24
  d2:	12 c0       	rjmp	.+36     	; 0xf8 <main+0x8c>
			}
			else if((PINB&0x02)!=0)//turn left
  d4:	e6 e3       	ldi	r30, 0x36	; 54
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	88 2f       	mov	r24, r24
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	82 70       	andi	r24, 0x02	; 2
  e0:	90 70       	andi	r25, 0x00	; 0
  e2:	00 97       	sbiw	r24, 0x00	; 0
  e4:	29 f0       	breq	.+10     	; 0xf0 <main+0x84>
			{
			PORTA=0b01001100;
  e6:	eb e3       	ldi	r30, 0x3B	; 59
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	8c e4       	ldi	r24, 0x4C	; 76
  ec:	80 83       	st	Z, r24
  ee:	04 c0       	rjmp	.+8      	; 0xf8 <main+0x8c>
			}
			else//turn right
			{
			PORTA=0b00011100;
  f0:	eb e3       	ldi	r30, 0x3B	; 59
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	8c e1       	ldi	r24, 0x1C	; 28
  f6:	80 83       	st	Z, r24
  DDRB=0b11101101;
  DDRD=0b11110101;
  PORTA=0b00001100;
  PORTB=0b00010010;
  PORTD=0b00011010;
 	while((PIND&0b00001000)!=0)	//till back switch not hit
  f8:	e0 e3       	ldi	r30, 0x30	; 48
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	88 2f       	mov	r24, r24
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	88 70       	andi	r24, 0x08	; 8
 104:	90 70       	andi	r25, 0x00	; 0
 106:	00 97       	sbiw	r24, 0x00	; 0
 108:	b9 f6       	brne	.-82     	; 0xb8 <main+0x4c>
			else//turn right
			{
			PORTA=0b00011100;
			}
		}
		PORTD=0b00011010;
 10a:	e2 e3       	ldi	r30, 0x32	; 50
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	8a e1       	ldi	r24, 0x1A	; 26
 110:	80 83       	st	Z, r24
		PORTA=0b01010100;//claw activates
 112:	eb e3       	ldi	r30, 0x3B	; 59
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	84 e5       	ldi	r24, 0x54	; 84
 118:	80 83       	st	Z, r24
 11a:	fe 01       	movw	r30, r28
 11c:	e3 59       	subi	r30, 0x93	; 147
 11e:	ff 4f       	sbci	r31, 0xFF	; 255
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	aa ef       	ldi	r26, 0xFA	; 250
 126:	b3 e4       	ldi	r27, 0x43	; 67
 128:	80 83       	st	Z, r24
 12a:	91 83       	std	Z+1, r25	; 0x01
 12c:	a2 83       	std	Z+2, r26	; 0x02
 12e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 130:	8e 01       	movw	r16, r28
 132:	07 59       	subi	r16, 0x97	; 151
 134:	1f 4f       	sbci	r17, 0xFF	; 255
 136:	fe 01       	movw	r30, r28
 138:	e3 59       	subi	r30, 0x93	; 147
 13a:	ff 4f       	sbci	r31, 0xFF	; 255
 13c:	60 81       	ld	r22, Z
 13e:	71 81       	ldd	r23, Z+1	; 0x01
 140:	82 81       	ldd	r24, Z+2	; 0x02
 142:	93 81       	ldd	r25, Z+3	; 0x03
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	4a ef       	ldi	r20, 0xFA	; 250
 14a:	54 e4       	ldi	r21, 0x44	; 68
 14c:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 150:	dc 01       	movw	r26, r24
 152:	cb 01       	movw	r24, r22
 154:	f8 01       	movw	r30, r16
 156:	80 83       	st	Z, r24
 158:	91 83       	std	Z+1, r25	; 0x01
 15a:	a2 83       	std	Z+2, r26	; 0x02
 15c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 15e:	fe 01       	movw	r30, r28
 160:	e7 59       	subi	r30, 0x97	; 151
 162:	ff 4f       	sbci	r31, 0xFF	; 255
 164:	60 81       	ld	r22, Z
 166:	71 81       	ldd	r23, Z+1	; 0x01
 168:	82 81       	ldd	r24, Z+2	; 0x02
 16a:	93 81       	ldd	r25, Z+3	; 0x03
 16c:	20 e0       	ldi	r18, 0x00	; 0
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	40 e8       	ldi	r20, 0x80	; 128
 172:	5f e3       	ldi	r21, 0x3F	; 63
 174:	0e 94 85 05 	call	0xb0a	; 0xb0a <__cmpsf2>
 178:	88 23       	and	r24, r24
 17a:	44 f4       	brge	.+16     	; 0x18c <main+0x120>
		__ticks = 1;
 17c:	fe 01       	movw	r30, r28
 17e:	e9 59       	subi	r30, 0x99	; 153
 180:	ff 4f       	sbci	r31, 0xFF	; 255
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	91 83       	std	Z+1, r25	; 0x01
 188:	80 83       	st	Z, r24
 18a:	64 c0       	rjmp	.+200    	; 0x254 <main+0x1e8>
	else if (__tmp > 65535)
 18c:	fe 01       	movw	r30, r28
 18e:	e7 59       	subi	r30, 0x97	; 151
 190:	ff 4f       	sbci	r31, 0xFF	; 255
 192:	60 81       	ld	r22, Z
 194:	71 81       	ldd	r23, Z+1	; 0x01
 196:	82 81       	ldd	r24, Z+2	; 0x02
 198:	93 81       	ldd	r25, Z+3	; 0x03
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	3f ef       	ldi	r19, 0xFF	; 255
 19e:	4f e7       	ldi	r20, 0x7F	; 127
 1a0:	57 e4       	ldi	r21, 0x47	; 71
 1a2:	0e 94 02 06 	call	0xc04	; 0xc04 <__gesf2>
 1a6:	18 16       	cp	r1, r24
 1a8:	0c f0       	brlt	.+2      	; 0x1ac <main+0x140>
 1aa:	43 c0       	rjmp	.+134    	; 0x232 <main+0x1c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1ac:	fe 01       	movw	r30, r28
 1ae:	e3 59       	subi	r30, 0x93	; 147
 1b0:	ff 4f       	sbci	r31, 0xFF	; 255
 1b2:	60 81       	ld	r22, Z
 1b4:	71 81       	ldd	r23, Z+1	; 0x01
 1b6:	82 81       	ldd	r24, Z+2	; 0x02
 1b8:	93 81       	ldd	r25, Z+3	; 0x03
 1ba:	20 e0       	ldi	r18, 0x00	; 0
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	40 e2       	ldi	r20, 0x20	; 32
 1c0:	51 e4       	ldi	r21, 0x41	; 65
 1c2:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 1c6:	dc 01       	movw	r26, r24
 1c8:	cb 01       	movw	r24, r22
 1ca:	8e 01       	movw	r16, r28
 1cc:	09 59       	subi	r16, 0x99	; 153
 1ce:	1f 4f       	sbci	r17, 0xFF	; 255
 1d0:	bc 01       	movw	r22, r24
 1d2:	cd 01       	movw	r24, r26
 1d4:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 1d8:	dc 01       	movw	r26, r24
 1da:	cb 01       	movw	r24, r22
 1dc:	f8 01       	movw	r30, r16
 1de:	91 83       	std	Z+1, r25	; 0x01
 1e0:	80 83       	st	Z, r24
 1e2:	1f c0       	rjmp	.+62     	; 0x222 <main+0x1b6>
 1e4:	fe 01       	movw	r30, r28
 1e6:	eb 59       	subi	r30, 0x9B	; 155
 1e8:	ff 4f       	sbci	r31, 0xFF	; 255
 1ea:	88 ec       	ldi	r24, 0xC8	; 200
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	91 83       	std	Z+1, r25	; 0x01
 1f0:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1f2:	fe 01       	movw	r30, r28
 1f4:	eb 59       	subi	r30, 0x9B	; 155
 1f6:	ff 4f       	sbci	r31, 0xFF	; 255
 1f8:	80 81       	ld	r24, Z
 1fa:	91 81       	ldd	r25, Z+1	; 0x01
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <main+0x190>
 200:	fe 01       	movw	r30, r28
 202:	eb 59       	subi	r30, 0x9B	; 155
 204:	ff 4f       	sbci	r31, 0xFF	; 255
 206:	91 83       	std	Z+1, r25	; 0x01
 208:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 20a:	de 01       	movw	r26, r28
 20c:	a9 59       	subi	r26, 0x99	; 153
 20e:	bf 4f       	sbci	r27, 0xFF	; 255
 210:	fe 01       	movw	r30, r28
 212:	e9 59       	subi	r30, 0x99	; 153
 214:	ff 4f       	sbci	r31, 0xFF	; 255
 216:	80 81       	ld	r24, Z
 218:	91 81       	ldd	r25, Z+1	; 0x01
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	11 96       	adiw	r26, 0x01	; 1
 21e:	9c 93       	st	X, r25
 220:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 222:	fe 01       	movw	r30, r28
 224:	e9 59       	subi	r30, 0x99	; 153
 226:	ff 4f       	sbci	r31, 0xFF	; 255
 228:	80 81       	ld	r24, Z
 22a:	91 81       	ldd	r25, Z+1	; 0x01
 22c:	00 97       	sbiw	r24, 0x00	; 0
 22e:	d1 f6       	brne	.-76     	; 0x1e4 <main+0x178>
 230:	27 c0       	rjmp	.+78     	; 0x280 <main+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 232:	8e 01       	movw	r16, r28
 234:	09 59       	subi	r16, 0x99	; 153
 236:	1f 4f       	sbci	r17, 0xFF	; 255
 238:	fe 01       	movw	r30, r28
 23a:	e7 59       	subi	r30, 0x97	; 151
 23c:	ff 4f       	sbci	r31, 0xFF	; 255
 23e:	60 81       	ld	r22, Z
 240:	71 81       	ldd	r23, Z+1	; 0x01
 242:	82 81       	ldd	r24, Z+2	; 0x02
 244:	93 81       	ldd	r25, Z+3	; 0x03
 246:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 24a:	dc 01       	movw	r26, r24
 24c:	cb 01       	movw	r24, r22
 24e:	f8 01       	movw	r30, r16
 250:	91 83       	std	Z+1, r25	; 0x01
 252:	80 83       	st	Z, r24
 254:	de 01       	movw	r26, r28
 256:	ad 59       	subi	r26, 0x9D	; 157
 258:	bf 4f       	sbci	r27, 0xFF	; 255
 25a:	fe 01       	movw	r30, r28
 25c:	e9 59       	subi	r30, 0x99	; 153
 25e:	ff 4f       	sbci	r31, 0xFF	; 255
 260:	80 81       	ld	r24, Z
 262:	91 81       	ldd	r25, Z+1	; 0x01
 264:	8d 93       	st	X+, r24
 266:	9c 93       	st	X, r25
 268:	fe 01       	movw	r30, r28
 26a:	ed 59       	subi	r30, 0x9D	; 157
 26c:	ff 4f       	sbci	r31, 0xFF	; 255
 26e:	80 81       	ld	r24, Z
 270:	91 81       	ldd	r25, Z+1	; 0x01
 272:	01 97       	sbiw	r24, 0x01	; 1
 274:	f1 f7       	brne	.-4      	; 0x272 <main+0x206>
 276:	fe 01       	movw	r30, r28
 278:	ed 59       	subi	r30, 0x9D	; 157
 27a:	ff 4f       	sbci	r31, 0xFF	; 255
 27c:	91 83       	std	Z+1, r25	; 0x01
 27e:	80 83       	st	Z, r24
		_delay_ms(500);
		PORTA=0b01010000; //up mechanism active
 280:	eb e3       	ldi	r30, 0x3B	; 59
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	80 e5       	ldi	r24, 0x50	; 80
 286:	80 83       	st	Z, r24
 288:	fe 01       	movw	r30, r28
 28a:	e1 5a       	subi	r30, 0xA1	; 161
 28c:	ff 4f       	sbci	r31, 0xFF	; 255
 28e:	80 e0       	ldi	r24, 0x00	; 0
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	aa ef       	ldi	r26, 0xFA	; 250
 294:	b3 e4       	ldi	r27, 0x43	; 67
 296:	80 83       	st	Z, r24
 298:	91 83       	std	Z+1, r25	; 0x01
 29a:	a2 83       	std	Z+2, r26	; 0x02
 29c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 29e:	8e 01       	movw	r16, r28
 2a0:	05 5a       	subi	r16, 0xA5	; 165
 2a2:	1f 4f       	sbci	r17, 0xFF	; 255
 2a4:	fe 01       	movw	r30, r28
 2a6:	e1 5a       	subi	r30, 0xA1	; 161
 2a8:	ff 4f       	sbci	r31, 0xFF	; 255
 2aa:	60 81       	ld	r22, Z
 2ac:	71 81       	ldd	r23, Z+1	; 0x01
 2ae:	82 81       	ldd	r24, Z+2	; 0x02
 2b0:	93 81       	ldd	r25, Z+3	; 0x03
 2b2:	20 e0       	ldi	r18, 0x00	; 0
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	4a ef       	ldi	r20, 0xFA	; 250
 2b8:	54 e4       	ldi	r21, 0x44	; 68
 2ba:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 2be:	dc 01       	movw	r26, r24
 2c0:	cb 01       	movw	r24, r22
 2c2:	f8 01       	movw	r30, r16
 2c4:	80 83       	st	Z, r24
 2c6:	91 83       	std	Z+1, r25	; 0x01
 2c8:	a2 83       	std	Z+2, r26	; 0x02
 2ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 2cc:	fe 01       	movw	r30, r28
 2ce:	e5 5a       	subi	r30, 0xA5	; 165
 2d0:	ff 4f       	sbci	r31, 0xFF	; 255
 2d2:	60 81       	ld	r22, Z
 2d4:	71 81       	ldd	r23, Z+1	; 0x01
 2d6:	82 81       	ldd	r24, Z+2	; 0x02
 2d8:	93 81       	ldd	r25, Z+3	; 0x03
 2da:	20 e0       	ldi	r18, 0x00	; 0
 2dc:	30 e0       	ldi	r19, 0x00	; 0
 2de:	40 e8       	ldi	r20, 0x80	; 128
 2e0:	5f e3       	ldi	r21, 0x3F	; 63
 2e2:	0e 94 85 05 	call	0xb0a	; 0xb0a <__cmpsf2>
 2e6:	88 23       	and	r24, r24
 2e8:	44 f4       	brge	.+16     	; 0x2fa <main+0x28e>
		__ticks = 1;
 2ea:	fe 01       	movw	r30, r28
 2ec:	e7 5a       	subi	r30, 0xA7	; 167
 2ee:	ff 4f       	sbci	r31, 0xFF	; 255
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	91 83       	std	Z+1, r25	; 0x01
 2f6:	80 83       	st	Z, r24
 2f8:	64 c0       	rjmp	.+200    	; 0x3c2 <main+0x356>
	else if (__tmp > 65535)
 2fa:	fe 01       	movw	r30, r28
 2fc:	e5 5a       	subi	r30, 0xA5	; 165
 2fe:	ff 4f       	sbci	r31, 0xFF	; 255
 300:	60 81       	ld	r22, Z
 302:	71 81       	ldd	r23, Z+1	; 0x01
 304:	82 81       	ldd	r24, Z+2	; 0x02
 306:	93 81       	ldd	r25, Z+3	; 0x03
 308:	20 e0       	ldi	r18, 0x00	; 0
 30a:	3f ef       	ldi	r19, 0xFF	; 255
 30c:	4f e7       	ldi	r20, 0x7F	; 127
 30e:	57 e4       	ldi	r21, 0x47	; 71
 310:	0e 94 02 06 	call	0xc04	; 0xc04 <__gesf2>
 314:	18 16       	cp	r1, r24
 316:	0c f0       	brlt	.+2      	; 0x31a <main+0x2ae>
 318:	43 c0       	rjmp	.+134    	; 0x3a0 <main+0x334>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 31a:	fe 01       	movw	r30, r28
 31c:	e1 5a       	subi	r30, 0xA1	; 161
 31e:	ff 4f       	sbci	r31, 0xFF	; 255
 320:	60 81       	ld	r22, Z
 322:	71 81       	ldd	r23, Z+1	; 0x01
 324:	82 81       	ldd	r24, Z+2	; 0x02
 326:	93 81       	ldd	r25, Z+3	; 0x03
 328:	20 e0       	ldi	r18, 0x00	; 0
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	40 e2       	ldi	r20, 0x20	; 32
 32e:	51 e4       	ldi	r21, 0x41	; 65
 330:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 334:	dc 01       	movw	r26, r24
 336:	cb 01       	movw	r24, r22
 338:	8e 01       	movw	r16, r28
 33a:	07 5a       	subi	r16, 0xA7	; 167
 33c:	1f 4f       	sbci	r17, 0xFF	; 255
 33e:	bc 01       	movw	r22, r24
 340:	cd 01       	movw	r24, r26
 342:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 346:	dc 01       	movw	r26, r24
 348:	cb 01       	movw	r24, r22
 34a:	f8 01       	movw	r30, r16
 34c:	91 83       	std	Z+1, r25	; 0x01
 34e:	80 83       	st	Z, r24
 350:	1f c0       	rjmp	.+62     	; 0x390 <main+0x324>
 352:	fe 01       	movw	r30, r28
 354:	e9 5a       	subi	r30, 0xA9	; 169
 356:	ff 4f       	sbci	r31, 0xFF	; 255
 358:	88 ec       	ldi	r24, 0xC8	; 200
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	91 83       	std	Z+1, r25	; 0x01
 35e:	80 83       	st	Z, r24
 360:	fe 01       	movw	r30, r28
 362:	e9 5a       	subi	r30, 0xA9	; 169
 364:	ff 4f       	sbci	r31, 0xFF	; 255
 366:	80 81       	ld	r24, Z
 368:	91 81       	ldd	r25, Z+1	; 0x01
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <main+0x2fe>
 36e:	fe 01       	movw	r30, r28
 370:	e9 5a       	subi	r30, 0xA9	; 169
 372:	ff 4f       	sbci	r31, 0xFF	; 255
 374:	91 83       	std	Z+1, r25	; 0x01
 376:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 378:	de 01       	movw	r26, r28
 37a:	a7 5a       	subi	r26, 0xA7	; 167
 37c:	bf 4f       	sbci	r27, 0xFF	; 255
 37e:	fe 01       	movw	r30, r28
 380:	e7 5a       	subi	r30, 0xA7	; 167
 382:	ff 4f       	sbci	r31, 0xFF	; 255
 384:	80 81       	ld	r24, Z
 386:	91 81       	ldd	r25, Z+1	; 0x01
 388:	01 97       	sbiw	r24, 0x01	; 1
 38a:	11 96       	adiw	r26, 0x01	; 1
 38c:	9c 93       	st	X, r25
 38e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 390:	fe 01       	movw	r30, r28
 392:	e7 5a       	subi	r30, 0xA7	; 167
 394:	ff 4f       	sbci	r31, 0xFF	; 255
 396:	80 81       	ld	r24, Z
 398:	91 81       	ldd	r25, Z+1	; 0x01
 39a:	00 97       	sbiw	r24, 0x00	; 0
 39c:	d1 f6       	brne	.-76     	; 0x352 <main+0x2e6>
 39e:	27 c0       	rjmp	.+78     	; 0x3ee <main+0x382>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 3a0:	8e 01       	movw	r16, r28
 3a2:	07 5a       	subi	r16, 0xA7	; 167
 3a4:	1f 4f       	sbci	r17, 0xFF	; 255
 3a6:	fe 01       	movw	r30, r28
 3a8:	e5 5a       	subi	r30, 0xA5	; 165
 3aa:	ff 4f       	sbci	r31, 0xFF	; 255
 3ac:	60 81       	ld	r22, Z
 3ae:	71 81       	ldd	r23, Z+1	; 0x01
 3b0:	82 81       	ldd	r24, Z+2	; 0x02
 3b2:	93 81       	ldd	r25, Z+3	; 0x03
 3b4:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 3b8:	dc 01       	movw	r26, r24
 3ba:	cb 01       	movw	r24, r22
 3bc:	f8 01       	movw	r30, r16
 3be:	91 83       	std	Z+1, r25	; 0x01
 3c0:	80 83       	st	Z, r24
 3c2:	de 01       	movw	r26, r28
 3c4:	ab 5a       	subi	r26, 0xAB	; 171
 3c6:	bf 4f       	sbci	r27, 0xFF	; 255
 3c8:	fe 01       	movw	r30, r28
 3ca:	e7 5a       	subi	r30, 0xA7	; 167
 3cc:	ff 4f       	sbci	r31, 0xFF	; 255
 3ce:	80 81       	ld	r24, Z
 3d0:	91 81       	ldd	r25, Z+1	; 0x01
 3d2:	8d 93       	st	X+, r24
 3d4:	9c 93       	st	X, r25
 3d6:	fe 01       	movw	r30, r28
 3d8:	eb 5a       	subi	r30, 0xAB	; 171
 3da:	ff 4f       	sbci	r31, 0xFF	; 255
 3dc:	80 81       	ld	r24, Z
 3de:	91 81       	ldd	r25, Z+1	; 0x01
 3e0:	01 97       	sbiw	r24, 0x01	; 1
 3e2:	f1 f7       	brne	.-4      	; 0x3e0 <main+0x374>
 3e4:	fe 01       	movw	r30, r28
 3e6:	eb 5a       	subi	r30, 0xAB	; 171
 3e8:	ff 4f       	sbci	r31, 0xFF	; 255
 3ea:	91 83       	std	Z+1, r25	; 0x01
 3ec:	80 83       	st	Z, r24
		_delay_ms(500);
		PORTA=0b01010100; //up mechanism deactivated
 3ee:	eb e3       	ldi	r30, 0x3B	; 59
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	84 e5       	ldi	r24, 0x54	; 84
 3f4:	80 83       	st	Z, r24
 3f6:	fe 01       	movw	r30, r28
 3f8:	ef 5a       	subi	r30, 0xAF	; 175
 3fa:	ff 4f       	sbci	r31, 0xFF	; 255
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	a8 ec       	ldi	r26, 0xC8	; 200
 402:	b2 e4       	ldi	r27, 0x42	; 66
 404:	80 83       	st	Z, r24
 406:	91 83       	std	Z+1, r25	; 0x01
 408:	a2 83       	std	Z+2, r26	; 0x02
 40a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 40c:	8e 01       	movw	r16, r28
 40e:	03 5b       	subi	r16, 0xB3	; 179
 410:	1f 4f       	sbci	r17, 0xFF	; 255
 412:	fe 01       	movw	r30, r28
 414:	ef 5a       	subi	r30, 0xAF	; 175
 416:	ff 4f       	sbci	r31, 0xFF	; 255
 418:	60 81       	ld	r22, Z
 41a:	71 81       	ldd	r23, Z+1	; 0x01
 41c:	82 81       	ldd	r24, Z+2	; 0x02
 41e:	93 81       	ldd	r25, Z+3	; 0x03
 420:	20 e0       	ldi	r18, 0x00	; 0
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	4a ef       	ldi	r20, 0xFA	; 250
 426:	54 e4       	ldi	r21, 0x44	; 68
 428:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 42c:	dc 01       	movw	r26, r24
 42e:	cb 01       	movw	r24, r22
 430:	f8 01       	movw	r30, r16
 432:	80 83       	st	Z, r24
 434:	91 83       	std	Z+1, r25	; 0x01
 436:	a2 83       	std	Z+2, r26	; 0x02
 438:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 43a:	fe 01       	movw	r30, r28
 43c:	e3 5b       	subi	r30, 0xB3	; 179
 43e:	ff 4f       	sbci	r31, 0xFF	; 255
 440:	60 81       	ld	r22, Z
 442:	71 81       	ldd	r23, Z+1	; 0x01
 444:	82 81       	ldd	r24, Z+2	; 0x02
 446:	93 81       	ldd	r25, Z+3	; 0x03
 448:	20 e0       	ldi	r18, 0x00	; 0
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	40 e8       	ldi	r20, 0x80	; 128
 44e:	5f e3       	ldi	r21, 0x3F	; 63
 450:	0e 94 85 05 	call	0xb0a	; 0xb0a <__cmpsf2>
 454:	88 23       	and	r24, r24
 456:	44 f4       	brge	.+16     	; 0x468 <main+0x3fc>
		__ticks = 1;
 458:	fe 01       	movw	r30, r28
 45a:	e5 5b       	subi	r30, 0xB5	; 181
 45c:	ff 4f       	sbci	r31, 0xFF	; 255
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	91 83       	std	Z+1, r25	; 0x01
 464:	80 83       	st	Z, r24
 466:	64 c0       	rjmp	.+200    	; 0x530 <main+0x4c4>
	else if (__tmp > 65535)
 468:	fe 01       	movw	r30, r28
 46a:	e3 5b       	subi	r30, 0xB3	; 179
 46c:	ff 4f       	sbci	r31, 0xFF	; 255
 46e:	60 81       	ld	r22, Z
 470:	71 81       	ldd	r23, Z+1	; 0x01
 472:	82 81       	ldd	r24, Z+2	; 0x02
 474:	93 81       	ldd	r25, Z+3	; 0x03
 476:	20 e0       	ldi	r18, 0x00	; 0
 478:	3f ef       	ldi	r19, 0xFF	; 255
 47a:	4f e7       	ldi	r20, 0x7F	; 127
 47c:	57 e4       	ldi	r21, 0x47	; 71
 47e:	0e 94 02 06 	call	0xc04	; 0xc04 <__gesf2>
 482:	18 16       	cp	r1, r24
 484:	0c f0       	brlt	.+2      	; 0x488 <main+0x41c>
 486:	43 c0       	rjmp	.+134    	; 0x50e <main+0x4a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 488:	fe 01       	movw	r30, r28
 48a:	ef 5a       	subi	r30, 0xAF	; 175
 48c:	ff 4f       	sbci	r31, 0xFF	; 255
 48e:	60 81       	ld	r22, Z
 490:	71 81       	ldd	r23, Z+1	; 0x01
 492:	82 81       	ldd	r24, Z+2	; 0x02
 494:	93 81       	ldd	r25, Z+3	; 0x03
 496:	20 e0       	ldi	r18, 0x00	; 0
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	40 e2       	ldi	r20, 0x20	; 32
 49c:	51 e4       	ldi	r21, 0x41	; 65
 49e:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 4a2:	dc 01       	movw	r26, r24
 4a4:	cb 01       	movw	r24, r22
 4a6:	8e 01       	movw	r16, r28
 4a8:	05 5b       	subi	r16, 0xB5	; 181
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	bc 01       	movw	r22, r24
 4ae:	cd 01       	movw	r24, r26
 4b0:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 4b4:	dc 01       	movw	r26, r24
 4b6:	cb 01       	movw	r24, r22
 4b8:	f8 01       	movw	r30, r16
 4ba:	91 83       	std	Z+1, r25	; 0x01
 4bc:	80 83       	st	Z, r24
 4be:	1f c0       	rjmp	.+62     	; 0x4fe <main+0x492>
 4c0:	fe 01       	movw	r30, r28
 4c2:	e7 5b       	subi	r30, 0xB7	; 183
 4c4:	ff 4f       	sbci	r31, 0xFF	; 255
 4c6:	88 ec       	ldi	r24, 0xC8	; 200
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	91 83       	std	Z+1, r25	; 0x01
 4cc:	80 83       	st	Z, r24
 4ce:	fe 01       	movw	r30, r28
 4d0:	e7 5b       	subi	r30, 0xB7	; 183
 4d2:	ff 4f       	sbci	r31, 0xFF	; 255
 4d4:	80 81       	ld	r24, Z
 4d6:	91 81       	ldd	r25, Z+1	; 0x01
 4d8:	01 97       	sbiw	r24, 0x01	; 1
 4da:	f1 f7       	brne	.-4      	; 0x4d8 <main+0x46c>
 4dc:	fe 01       	movw	r30, r28
 4de:	e7 5b       	subi	r30, 0xB7	; 183
 4e0:	ff 4f       	sbci	r31, 0xFF	; 255
 4e2:	91 83       	std	Z+1, r25	; 0x01
 4e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4e6:	de 01       	movw	r26, r28
 4e8:	a5 5b       	subi	r26, 0xB5	; 181
 4ea:	bf 4f       	sbci	r27, 0xFF	; 255
 4ec:	fe 01       	movw	r30, r28
 4ee:	e5 5b       	subi	r30, 0xB5	; 181
 4f0:	ff 4f       	sbci	r31, 0xFF	; 255
 4f2:	80 81       	ld	r24, Z
 4f4:	91 81       	ldd	r25, Z+1	; 0x01
 4f6:	01 97       	sbiw	r24, 0x01	; 1
 4f8:	11 96       	adiw	r26, 0x01	; 1
 4fa:	9c 93       	st	X, r25
 4fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4fe:	fe 01       	movw	r30, r28
 500:	e5 5b       	subi	r30, 0xB5	; 181
 502:	ff 4f       	sbci	r31, 0xFF	; 255
 504:	80 81       	ld	r24, Z
 506:	91 81       	ldd	r25, Z+1	; 0x01
 508:	00 97       	sbiw	r24, 0x00	; 0
 50a:	d1 f6       	brne	.-76     	; 0x4c0 <main+0x454>
 50c:	27 c0       	rjmp	.+78     	; 0x55c <main+0x4f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 50e:	8e 01       	movw	r16, r28
 510:	05 5b       	subi	r16, 0xB5	; 181
 512:	1f 4f       	sbci	r17, 0xFF	; 255
 514:	fe 01       	movw	r30, r28
 516:	e3 5b       	subi	r30, 0xB3	; 179
 518:	ff 4f       	sbci	r31, 0xFF	; 255
 51a:	60 81       	ld	r22, Z
 51c:	71 81       	ldd	r23, Z+1	; 0x01
 51e:	82 81       	ldd	r24, Z+2	; 0x02
 520:	93 81       	ldd	r25, Z+3	; 0x03
 522:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 526:	dc 01       	movw	r26, r24
 528:	cb 01       	movw	r24, r22
 52a:	f8 01       	movw	r30, r16
 52c:	91 83       	std	Z+1, r25	; 0x01
 52e:	80 83       	st	Z, r24
 530:	de 01       	movw	r26, r28
 532:	a9 5b       	subi	r26, 0xB9	; 185
 534:	bf 4f       	sbci	r27, 0xFF	; 255
 536:	fe 01       	movw	r30, r28
 538:	e5 5b       	subi	r30, 0xB5	; 181
 53a:	ff 4f       	sbci	r31, 0xFF	; 255
 53c:	80 81       	ld	r24, Z
 53e:	91 81       	ldd	r25, Z+1	; 0x01
 540:	8d 93       	st	X+, r24
 542:	9c 93       	st	X, r25
 544:	fe 01       	movw	r30, r28
 546:	e9 5b       	subi	r30, 0xB9	; 185
 548:	ff 4f       	sbci	r31, 0xFF	; 255
 54a:	80 81       	ld	r24, Z
 54c:	91 81       	ldd	r25, Z+1	; 0x01
 54e:	01 97       	sbiw	r24, 0x01	; 1
 550:	f1 f7       	brne	.-4      	; 0x54e <main+0x4e2>
 552:	fe 01       	movw	r30, r28
 554:	e9 5b       	subi	r30, 0xB9	; 185
 556:	ff 4f       	sbci	r31, 0xFF	; 255
 558:	91 83       	std	Z+1, r25	; 0x01
 55a:	80 83       	st	Z, r24
		_delay_ms(100);
		PORTD=(0<<4); //swivel motion started
 55c:	e2 e3       	ldi	r30, 0x32	; 50
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	10 82       	st	Z, r1
 562:	fe 01       	movw	r30, r28
 564:	ed 5b       	subi	r30, 0xBD	; 189
 566:	ff 4f       	sbci	r31, 0xFF	; 255
 568:	80 e0       	ldi	r24, 0x00	; 0
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	aa e7       	ldi	r26, 0x7A	; 122
 56e:	b4 e4       	ldi	r27, 0x44	; 68
 570:	80 83       	st	Z, r24
 572:	91 83       	std	Z+1, r25	; 0x01
 574:	a2 83       	std	Z+2, r26	; 0x02
 576:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 578:	8e 01       	movw	r16, r28
 57a:	01 5c       	subi	r16, 0xC1	; 193
 57c:	1f 4f       	sbci	r17, 0xFF	; 255
 57e:	fe 01       	movw	r30, r28
 580:	ed 5b       	subi	r30, 0xBD	; 189
 582:	ff 4f       	sbci	r31, 0xFF	; 255
 584:	60 81       	ld	r22, Z
 586:	71 81       	ldd	r23, Z+1	; 0x01
 588:	82 81       	ldd	r24, Z+2	; 0x02
 58a:	93 81       	ldd	r25, Z+3	; 0x03
 58c:	20 e0       	ldi	r18, 0x00	; 0
 58e:	30 e0       	ldi	r19, 0x00	; 0
 590:	4a ef       	ldi	r20, 0xFA	; 250
 592:	54 e4       	ldi	r21, 0x44	; 68
 594:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 598:	dc 01       	movw	r26, r24
 59a:	cb 01       	movw	r24, r22
 59c:	f8 01       	movw	r30, r16
 59e:	80 83       	st	Z, r24
 5a0:	91 83       	std	Z+1, r25	; 0x01
 5a2:	a2 83       	std	Z+2, r26	; 0x02
 5a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 5a6:	fe 01       	movw	r30, r28
 5a8:	ff 96       	adiw	r30, 0x3f	; 63
 5aa:	60 81       	ld	r22, Z
 5ac:	71 81       	ldd	r23, Z+1	; 0x01
 5ae:	82 81       	ldd	r24, Z+2	; 0x02
 5b0:	93 81       	ldd	r25, Z+3	; 0x03
 5b2:	20 e0       	ldi	r18, 0x00	; 0
 5b4:	30 e0       	ldi	r19, 0x00	; 0
 5b6:	40 e8       	ldi	r20, 0x80	; 128
 5b8:	5f e3       	ldi	r21, 0x3F	; 63
 5ba:	0e 94 85 05 	call	0xb0a	; 0xb0a <__cmpsf2>
 5be:	88 23       	and	r24, r24
 5c0:	2c f4       	brge	.+10     	; 0x5cc <main+0x560>
		__ticks = 1;
 5c2:	81 e0       	ldi	r24, 0x01	; 1
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	9e af       	std	Y+62, r25	; 0x3e
 5c8:	8d af       	std	Y+61, r24	; 0x3d
 5ca:	46 c0       	rjmp	.+140    	; 0x658 <main+0x5ec>
	else if (__tmp > 65535)
 5cc:	fe 01       	movw	r30, r28
 5ce:	ff 96       	adiw	r30, 0x3f	; 63
 5d0:	60 81       	ld	r22, Z
 5d2:	71 81       	ldd	r23, Z+1	; 0x01
 5d4:	82 81       	ldd	r24, Z+2	; 0x02
 5d6:	93 81       	ldd	r25, Z+3	; 0x03
 5d8:	20 e0       	ldi	r18, 0x00	; 0
 5da:	3f ef       	ldi	r19, 0xFF	; 255
 5dc:	4f e7       	ldi	r20, 0x7F	; 127
 5de:	57 e4       	ldi	r21, 0x47	; 71
 5e0:	0e 94 02 06 	call	0xc04	; 0xc04 <__gesf2>
 5e4:	18 16       	cp	r1, r24
 5e6:	64 f5       	brge	.+88     	; 0x640 <main+0x5d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 5e8:	fe 01       	movw	r30, r28
 5ea:	ed 5b       	subi	r30, 0xBD	; 189
 5ec:	ff 4f       	sbci	r31, 0xFF	; 255
 5ee:	60 81       	ld	r22, Z
 5f0:	71 81       	ldd	r23, Z+1	; 0x01
 5f2:	82 81       	ldd	r24, Z+2	; 0x02
 5f4:	93 81       	ldd	r25, Z+3	; 0x03
 5f6:	20 e0       	ldi	r18, 0x00	; 0
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	40 e2       	ldi	r20, 0x20	; 32
 5fc:	51 e4       	ldi	r21, 0x41	; 65
 5fe:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 602:	dc 01       	movw	r26, r24
 604:	cb 01       	movw	r24, r22
 606:	bc 01       	movw	r22, r24
 608:	cd 01       	movw	r24, r26
 60a:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 60e:	dc 01       	movw	r26, r24
 610:	cb 01       	movw	r24, r22
 612:	9e af       	std	Y+62, r25	; 0x3e
 614:	8d af       	std	Y+61, r24	; 0x3d
 616:	0f c0       	rjmp	.+30     	; 0x636 <main+0x5ca>
 618:	88 ec       	ldi	r24, 0xC8	; 200
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	9c af       	std	Y+60, r25	; 0x3c
 61e:	8b af       	std	Y+59, r24	; 0x3b
 620:	8b ad       	ldd	r24, Y+59	; 0x3b
 622:	9c ad       	ldd	r25, Y+60	; 0x3c
 624:	01 97       	sbiw	r24, 0x01	; 1
 626:	f1 f7       	brne	.-4      	; 0x624 <main+0x5b8>
 628:	9c af       	std	Y+60, r25	; 0x3c
 62a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 62c:	8d ad       	ldd	r24, Y+61	; 0x3d
 62e:	9e ad       	ldd	r25, Y+62	; 0x3e
 630:	01 97       	sbiw	r24, 0x01	; 1
 632:	9e af       	std	Y+62, r25	; 0x3e
 634:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 636:	8d ad       	ldd	r24, Y+61	; 0x3d
 638:	9e ad       	ldd	r25, Y+62	; 0x3e
 63a:	00 97       	sbiw	r24, 0x00	; 0
 63c:	69 f7       	brne	.-38     	; 0x618 <main+0x5ac>
 63e:	16 c0       	rjmp	.+44     	; 0x66c <main+0x600>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 640:	fe 01       	movw	r30, r28
 642:	ff 96       	adiw	r30, 0x3f	; 63
 644:	60 81       	ld	r22, Z
 646:	71 81       	ldd	r23, Z+1	; 0x01
 648:	82 81       	ldd	r24, Z+2	; 0x02
 64a:	93 81       	ldd	r25, Z+3	; 0x03
 64c:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 650:	dc 01       	movw	r26, r24
 652:	cb 01       	movw	r24, r22
 654:	9e af       	std	Y+62, r25	; 0x3e
 656:	8d af       	std	Y+61, r24	; 0x3d
 658:	8d ad       	ldd	r24, Y+61	; 0x3d
 65a:	9e ad       	ldd	r25, Y+62	; 0x3e
 65c:	9a af       	std	Y+58, r25	; 0x3a
 65e:	89 af       	std	Y+57, r24	; 0x39
 660:	89 ad       	ldd	r24, Y+57	; 0x39
 662:	9a ad       	ldd	r25, Y+58	; 0x3a
 664:	01 97       	sbiw	r24, 0x01	; 1
 666:	f1 f7       	brne	.-4      	; 0x664 <main+0x5f8>
 668:	9a af       	std	Y+58, r25	; 0x3a
 66a:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1000);
		PORTD=(1<<4); //swivel motion end
 66c:	e2 e3       	ldi	r30, 0x32	; 50
 66e:	f0 e0       	ldi	r31, 0x00	; 0
 670:	80 e1       	ldi	r24, 0x10	; 16
 672:	80 83       	st	Z, r24
		PORTA=0b01011100;//claw stops
 674:	eb e3       	ldi	r30, 0x3B	; 59
 676:	f0 e0       	ldi	r31, 0x00	; 0
 678:	8c e5       	ldi	r24, 0x5C	; 92
 67a:	80 83       	st	Z, r24
 67c:	80 e0       	ldi	r24, 0x00	; 0
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	aa ef       	ldi	r26, 0xFA	; 250
 682:	b3 e4       	ldi	r27, 0x43	; 67
 684:	8d ab       	std	Y+53, r24	; 0x35
 686:	9e ab       	std	Y+54, r25	; 0x36
 688:	af ab       	std	Y+55, r26	; 0x37
 68a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 68c:	6d a9       	ldd	r22, Y+53	; 0x35
 68e:	7e a9       	ldd	r23, Y+54	; 0x36
 690:	8f a9       	ldd	r24, Y+55	; 0x37
 692:	98 ad       	ldd	r25, Y+56	; 0x38
 694:	20 e0       	ldi	r18, 0x00	; 0
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	4a ef       	ldi	r20, 0xFA	; 250
 69a:	54 e4       	ldi	r21, 0x44	; 68
 69c:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 6a0:	dc 01       	movw	r26, r24
 6a2:	cb 01       	movw	r24, r22
 6a4:	89 ab       	std	Y+49, r24	; 0x31
 6a6:	9a ab       	std	Y+50, r25	; 0x32
 6a8:	ab ab       	std	Y+51, r26	; 0x33
 6aa:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
 6ac:	69 a9       	ldd	r22, Y+49	; 0x31
 6ae:	7a a9       	ldd	r23, Y+50	; 0x32
 6b0:	8b a9       	ldd	r24, Y+51	; 0x33
 6b2:	9c a9       	ldd	r25, Y+52	; 0x34
 6b4:	20 e0       	ldi	r18, 0x00	; 0
 6b6:	30 e0       	ldi	r19, 0x00	; 0
 6b8:	40 e8       	ldi	r20, 0x80	; 128
 6ba:	5f e3       	ldi	r21, 0x3F	; 63
 6bc:	0e 94 85 05 	call	0xb0a	; 0xb0a <__cmpsf2>
 6c0:	88 23       	and	r24, r24
 6c2:	2c f4       	brge	.+10     	; 0x6ce <main+0x662>
		__ticks = 1;
 6c4:	81 e0       	ldi	r24, 0x01	; 1
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	98 ab       	std	Y+48, r25	; 0x30
 6ca:	8f a7       	std	Y+47, r24	; 0x2f
 6cc:	3f c0       	rjmp	.+126    	; 0x74c <main+0x6e0>
	else if (__tmp > 65535)
 6ce:	69 a9       	ldd	r22, Y+49	; 0x31
 6d0:	7a a9       	ldd	r23, Y+50	; 0x32
 6d2:	8b a9       	ldd	r24, Y+51	; 0x33
 6d4:	9c a9       	ldd	r25, Y+52	; 0x34
 6d6:	20 e0       	ldi	r18, 0x00	; 0
 6d8:	3f ef       	ldi	r19, 0xFF	; 255
 6da:	4f e7       	ldi	r20, 0x7F	; 127
 6dc:	57 e4       	ldi	r21, 0x47	; 71
 6de:	0e 94 02 06 	call	0xc04	; 0xc04 <__gesf2>
 6e2:	18 16       	cp	r1, r24
 6e4:	4c f5       	brge	.+82     	; 0x738 <main+0x6cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 6e6:	6d a9       	ldd	r22, Y+53	; 0x35
 6e8:	7e a9       	ldd	r23, Y+54	; 0x36
 6ea:	8f a9       	ldd	r24, Y+55	; 0x37
 6ec:	98 ad       	ldd	r25, Y+56	; 0x38
 6ee:	20 e0       	ldi	r18, 0x00	; 0
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	40 e2       	ldi	r20, 0x20	; 32
 6f4:	51 e4       	ldi	r21, 0x41	; 65
 6f6:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 6fa:	dc 01       	movw	r26, r24
 6fc:	cb 01       	movw	r24, r22
 6fe:	bc 01       	movw	r22, r24
 700:	cd 01       	movw	r24, r26
 702:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 706:	dc 01       	movw	r26, r24
 708:	cb 01       	movw	r24, r22
 70a:	98 ab       	std	Y+48, r25	; 0x30
 70c:	8f a7       	std	Y+47, r24	; 0x2f
 70e:	0f c0       	rjmp	.+30     	; 0x72e <main+0x6c2>
 710:	88 ec       	ldi	r24, 0xC8	; 200
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	9e a7       	std	Y+46, r25	; 0x2e
 716:	8d a7       	std	Y+45, r24	; 0x2d
 718:	8d a5       	ldd	r24, Y+45	; 0x2d
 71a:	9e a5       	ldd	r25, Y+46	; 0x2e
 71c:	01 97       	sbiw	r24, 0x01	; 1
 71e:	f1 f7       	brne	.-4      	; 0x71c <main+0x6b0>
 720:	9e a7       	std	Y+46, r25	; 0x2e
 722:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 724:	8f a5       	ldd	r24, Y+47	; 0x2f
 726:	98 a9       	ldd	r25, Y+48	; 0x30
 728:	01 97       	sbiw	r24, 0x01	; 1
 72a:	98 ab       	std	Y+48, r25	; 0x30
 72c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 72e:	8f a5       	ldd	r24, Y+47	; 0x2f
 730:	98 a9       	ldd	r25, Y+48	; 0x30
 732:	00 97       	sbiw	r24, 0x00	; 0
 734:	69 f7       	brne	.-38     	; 0x710 <main+0x6a4>
 736:	14 c0       	rjmp	.+40     	; 0x760 <main+0x6f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 738:	69 a9       	ldd	r22, Y+49	; 0x31
 73a:	7a a9       	ldd	r23, Y+50	; 0x32
 73c:	8b a9       	ldd	r24, Y+51	; 0x33
 73e:	9c a9       	ldd	r25, Y+52	; 0x34
 740:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 744:	dc 01       	movw	r26, r24
 746:	cb 01       	movw	r24, r22
 748:	98 ab       	std	Y+48, r25	; 0x30
 74a:	8f a7       	std	Y+47, r24	; 0x2f
 74c:	8f a5       	ldd	r24, Y+47	; 0x2f
 74e:	98 a9       	ldd	r25, Y+48	; 0x30
 750:	9c a7       	std	Y+44, r25	; 0x2c
 752:	8b a7       	std	Y+43, r24	; 0x2b
 754:	8b a5       	ldd	r24, Y+43	; 0x2b
 756:	9c a5       	ldd	r25, Y+44	; 0x2c
 758:	01 97       	sbiw	r24, 0x01	; 1
 75a:	f1 f7       	brne	.-4      	; 0x758 <main+0x6ec>
 75c:	9c a7       	std	Y+44, r25	; 0x2c
 75e:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(500);
		PORTD=0b00011010;
 760:	e2 e3       	ldi	r30, 0x32	; 50
 762:	f0 e0       	ldi	r31, 0x00	; 0
 764:	8a e1       	ldi	r24, 0x1A	; 26
 766:	80 83       	st	Z, r24
 768:	20 c0       	rjmp	.+64     	; 0x7aa <main+0x73e>
			while((PIND&0b00000010)!=0)
			{ //till front switch not hit
			if((PINB&0x12)==0) 
 76a:	e6 e3       	ldi	r30, 0x36	; 54
 76c:	f0 e0       	ldi	r31, 0x00	; 0
 76e:	80 81       	ld	r24, Z
 770:	88 2f       	mov	r24, r24
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	82 71       	andi	r24, 0x12	; 18
 776:	90 70       	andi	r25, 0x00	; 0
 778:	00 97       	sbiw	r24, 0x00	; 0
 77a:	29 f4       	brne	.+10     	; 0x786 <main+0x71a>
			{
			 PORTA=0b11111100; //forward motion
 77c:	eb e3       	ldi	r30, 0x3B	; 59
 77e:	f0 e0       	ldi	r31, 0x00	; 0
 780:	8c ef       	ldi	r24, 0xFC	; 252
 782:	80 83       	st	Z, r24
 784:	12 c0       	rjmp	.+36     	; 0x7aa <main+0x73e>
			}
			else if((PINB&0x10)!=0)//turn left
 786:	e6 e3       	ldi	r30, 0x36	; 54
 788:	f0 e0       	ldi	r31, 0x00	; 0
 78a:	80 81       	ld	r24, Z
 78c:	88 2f       	mov	r24, r24
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	80 71       	andi	r24, 0x10	; 16
 792:	90 70       	andi	r25, 0x00	; 0
 794:	00 97       	sbiw	r24, 0x00	; 0
 796:	29 f0       	breq	.+10     	; 0x7a2 <main+0x736>
			{
			PORTA=0b10111100;
 798:	eb e3       	ldi	r30, 0x3B	; 59
 79a:	f0 e0       	ldi	r31, 0x00	; 0
 79c:	8c eb       	ldi	r24, 0xBC	; 188
 79e:	80 83       	st	Z, r24
 7a0:	04 c0       	rjmp	.+8      	; 0x7aa <main+0x73e>
			}
			else//turn right
			{
			PORTA=0b11101100;
 7a2:	eb e3       	ldi	r30, 0x3B	; 59
 7a4:	f0 e0       	ldi	r31, 0x00	; 0
 7a6:	8c ee       	ldi	r24, 0xEC	; 236
 7a8:	80 83       	st	Z, r24
		_delay_ms(1000);
		PORTD=(1<<4); //swivel motion end
		PORTA=0b01011100;//claw stops
		_delay_ms(500);
		PORTD=0b00011010;
			while((PIND&0b00000010)!=0)
 7aa:	e0 e3       	ldi	r30, 0x30	; 48
 7ac:	f0 e0       	ldi	r31, 0x00	; 0
 7ae:	80 81       	ld	r24, Z
 7b0:	88 2f       	mov	r24, r24
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	82 70       	andi	r24, 0x02	; 2
 7b6:	90 70       	andi	r25, 0x00	; 0
 7b8:	00 97       	sbiw	r24, 0x00	; 0
 7ba:	b9 f6       	brne	.-82     	; 0x76a <main+0x6fe>
			else//turn right
			{
			PORTA=0b11101100;
			}
			}
			PORTD=0b00011010;
 7bc:	e2 e3       	ldi	r30, 0x32	; 50
 7be:	f0 e0       	ldi	r31, 0x00	; 0
 7c0:	8a e1       	ldi	r24, 0x1A	; 26
 7c2:	80 83       	st	Z, r24
			PORTA=0b01010100;//claw activated
 7c4:	eb e3       	ldi	r30, 0x3B	; 59
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	84 e5       	ldi	r24, 0x54	; 84
 7ca:	80 83       	st	Z, r24
 7cc:	80 e0       	ldi	r24, 0x00	; 0
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	aa ef       	ldi	r26, 0xFA	; 250
 7d2:	b3 e4       	ldi	r27, 0x43	; 67
 7d4:	8f a3       	std	Y+39, r24	; 0x27
 7d6:	98 a7       	std	Y+40, r25	; 0x28
 7d8:	a9 a7       	std	Y+41, r26	; 0x29
 7da:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 7dc:	6f a1       	ldd	r22, Y+39	; 0x27
 7de:	78 a5       	ldd	r23, Y+40	; 0x28
 7e0:	89 a5       	ldd	r24, Y+41	; 0x29
 7e2:	9a a5       	ldd	r25, Y+42	; 0x2a
 7e4:	20 e0       	ldi	r18, 0x00	; 0
 7e6:	30 e0       	ldi	r19, 0x00	; 0
 7e8:	4a ef       	ldi	r20, 0xFA	; 250
 7ea:	54 e4       	ldi	r21, 0x44	; 68
 7ec:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 7f0:	dc 01       	movw	r26, r24
 7f2:	cb 01       	movw	r24, r22
 7f4:	8b a3       	std	Y+35, r24	; 0x23
 7f6:	9c a3       	std	Y+36, r25	; 0x24
 7f8:	ad a3       	std	Y+37, r26	; 0x25
 7fa:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
 7fc:	6b a1       	ldd	r22, Y+35	; 0x23
 7fe:	7c a1       	ldd	r23, Y+36	; 0x24
 800:	8d a1       	ldd	r24, Y+37	; 0x25
 802:	9e a1       	ldd	r25, Y+38	; 0x26
 804:	20 e0       	ldi	r18, 0x00	; 0
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	40 e8       	ldi	r20, 0x80	; 128
 80a:	5f e3       	ldi	r21, 0x3F	; 63
 80c:	0e 94 85 05 	call	0xb0a	; 0xb0a <__cmpsf2>
 810:	88 23       	and	r24, r24
 812:	2c f4       	brge	.+10     	; 0x81e <main+0x7b2>
		__ticks = 1;
 814:	81 e0       	ldi	r24, 0x01	; 1
 816:	90 e0       	ldi	r25, 0x00	; 0
 818:	9a a3       	std	Y+34, r25	; 0x22
 81a:	89 a3       	std	Y+33, r24	; 0x21
 81c:	3f c0       	rjmp	.+126    	; 0x89c <__stack+0x3d>
	else if (__tmp > 65535)
 81e:	6b a1       	ldd	r22, Y+35	; 0x23
 820:	7c a1       	ldd	r23, Y+36	; 0x24
 822:	8d a1       	ldd	r24, Y+37	; 0x25
 824:	9e a1       	ldd	r25, Y+38	; 0x26
 826:	20 e0       	ldi	r18, 0x00	; 0
 828:	3f ef       	ldi	r19, 0xFF	; 255
 82a:	4f e7       	ldi	r20, 0x7F	; 127
 82c:	57 e4       	ldi	r21, 0x47	; 71
 82e:	0e 94 02 06 	call	0xc04	; 0xc04 <__gesf2>
 832:	18 16       	cp	r1, r24
 834:	4c f5       	brge	.+82     	; 0x888 <__stack+0x29>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 836:	6f a1       	ldd	r22, Y+39	; 0x27
 838:	78 a5       	ldd	r23, Y+40	; 0x28
 83a:	89 a5       	ldd	r24, Y+41	; 0x29
 83c:	9a a5       	ldd	r25, Y+42	; 0x2a
 83e:	20 e0       	ldi	r18, 0x00	; 0
 840:	30 e0       	ldi	r19, 0x00	; 0
 842:	40 e2       	ldi	r20, 0x20	; 32
 844:	51 e4       	ldi	r21, 0x41	; 65
 846:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 84a:	dc 01       	movw	r26, r24
 84c:	cb 01       	movw	r24, r22
 84e:	bc 01       	movw	r22, r24
 850:	cd 01       	movw	r24, r26
 852:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 856:	dc 01       	movw	r26, r24
 858:	cb 01       	movw	r24, r22
 85a:	9a a3       	std	Y+34, r25	; 0x22
 85c:	89 a3       	std	Y+33, r24	; 0x21
 85e:	0f c0       	rjmp	.+30     	; 0x87e <__stack+0x1f>
 860:	88 ec       	ldi	r24, 0xC8	; 200
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	98 a3       	std	Y+32, r25	; 0x20
 866:	8f 8f       	std	Y+31, r24	; 0x1f
 868:	8f 8d       	ldd	r24, Y+31	; 0x1f
 86a:	98 a1       	ldd	r25, Y+32	; 0x20
 86c:	01 97       	sbiw	r24, 0x01	; 1
 86e:	f1 f7       	brne	.-4      	; 0x86c <__stack+0xd>
 870:	98 a3       	std	Y+32, r25	; 0x20
 872:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 874:	89 a1       	ldd	r24, Y+33	; 0x21
 876:	9a a1       	ldd	r25, Y+34	; 0x22
 878:	01 97       	sbiw	r24, 0x01	; 1
 87a:	9a a3       	std	Y+34, r25	; 0x22
 87c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 87e:	89 a1       	ldd	r24, Y+33	; 0x21
 880:	9a a1       	ldd	r25, Y+34	; 0x22
 882:	00 97       	sbiw	r24, 0x00	; 0
 884:	69 f7       	brne	.-38     	; 0x860 <__stack+0x1>
 886:	14 c0       	rjmp	.+40     	; 0x8b0 <__stack+0x51>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 888:	6b a1       	ldd	r22, Y+35	; 0x23
 88a:	7c a1       	ldd	r23, Y+36	; 0x24
 88c:	8d a1       	ldd	r24, Y+37	; 0x25
 88e:	9e a1       	ldd	r25, Y+38	; 0x26
 890:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 894:	dc 01       	movw	r26, r24
 896:	cb 01       	movw	r24, r22
 898:	9a a3       	std	Y+34, r25	; 0x22
 89a:	89 a3       	std	Y+33, r24	; 0x21
 89c:	89 a1       	ldd	r24, Y+33	; 0x21
 89e:	9a a1       	ldd	r25, Y+34	; 0x22
 8a0:	9e 8f       	std	Y+30, r25	; 0x1e
 8a2:	8d 8f       	std	Y+29, r24	; 0x1d
 8a4:	8d 8d       	ldd	r24, Y+29	; 0x1d
 8a6:	9e 8d       	ldd	r25, Y+30	; 0x1e
 8a8:	01 97       	sbiw	r24, 0x01	; 1
 8aa:	f1 f7       	brne	.-4      	; 0x8a8 <__stack+0x49>
 8ac:	9e 8f       	std	Y+30, r25	; 0x1e
 8ae:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(500);
			PORTD=(0<<4); //swivel motion started
 8b0:	e2 e3       	ldi	r30, 0x32	; 50
 8b2:	f0 e0       	ldi	r31, 0x00	; 0
 8b4:	10 82       	st	Z, r1
 8b6:	80 e0       	ldi	r24, 0x00	; 0
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	aa e7       	ldi	r26, 0x7A	; 122
 8bc:	b4 e4       	ldi	r27, 0x44	; 68
 8be:	89 8f       	std	Y+25, r24	; 0x19
 8c0:	9a 8f       	std	Y+26, r25	; 0x1a
 8c2:	ab 8f       	std	Y+27, r26	; 0x1b
 8c4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 8c6:	69 8d       	ldd	r22, Y+25	; 0x19
 8c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
 8ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
 8cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
 8ce:	20 e0       	ldi	r18, 0x00	; 0
 8d0:	30 e0       	ldi	r19, 0x00	; 0
 8d2:	4a ef       	ldi	r20, 0xFA	; 250
 8d4:	54 e4       	ldi	r21, 0x44	; 68
 8d6:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 8da:	dc 01       	movw	r26, r24
 8dc:	cb 01       	movw	r24, r22
 8de:	8d 8b       	std	Y+21, r24	; 0x15
 8e0:	9e 8b       	std	Y+22, r25	; 0x16
 8e2:	af 8b       	std	Y+23, r26	; 0x17
 8e4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
 8e6:	6d 89       	ldd	r22, Y+21	; 0x15
 8e8:	7e 89       	ldd	r23, Y+22	; 0x16
 8ea:	8f 89       	ldd	r24, Y+23	; 0x17
 8ec:	98 8d       	ldd	r25, Y+24	; 0x18
 8ee:	20 e0       	ldi	r18, 0x00	; 0
 8f0:	30 e0       	ldi	r19, 0x00	; 0
 8f2:	40 e8       	ldi	r20, 0x80	; 128
 8f4:	5f e3       	ldi	r21, 0x3F	; 63
 8f6:	0e 94 85 05 	call	0xb0a	; 0xb0a <__cmpsf2>
 8fa:	88 23       	and	r24, r24
 8fc:	2c f4       	brge	.+10     	; 0x908 <__stack+0xa9>
		__ticks = 1;
 8fe:	81 e0       	ldi	r24, 0x01	; 1
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	9c 8b       	std	Y+20, r25	; 0x14
 904:	8b 8b       	std	Y+19, r24	; 0x13
 906:	3f c0       	rjmp	.+126    	; 0x986 <__stack+0x127>
	else if (__tmp > 65535)
 908:	6d 89       	ldd	r22, Y+21	; 0x15
 90a:	7e 89       	ldd	r23, Y+22	; 0x16
 90c:	8f 89       	ldd	r24, Y+23	; 0x17
 90e:	98 8d       	ldd	r25, Y+24	; 0x18
 910:	20 e0       	ldi	r18, 0x00	; 0
 912:	3f ef       	ldi	r19, 0xFF	; 255
 914:	4f e7       	ldi	r20, 0x7F	; 127
 916:	57 e4       	ldi	r21, 0x47	; 71
 918:	0e 94 02 06 	call	0xc04	; 0xc04 <__gesf2>
 91c:	18 16       	cp	r1, r24
 91e:	4c f5       	brge	.+82     	; 0x972 <__stack+0x113>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 920:	69 8d       	ldd	r22, Y+25	; 0x19
 922:	7a 8d       	ldd	r23, Y+26	; 0x1a
 924:	8b 8d       	ldd	r24, Y+27	; 0x1b
 926:	9c 8d       	ldd	r25, Y+28	; 0x1c
 928:	20 e0       	ldi	r18, 0x00	; 0
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	40 e2       	ldi	r20, 0x20	; 32
 92e:	51 e4       	ldi	r21, 0x41	; 65
 930:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 934:	dc 01       	movw	r26, r24
 936:	cb 01       	movw	r24, r22
 938:	bc 01       	movw	r22, r24
 93a:	cd 01       	movw	r24, r26
 93c:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 940:	dc 01       	movw	r26, r24
 942:	cb 01       	movw	r24, r22
 944:	9c 8b       	std	Y+20, r25	; 0x14
 946:	8b 8b       	std	Y+19, r24	; 0x13
 948:	0f c0       	rjmp	.+30     	; 0x968 <__stack+0x109>
 94a:	88 ec       	ldi	r24, 0xC8	; 200
 94c:	90 e0       	ldi	r25, 0x00	; 0
 94e:	9a 8b       	std	Y+18, r25	; 0x12
 950:	89 8b       	std	Y+17, r24	; 0x11
 952:	89 89       	ldd	r24, Y+17	; 0x11
 954:	9a 89       	ldd	r25, Y+18	; 0x12
 956:	01 97       	sbiw	r24, 0x01	; 1
 958:	f1 f7       	brne	.-4      	; 0x956 <__stack+0xf7>
 95a:	9a 8b       	std	Y+18, r25	; 0x12
 95c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 95e:	8b 89       	ldd	r24, Y+19	; 0x13
 960:	9c 89       	ldd	r25, Y+20	; 0x14
 962:	01 97       	sbiw	r24, 0x01	; 1
 964:	9c 8b       	std	Y+20, r25	; 0x14
 966:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 968:	8b 89       	ldd	r24, Y+19	; 0x13
 96a:	9c 89       	ldd	r25, Y+20	; 0x14
 96c:	00 97       	sbiw	r24, 0x00	; 0
 96e:	69 f7       	brne	.-38     	; 0x94a <__stack+0xeb>
 970:	14 c0       	rjmp	.+40     	; 0x99a <__stack+0x13b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 972:	6d 89       	ldd	r22, Y+21	; 0x15
 974:	7e 89       	ldd	r23, Y+22	; 0x16
 976:	8f 89       	ldd	r24, Y+23	; 0x17
 978:	98 8d       	ldd	r25, Y+24	; 0x18
 97a:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 97e:	dc 01       	movw	r26, r24
 980:	cb 01       	movw	r24, r22
 982:	9c 8b       	std	Y+20, r25	; 0x14
 984:	8b 8b       	std	Y+19, r24	; 0x13
 986:	8b 89       	ldd	r24, Y+19	; 0x13
 988:	9c 89       	ldd	r25, Y+20	; 0x14
 98a:	98 8b       	std	Y+16, r25	; 0x10
 98c:	8f 87       	std	Y+15, r24	; 0x0f
 98e:	8f 85       	ldd	r24, Y+15	; 0x0f
 990:	98 89       	ldd	r25, Y+16	; 0x10
 992:	01 97       	sbiw	r24, 0x01	; 1
 994:	f1 f7       	brne	.-4      	; 0x992 <__stack+0x133>
 996:	98 8b       	std	Y+16, r25	; 0x10
 998:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(1000);
			PORTD=(1<<4); //swiwel motion end
 99a:	e2 e3       	ldi	r30, 0x32	; 50
 99c:	f0 e0       	ldi	r31, 0x00	; 0
 99e:	80 e1       	ldi	r24, 0x10	; 16
 9a0:	80 83       	st	Z, r24
			PORTA=0b01011100; //claw deactivated
 9a2:	eb e3       	ldi	r30, 0x3B	; 59
 9a4:	f0 e0       	ldi	r31, 0x00	; 0
 9a6:	8c e5       	ldi	r24, 0x5C	; 92
 9a8:	80 83       	st	Z, r24
 9aa:	80 e0       	ldi	r24, 0x00	; 0
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	aa ef       	ldi	r26, 0xFA	; 250
 9b0:	b3 e4       	ldi	r27, 0x43	; 67
 9b2:	8b 87       	std	Y+11, r24	; 0x0b
 9b4:	9c 87       	std	Y+12, r25	; 0x0c
 9b6:	ad 87       	std	Y+13, r26	; 0x0d
 9b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 9ba:	6b 85       	ldd	r22, Y+11	; 0x0b
 9bc:	7c 85       	ldd	r23, Y+12	; 0x0c
 9be:	8d 85       	ldd	r24, Y+13	; 0x0d
 9c0:	9e 85       	ldd	r25, Y+14	; 0x0e
 9c2:	20 e0       	ldi	r18, 0x00	; 0
 9c4:	30 e0       	ldi	r19, 0x00	; 0
 9c6:	4a ef       	ldi	r20, 0xFA	; 250
 9c8:	54 e4       	ldi	r21, 0x44	; 68
 9ca:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 9ce:	dc 01       	movw	r26, r24
 9d0:	cb 01       	movw	r24, r22
 9d2:	8f 83       	std	Y+7, r24	; 0x07
 9d4:	98 87       	std	Y+8, r25	; 0x08
 9d6:	a9 87       	std	Y+9, r26	; 0x09
 9d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 9da:	6f 81       	ldd	r22, Y+7	; 0x07
 9dc:	78 85       	ldd	r23, Y+8	; 0x08
 9de:	89 85       	ldd	r24, Y+9	; 0x09
 9e0:	9a 85       	ldd	r25, Y+10	; 0x0a
 9e2:	20 e0       	ldi	r18, 0x00	; 0
 9e4:	30 e0       	ldi	r19, 0x00	; 0
 9e6:	40 e8       	ldi	r20, 0x80	; 128
 9e8:	5f e3       	ldi	r21, 0x3F	; 63
 9ea:	0e 94 85 05 	call	0xb0a	; 0xb0a <__cmpsf2>
 9ee:	88 23       	and	r24, r24
 9f0:	2c f4       	brge	.+10     	; 0x9fc <__stack+0x19d>
		__ticks = 1;
 9f2:	81 e0       	ldi	r24, 0x01	; 1
 9f4:	90 e0       	ldi	r25, 0x00	; 0
 9f6:	9e 83       	std	Y+6, r25	; 0x06
 9f8:	8d 83       	std	Y+5, r24	; 0x05
 9fa:	3f c0       	rjmp	.+126    	; 0xa7a <__stack+0x21b>
	else if (__tmp > 65535)
 9fc:	6f 81       	ldd	r22, Y+7	; 0x07
 9fe:	78 85       	ldd	r23, Y+8	; 0x08
 a00:	89 85       	ldd	r24, Y+9	; 0x09
 a02:	9a 85       	ldd	r25, Y+10	; 0x0a
 a04:	20 e0       	ldi	r18, 0x00	; 0
 a06:	3f ef       	ldi	r19, 0xFF	; 255
 a08:	4f e7       	ldi	r20, 0x7F	; 127
 a0a:	57 e4       	ldi	r21, 0x47	; 71
 a0c:	0e 94 02 06 	call	0xc04	; 0xc04 <__gesf2>
 a10:	18 16       	cp	r1, r24
 a12:	4c f5       	brge	.+82     	; 0xa66 <__stack+0x207>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 a14:	6b 85       	ldd	r22, Y+11	; 0x0b
 a16:	7c 85       	ldd	r23, Y+12	; 0x0c
 a18:	8d 85       	ldd	r24, Y+13	; 0x0d
 a1a:	9e 85       	ldd	r25, Y+14	; 0x0e
 a1c:	20 e0       	ldi	r18, 0x00	; 0
 a1e:	30 e0       	ldi	r19, 0x00	; 0
 a20:	40 e2       	ldi	r20, 0x20	; 32
 a22:	51 e4       	ldi	r21, 0x41	; 65
 a24:	0e 94 06 06 	call	0xc0c	; 0xc0c <__mulsf3>
 a28:	dc 01       	movw	r26, r24
 a2a:	cb 01       	movw	r24, r22
 a2c:	bc 01       	movw	r22, r24
 a2e:	cd 01       	movw	r24, r26
 a30:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 a34:	dc 01       	movw	r26, r24
 a36:	cb 01       	movw	r24, r22
 a38:	9e 83       	std	Y+6, r25	; 0x06
 a3a:	8d 83       	std	Y+5, r24	; 0x05
 a3c:	0f c0       	rjmp	.+30     	; 0xa5c <__stack+0x1fd>
 a3e:	88 ec       	ldi	r24, 0xC8	; 200
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	9c 83       	std	Y+4, r25	; 0x04
 a44:	8b 83       	std	Y+3, r24	; 0x03
 a46:	8b 81       	ldd	r24, Y+3	; 0x03
 a48:	9c 81       	ldd	r25, Y+4	; 0x04
 a4a:	01 97       	sbiw	r24, 0x01	; 1
 a4c:	f1 f7       	brne	.-4      	; 0xa4a <__stack+0x1eb>
 a4e:	9c 83       	std	Y+4, r25	; 0x04
 a50:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 a52:	8d 81       	ldd	r24, Y+5	; 0x05
 a54:	9e 81       	ldd	r25, Y+6	; 0x06
 a56:	01 97       	sbiw	r24, 0x01	; 1
 a58:	9e 83       	std	Y+6, r25	; 0x06
 a5a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 a5c:	8d 81       	ldd	r24, Y+5	; 0x05
 a5e:	9e 81       	ldd	r25, Y+6	; 0x06
 a60:	00 97       	sbiw	r24, 0x00	; 0
 a62:	69 f7       	brne	.-38     	; 0xa3e <__stack+0x1df>
 a64:	14 c0       	rjmp	.+40     	; 0xa8e <__stack+0x22f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 a66:	6f 81       	ldd	r22, Y+7	; 0x07
 a68:	78 85       	ldd	r23, Y+8	; 0x08
 a6a:	89 85       	ldd	r24, Y+9	; 0x09
 a6c:	9a 85       	ldd	r25, Y+10	; 0x0a
 a6e:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixunssfsi>
 a72:	dc 01       	movw	r26, r24
 a74:	cb 01       	movw	r24, r22
 a76:	9e 83       	std	Y+6, r25	; 0x06
 a78:	8d 83       	std	Y+5, r24	; 0x05
 a7a:	8d 81       	ldd	r24, Y+5	; 0x05
 a7c:	9e 81       	ldd	r25, Y+6	; 0x06
 a7e:	9a 83       	std	Y+2, r25	; 0x02
 a80:	89 83       	std	Y+1, r24	; 0x01
 a82:	89 81       	ldd	r24, Y+1	; 0x01
 a84:	9a 81       	ldd	r25, Y+2	; 0x02
 a86:	01 97       	sbiw	r24, 0x01	; 1
 a88:	f1 f7       	brne	.-4      	; 0xa86 <__stack+0x227>
 a8a:	9a 83       	std	Y+2, r25	; 0x02
 a8c:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(500);
			PORTD=0b00011010;
 a8e:	e2 e3       	ldi	r30, 0x32	; 50
 a90:	f0 e0       	ldi	r31, 0x00	; 0
 a92:	8a e1       	ldi	r24, 0x1A	; 26
 a94:	80 83       	st	Z, r24
 a96:	20 c0       	rjmp	.+64     	; 0xad8 <__stack+0x279>
			while((PIND&0b00001000)!=0)	//till back switch not hit
			{
			if((PINB&0x12)==0)
 a98:	e6 e3       	ldi	r30, 0x36	; 54
 a9a:	f0 e0       	ldi	r31, 0x00	; 0
 a9c:	80 81       	ld	r24, Z
 a9e:	88 2f       	mov	r24, r24
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	82 71       	andi	r24, 0x12	; 18
 aa4:	90 70       	andi	r25, 0x00	; 0
 aa6:	00 97       	sbiw	r24, 0x00	; 0
 aa8:	29 f4       	brne	.+10     	; 0xab4 <__stack+0x255>
			{
			PORTA=0b00001100;//reverse motion
 aaa:	eb e3       	ldi	r30, 0x3B	; 59
 aac:	f0 e0       	ldi	r31, 0x00	; 0
 aae:	8c e0       	ldi	r24, 0x0C	; 12
 ab0:	80 83       	st	Z, r24
 ab2:	12 c0       	rjmp	.+36     	; 0xad8 <__stack+0x279>
			}
			else if((PINB&0x02)!=0)//turn left
 ab4:	e6 e3       	ldi	r30, 0x36	; 54
 ab6:	f0 e0       	ldi	r31, 0x00	; 0
 ab8:	80 81       	ld	r24, Z
 aba:	88 2f       	mov	r24, r24
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	82 70       	andi	r24, 0x02	; 2
 ac0:	90 70       	andi	r25, 0x00	; 0
 ac2:	00 97       	sbiw	r24, 0x00	; 0
 ac4:	29 f0       	breq	.+10     	; 0xad0 <__stack+0x271>
			{
			PORTA=0b01001100;
 ac6:	eb e3       	ldi	r30, 0x3B	; 59
 ac8:	f0 e0       	ldi	r31, 0x00	; 0
 aca:	8c e4       	ldi	r24, 0x4C	; 76
 acc:	80 83       	st	Z, r24
 ace:	04 c0       	rjmp	.+8      	; 0xad8 <__stack+0x279>
			}
			else//turn right
			{
			PORTA=0b00011100;
 ad0:	eb e3       	ldi	r30, 0x3B	; 59
 ad2:	f0 e0       	ldi	r31, 0x00	; 0
 ad4:	8c e1       	ldi	r24, 0x1C	; 28
 ad6:	80 83       	st	Z, r24
			_delay_ms(1000);
			PORTD=(1<<4); //swiwel motion end
			PORTA=0b01011100; //claw deactivated
			_delay_ms(500);
			PORTD=0b00011010;
			while((PIND&0b00001000)!=0)	//till back switch not hit
 ad8:	e0 e3       	ldi	r30, 0x30	; 48
 ada:	f0 e0       	ldi	r31, 0x00	; 0
 adc:	80 81       	ld	r24, Z
 ade:	88 2f       	mov	r24, r24
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	88 70       	andi	r24, 0x08	; 8
 ae4:	90 70       	andi	r25, 0x00	; 0
 ae6:	00 97       	sbiw	r24, 0x00	; 0
 ae8:	b9 f6       	brne	.-82     	; 0xa98 <__stack+0x239>
			{
			PORTA=0b00011100;
			}
			}
			
			PORTA=0b01011100;
 aea:	eb e3       	ldi	r30, 0x3B	; 59
 aec:	f0 e0       	ldi	r31, 0x00	; 0
 aee:	8c e5       	ldi	r24, 0x5C	; 92
 af0:	80 83       	st	Z, r24
		
			
			
	}	
 af2:	c0 59       	subi	r28, 0x90	; 144
 af4:	df 4f       	sbci	r29, 0xFF	; 255
 af6:	0f b6       	in	r0, 0x3f	; 63
 af8:	f8 94       	cli
 afa:	de bf       	out	0x3e, r29	; 62
 afc:	0f be       	out	0x3f, r0	; 63
 afe:	cd bf       	out	0x3d, r28	; 61
 b00:	cf 91       	pop	r28
 b02:	df 91       	pop	r29
 b04:	1f 91       	pop	r17
 b06:	0f 91       	pop	r16
 b08:	08 95       	ret

00000b0a <__cmpsf2>:
 b0a:	2f d0       	rcall	.+94     	; 0xb6a <__fp_cmp>
 b0c:	08 f4       	brcc	.+2      	; 0xb10 <__cmpsf2+0x6>
 b0e:	81 e0       	ldi	r24, 0x01	; 1
 b10:	08 95       	ret

00000b12 <__fixunssfsi>:
 b12:	57 d0       	rcall	.+174    	; 0xbc2 <__fp_splitA>
 b14:	88 f0       	brcs	.+34     	; 0xb38 <__fixunssfsi+0x26>
 b16:	9f 57       	subi	r25, 0x7F	; 127
 b18:	90 f0       	brcs	.+36     	; 0xb3e <__fixunssfsi+0x2c>
 b1a:	b9 2f       	mov	r27, r25
 b1c:	99 27       	eor	r25, r25
 b1e:	b7 51       	subi	r27, 0x17	; 23
 b20:	a0 f0       	brcs	.+40     	; 0xb4a <__fixunssfsi+0x38>
 b22:	d1 f0       	breq	.+52     	; 0xb58 <__fixunssfsi+0x46>
 b24:	66 0f       	add	r22, r22
 b26:	77 1f       	adc	r23, r23
 b28:	88 1f       	adc	r24, r24
 b2a:	99 1f       	adc	r25, r25
 b2c:	1a f0       	brmi	.+6      	; 0xb34 <__fixunssfsi+0x22>
 b2e:	ba 95       	dec	r27
 b30:	c9 f7       	brne	.-14     	; 0xb24 <__fixunssfsi+0x12>
 b32:	12 c0       	rjmp	.+36     	; 0xb58 <__fixunssfsi+0x46>
 b34:	b1 30       	cpi	r27, 0x01	; 1
 b36:	81 f0       	breq	.+32     	; 0xb58 <__fixunssfsi+0x46>
 b38:	5e d0       	rcall	.+188    	; 0xbf6 <__fp_zero>
 b3a:	b1 e0       	ldi	r27, 0x01	; 1
 b3c:	08 95       	ret
 b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <__fp_zero>
 b40:	67 2f       	mov	r22, r23
 b42:	78 2f       	mov	r23, r24
 b44:	88 27       	eor	r24, r24
 b46:	b8 5f       	subi	r27, 0xF8	; 248
 b48:	39 f0       	breq	.+14     	; 0xb58 <__fixunssfsi+0x46>
 b4a:	b9 3f       	cpi	r27, 0xF9	; 249
 b4c:	cc f3       	brlt	.-14     	; 0xb40 <__fixunssfsi+0x2e>
 b4e:	86 95       	lsr	r24
 b50:	77 95       	ror	r23
 b52:	67 95       	ror	r22
 b54:	b3 95       	inc	r27
 b56:	d9 f7       	brne	.-10     	; 0xb4e <__fixunssfsi+0x3c>
 b58:	3e f4       	brtc	.+14     	; 0xb68 <__fixunssfsi+0x56>
 b5a:	90 95       	com	r25
 b5c:	80 95       	com	r24
 b5e:	70 95       	com	r23
 b60:	61 95       	neg	r22
 b62:	7f 4f       	sbci	r23, 0xFF	; 255
 b64:	8f 4f       	sbci	r24, 0xFF	; 255
 b66:	9f 4f       	sbci	r25, 0xFF	; 255
 b68:	08 95       	ret

00000b6a <__fp_cmp>:
 b6a:	99 0f       	add	r25, r25
 b6c:	00 08       	sbc	r0, r0
 b6e:	55 0f       	add	r21, r21
 b70:	aa 0b       	sbc	r26, r26
 b72:	e0 e8       	ldi	r30, 0x80	; 128
 b74:	fe ef       	ldi	r31, 0xFE	; 254
 b76:	16 16       	cp	r1, r22
 b78:	17 06       	cpc	r1, r23
 b7a:	e8 07       	cpc	r30, r24
 b7c:	f9 07       	cpc	r31, r25
 b7e:	c0 f0       	brcs	.+48     	; 0xbb0 <__fp_cmp+0x46>
 b80:	12 16       	cp	r1, r18
 b82:	13 06       	cpc	r1, r19
 b84:	e4 07       	cpc	r30, r20
 b86:	f5 07       	cpc	r31, r21
 b88:	98 f0       	brcs	.+38     	; 0xbb0 <__fp_cmp+0x46>
 b8a:	62 1b       	sub	r22, r18
 b8c:	73 0b       	sbc	r23, r19
 b8e:	84 0b       	sbc	r24, r20
 b90:	95 0b       	sbc	r25, r21
 b92:	39 f4       	brne	.+14     	; 0xba2 <__fp_cmp+0x38>
 b94:	0a 26       	eor	r0, r26
 b96:	61 f0       	breq	.+24     	; 0xbb0 <__fp_cmp+0x46>
 b98:	23 2b       	or	r18, r19
 b9a:	24 2b       	or	r18, r20
 b9c:	25 2b       	or	r18, r21
 b9e:	21 f4       	brne	.+8      	; 0xba8 <__fp_cmp+0x3e>
 ba0:	08 95       	ret
 ba2:	0a 26       	eor	r0, r26
 ba4:	09 f4       	brne	.+2      	; 0xba8 <__fp_cmp+0x3e>
 ba6:	a1 40       	sbci	r26, 0x01	; 1
 ba8:	a6 95       	lsr	r26
 baa:	8f ef       	ldi	r24, 0xFF	; 255
 bac:	81 1d       	adc	r24, r1
 bae:	81 1d       	adc	r24, r1
 bb0:	08 95       	ret

00000bb2 <__fp_split3>:
 bb2:	57 fd       	sbrc	r21, 7
 bb4:	90 58       	subi	r25, 0x80	; 128
 bb6:	44 0f       	add	r20, r20
 bb8:	55 1f       	adc	r21, r21
 bba:	59 f0       	breq	.+22     	; 0xbd2 <__fp_splitA+0x10>
 bbc:	5f 3f       	cpi	r21, 0xFF	; 255
 bbe:	71 f0       	breq	.+28     	; 0xbdc <__fp_splitA+0x1a>
 bc0:	47 95       	ror	r20

00000bc2 <__fp_splitA>:
 bc2:	88 0f       	add	r24, r24
 bc4:	97 fb       	bst	r25, 7
 bc6:	99 1f       	adc	r25, r25
 bc8:	61 f0       	breq	.+24     	; 0xbe2 <__fp_splitA+0x20>
 bca:	9f 3f       	cpi	r25, 0xFF	; 255
 bcc:	79 f0       	breq	.+30     	; 0xbec <__fp_splitA+0x2a>
 bce:	87 95       	ror	r24
 bd0:	08 95       	ret
 bd2:	12 16       	cp	r1, r18
 bd4:	13 06       	cpc	r1, r19
 bd6:	14 06       	cpc	r1, r20
 bd8:	55 1f       	adc	r21, r21
 bda:	f2 cf       	rjmp	.-28     	; 0xbc0 <__fp_split3+0xe>
 bdc:	46 95       	lsr	r20
 bde:	f1 df       	rcall	.-30     	; 0xbc2 <__fp_splitA>
 be0:	08 c0       	rjmp	.+16     	; 0xbf2 <__fp_splitA+0x30>
 be2:	16 16       	cp	r1, r22
 be4:	17 06       	cpc	r1, r23
 be6:	18 06       	cpc	r1, r24
 be8:	99 1f       	adc	r25, r25
 bea:	f1 cf       	rjmp	.-30     	; 0xbce <__fp_splitA+0xc>
 bec:	86 95       	lsr	r24
 bee:	71 05       	cpc	r23, r1
 bf0:	61 05       	cpc	r22, r1
 bf2:	08 94       	sec
 bf4:	08 95       	ret

00000bf6 <__fp_zero>:
 bf6:	e8 94       	clt

00000bf8 <__fp_szero>:
 bf8:	bb 27       	eor	r27, r27
 bfa:	66 27       	eor	r22, r22
 bfc:	77 27       	eor	r23, r23
 bfe:	cb 01       	movw	r24, r22
 c00:	97 f9       	bld	r25, 7
 c02:	08 95       	ret

00000c04 <__gesf2>:
 c04:	b2 df       	rcall	.-156    	; 0xb6a <__fp_cmp>
 c06:	08 f4       	brcc	.+2      	; 0xc0a <__gesf2+0x6>
 c08:	8f ef       	ldi	r24, 0xFF	; 255
 c0a:	08 95       	ret

00000c0c <__mulsf3>:
 c0c:	0b d0       	rcall	.+22     	; 0xc24 <__mulsf3x>
 c0e:	78 c0       	rjmp	.+240    	; 0xd00 <__fp_round>
 c10:	69 d0       	rcall	.+210    	; 0xce4 <__fp_pscA>
 c12:	28 f0       	brcs	.+10     	; 0xc1e <__mulsf3+0x12>
 c14:	6e d0       	rcall	.+220    	; 0xcf2 <__fp_pscB>
 c16:	18 f0       	brcs	.+6      	; 0xc1e <__mulsf3+0x12>
 c18:	95 23       	and	r25, r21
 c1a:	09 f0       	breq	.+2      	; 0xc1e <__mulsf3+0x12>
 c1c:	5a c0       	rjmp	.+180    	; 0xcd2 <__fp_inf>
 c1e:	5f c0       	rjmp	.+190    	; 0xcde <__fp_nan>
 c20:	11 24       	eor	r1, r1
 c22:	ea cf       	rjmp	.-44     	; 0xbf8 <__fp_szero>

00000c24 <__mulsf3x>:
 c24:	c6 df       	rcall	.-116    	; 0xbb2 <__fp_split3>
 c26:	a0 f3       	brcs	.-24     	; 0xc10 <__mulsf3+0x4>

00000c28 <__mulsf3_pse>:
 c28:	95 9f       	mul	r25, r21
 c2a:	d1 f3       	breq	.-12     	; 0xc20 <__mulsf3+0x14>
 c2c:	95 0f       	add	r25, r21
 c2e:	50 e0       	ldi	r21, 0x00	; 0
 c30:	55 1f       	adc	r21, r21
 c32:	62 9f       	mul	r22, r18
 c34:	f0 01       	movw	r30, r0
 c36:	72 9f       	mul	r23, r18
 c38:	bb 27       	eor	r27, r27
 c3a:	f0 0d       	add	r31, r0
 c3c:	b1 1d       	adc	r27, r1
 c3e:	63 9f       	mul	r22, r19
 c40:	aa 27       	eor	r26, r26
 c42:	f0 0d       	add	r31, r0
 c44:	b1 1d       	adc	r27, r1
 c46:	aa 1f       	adc	r26, r26
 c48:	64 9f       	mul	r22, r20
 c4a:	66 27       	eor	r22, r22
 c4c:	b0 0d       	add	r27, r0
 c4e:	a1 1d       	adc	r26, r1
 c50:	66 1f       	adc	r22, r22
 c52:	82 9f       	mul	r24, r18
 c54:	22 27       	eor	r18, r18
 c56:	b0 0d       	add	r27, r0
 c58:	a1 1d       	adc	r26, r1
 c5a:	62 1f       	adc	r22, r18
 c5c:	73 9f       	mul	r23, r19
 c5e:	b0 0d       	add	r27, r0
 c60:	a1 1d       	adc	r26, r1
 c62:	62 1f       	adc	r22, r18
 c64:	83 9f       	mul	r24, r19
 c66:	a0 0d       	add	r26, r0
 c68:	61 1d       	adc	r22, r1
 c6a:	22 1f       	adc	r18, r18
 c6c:	74 9f       	mul	r23, r20
 c6e:	33 27       	eor	r19, r19
 c70:	a0 0d       	add	r26, r0
 c72:	61 1d       	adc	r22, r1
 c74:	23 1f       	adc	r18, r19
 c76:	84 9f       	mul	r24, r20
 c78:	60 0d       	add	r22, r0
 c7a:	21 1d       	adc	r18, r1
 c7c:	82 2f       	mov	r24, r18
 c7e:	76 2f       	mov	r23, r22
 c80:	6a 2f       	mov	r22, r26
 c82:	11 24       	eor	r1, r1
 c84:	9f 57       	subi	r25, 0x7F	; 127
 c86:	50 40       	sbci	r21, 0x00	; 0
 c88:	8a f0       	brmi	.+34     	; 0xcac <__mulsf3_pse+0x84>
 c8a:	e1 f0       	breq	.+56     	; 0xcc4 <__mulsf3_pse+0x9c>
 c8c:	88 23       	and	r24, r24
 c8e:	4a f0       	brmi	.+18     	; 0xca2 <__mulsf3_pse+0x7a>
 c90:	ee 0f       	add	r30, r30
 c92:	ff 1f       	adc	r31, r31
 c94:	bb 1f       	adc	r27, r27
 c96:	66 1f       	adc	r22, r22
 c98:	77 1f       	adc	r23, r23
 c9a:	88 1f       	adc	r24, r24
 c9c:	91 50       	subi	r25, 0x01	; 1
 c9e:	50 40       	sbci	r21, 0x00	; 0
 ca0:	a9 f7       	brne	.-22     	; 0xc8c <__mulsf3_pse+0x64>
 ca2:	9e 3f       	cpi	r25, 0xFE	; 254
 ca4:	51 05       	cpc	r21, r1
 ca6:	70 f0       	brcs	.+28     	; 0xcc4 <__mulsf3_pse+0x9c>
 ca8:	14 c0       	rjmp	.+40     	; 0xcd2 <__fp_inf>
 caa:	a6 cf       	rjmp	.-180    	; 0xbf8 <__fp_szero>
 cac:	5f 3f       	cpi	r21, 0xFF	; 255
 cae:	ec f3       	brlt	.-6      	; 0xcaa <__mulsf3_pse+0x82>
 cb0:	98 3e       	cpi	r25, 0xE8	; 232
 cb2:	dc f3       	brlt	.-10     	; 0xcaa <__mulsf3_pse+0x82>
 cb4:	86 95       	lsr	r24
 cb6:	77 95       	ror	r23
 cb8:	67 95       	ror	r22
 cba:	b7 95       	ror	r27
 cbc:	f7 95       	ror	r31
 cbe:	e7 95       	ror	r30
 cc0:	9f 5f       	subi	r25, 0xFF	; 255
 cc2:	c1 f7       	brne	.-16     	; 0xcb4 <__mulsf3_pse+0x8c>
 cc4:	fe 2b       	or	r31, r30
 cc6:	88 0f       	add	r24, r24
 cc8:	91 1d       	adc	r25, r1
 cca:	96 95       	lsr	r25
 ccc:	87 95       	ror	r24
 cce:	97 f9       	bld	r25, 7
 cd0:	08 95       	ret

00000cd2 <__fp_inf>:
 cd2:	97 f9       	bld	r25, 7
 cd4:	9f 67       	ori	r25, 0x7F	; 127
 cd6:	80 e8       	ldi	r24, 0x80	; 128
 cd8:	70 e0       	ldi	r23, 0x00	; 0
 cda:	60 e0       	ldi	r22, 0x00	; 0
 cdc:	08 95       	ret

00000cde <__fp_nan>:
 cde:	9f ef       	ldi	r25, 0xFF	; 255
 ce0:	80 ec       	ldi	r24, 0xC0	; 192
 ce2:	08 95       	ret

00000ce4 <__fp_pscA>:
 ce4:	00 24       	eor	r0, r0
 ce6:	0a 94       	dec	r0
 ce8:	16 16       	cp	r1, r22
 cea:	17 06       	cpc	r1, r23
 cec:	18 06       	cpc	r1, r24
 cee:	09 06       	cpc	r0, r25
 cf0:	08 95       	ret

00000cf2 <__fp_pscB>:
 cf2:	00 24       	eor	r0, r0
 cf4:	0a 94       	dec	r0
 cf6:	12 16       	cp	r1, r18
 cf8:	13 06       	cpc	r1, r19
 cfa:	14 06       	cpc	r1, r20
 cfc:	05 06       	cpc	r0, r21
 cfe:	08 95       	ret

00000d00 <__fp_round>:
 d00:	09 2e       	mov	r0, r25
 d02:	03 94       	inc	r0
 d04:	00 0c       	add	r0, r0
 d06:	11 f4       	brne	.+4      	; 0xd0c <__fp_round+0xc>
 d08:	88 23       	and	r24, r24
 d0a:	52 f0       	brmi	.+20     	; 0xd20 <__fp_round+0x20>
 d0c:	bb 0f       	add	r27, r27
 d0e:	40 f4       	brcc	.+16     	; 0xd20 <__fp_round+0x20>
 d10:	bf 2b       	or	r27, r31
 d12:	11 f4       	brne	.+4      	; 0xd18 <__fp_round+0x18>
 d14:	60 ff       	sbrs	r22, 0
 d16:	04 c0       	rjmp	.+8      	; 0xd20 <__fp_round+0x20>
 d18:	6f 5f       	subi	r22, 0xFF	; 255
 d1a:	7f 4f       	sbci	r23, 0xFF	; 255
 d1c:	8f 4f       	sbci	r24, 0xFF	; 255
 d1e:	9f 4f       	sbci	r25, 0xFF	; 255
 d20:	08 95       	ret

00000d22 <_exit>:
 d22:	f8 94       	cli

00000d24 <__stop_program>:
 d24:	ff cf       	rjmp	.-2      	; 0xd24 <__stop_program>
