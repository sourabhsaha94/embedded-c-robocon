
bitshifting.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003f42  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800060  00800060  00003fb6  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  00003fb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000061  00000000  00000000  00003fd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000e81  00000000  00000000  00004037  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000122  00000000  00000000  00004eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000116c  00000000  00000000  00004fda  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000060  00000000  00000000  00006148  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000104  00000000  00000000  000061a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
       4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
       8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
       c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      54:	07 63       	ori	r16, 0x37	; 55
      56:	42 36       	cpi	r20, 0x62	; 98
      58:	b7 9b       	sbis	0x16, 7	; 22
      5a:	d8 a7       	std	Y+40, r29	; 0x28
      5c:	1a 39       	cpi	r17, 0x9A	; 154
      5e:	68 56       	subi	r22, 0x68	; 104
      60:	18 ae       	std	Y+56, r1	; 0x38
      62:	ba ab       	std	Y+50, r27	; 0x32
      64:	55 8c       	ldd	r5, Z+29	; 0x1d
      66:	1d 3c       	cpi	r17, 0xCD	; 205
      68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
      6a:	57 63       	ori	r21, 0x37	; 55
      6c:	bd 6d       	ori	r27, 0xDD	; 221
      6e:	ed fd       	.word	0xfded	; ????
      70:	75 3e       	cpi	r23, 0xE5	; 229
      72:	f6 17       	cp	r31, r22
      74:	72 31       	cpi	r23, 0x12	; 18
      76:	bf 00       	.word	0x00bf	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 00       	.word	0x0008	; ????
      7e:	00 00       	nop
      80:	be 92       	st	-X, r11
      82:	24 49       	sbci	r18, 0x94	; 148
      84:	12 3e       	cpi	r17, 0xE2	; 226
      86:	ab aa       	std	Y+51, r10	; 0x33
      88:	aa 2a       	or	r10, r26
      8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
      8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
      8e:	4c 3e       	cpi	r20, 0xEC	; 236
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	be ab       	std	Y+54, r27	; 0x36
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	aa 3e       	cpi	r26, 0xEA	; 234
      9a:	00 00       	nop
      9c:	00 00       	nop
      9e:	bf 00       	.word	0x00bf	; ????
      a0:	00 00       	nop
      a2:	80 3f       	cpi	r24, 0xF0	; 240
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	00 08       	sbc	r0, r0
      aa:	41 78       	andi	r20, 0x81	; 129
      ac:	d3 bb       	out	0x13, r29	; 19
      ae:	43 87       	std	Z+11, r20	; 0x0b
      b0:	d1 13       	cpse	r29, r17
      b2:	3d 19       	sub	r19, r13
      b4:	0e 3c       	cpi	r16, 0xCE	; 206
      b6:	c3 bd       	out	0x23, r28	; 35
      b8:	42 82       	std	Z+2, r4	; 0x02
      ba:	ad 2b       	or	r26, r29
      bc:	3e 68       	ori	r19, 0x8E	; 142
      be:	ec 82       	std	Y+4, r14	; 0x04
      c0:	76 be       	out	0x36, r7	; 54
      c2:	d9 8f       	std	Y+25, r29	; 0x19
      c4:	e1 a9       	ldd	r30, Z+49	; 0x31
      c6:	3e 4c       	sbci	r19, 0xCE	; 206
      c8:	80 ef       	ldi	r24, 0xF0	; 240
      ca:	ff be       	out	0x3f, r15	; 63
      cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__stack+0x71>
      ce:	ff 7f       	andi	r31, 0xFF	; 255
      d0:	3f 00       	.word	0x003f	; ????
      d2:	00 00       	nop
      d4:	00 00       	nop

000000d6 <__ctors_end>:
      d6:	11 24       	eor	r1, r1
      d8:	1f be       	out	0x3f, r1	; 63
      da:	cf e5       	ldi	r28, 0x5F	; 95
      dc:	d8 e0       	ldi	r29, 0x08	; 8
      de:	de bf       	out	0x3e, r29	; 62
      e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_clear_bss>:
      e2:	10 e0       	ldi	r17, 0x00	; 0
      e4:	a0 e6       	ldi	r26, 0x60	; 96
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
      ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
      ec:	a4 36       	cpi	r26, 0x64	; 100
      ee:	b1 07       	cpc	r27, r17
      f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
      f2:	0e 94 0d 1c 	call	0x381a	; 0x381a <main>
      f6:	0c 94 9f 1f 	jmp	0x3f3e	; 0x3f3e <_exit>

000000fa <__bad_interrupt>:
      fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <delay>:
		__ticks = (uint16_t)__tmp;
	_delay_loop_2(__ticks);
}

void delay(double seconds)
{
      fe:	df 93       	push	r29
     100:	cf 93       	push	r28
     102:	cd b7       	in	r28, 0x3d	; 61
     104:	de b7       	in	r29, 0x3e	; 62
     106:	64 97       	sbiw	r28, 0x14	; 20
     108:	0f b6       	in	r0, 0x3f	; 63
     10a:	f8 94       	cli
     10c:	de bf       	out	0x3e, r29	; 62
     10e:	0f be       	out	0x3f, r0	; 63
     110:	cd bf       	out	0x3d, r28	; 61
     112:	69 8b       	std	Y+17, r22	; 0x11
     114:	7a 8b       	std	Y+18, r23	; 0x12
     116:	8b 8b       	std	Y+19, r24	; 0x13
     118:	9c 8b       	std	Y+20, r25	; 0x14
     11a:	90 c0       	rjmp	.+288    	; 0x23c <delay+0x13e>

	int i;
	for(;seconds;seconds--)
	for(i=0;i<100;i++)
     11c:	18 8a       	std	Y+16, r1	; 0x10
     11e:	1f 86       	std	Y+15, r1	; 0x0f
     120:	77 c0       	rjmp	.+238    	; 0x210 <delay+0x112>
     122:	80 e0       	ldi	r24, 0x00	; 0
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	a0 e2       	ldi	r26, 0x20	; 32
     128:	b1 e4       	ldi	r27, 0x41	; 65
     12a:	8b 87       	std	Y+11, r24	; 0x0b
     12c:	9c 87       	std	Y+12, r25	; 0x0c
     12e:	ad 87       	std	Y+13, r26	; 0x0d
     130:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     132:	6b 85       	ldd	r22, Y+11	; 0x0b
     134:	7c 85       	ldd	r23, Y+12	; 0x0c
     136:	8d 85       	ldd	r24, Y+13	; 0x0d
     138:	9e 85       	ldd	r25, Y+14	; 0x0e
     13a:	20 e0       	ldi	r18, 0x00	; 0
     13c:	30 e0       	ldi	r19, 0x00	; 0
     13e:	4a e7       	ldi	r20, 0x7A	; 122
     140:	55 e4       	ldi	r21, 0x45	; 69
     142:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     146:	dc 01       	movw	r26, r24
     148:	cb 01       	movw	r24, r22
     14a:	8f 83       	std	Y+7, r24	; 0x07
     14c:	98 87       	std	Y+8, r25	; 0x08
     14e:	a9 87       	std	Y+9, r26	; 0x09
     150:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     152:	6f 81       	ldd	r22, Y+7	; 0x07
     154:	78 85       	ldd	r23, Y+8	; 0x08
     156:	89 85       	ldd	r24, Y+9	; 0x09
     158:	9a 85       	ldd	r25, Y+10	; 0x0a
     15a:	20 e0       	ldi	r18, 0x00	; 0
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	40 e8       	ldi	r20, 0x80	; 128
     160:	5f e3       	ldi	r21, 0x3F	; 63
     162:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     166:	88 23       	and	r24, r24
     168:	2c f4       	brge	.+10     	; 0x174 <delay+0x76>
		__ticks = 1;
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	9e 83       	std	Y+6, r25	; 0x06
     170:	8d 83       	std	Y+5, r24	; 0x05
     172:	3f c0       	rjmp	.+126    	; 0x1f2 <delay+0xf4>
	else if (__tmp > 65535)
     174:	6f 81       	ldd	r22, Y+7	; 0x07
     176:	78 85       	ldd	r23, Y+8	; 0x08
     178:	89 85       	ldd	r24, Y+9	; 0x09
     17a:	9a 85       	ldd	r25, Y+10	; 0x0a
     17c:	20 e0       	ldi	r18, 0x00	; 0
     17e:	3f ef       	ldi	r19, 0xFF	; 255
     180:	4f e7       	ldi	r20, 0x7F	; 127
     182:	57 e4       	ldi	r21, 0x47	; 71
     184:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     188:	18 16       	cp	r1, r24
     18a:	4c f5       	brge	.+82     	; 0x1de <delay+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     18c:	6b 85       	ldd	r22, Y+11	; 0x0b
     18e:	7c 85       	ldd	r23, Y+12	; 0x0c
     190:	8d 85       	ldd	r24, Y+13	; 0x0d
     192:	9e 85       	ldd	r25, Y+14	; 0x0e
     194:	20 e0       	ldi	r18, 0x00	; 0
     196:	30 e0       	ldi	r19, 0x00	; 0
     198:	40 e2       	ldi	r20, 0x20	; 32
     19a:	51 e4       	ldi	r21, 0x41	; 65
     19c:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     1a0:	dc 01       	movw	r26, r24
     1a2:	cb 01       	movw	r24, r22
     1a4:	bc 01       	movw	r22, r24
     1a6:	cd 01       	movw	r24, r26
     1a8:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     1ac:	dc 01       	movw	r26, r24
     1ae:	cb 01       	movw	r24, r22
     1b0:	9e 83       	std	Y+6, r25	; 0x06
     1b2:	8d 83       	std	Y+5, r24	; 0x05
     1b4:	0f c0       	rjmp	.+30     	; 0x1d4 <delay+0xd6>
     1b6:	80 e9       	ldi	r24, 0x90	; 144
     1b8:	91 e0       	ldi	r25, 0x01	; 1
     1ba:	9c 83       	std	Y+4, r25	; 0x04
     1bc:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1be:	8b 81       	ldd	r24, Y+3	; 0x03
     1c0:	9c 81       	ldd	r25, Y+4	; 0x04
     1c2:	01 97       	sbiw	r24, 0x01	; 1
     1c4:	f1 f7       	brne	.-4      	; 0x1c2 <delay+0xc4>
     1c6:	9c 83       	std	Y+4, r25	; 0x04
     1c8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1ca:	8d 81       	ldd	r24, Y+5	; 0x05
     1cc:	9e 81       	ldd	r25, Y+6	; 0x06
     1ce:	01 97       	sbiw	r24, 0x01	; 1
     1d0:	9e 83       	std	Y+6, r25	; 0x06
     1d2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1d4:	8d 81       	ldd	r24, Y+5	; 0x05
     1d6:	9e 81       	ldd	r25, Y+6	; 0x06
     1d8:	00 97       	sbiw	r24, 0x00	; 0
     1da:	69 f7       	brne	.-38     	; 0x1b6 <delay+0xb8>
     1dc:	14 c0       	rjmp	.+40     	; 0x206 <delay+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1de:	6f 81       	ldd	r22, Y+7	; 0x07
     1e0:	78 85       	ldd	r23, Y+8	; 0x08
     1e2:	89 85       	ldd	r24, Y+9	; 0x09
     1e4:	9a 85       	ldd	r25, Y+10	; 0x0a
     1e6:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     1ea:	dc 01       	movw	r26, r24
     1ec:	cb 01       	movw	r24, r22
     1ee:	9e 83       	std	Y+6, r25	; 0x06
     1f0:	8d 83       	std	Y+5, r24	; 0x05
     1f2:	8d 81       	ldd	r24, Y+5	; 0x05
     1f4:	9e 81       	ldd	r25, Y+6	; 0x06
     1f6:	9a 83       	std	Y+2, r25	; 0x02
     1f8:	89 83       	std	Y+1, r24	; 0x01
     1fa:	89 81       	ldd	r24, Y+1	; 0x01
     1fc:	9a 81       	ldd	r25, Y+2	; 0x02
     1fe:	01 97       	sbiw	r24, 0x01	; 1
     200:	f1 f7       	brne	.-4      	; 0x1fe <delay+0x100>
     202:	9a 83       	std	Y+2, r25	; 0x02
     204:	89 83       	std	Y+1, r24	; 0x01
void delay(double seconds)
{

	int i;
	for(;seconds;seconds--)
	for(i=0;i<100;i++)
     206:	8f 85       	ldd	r24, Y+15	; 0x0f
     208:	98 89       	ldd	r25, Y+16	; 0x10
     20a:	01 96       	adiw	r24, 0x01	; 1
     20c:	98 8b       	std	Y+16, r25	; 0x10
     20e:	8f 87       	std	Y+15, r24	; 0x0f
     210:	8f 85       	ldd	r24, Y+15	; 0x0f
     212:	98 89       	ldd	r25, Y+16	; 0x10
     214:	84 36       	cpi	r24, 0x64	; 100
     216:	91 05       	cpc	r25, r1
     218:	0c f4       	brge	.+2      	; 0x21c <delay+0x11e>
     21a:	83 cf       	rjmp	.-250    	; 0x122 <delay+0x24>

void delay(double seconds)
{

	int i;
	for(;seconds;seconds--)
     21c:	69 89       	ldd	r22, Y+17	; 0x11
     21e:	7a 89       	ldd	r23, Y+18	; 0x12
     220:	8b 89       	ldd	r24, Y+19	; 0x13
     222:	9c 89       	ldd	r25, Y+20	; 0x14
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	40 e8       	ldi	r20, 0x80	; 128
     22a:	5f e3       	ldi	r21, 0x3F	; 63
     22c:	0e 94 24 1c 	call	0x3848	; 0x3848 <__subsf3>
     230:	dc 01       	movw	r26, r24
     232:	cb 01       	movw	r24, r22
     234:	89 8b       	std	Y+17, r24	; 0x11
     236:	9a 8b       	std	Y+18, r25	; 0x12
     238:	ab 8b       	std	Y+19, r26	; 0x13
     23a:	bc 8b       	std	Y+20, r27	; 0x14
     23c:	69 89       	ldd	r22, Y+17	; 0x11
     23e:	7a 89       	ldd	r23, Y+18	; 0x12
     240:	8b 89       	ldd	r24, Y+19	; 0x13
     242:	9c 89       	ldd	r25, Y+20	; 0x14
     244:	20 e0       	ldi	r18, 0x00	; 0
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	40 e0       	ldi	r20, 0x00	; 0
     24a:	50 e0       	ldi	r21, 0x00	; 0
     24c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     250:	88 23       	and	r24, r24
     252:	09 f0       	breq	.+2      	; 0x256 <delay+0x158>
     254:	63 cf       	rjmp	.-314    	; 0x11c <delay+0x1e>
	for(i=0;i<100;i++)
		_delay_ms(10);
}
     256:	64 96       	adiw	r28, 0x14	; 20
     258:	0f b6       	in	r0, 0x3f	; 63
     25a:	f8 94       	cli
     25c:	de bf       	out	0x3e, r29	; 62
     25e:	0f be       	out	0x3f, r0	; 63
     260:	cd bf       	out	0x3d, r28	; 61
     262:	cf 91       	pop	r28
     264:	df 91       	pop	r29
     266:	08 95       	ret

00000268 <delay_10ms>:


void delay_10ms(double seconds)
{
     268:	df 93       	push	r29
     26a:	cf 93       	push	r28
     26c:	cd b7       	in	r28, 0x3d	; 61
     26e:	de b7       	in	r29, 0x3e	; 62
     270:	62 97       	sbiw	r28, 0x12	; 18
     272:	0f b6       	in	r0, 0x3f	; 63
     274:	f8 94       	cli
     276:	de bf       	out	0x3e, r29	; 62
     278:	0f be       	out	0x3f, r0	; 63
     27a:	cd bf       	out	0x3d, r28	; 61
     27c:	6f 87       	std	Y+15, r22	; 0x0f
     27e:	78 8b       	std	Y+16, r23	; 0x10
     280:	89 8b       	std	Y+17, r24	; 0x11
     282:	9a 8b       	std	Y+18, r25	; 0x12
     284:	82 c0       	rjmp	.+260    	; 0x38a <delay_10ms+0x122>

	for(;seconds;seconds--)
     286:	80 e0       	ldi	r24, 0x00	; 0
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	a0 e2       	ldi	r26, 0x20	; 32
     28c:	b1 e4       	ldi	r27, 0x41	; 65
     28e:	8b 87       	std	Y+11, r24	; 0x0b
     290:	9c 87       	std	Y+12, r25	; 0x0c
     292:	ad 87       	std	Y+13, r26	; 0x0d
     294:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     296:	6b 85       	ldd	r22, Y+11	; 0x0b
     298:	7c 85       	ldd	r23, Y+12	; 0x0c
     29a:	8d 85       	ldd	r24, Y+13	; 0x0d
     29c:	9e 85       	ldd	r25, Y+14	; 0x0e
     29e:	20 e0       	ldi	r18, 0x00	; 0
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	4a e7       	ldi	r20, 0x7A	; 122
     2a4:	55 e4       	ldi	r21, 0x45	; 69
     2a6:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     2aa:	dc 01       	movw	r26, r24
     2ac:	cb 01       	movw	r24, r22
     2ae:	8f 83       	std	Y+7, r24	; 0x07
     2b0:	98 87       	std	Y+8, r25	; 0x08
     2b2:	a9 87       	std	Y+9, r26	; 0x09
     2b4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     2b6:	6f 81       	ldd	r22, Y+7	; 0x07
     2b8:	78 85       	ldd	r23, Y+8	; 0x08
     2ba:	89 85       	ldd	r24, Y+9	; 0x09
     2bc:	9a 85       	ldd	r25, Y+10	; 0x0a
     2be:	20 e0       	ldi	r18, 0x00	; 0
     2c0:	30 e0       	ldi	r19, 0x00	; 0
     2c2:	40 e8       	ldi	r20, 0x80	; 128
     2c4:	5f e3       	ldi	r21, 0x3F	; 63
     2c6:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     2ca:	88 23       	and	r24, r24
     2cc:	2c f4       	brge	.+10     	; 0x2d8 <delay_10ms+0x70>
		__ticks = 1;
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	9e 83       	std	Y+6, r25	; 0x06
     2d4:	8d 83       	std	Y+5, r24	; 0x05
     2d6:	3f c0       	rjmp	.+126    	; 0x356 <delay_10ms+0xee>
	else if (__tmp > 65535)
     2d8:	6f 81       	ldd	r22, Y+7	; 0x07
     2da:	78 85       	ldd	r23, Y+8	; 0x08
     2dc:	89 85       	ldd	r24, Y+9	; 0x09
     2de:	9a 85       	ldd	r25, Y+10	; 0x0a
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	3f ef       	ldi	r19, 0xFF	; 255
     2e4:	4f e7       	ldi	r20, 0x7F	; 127
     2e6:	57 e4       	ldi	r21, 0x47	; 71
     2e8:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     2ec:	18 16       	cp	r1, r24
     2ee:	4c f5       	brge	.+82     	; 0x342 <delay_10ms+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2f0:	6b 85       	ldd	r22, Y+11	; 0x0b
     2f2:	7c 85       	ldd	r23, Y+12	; 0x0c
     2f4:	8d 85       	ldd	r24, Y+13	; 0x0d
     2f6:	9e 85       	ldd	r25, Y+14	; 0x0e
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	40 e2       	ldi	r20, 0x20	; 32
     2fe:	51 e4       	ldi	r21, 0x41	; 65
     300:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     304:	dc 01       	movw	r26, r24
     306:	cb 01       	movw	r24, r22
     308:	bc 01       	movw	r22, r24
     30a:	cd 01       	movw	r24, r26
     30c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     310:	dc 01       	movw	r26, r24
     312:	cb 01       	movw	r24, r22
     314:	9e 83       	std	Y+6, r25	; 0x06
     316:	8d 83       	std	Y+5, r24	; 0x05
     318:	0f c0       	rjmp	.+30     	; 0x338 <delay_10ms+0xd0>
     31a:	80 e9       	ldi	r24, 0x90	; 144
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	9c 83       	std	Y+4, r25	; 0x04
     320:	8b 83       	std	Y+3, r24	; 0x03
     322:	8b 81       	ldd	r24, Y+3	; 0x03
     324:	9c 81       	ldd	r25, Y+4	; 0x04
     326:	01 97       	sbiw	r24, 0x01	; 1
     328:	f1 f7       	brne	.-4      	; 0x326 <delay_10ms+0xbe>
     32a:	9c 83       	std	Y+4, r25	; 0x04
     32c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     32e:	8d 81       	ldd	r24, Y+5	; 0x05
     330:	9e 81       	ldd	r25, Y+6	; 0x06
     332:	01 97       	sbiw	r24, 0x01	; 1
     334:	9e 83       	std	Y+6, r25	; 0x06
     336:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     338:	8d 81       	ldd	r24, Y+5	; 0x05
     33a:	9e 81       	ldd	r25, Y+6	; 0x06
     33c:	00 97       	sbiw	r24, 0x00	; 0
     33e:	69 f7       	brne	.-38     	; 0x31a <delay_10ms+0xb2>
     340:	14 c0       	rjmp	.+40     	; 0x36a <delay_10ms+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     342:	6f 81       	ldd	r22, Y+7	; 0x07
     344:	78 85       	ldd	r23, Y+8	; 0x08
     346:	89 85       	ldd	r24, Y+9	; 0x09
     348:	9a 85       	ldd	r25, Y+10	; 0x0a
     34a:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     34e:	dc 01       	movw	r26, r24
     350:	cb 01       	movw	r24, r22
     352:	9e 83       	std	Y+6, r25	; 0x06
     354:	8d 83       	std	Y+5, r24	; 0x05
     356:	8d 81       	ldd	r24, Y+5	; 0x05
     358:	9e 81       	ldd	r25, Y+6	; 0x06
     35a:	9a 83       	std	Y+2, r25	; 0x02
     35c:	89 83       	std	Y+1, r24	; 0x01
     35e:	89 81       	ldd	r24, Y+1	; 0x01
     360:	9a 81       	ldd	r25, Y+2	; 0x02
     362:	01 97       	sbiw	r24, 0x01	; 1
     364:	f1 f7       	brne	.-4      	; 0x362 <delay_10ms+0xfa>
     366:	9a 83       	std	Y+2, r25	; 0x02
     368:	89 83       	std	Y+1, r24	; 0x01


void delay_10ms(double seconds)
{

	for(;seconds;seconds--)
     36a:	6f 85       	ldd	r22, Y+15	; 0x0f
     36c:	78 89       	ldd	r23, Y+16	; 0x10
     36e:	89 89       	ldd	r24, Y+17	; 0x11
     370:	9a 89       	ldd	r25, Y+18	; 0x12
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	40 e8       	ldi	r20, 0x80	; 128
     378:	5f e3       	ldi	r21, 0x3F	; 63
     37a:	0e 94 24 1c 	call	0x3848	; 0x3848 <__subsf3>
     37e:	dc 01       	movw	r26, r24
     380:	cb 01       	movw	r24, r22
     382:	8f 87       	std	Y+15, r24	; 0x0f
     384:	98 8b       	std	Y+16, r25	; 0x10
     386:	a9 8b       	std	Y+17, r26	; 0x11
     388:	ba 8b       	std	Y+18, r27	; 0x12
     38a:	6f 85       	ldd	r22, Y+15	; 0x0f
     38c:	78 89       	ldd	r23, Y+16	; 0x10
     38e:	89 89       	ldd	r24, Y+17	; 0x11
     390:	9a 89       	ldd	r25, Y+18	; 0x12
     392:	20 e0       	ldi	r18, 0x00	; 0
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	40 e0       	ldi	r20, 0x00	; 0
     398:	50 e0       	ldi	r21, 0x00	; 0
     39a:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     39e:	88 23       	and	r24, r24
     3a0:	09 f0       	breq	.+2      	; 0x3a4 <delay_10ms+0x13c>
     3a2:	71 cf       	rjmp	.-286    	; 0x286 <delay_10ms+0x1e>
	_delay_ms(10);
}
     3a4:	62 96       	adiw	r28, 0x12	; 18
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	f8 94       	cli
     3aa:	de bf       	out	0x3e, r29	; 62
     3ac:	0f be       	out	0x3f, r0	; 63
     3ae:	cd bf       	out	0x3d, r28	; 61
     3b0:	cf 91       	pop	r28
     3b2:	df 91       	pop	r29
     3b4:	08 95       	ret

000003b6 <delay_10us>:

void delay_10us(int seconds)
{
     3b6:	df 93       	push	r29
     3b8:	cf 93       	push	r28
     3ba:	cd b7       	in	r28, 0x3d	; 61
     3bc:	de b7       	in	r29, 0x3e	; 62
     3be:	6a 97       	sbiw	r28, 0x1a	; 26
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	de bf       	out	0x3e, r29	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	cd bf       	out	0x3d, r28	; 61
     3ca:	9a 8f       	std	Y+26, r25	; 0x1a
     3cc:	89 8f       	std	Y+25, r24	; 0x19
     3ce:	c3 c0       	rjmp	.+390    	; 0x556 <delay_10us+0x1a0>

	for(;seconds;seconds--)
     3d0:	80 e0       	ldi	r24, 0x00	; 0
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b1 e4       	ldi	r27, 0x41	; 65
     3d8:	8d 8b       	std	Y+21, r24	; 0x15
     3da:	9e 8b       	std	Y+22, r25	; 0x16
     3dc:	af 8b       	std	Y+23, r26	; 0x17
     3de:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     3e0:	6d 89       	ldd	r22, Y+21	; 0x15
     3e2:	7e 89       	ldd	r23, Y+22	; 0x16
     3e4:	8f 89       	ldd	r24, Y+23	; 0x17
     3e6:	98 8d       	ldd	r25, Y+24	; 0x18
     3e8:	2b ea       	ldi	r18, 0xAB	; 171
     3ea:	3a ea       	ldi	r19, 0xAA	; 170
     3ec:	4a ea       	ldi	r20, 0xAA	; 170
     3ee:	50 e4       	ldi	r21, 0x40	; 64
     3f0:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     3f4:	dc 01       	movw	r26, r24
     3f6:	cb 01       	movw	r24, r22
     3f8:	89 8b       	std	Y+17, r24	; 0x11
     3fa:	9a 8b       	std	Y+18, r25	; 0x12
     3fc:	ab 8b       	std	Y+19, r26	; 0x13
     3fe:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     400:	69 89       	ldd	r22, Y+17	; 0x11
     402:	7a 89       	ldd	r23, Y+18	; 0x12
     404:	8b 89       	ldd	r24, Y+19	; 0x13
     406:	9c 89       	ldd	r25, Y+20	; 0x14
     408:	20 e0       	ldi	r18, 0x00	; 0
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	40 e8       	ldi	r20, 0x80	; 128
     40e:	5f e3       	ldi	r21, 0x3F	; 63
     410:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     414:	88 23       	and	r24, r24
     416:	1c f4       	brge	.+6      	; 0x41e <delay_10us+0x68>
		__ticks = 1;
     418:	81 e0       	ldi	r24, 0x01	; 1
     41a:	88 8b       	std	Y+16, r24	; 0x10
     41c:	91 c0       	rjmp	.+290    	; 0x540 <delay_10us+0x18a>
	else if (__tmp > 255)
     41e:	69 89       	ldd	r22, Y+17	; 0x11
     420:	7a 89       	ldd	r23, Y+18	; 0x12
     422:	8b 89       	ldd	r24, Y+19	; 0x13
     424:	9c 89       	ldd	r25, Y+20	; 0x14
     426:	20 e0       	ldi	r18, 0x00	; 0
     428:	30 e0       	ldi	r19, 0x00	; 0
     42a:	4f e7       	ldi	r20, 0x7F	; 127
     42c:	53 e4       	ldi	r21, 0x43	; 67
     42e:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     432:	18 16       	cp	r1, r24
     434:	0c f0       	brlt	.+2      	; 0x438 <delay_10us+0x82>
     436:	7b c0       	rjmp	.+246    	; 0x52e <delay_10us+0x178>
	{
		_delay_ms(__us / 1000.0);
     438:	6d 89       	ldd	r22, Y+21	; 0x15
     43a:	7e 89       	ldd	r23, Y+22	; 0x16
     43c:	8f 89       	ldd	r24, Y+23	; 0x17
     43e:	98 8d       	ldd	r25, Y+24	; 0x18
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	4a e7       	ldi	r20, 0x7A	; 122
     446:	54 e4       	ldi	r21, 0x44	; 68
     448:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
     44c:	dc 01       	movw	r26, r24
     44e:	cb 01       	movw	r24, r22
     450:	8c 87       	std	Y+12, r24	; 0x0c
     452:	9d 87       	std	Y+13, r25	; 0x0d
     454:	ae 87       	std	Y+14, r26	; 0x0e
     456:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     458:	6c 85       	ldd	r22, Y+12	; 0x0c
     45a:	7d 85       	ldd	r23, Y+13	; 0x0d
     45c:	8e 85       	ldd	r24, Y+14	; 0x0e
     45e:	9f 85       	ldd	r25, Y+15	; 0x0f
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	4a e7       	ldi	r20, 0x7A	; 122
     466:	55 e4       	ldi	r21, 0x45	; 69
     468:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     46c:	dc 01       	movw	r26, r24
     46e:	cb 01       	movw	r24, r22
     470:	88 87       	std	Y+8, r24	; 0x08
     472:	99 87       	std	Y+9, r25	; 0x09
     474:	aa 87       	std	Y+10, r26	; 0x0a
     476:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     478:	68 85       	ldd	r22, Y+8	; 0x08
     47a:	79 85       	ldd	r23, Y+9	; 0x09
     47c:	8a 85       	ldd	r24, Y+10	; 0x0a
     47e:	9b 85       	ldd	r25, Y+11	; 0x0b
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	40 e8       	ldi	r20, 0x80	; 128
     486:	5f e3       	ldi	r21, 0x3F	; 63
     488:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     48c:	88 23       	and	r24, r24
     48e:	2c f4       	brge	.+10     	; 0x49a <delay_10us+0xe4>
		__ticks = 1;
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	9f 83       	std	Y+7, r25	; 0x07
     496:	8e 83       	std	Y+6, r24	; 0x06
     498:	3f c0       	rjmp	.+126    	; 0x518 <delay_10us+0x162>
	else if (__tmp > 65535)
     49a:	68 85       	ldd	r22, Y+8	; 0x08
     49c:	79 85       	ldd	r23, Y+9	; 0x09
     49e:	8a 85       	ldd	r24, Y+10	; 0x0a
     4a0:	9b 85       	ldd	r25, Y+11	; 0x0b
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	3f ef       	ldi	r19, 0xFF	; 255
     4a6:	4f e7       	ldi	r20, 0x7F	; 127
     4a8:	57 e4       	ldi	r21, 0x47	; 71
     4aa:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     4ae:	18 16       	cp	r1, r24
     4b0:	4c f5       	brge	.+82     	; 0x504 <delay_10us+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4b2:	6c 85       	ldd	r22, Y+12	; 0x0c
     4b4:	7d 85       	ldd	r23, Y+13	; 0x0d
     4b6:	8e 85       	ldd	r24, Y+14	; 0x0e
     4b8:	9f 85       	ldd	r25, Y+15	; 0x0f
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	40 e2       	ldi	r20, 0x20	; 32
     4c0:	51 e4       	ldi	r21, 0x41	; 65
     4c2:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     4c6:	dc 01       	movw	r26, r24
     4c8:	cb 01       	movw	r24, r22
     4ca:	bc 01       	movw	r22, r24
     4cc:	cd 01       	movw	r24, r26
     4ce:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     4d2:	dc 01       	movw	r26, r24
     4d4:	cb 01       	movw	r24, r22
     4d6:	9f 83       	std	Y+7, r25	; 0x07
     4d8:	8e 83       	std	Y+6, r24	; 0x06
     4da:	0f c0       	rjmp	.+30     	; 0x4fa <delay_10us+0x144>
     4dc:	80 e9       	ldi	r24, 0x90	; 144
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	9d 83       	std	Y+5, r25	; 0x05
     4e2:	8c 83       	std	Y+4, r24	; 0x04
     4e4:	8c 81       	ldd	r24, Y+4	; 0x04
     4e6:	9d 81       	ldd	r25, Y+5	; 0x05
     4e8:	01 97       	sbiw	r24, 0x01	; 1
     4ea:	f1 f7       	brne	.-4      	; 0x4e8 <delay_10us+0x132>
     4ec:	9d 83       	std	Y+5, r25	; 0x05
     4ee:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4f0:	8e 81       	ldd	r24, Y+6	; 0x06
     4f2:	9f 81       	ldd	r25, Y+7	; 0x07
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	9f 83       	std	Y+7, r25	; 0x07
     4f8:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4fa:	8e 81       	ldd	r24, Y+6	; 0x06
     4fc:	9f 81       	ldd	r25, Y+7	; 0x07
     4fe:	00 97       	sbiw	r24, 0x00	; 0
     500:	69 f7       	brne	.-38     	; 0x4dc <delay_10us+0x126>
     502:	24 c0       	rjmp	.+72     	; 0x54c <delay_10us+0x196>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     504:	68 85       	ldd	r22, Y+8	; 0x08
     506:	79 85       	ldd	r23, Y+9	; 0x09
     508:	8a 85       	ldd	r24, Y+10	; 0x0a
     50a:	9b 85       	ldd	r25, Y+11	; 0x0b
     50c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     510:	dc 01       	movw	r26, r24
     512:	cb 01       	movw	r24, r22
     514:	9f 83       	std	Y+7, r25	; 0x07
     516:	8e 83       	std	Y+6, r24	; 0x06
     518:	8e 81       	ldd	r24, Y+6	; 0x06
     51a:	9f 81       	ldd	r25, Y+7	; 0x07
     51c:	9b 83       	std	Y+3, r25	; 0x03
     51e:	8a 83       	std	Y+2, r24	; 0x02
     520:	8a 81       	ldd	r24, Y+2	; 0x02
     522:	9b 81       	ldd	r25, Y+3	; 0x03
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <delay_10us+0x16e>
     528:	9b 83       	std	Y+3, r25	; 0x03
     52a:	8a 83       	std	Y+2, r24	; 0x02
     52c:	0f c0       	rjmp	.+30     	; 0x54c <delay_10us+0x196>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     52e:	69 89       	ldd	r22, Y+17	; 0x11
     530:	7a 89       	ldd	r23, Y+18	; 0x12
     532:	8b 89       	ldd	r24, Y+19	; 0x13
     534:	9c 89       	ldd	r25, Y+20	; 0x14
     536:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     53a:	dc 01       	movw	r26, r24
     53c:	cb 01       	movw	r24, r22
     53e:	88 8b       	std	Y+16, r24	; 0x10
     540:	88 89       	ldd	r24, Y+16	; 0x10
     542:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     544:	89 81       	ldd	r24, Y+1	; 0x01
     546:	8a 95       	dec	r24
     548:	f1 f7       	brne	.-4      	; 0x546 <delay_10us+0x190>
     54a:	89 83       	std	Y+1, r24	; 0x01
}

void delay_10us(int seconds)
{

	for(;seconds;seconds--)
     54c:	89 8d       	ldd	r24, Y+25	; 0x19
     54e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	9a 8f       	std	Y+26, r25	; 0x1a
     554:	89 8f       	std	Y+25, r24	; 0x19
     556:	89 8d       	ldd	r24, Y+25	; 0x19
     558:	9a 8d       	ldd	r25, Y+26	; 0x1a
     55a:	00 97       	sbiw	r24, 0x00	; 0
     55c:	09 f0       	breq	.+2      	; 0x560 <delay_10us+0x1aa>
     55e:	38 cf       	rjmp	.-400    	; 0x3d0 <delay_10us+0x1a>
	_delay_us(10);
}
     560:	6a 96       	adiw	r28, 0x1a	; 26
     562:	0f b6       	in	r0, 0x3f	; 63
     564:	f8 94       	cli
     566:	de bf       	out	0x3e, r29	; 62
     568:	0f be       	out	0x3f, r0	; 63
     56a:	cd bf       	out	0x3d, r28	; 61
     56c:	cf 91       	pop	r28
     56e:	df 91       	pop	r29
     570:	08 95       	ret

00000572 <read>:
int i;
unsigned char a;
unsigned char data;

void read()
{
     572:	af 92       	push	r10
     574:	bf 92       	push	r11
     576:	cf 92       	push	r12
     578:	df 92       	push	r13
     57a:	ef 92       	push	r14
     57c:	ff 92       	push	r15
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	df 93       	push	r29
     584:	cf 93       	push	r28
     586:	cd b7       	in	r28, 0x3d	; 61
     588:	de b7       	in	r29, 0x3e	; 62
     58a:	c8 5f       	subi	r28, 0xF8	; 248
     58c:	d1 40       	sbci	r29, 0x01	; 1
     58e:	0f b6       	in	r0, 0x3f	; 63
     590:	f8 94       	cli
     592:	de bf       	out	0x3e, r29	; 62
     594:	0f be       	out	0x3f, r0	; 63
     596:	cd bf       	out	0x3d, r28	; 61
	
	PORTC |= 0x01;		//clock high
     598:	a5 e3       	ldi	r26, 0x35	; 53
     59a:	b0 e0       	ldi	r27, 0x00	; 0
     59c:	e5 e3       	ldi	r30, 0x35	; 53
     59e:	f0 e0       	ldi	r31, 0x00	; 0
     5a0:	80 81       	ld	r24, Z
     5a2:	81 60       	ori	r24, 0x01	; 1
     5a4:	8c 93       	st	X, r24
	PORTC |= 0x10;		//att high
     5a6:	a5 e3       	ldi	r26, 0x35	; 53
     5a8:	b0 e0       	ldi	r27, 0x00	; 0
     5aa:	e5 e3       	ldi	r30, 0x35	; 53
     5ac:	f0 e0       	ldi	r31, 0x00	; 0
     5ae:	80 81       	ld	r24, Z
     5b0:	80 61       	ori	r24, 0x10	; 16
     5b2:	8c 93       	st	X, r24
     5b4:	fe 01       	movw	r30, r28
     5b6:	eb 50       	subi	r30, 0x0B	; 11
     5b8:	fe 4f       	sbci	r31, 0xFE	; 254
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	a0 ea       	ldi	r26, 0xA0	; 160
     5c0:	b0 e4       	ldi	r27, 0x40	; 64
     5c2:	80 83       	st	Z, r24
     5c4:	91 83       	std	Z+1, r25	; 0x01
     5c6:	a2 83       	std	Z+2, r26	; 0x02
     5c8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     5ca:	8e 01       	movw	r16, r28
     5cc:	0f 50       	subi	r16, 0x0F	; 15
     5ce:	1e 4f       	sbci	r17, 0xFE	; 254
     5d0:	fe 01       	movw	r30, r28
     5d2:	eb 50       	subi	r30, 0x0B	; 11
     5d4:	fe 4f       	sbci	r31, 0xFE	; 254
     5d6:	60 81       	ld	r22, Z
     5d8:	71 81       	ldd	r23, Z+1	; 0x01
     5da:	82 81       	ldd	r24, Z+2	; 0x02
     5dc:	93 81       	ldd	r25, Z+3	; 0x03
     5de:	2b ea       	ldi	r18, 0xAB	; 171
     5e0:	3a ea       	ldi	r19, 0xAA	; 170
     5e2:	4a ea       	ldi	r20, 0xAA	; 170
     5e4:	50 e4       	ldi	r21, 0x40	; 64
     5e6:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     5ea:	dc 01       	movw	r26, r24
     5ec:	cb 01       	movw	r24, r22
     5ee:	f8 01       	movw	r30, r16
     5f0:	80 83       	st	Z, r24
     5f2:	91 83       	std	Z+1, r25	; 0x01
     5f4:	a2 83       	std	Z+2, r26	; 0x02
     5f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5f8:	fe 01       	movw	r30, r28
     5fa:	ef 50       	subi	r30, 0x0F	; 15
     5fc:	fe 4f       	sbci	r31, 0xFE	; 254
     5fe:	60 81       	ld	r22, Z
     600:	71 81       	ldd	r23, Z+1	; 0x01
     602:	82 81       	ldd	r24, Z+2	; 0x02
     604:	93 81       	ldd	r25, Z+3	; 0x03
     606:	20 e0       	ldi	r18, 0x00	; 0
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	40 e8       	ldi	r20, 0x80	; 128
     60c:	5f e3       	ldi	r21, 0x3F	; 63
     60e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     612:	88 23       	and	r24, r24
     614:	34 f4       	brge	.+12     	; 0x622 <read+0xb0>
		__ticks = 1;
     616:	fe 01       	movw	r30, r28
     618:	e0 51       	subi	r30, 0x10	; 16
     61a:	fe 4f       	sbci	r31, 0xFE	; 254
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	80 83       	st	Z, r24
     620:	e0 c0       	rjmp	.+448    	; 0x7e2 <read+0x270>
	else if (__tmp > 255)
     622:	fe 01       	movw	r30, r28
     624:	ef 50       	subi	r30, 0x0F	; 15
     626:	fe 4f       	sbci	r31, 0xFE	; 254
     628:	60 81       	ld	r22, Z
     62a:	71 81       	ldd	r23, Z+1	; 0x01
     62c:	82 81       	ldd	r24, Z+2	; 0x02
     62e:	93 81       	ldd	r25, Z+3	; 0x03
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	4f e7       	ldi	r20, 0x7F	; 127
     636:	53 e4       	ldi	r21, 0x43	; 67
     638:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     63c:	18 16       	cp	r1, r24
     63e:	0c f0       	brlt	.+2      	; 0x642 <read+0xd0>
     640:	c0 c0       	rjmp	.+384    	; 0x7c2 <read+0x250>
	{
		_delay_ms(__us / 1000.0);
     642:	fe 01       	movw	r30, r28
     644:	eb 50       	subi	r30, 0x0B	; 11
     646:	fe 4f       	sbci	r31, 0xFE	; 254
     648:	60 81       	ld	r22, Z
     64a:	71 81       	ldd	r23, Z+1	; 0x01
     64c:	82 81       	ldd	r24, Z+2	; 0x02
     64e:	93 81       	ldd	r25, Z+3	; 0x03
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	4a e7       	ldi	r20, 0x7A	; 122
     656:	54 e4       	ldi	r21, 0x44	; 68
     658:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
     65c:	dc 01       	movw	r26, r24
     65e:	cb 01       	movw	r24, r22
     660:	fe 01       	movw	r30, r28
     662:	e4 51       	subi	r30, 0x14	; 20
     664:	fe 4f       	sbci	r31, 0xFE	; 254
     666:	80 83       	st	Z, r24
     668:	91 83       	std	Z+1, r25	; 0x01
     66a:	a2 83       	std	Z+2, r26	; 0x02
     66c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     66e:	8e 01       	movw	r16, r28
     670:	08 51       	subi	r16, 0x18	; 24
     672:	1e 4f       	sbci	r17, 0xFE	; 254
     674:	fe 01       	movw	r30, r28
     676:	e4 51       	subi	r30, 0x14	; 20
     678:	fe 4f       	sbci	r31, 0xFE	; 254
     67a:	60 81       	ld	r22, Z
     67c:	71 81       	ldd	r23, Z+1	; 0x01
     67e:	82 81       	ldd	r24, Z+2	; 0x02
     680:	93 81       	ldd	r25, Z+3	; 0x03
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	4a e7       	ldi	r20, 0x7A	; 122
     688:	55 e4       	ldi	r21, 0x45	; 69
     68a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     68e:	dc 01       	movw	r26, r24
     690:	cb 01       	movw	r24, r22
     692:	f8 01       	movw	r30, r16
     694:	80 83       	st	Z, r24
     696:	91 83       	std	Z+1, r25	; 0x01
     698:	a2 83       	std	Z+2, r26	; 0x02
     69a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     69c:	fe 01       	movw	r30, r28
     69e:	e8 51       	subi	r30, 0x18	; 24
     6a0:	fe 4f       	sbci	r31, 0xFE	; 254
     6a2:	60 81       	ld	r22, Z
     6a4:	71 81       	ldd	r23, Z+1	; 0x01
     6a6:	82 81       	ldd	r24, Z+2	; 0x02
     6a8:	93 81       	ldd	r25, Z+3	; 0x03
     6aa:	20 e0       	ldi	r18, 0x00	; 0
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	40 e8       	ldi	r20, 0x80	; 128
     6b0:	5f e3       	ldi	r21, 0x3F	; 63
     6b2:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     6b6:	88 23       	and	r24, r24
     6b8:	44 f4       	brge	.+16     	; 0x6ca <read+0x158>
		__ticks = 1;
     6ba:	fe 01       	movw	r30, r28
     6bc:	ea 51       	subi	r30, 0x1A	; 26
     6be:	fe 4f       	sbci	r31, 0xFE	; 254
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	91 83       	std	Z+1, r25	; 0x01
     6c6:	80 83       	st	Z, r24
     6c8:	64 c0       	rjmp	.+200    	; 0x792 <read+0x220>
	else if (__tmp > 65535)
     6ca:	fe 01       	movw	r30, r28
     6cc:	e8 51       	subi	r30, 0x18	; 24
     6ce:	fe 4f       	sbci	r31, 0xFE	; 254
     6d0:	60 81       	ld	r22, Z
     6d2:	71 81       	ldd	r23, Z+1	; 0x01
     6d4:	82 81       	ldd	r24, Z+2	; 0x02
     6d6:	93 81       	ldd	r25, Z+3	; 0x03
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	3f ef       	ldi	r19, 0xFF	; 255
     6dc:	4f e7       	ldi	r20, 0x7F	; 127
     6de:	57 e4       	ldi	r21, 0x47	; 71
     6e0:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     6e4:	18 16       	cp	r1, r24
     6e6:	0c f0       	brlt	.+2      	; 0x6ea <read+0x178>
     6e8:	43 c0       	rjmp	.+134    	; 0x770 <read+0x1fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6ea:	fe 01       	movw	r30, r28
     6ec:	e4 51       	subi	r30, 0x14	; 20
     6ee:	fe 4f       	sbci	r31, 0xFE	; 254
     6f0:	60 81       	ld	r22, Z
     6f2:	71 81       	ldd	r23, Z+1	; 0x01
     6f4:	82 81       	ldd	r24, Z+2	; 0x02
     6f6:	93 81       	ldd	r25, Z+3	; 0x03
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e2       	ldi	r20, 0x20	; 32
     6fe:	51 e4       	ldi	r21, 0x41	; 65
     700:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     704:	dc 01       	movw	r26, r24
     706:	cb 01       	movw	r24, r22
     708:	8e 01       	movw	r16, r28
     70a:	0a 51       	subi	r16, 0x1A	; 26
     70c:	1e 4f       	sbci	r17, 0xFE	; 254
     70e:	bc 01       	movw	r22, r24
     710:	cd 01       	movw	r24, r26
     712:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     716:	dc 01       	movw	r26, r24
     718:	cb 01       	movw	r24, r22
     71a:	f8 01       	movw	r30, r16
     71c:	91 83       	std	Z+1, r25	; 0x01
     71e:	80 83       	st	Z, r24
     720:	1f c0       	rjmp	.+62     	; 0x760 <read+0x1ee>
     722:	fe 01       	movw	r30, r28
     724:	ec 51       	subi	r30, 0x1C	; 28
     726:	fe 4f       	sbci	r31, 0xFE	; 254
     728:	80 e9       	ldi	r24, 0x90	; 144
     72a:	91 e0       	ldi	r25, 0x01	; 1
     72c:	91 83       	std	Z+1, r25	; 0x01
     72e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     730:	fe 01       	movw	r30, r28
     732:	ec 51       	subi	r30, 0x1C	; 28
     734:	fe 4f       	sbci	r31, 0xFE	; 254
     736:	80 81       	ld	r24, Z
     738:	91 81       	ldd	r25, Z+1	; 0x01
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	f1 f7       	brne	.-4      	; 0x73a <read+0x1c8>
     73e:	fe 01       	movw	r30, r28
     740:	ec 51       	subi	r30, 0x1C	; 28
     742:	fe 4f       	sbci	r31, 0xFE	; 254
     744:	91 83       	std	Z+1, r25	; 0x01
     746:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     748:	de 01       	movw	r26, r28
     74a:	aa 51       	subi	r26, 0x1A	; 26
     74c:	be 4f       	sbci	r27, 0xFE	; 254
     74e:	fe 01       	movw	r30, r28
     750:	ea 51       	subi	r30, 0x1A	; 26
     752:	fe 4f       	sbci	r31, 0xFE	; 254
     754:	80 81       	ld	r24, Z
     756:	91 81       	ldd	r25, Z+1	; 0x01
     758:	01 97       	sbiw	r24, 0x01	; 1
     75a:	11 96       	adiw	r26, 0x01	; 1
     75c:	9c 93       	st	X, r25
     75e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     760:	fe 01       	movw	r30, r28
     762:	ea 51       	subi	r30, 0x1A	; 26
     764:	fe 4f       	sbci	r31, 0xFE	; 254
     766:	80 81       	ld	r24, Z
     768:	91 81       	ldd	r25, Z+1	; 0x01
     76a:	00 97       	sbiw	r24, 0x00	; 0
     76c:	d1 f6       	brne	.-76     	; 0x722 <read+0x1b0>
     76e:	4b c0       	rjmp	.+150    	; 0x806 <read+0x294>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     770:	8e 01       	movw	r16, r28
     772:	0a 51       	subi	r16, 0x1A	; 26
     774:	1e 4f       	sbci	r17, 0xFE	; 254
     776:	fe 01       	movw	r30, r28
     778:	e8 51       	subi	r30, 0x18	; 24
     77a:	fe 4f       	sbci	r31, 0xFE	; 254
     77c:	60 81       	ld	r22, Z
     77e:	71 81       	ldd	r23, Z+1	; 0x01
     780:	82 81       	ldd	r24, Z+2	; 0x02
     782:	93 81       	ldd	r25, Z+3	; 0x03
     784:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     788:	dc 01       	movw	r26, r24
     78a:	cb 01       	movw	r24, r22
     78c:	f8 01       	movw	r30, r16
     78e:	91 83       	std	Z+1, r25	; 0x01
     790:	80 83       	st	Z, r24
     792:	de 01       	movw	r26, r28
     794:	ae 51       	subi	r26, 0x1E	; 30
     796:	be 4f       	sbci	r27, 0xFE	; 254
     798:	fe 01       	movw	r30, r28
     79a:	ea 51       	subi	r30, 0x1A	; 26
     79c:	fe 4f       	sbci	r31, 0xFE	; 254
     79e:	80 81       	ld	r24, Z
     7a0:	91 81       	ldd	r25, Z+1	; 0x01
     7a2:	11 96       	adiw	r26, 0x01	; 1
     7a4:	9c 93       	st	X, r25
     7a6:	8e 93       	st	-X, r24
     7a8:	fe 01       	movw	r30, r28
     7aa:	ee 51       	subi	r30, 0x1E	; 30
     7ac:	fe 4f       	sbci	r31, 0xFE	; 254
     7ae:	80 81       	ld	r24, Z
     7b0:	91 81       	ldd	r25, Z+1	; 0x01
     7b2:	01 97       	sbiw	r24, 0x01	; 1
     7b4:	f1 f7       	brne	.-4      	; 0x7b2 <read+0x240>
     7b6:	fe 01       	movw	r30, r28
     7b8:	ee 51       	subi	r30, 0x1E	; 30
     7ba:	fe 4f       	sbci	r31, 0xFE	; 254
     7bc:	91 83       	std	Z+1, r25	; 0x01
     7be:	80 83       	st	Z, r24
     7c0:	22 c0       	rjmp	.+68     	; 0x806 <read+0x294>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     7c2:	8e 01       	movw	r16, r28
     7c4:	00 51       	subi	r16, 0x10	; 16
     7c6:	1e 4f       	sbci	r17, 0xFE	; 254
     7c8:	fe 01       	movw	r30, r28
     7ca:	ef 50       	subi	r30, 0x0F	; 15
     7cc:	fe 4f       	sbci	r31, 0xFE	; 254
     7ce:	60 81       	ld	r22, Z
     7d0:	71 81       	ldd	r23, Z+1	; 0x01
     7d2:	82 81       	ldd	r24, Z+2	; 0x02
     7d4:	93 81       	ldd	r25, Z+3	; 0x03
     7d6:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     7da:	dc 01       	movw	r26, r24
     7dc:	cb 01       	movw	r24, r22
     7de:	f8 01       	movw	r30, r16
     7e0:	80 83       	st	Z, r24
     7e2:	de 01       	movw	r26, r28
     7e4:	af 51       	subi	r26, 0x1F	; 31
     7e6:	be 4f       	sbci	r27, 0xFE	; 254
     7e8:	fe 01       	movw	r30, r28
     7ea:	e0 51       	subi	r30, 0x10	; 16
     7ec:	fe 4f       	sbci	r31, 0xFE	; 254
     7ee:	80 81       	ld	r24, Z
     7f0:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     7f2:	fe 01       	movw	r30, r28
     7f4:	ef 51       	subi	r30, 0x1F	; 31
     7f6:	fe 4f       	sbci	r31, 0xFE	; 254
     7f8:	80 81       	ld	r24, Z
     7fa:	8a 95       	dec	r24
     7fc:	f1 f7       	brne	.-4      	; 0x7fa <read+0x288>
     7fe:	fe 01       	movw	r30, r28
     800:	ef 51       	subi	r30, 0x1F	; 31
     802:	fe 4f       	sbci	r31, 0xFE	; 254
     804:	80 83       	st	Z, r24
	
	//BYTE1
	_delay_us(5);
	PORTC &= 0xEF;		//att low
     806:	a5 e3       	ldi	r26, 0x35	; 53
     808:	b0 e0       	ldi	r27, 0x00	; 0
     80a:	e5 e3       	ldi	r30, 0x35	; 53
     80c:	f0 e0       	ldi	r31, 0x00	; 0
     80e:	80 81       	ld	r24, Z
     810:	8f 7e       	andi	r24, 0xEF	; 239
     812:	8c 93       	st	X, r24
	
	PORTC |= 0x04;		//cmd high
     814:	a5 e3       	ldi	r26, 0x35	; 53
     816:	b0 e0       	ldi	r27, 0x00	; 0
     818:	e5 e3       	ldi	r30, 0x35	; 53
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	80 81       	ld	r24, Z
     81e:	84 60       	ori	r24, 0x04	; 4
     820:	8c 93       	st	X, r24
	
	PORTC &= 0xFE;		//clock low
     822:	a5 e3       	ldi	r26, 0x35	; 53
     824:	b0 e0       	ldi	r27, 0x00	; 0
     826:	e5 e3       	ldi	r30, 0x35	; 53
     828:	f0 e0       	ldi	r31, 0x00	; 0
     82a:	80 81       	ld	r24, Z
     82c:	8e 7f       	andi	r24, 0xFE	; 254
     82e:	8c 93       	st	X, r24
     830:	fe 01       	movw	r30, r28
     832:	e3 52       	subi	r30, 0x23	; 35
     834:	fe 4f       	sbci	r31, 0xFE	; 254
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	a0 ea       	ldi	r26, 0xA0	; 160
     83c:	b0 e4       	ldi	r27, 0x40	; 64
     83e:	80 83       	st	Z, r24
     840:	91 83       	std	Z+1, r25	; 0x01
     842:	a2 83       	std	Z+2, r26	; 0x02
     844:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     846:	8e 01       	movw	r16, r28
     848:	07 52       	subi	r16, 0x27	; 39
     84a:	1e 4f       	sbci	r17, 0xFE	; 254
     84c:	fe 01       	movw	r30, r28
     84e:	e3 52       	subi	r30, 0x23	; 35
     850:	fe 4f       	sbci	r31, 0xFE	; 254
     852:	60 81       	ld	r22, Z
     854:	71 81       	ldd	r23, Z+1	; 0x01
     856:	82 81       	ldd	r24, Z+2	; 0x02
     858:	93 81       	ldd	r25, Z+3	; 0x03
     85a:	2b ea       	ldi	r18, 0xAB	; 171
     85c:	3a ea       	ldi	r19, 0xAA	; 170
     85e:	4a ea       	ldi	r20, 0xAA	; 170
     860:	50 e4       	ldi	r21, 0x40	; 64
     862:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     866:	dc 01       	movw	r26, r24
     868:	cb 01       	movw	r24, r22
     86a:	f8 01       	movw	r30, r16
     86c:	80 83       	st	Z, r24
     86e:	91 83       	std	Z+1, r25	; 0x01
     870:	a2 83       	std	Z+2, r26	; 0x02
     872:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     874:	fe 01       	movw	r30, r28
     876:	e7 52       	subi	r30, 0x27	; 39
     878:	fe 4f       	sbci	r31, 0xFE	; 254
     87a:	60 81       	ld	r22, Z
     87c:	71 81       	ldd	r23, Z+1	; 0x01
     87e:	82 81       	ldd	r24, Z+2	; 0x02
     880:	93 81       	ldd	r25, Z+3	; 0x03
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	40 e8       	ldi	r20, 0x80	; 128
     888:	5f e3       	ldi	r21, 0x3F	; 63
     88a:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     88e:	88 23       	and	r24, r24
     890:	34 f4       	brge	.+12     	; 0x89e <__stack+0x3f>
		__ticks = 1;
     892:	fe 01       	movw	r30, r28
     894:	e8 52       	subi	r30, 0x28	; 40
     896:	fe 4f       	sbci	r31, 0xFE	; 254
     898:	81 e0       	ldi	r24, 0x01	; 1
     89a:	80 83       	st	Z, r24
     89c:	e0 c0       	rjmp	.+448    	; 0xa5e <__stack+0x1ff>
	else if (__tmp > 255)
     89e:	fe 01       	movw	r30, r28
     8a0:	e7 52       	subi	r30, 0x27	; 39
     8a2:	fe 4f       	sbci	r31, 0xFE	; 254
     8a4:	60 81       	ld	r22, Z
     8a6:	71 81       	ldd	r23, Z+1	; 0x01
     8a8:	82 81       	ldd	r24, Z+2	; 0x02
     8aa:	93 81       	ldd	r25, Z+3	; 0x03
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	4f e7       	ldi	r20, 0x7F	; 127
     8b2:	53 e4       	ldi	r21, 0x43	; 67
     8b4:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     8b8:	18 16       	cp	r1, r24
     8ba:	0c f0       	brlt	.+2      	; 0x8be <__stack+0x5f>
     8bc:	c0 c0       	rjmp	.+384    	; 0xa3e <__stack+0x1df>
	{
		_delay_ms(__us / 1000.0);
     8be:	fe 01       	movw	r30, r28
     8c0:	e3 52       	subi	r30, 0x23	; 35
     8c2:	fe 4f       	sbci	r31, 0xFE	; 254
     8c4:	60 81       	ld	r22, Z
     8c6:	71 81       	ldd	r23, Z+1	; 0x01
     8c8:	82 81       	ldd	r24, Z+2	; 0x02
     8ca:	93 81       	ldd	r25, Z+3	; 0x03
     8cc:	20 e0       	ldi	r18, 0x00	; 0
     8ce:	30 e0       	ldi	r19, 0x00	; 0
     8d0:	4a e7       	ldi	r20, 0x7A	; 122
     8d2:	54 e4       	ldi	r21, 0x44	; 68
     8d4:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
     8d8:	dc 01       	movw	r26, r24
     8da:	cb 01       	movw	r24, r22
     8dc:	fe 01       	movw	r30, r28
     8de:	ec 52       	subi	r30, 0x2C	; 44
     8e0:	fe 4f       	sbci	r31, 0xFE	; 254
     8e2:	80 83       	st	Z, r24
     8e4:	91 83       	std	Z+1, r25	; 0x01
     8e6:	a2 83       	std	Z+2, r26	; 0x02
     8e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     8ea:	8e 01       	movw	r16, r28
     8ec:	00 53       	subi	r16, 0x30	; 48
     8ee:	1e 4f       	sbci	r17, 0xFE	; 254
     8f0:	fe 01       	movw	r30, r28
     8f2:	ec 52       	subi	r30, 0x2C	; 44
     8f4:	fe 4f       	sbci	r31, 0xFE	; 254
     8f6:	60 81       	ld	r22, Z
     8f8:	71 81       	ldd	r23, Z+1	; 0x01
     8fa:	82 81       	ldd	r24, Z+2	; 0x02
     8fc:	93 81       	ldd	r25, Z+3	; 0x03
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	4a e7       	ldi	r20, 0x7A	; 122
     904:	55 e4       	ldi	r21, 0x45	; 69
     906:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     90a:	dc 01       	movw	r26, r24
     90c:	cb 01       	movw	r24, r22
     90e:	f8 01       	movw	r30, r16
     910:	80 83       	st	Z, r24
     912:	91 83       	std	Z+1, r25	; 0x01
     914:	a2 83       	std	Z+2, r26	; 0x02
     916:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     918:	fe 01       	movw	r30, r28
     91a:	e0 53       	subi	r30, 0x30	; 48
     91c:	fe 4f       	sbci	r31, 0xFE	; 254
     91e:	60 81       	ld	r22, Z
     920:	71 81       	ldd	r23, Z+1	; 0x01
     922:	82 81       	ldd	r24, Z+2	; 0x02
     924:	93 81       	ldd	r25, Z+3	; 0x03
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	40 e8       	ldi	r20, 0x80	; 128
     92c:	5f e3       	ldi	r21, 0x3F	; 63
     92e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     932:	88 23       	and	r24, r24
     934:	44 f4       	brge	.+16     	; 0x946 <__stack+0xe7>
		__ticks = 1;
     936:	fe 01       	movw	r30, r28
     938:	e2 53       	subi	r30, 0x32	; 50
     93a:	fe 4f       	sbci	r31, 0xFE	; 254
     93c:	81 e0       	ldi	r24, 0x01	; 1
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	91 83       	std	Z+1, r25	; 0x01
     942:	80 83       	st	Z, r24
     944:	64 c0       	rjmp	.+200    	; 0xa0e <__stack+0x1af>
	else if (__tmp > 65535)
     946:	fe 01       	movw	r30, r28
     948:	e0 53       	subi	r30, 0x30	; 48
     94a:	fe 4f       	sbci	r31, 0xFE	; 254
     94c:	60 81       	ld	r22, Z
     94e:	71 81       	ldd	r23, Z+1	; 0x01
     950:	82 81       	ldd	r24, Z+2	; 0x02
     952:	93 81       	ldd	r25, Z+3	; 0x03
     954:	20 e0       	ldi	r18, 0x00	; 0
     956:	3f ef       	ldi	r19, 0xFF	; 255
     958:	4f e7       	ldi	r20, 0x7F	; 127
     95a:	57 e4       	ldi	r21, 0x47	; 71
     95c:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     960:	18 16       	cp	r1, r24
     962:	0c f0       	brlt	.+2      	; 0x966 <__stack+0x107>
     964:	43 c0       	rjmp	.+134    	; 0x9ec <__stack+0x18d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     966:	fe 01       	movw	r30, r28
     968:	ec 52       	subi	r30, 0x2C	; 44
     96a:	fe 4f       	sbci	r31, 0xFE	; 254
     96c:	60 81       	ld	r22, Z
     96e:	71 81       	ldd	r23, Z+1	; 0x01
     970:	82 81       	ldd	r24, Z+2	; 0x02
     972:	93 81       	ldd	r25, Z+3	; 0x03
     974:	20 e0       	ldi	r18, 0x00	; 0
     976:	30 e0       	ldi	r19, 0x00	; 0
     978:	40 e2       	ldi	r20, 0x20	; 32
     97a:	51 e4       	ldi	r21, 0x41	; 65
     97c:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     980:	dc 01       	movw	r26, r24
     982:	cb 01       	movw	r24, r22
     984:	8e 01       	movw	r16, r28
     986:	02 53       	subi	r16, 0x32	; 50
     988:	1e 4f       	sbci	r17, 0xFE	; 254
     98a:	bc 01       	movw	r22, r24
     98c:	cd 01       	movw	r24, r26
     98e:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     992:	dc 01       	movw	r26, r24
     994:	cb 01       	movw	r24, r22
     996:	f8 01       	movw	r30, r16
     998:	91 83       	std	Z+1, r25	; 0x01
     99a:	80 83       	st	Z, r24
     99c:	1f c0       	rjmp	.+62     	; 0x9dc <__stack+0x17d>
     99e:	fe 01       	movw	r30, r28
     9a0:	e4 53       	subi	r30, 0x34	; 52
     9a2:	fe 4f       	sbci	r31, 0xFE	; 254
     9a4:	80 e9       	ldi	r24, 0x90	; 144
     9a6:	91 e0       	ldi	r25, 0x01	; 1
     9a8:	91 83       	std	Z+1, r25	; 0x01
     9aa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     9ac:	fe 01       	movw	r30, r28
     9ae:	e4 53       	subi	r30, 0x34	; 52
     9b0:	fe 4f       	sbci	r31, 0xFE	; 254
     9b2:	80 81       	ld	r24, Z
     9b4:	91 81       	ldd	r25, Z+1	; 0x01
     9b6:	01 97       	sbiw	r24, 0x01	; 1
     9b8:	f1 f7       	brne	.-4      	; 0x9b6 <__stack+0x157>
     9ba:	fe 01       	movw	r30, r28
     9bc:	e4 53       	subi	r30, 0x34	; 52
     9be:	fe 4f       	sbci	r31, 0xFE	; 254
     9c0:	91 83       	std	Z+1, r25	; 0x01
     9c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9c4:	de 01       	movw	r26, r28
     9c6:	a2 53       	subi	r26, 0x32	; 50
     9c8:	be 4f       	sbci	r27, 0xFE	; 254
     9ca:	fe 01       	movw	r30, r28
     9cc:	e2 53       	subi	r30, 0x32	; 50
     9ce:	fe 4f       	sbci	r31, 0xFE	; 254
     9d0:	80 81       	ld	r24, Z
     9d2:	91 81       	ldd	r25, Z+1	; 0x01
     9d4:	01 97       	sbiw	r24, 0x01	; 1
     9d6:	11 96       	adiw	r26, 0x01	; 1
     9d8:	9c 93       	st	X, r25
     9da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9dc:	fe 01       	movw	r30, r28
     9de:	e2 53       	subi	r30, 0x32	; 50
     9e0:	fe 4f       	sbci	r31, 0xFE	; 254
     9e2:	80 81       	ld	r24, Z
     9e4:	91 81       	ldd	r25, Z+1	; 0x01
     9e6:	00 97       	sbiw	r24, 0x00	; 0
     9e8:	d1 f6       	brne	.-76     	; 0x99e <__stack+0x13f>
     9ea:	4b c0       	rjmp	.+150    	; 0xa82 <__stack+0x223>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9ec:	8e 01       	movw	r16, r28
     9ee:	02 53       	subi	r16, 0x32	; 50
     9f0:	1e 4f       	sbci	r17, 0xFE	; 254
     9f2:	fe 01       	movw	r30, r28
     9f4:	e0 53       	subi	r30, 0x30	; 48
     9f6:	fe 4f       	sbci	r31, 0xFE	; 254
     9f8:	60 81       	ld	r22, Z
     9fa:	71 81       	ldd	r23, Z+1	; 0x01
     9fc:	82 81       	ldd	r24, Z+2	; 0x02
     9fe:	93 81       	ldd	r25, Z+3	; 0x03
     a00:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     a04:	dc 01       	movw	r26, r24
     a06:	cb 01       	movw	r24, r22
     a08:	f8 01       	movw	r30, r16
     a0a:	91 83       	std	Z+1, r25	; 0x01
     a0c:	80 83       	st	Z, r24
     a0e:	de 01       	movw	r26, r28
     a10:	a6 53       	subi	r26, 0x36	; 54
     a12:	be 4f       	sbci	r27, 0xFE	; 254
     a14:	fe 01       	movw	r30, r28
     a16:	e2 53       	subi	r30, 0x32	; 50
     a18:	fe 4f       	sbci	r31, 0xFE	; 254
     a1a:	80 81       	ld	r24, Z
     a1c:	91 81       	ldd	r25, Z+1	; 0x01
     a1e:	11 96       	adiw	r26, 0x01	; 1
     a20:	9c 93       	st	X, r25
     a22:	8e 93       	st	-X, r24
     a24:	fe 01       	movw	r30, r28
     a26:	e6 53       	subi	r30, 0x36	; 54
     a28:	fe 4f       	sbci	r31, 0xFE	; 254
     a2a:	80 81       	ld	r24, Z
     a2c:	91 81       	ldd	r25, Z+1	; 0x01
     a2e:	01 97       	sbiw	r24, 0x01	; 1
     a30:	f1 f7       	brne	.-4      	; 0xa2e <__stack+0x1cf>
     a32:	fe 01       	movw	r30, r28
     a34:	e6 53       	subi	r30, 0x36	; 54
     a36:	fe 4f       	sbci	r31, 0xFE	; 254
     a38:	91 83       	std	Z+1, r25	; 0x01
     a3a:	80 83       	st	Z, r24
     a3c:	22 c0       	rjmp	.+68     	; 0xa82 <__stack+0x223>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     a3e:	8e 01       	movw	r16, r28
     a40:	08 52       	subi	r16, 0x28	; 40
     a42:	1e 4f       	sbci	r17, 0xFE	; 254
     a44:	fe 01       	movw	r30, r28
     a46:	e7 52       	subi	r30, 0x27	; 39
     a48:	fe 4f       	sbci	r31, 0xFE	; 254
     a4a:	60 81       	ld	r22, Z
     a4c:	71 81       	ldd	r23, Z+1	; 0x01
     a4e:	82 81       	ldd	r24, Z+2	; 0x02
     a50:	93 81       	ldd	r25, Z+3	; 0x03
     a52:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     a56:	dc 01       	movw	r26, r24
     a58:	cb 01       	movw	r24, r22
     a5a:	f8 01       	movw	r30, r16
     a5c:	80 83       	st	Z, r24
     a5e:	de 01       	movw	r26, r28
     a60:	a7 53       	subi	r26, 0x37	; 55
     a62:	be 4f       	sbci	r27, 0xFE	; 254
     a64:	fe 01       	movw	r30, r28
     a66:	e8 52       	subi	r30, 0x28	; 40
     a68:	fe 4f       	sbci	r31, 0xFE	; 254
     a6a:	80 81       	ld	r24, Z
     a6c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     a6e:	fe 01       	movw	r30, r28
     a70:	e7 53       	subi	r30, 0x37	; 55
     a72:	fe 4f       	sbci	r31, 0xFE	; 254
     a74:	80 81       	ld	r24, Z
     a76:	8a 95       	dec	r24
     a78:	f1 f7       	brne	.-4      	; 0xa76 <__stack+0x217>
     a7a:	fe 01       	movw	r30, r28
     a7c:	e7 53       	subi	r30, 0x37	; 55
     a7e:	fe 4f       	sbci	r31, 0xFE	; 254
     a80:	80 83       	st	Z, r24
	_delay_us(5);
	PORTC |= 0x01;		//clock high
     a82:	a5 e3       	ldi	r26, 0x35	; 53
     a84:	b0 e0       	ldi	r27, 0x00	; 0
     a86:	e5 e3       	ldi	r30, 0x35	; 53
     a88:	f0 e0       	ldi	r31, 0x00	; 0
     a8a:	80 81       	ld	r24, Z
     a8c:	81 60       	ori	r24, 0x01	; 1
     a8e:	8c 93       	st	X, r24
     a90:	fe 01       	movw	r30, r28
     a92:	eb 53       	subi	r30, 0x3B	; 59
     a94:	fe 4f       	sbci	r31, 0xFE	; 254
     a96:	80 e0       	ldi	r24, 0x00	; 0
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 ea       	ldi	r26, 0xA0	; 160
     a9c:	b0 e4       	ldi	r27, 0x40	; 64
     a9e:	80 83       	st	Z, r24
     aa0:	91 83       	std	Z+1, r25	; 0x01
     aa2:	a2 83       	std	Z+2, r26	; 0x02
     aa4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     aa6:	8e 01       	movw	r16, r28
     aa8:	0f 53       	subi	r16, 0x3F	; 63
     aaa:	1e 4f       	sbci	r17, 0xFE	; 254
     aac:	fe 01       	movw	r30, r28
     aae:	eb 53       	subi	r30, 0x3B	; 59
     ab0:	fe 4f       	sbci	r31, 0xFE	; 254
     ab2:	60 81       	ld	r22, Z
     ab4:	71 81       	ldd	r23, Z+1	; 0x01
     ab6:	82 81       	ldd	r24, Z+2	; 0x02
     ab8:	93 81       	ldd	r25, Z+3	; 0x03
     aba:	2b ea       	ldi	r18, 0xAB	; 171
     abc:	3a ea       	ldi	r19, 0xAA	; 170
     abe:	4a ea       	ldi	r20, 0xAA	; 170
     ac0:	50 e4       	ldi	r21, 0x40	; 64
     ac2:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     ac6:	dc 01       	movw	r26, r24
     ac8:	cb 01       	movw	r24, r22
     aca:	f8 01       	movw	r30, r16
     acc:	80 83       	st	Z, r24
     ace:	91 83       	std	Z+1, r25	; 0x01
     ad0:	a2 83       	std	Z+2, r26	; 0x02
     ad2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ad4:	fe 01       	movw	r30, r28
     ad6:	ef 53       	subi	r30, 0x3F	; 63
     ad8:	fe 4f       	sbci	r31, 0xFE	; 254
     ada:	60 81       	ld	r22, Z
     adc:	71 81       	ldd	r23, Z+1	; 0x01
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	20 e0       	ldi	r18, 0x00	; 0
     ae4:	30 e0       	ldi	r19, 0x00	; 0
     ae6:	40 e8       	ldi	r20, 0x80	; 128
     ae8:	5f e3       	ldi	r21, 0x3F	; 63
     aea:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     aee:	88 23       	and	r24, r24
     af0:	34 f4       	brge	.+12     	; 0xafe <__stack+0x29f>
		__ticks = 1;
     af2:	fe 01       	movw	r30, r28
     af4:	e0 54       	subi	r30, 0x40	; 64
     af6:	fe 4f       	sbci	r31, 0xFE	; 254
     af8:	81 e0       	ldi	r24, 0x01	; 1
     afa:	80 83       	st	Z, r24
     afc:	e0 c0       	rjmp	.+448    	; 0xcbe <__stack+0x45f>
	else if (__tmp > 255)
     afe:	fe 01       	movw	r30, r28
     b00:	ef 53       	subi	r30, 0x3F	; 63
     b02:	fe 4f       	sbci	r31, 0xFE	; 254
     b04:	60 81       	ld	r22, Z
     b06:	71 81       	ldd	r23, Z+1	; 0x01
     b08:	82 81       	ldd	r24, Z+2	; 0x02
     b0a:	93 81       	ldd	r25, Z+3	; 0x03
     b0c:	20 e0       	ldi	r18, 0x00	; 0
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	4f e7       	ldi	r20, 0x7F	; 127
     b12:	53 e4       	ldi	r21, 0x43	; 67
     b14:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     b18:	18 16       	cp	r1, r24
     b1a:	0c f0       	brlt	.+2      	; 0xb1e <__stack+0x2bf>
     b1c:	c0 c0       	rjmp	.+384    	; 0xc9e <__stack+0x43f>
	{
		_delay_ms(__us / 1000.0);
     b1e:	fe 01       	movw	r30, r28
     b20:	eb 53       	subi	r30, 0x3B	; 59
     b22:	fe 4f       	sbci	r31, 0xFE	; 254
     b24:	60 81       	ld	r22, Z
     b26:	71 81       	ldd	r23, Z+1	; 0x01
     b28:	82 81       	ldd	r24, Z+2	; 0x02
     b2a:	93 81       	ldd	r25, Z+3	; 0x03
     b2c:	20 e0       	ldi	r18, 0x00	; 0
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	4a e7       	ldi	r20, 0x7A	; 122
     b32:	54 e4       	ldi	r21, 0x44	; 68
     b34:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
     b38:	dc 01       	movw	r26, r24
     b3a:	cb 01       	movw	r24, r22
     b3c:	fe 01       	movw	r30, r28
     b3e:	e4 54       	subi	r30, 0x44	; 68
     b40:	fe 4f       	sbci	r31, 0xFE	; 254
     b42:	80 83       	st	Z, r24
     b44:	91 83       	std	Z+1, r25	; 0x01
     b46:	a2 83       	std	Z+2, r26	; 0x02
     b48:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b4a:	8e 01       	movw	r16, r28
     b4c:	08 54       	subi	r16, 0x48	; 72
     b4e:	1e 4f       	sbci	r17, 0xFE	; 254
     b50:	fe 01       	movw	r30, r28
     b52:	e4 54       	subi	r30, 0x44	; 68
     b54:	fe 4f       	sbci	r31, 0xFE	; 254
     b56:	60 81       	ld	r22, Z
     b58:	71 81       	ldd	r23, Z+1	; 0x01
     b5a:	82 81       	ldd	r24, Z+2	; 0x02
     b5c:	93 81       	ldd	r25, Z+3	; 0x03
     b5e:	20 e0       	ldi	r18, 0x00	; 0
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	4a e7       	ldi	r20, 0x7A	; 122
     b64:	55 e4       	ldi	r21, 0x45	; 69
     b66:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     b6a:	dc 01       	movw	r26, r24
     b6c:	cb 01       	movw	r24, r22
     b6e:	f8 01       	movw	r30, r16
     b70:	80 83       	st	Z, r24
     b72:	91 83       	std	Z+1, r25	; 0x01
     b74:	a2 83       	std	Z+2, r26	; 0x02
     b76:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b78:	fe 01       	movw	r30, r28
     b7a:	e8 54       	subi	r30, 0x48	; 72
     b7c:	fe 4f       	sbci	r31, 0xFE	; 254
     b7e:	60 81       	ld	r22, Z
     b80:	71 81       	ldd	r23, Z+1	; 0x01
     b82:	82 81       	ldd	r24, Z+2	; 0x02
     b84:	93 81       	ldd	r25, Z+3	; 0x03
     b86:	20 e0       	ldi	r18, 0x00	; 0
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	40 e8       	ldi	r20, 0x80	; 128
     b8c:	5f e3       	ldi	r21, 0x3F	; 63
     b8e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     b92:	88 23       	and	r24, r24
     b94:	44 f4       	brge	.+16     	; 0xba6 <__stack+0x347>
		__ticks = 1;
     b96:	fe 01       	movw	r30, r28
     b98:	ea 54       	subi	r30, 0x4A	; 74
     b9a:	fe 4f       	sbci	r31, 0xFE	; 254
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	91 83       	std	Z+1, r25	; 0x01
     ba2:	80 83       	st	Z, r24
     ba4:	64 c0       	rjmp	.+200    	; 0xc6e <__stack+0x40f>
	else if (__tmp > 65535)
     ba6:	fe 01       	movw	r30, r28
     ba8:	e8 54       	subi	r30, 0x48	; 72
     baa:	fe 4f       	sbci	r31, 0xFE	; 254
     bac:	60 81       	ld	r22, Z
     bae:	71 81       	ldd	r23, Z+1	; 0x01
     bb0:	82 81       	ldd	r24, Z+2	; 0x02
     bb2:	93 81       	ldd	r25, Z+3	; 0x03
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	3f ef       	ldi	r19, 0xFF	; 255
     bb8:	4f e7       	ldi	r20, 0x7F	; 127
     bba:	57 e4       	ldi	r21, 0x47	; 71
     bbc:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     bc0:	18 16       	cp	r1, r24
     bc2:	0c f0       	brlt	.+2      	; 0xbc6 <__stack+0x367>
     bc4:	43 c0       	rjmp	.+134    	; 0xc4c <__stack+0x3ed>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bc6:	fe 01       	movw	r30, r28
     bc8:	e4 54       	subi	r30, 0x44	; 68
     bca:	fe 4f       	sbci	r31, 0xFE	; 254
     bcc:	60 81       	ld	r22, Z
     bce:	71 81       	ldd	r23, Z+1	; 0x01
     bd0:	82 81       	ldd	r24, Z+2	; 0x02
     bd2:	93 81       	ldd	r25, Z+3	; 0x03
     bd4:	20 e0       	ldi	r18, 0x00	; 0
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	40 e2       	ldi	r20, 0x20	; 32
     bda:	51 e4       	ldi	r21, 0x41	; 65
     bdc:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     be0:	dc 01       	movw	r26, r24
     be2:	cb 01       	movw	r24, r22
     be4:	8e 01       	movw	r16, r28
     be6:	0a 54       	subi	r16, 0x4A	; 74
     be8:	1e 4f       	sbci	r17, 0xFE	; 254
     bea:	bc 01       	movw	r22, r24
     bec:	cd 01       	movw	r24, r26
     bee:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     bf2:	dc 01       	movw	r26, r24
     bf4:	cb 01       	movw	r24, r22
     bf6:	f8 01       	movw	r30, r16
     bf8:	91 83       	std	Z+1, r25	; 0x01
     bfa:	80 83       	st	Z, r24
     bfc:	1f c0       	rjmp	.+62     	; 0xc3c <__stack+0x3dd>
     bfe:	fe 01       	movw	r30, r28
     c00:	ec 54       	subi	r30, 0x4C	; 76
     c02:	fe 4f       	sbci	r31, 0xFE	; 254
     c04:	80 e9       	ldi	r24, 0x90	; 144
     c06:	91 e0       	ldi	r25, 0x01	; 1
     c08:	91 83       	std	Z+1, r25	; 0x01
     c0a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c0c:	fe 01       	movw	r30, r28
     c0e:	ec 54       	subi	r30, 0x4C	; 76
     c10:	fe 4f       	sbci	r31, 0xFE	; 254
     c12:	80 81       	ld	r24, Z
     c14:	91 81       	ldd	r25, Z+1	; 0x01
     c16:	01 97       	sbiw	r24, 0x01	; 1
     c18:	f1 f7       	brne	.-4      	; 0xc16 <__stack+0x3b7>
     c1a:	fe 01       	movw	r30, r28
     c1c:	ec 54       	subi	r30, 0x4C	; 76
     c1e:	fe 4f       	sbci	r31, 0xFE	; 254
     c20:	91 83       	std	Z+1, r25	; 0x01
     c22:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c24:	de 01       	movw	r26, r28
     c26:	aa 54       	subi	r26, 0x4A	; 74
     c28:	be 4f       	sbci	r27, 0xFE	; 254
     c2a:	fe 01       	movw	r30, r28
     c2c:	ea 54       	subi	r30, 0x4A	; 74
     c2e:	fe 4f       	sbci	r31, 0xFE	; 254
     c30:	80 81       	ld	r24, Z
     c32:	91 81       	ldd	r25, Z+1	; 0x01
     c34:	01 97       	sbiw	r24, 0x01	; 1
     c36:	11 96       	adiw	r26, 0x01	; 1
     c38:	9c 93       	st	X, r25
     c3a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c3c:	fe 01       	movw	r30, r28
     c3e:	ea 54       	subi	r30, 0x4A	; 74
     c40:	fe 4f       	sbci	r31, 0xFE	; 254
     c42:	80 81       	ld	r24, Z
     c44:	91 81       	ldd	r25, Z+1	; 0x01
     c46:	00 97       	sbiw	r24, 0x00	; 0
     c48:	d1 f6       	brne	.-76     	; 0xbfe <__stack+0x39f>
     c4a:	4b c0       	rjmp	.+150    	; 0xce2 <__stack+0x483>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c4c:	8e 01       	movw	r16, r28
     c4e:	0a 54       	subi	r16, 0x4A	; 74
     c50:	1e 4f       	sbci	r17, 0xFE	; 254
     c52:	fe 01       	movw	r30, r28
     c54:	e8 54       	subi	r30, 0x48	; 72
     c56:	fe 4f       	sbci	r31, 0xFE	; 254
     c58:	60 81       	ld	r22, Z
     c5a:	71 81       	ldd	r23, Z+1	; 0x01
     c5c:	82 81       	ldd	r24, Z+2	; 0x02
     c5e:	93 81       	ldd	r25, Z+3	; 0x03
     c60:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     c64:	dc 01       	movw	r26, r24
     c66:	cb 01       	movw	r24, r22
     c68:	f8 01       	movw	r30, r16
     c6a:	91 83       	std	Z+1, r25	; 0x01
     c6c:	80 83       	st	Z, r24
     c6e:	de 01       	movw	r26, r28
     c70:	ae 54       	subi	r26, 0x4E	; 78
     c72:	be 4f       	sbci	r27, 0xFE	; 254
     c74:	fe 01       	movw	r30, r28
     c76:	ea 54       	subi	r30, 0x4A	; 74
     c78:	fe 4f       	sbci	r31, 0xFE	; 254
     c7a:	80 81       	ld	r24, Z
     c7c:	91 81       	ldd	r25, Z+1	; 0x01
     c7e:	11 96       	adiw	r26, 0x01	; 1
     c80:	9c 93       	st	X, r25
     c82:	8e 93       	st	-X, r24
     c84:	fe 01       	movw	r30, r28
     c86:	ee 54       	subi	r30, 0x4E	; 78
     c88:	fe 4f       	sbci	r31, 0xFE	; 254
     c8a:	80 81       	ld	r24, Z
     c8c:	91 81       	ldd	r25, Z+1	; 0x01
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	f1 f7       	brne	.-4      	; 0xc8e <__stack+0x42f>
     c92:	fe 01       	movw	r30, r28
     c94:	ee 54       	subi	r30, 0x4E	; 78
     c96:	fe 4f       	sbci	r31, 0xFE	; 254
     c98:	91 83       	std	Z+1, r25	; 0x01
     c9a:	80 83       	st	Z, r24
     c9c:	22 c0       	rjmp	.+68     	; 0xce2 <__stack+0x483>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     c9e:	8e 01       	movw	r16, r28
     ca0:	00 54       	subi	r16, 0x40	; 64
     ca2:	1e 4f       	sbci	r17, 0xFE	; 254
     ca4:	fe 01       	movw	r30, r28
     ca6:	ef 53       	subi	r30, 0x3F	; 63
     ca8:	fe 4f       	sbci	r31, 0xFE	; 254
     caa:	60 81       	ld	r22, Z
     cac:	71 81       	ldd	r23, Z+1	; 0x01
     cae:	82 81       	ldd	r24, Z+2	; 0x02
     cb0:	93 81       	ldd	r25, Z+3	; 0x03
     cb2:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     cb6:	dc 01       	movw	r26, r24
     cb8:	cb 01       	movw	r24, r22
     cba:	f8 01       	movw	r30, r16
     cbc:	80 83       	st	Z, r24
     cbe:	de 01       	movw	r26, r28
     cc0:	af 54       	subi	r26, 0x4F	; 79
     cc2:	be 4f       	sbci	r27, 0xFE	; 254
     cc4:	fe 01       	movw	r30, r28
     cc6:	e0 54       	subi	r30, 0x40	; 64
     cc8:	fe 4f       	sbci	r31, 0xFE	; 254
     cca:	80 81       	ld	r24, Z
     ccc:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     cce:	fe 01       	movw	r30, r28
     cd0:	ef 54       	subi	r30, 0x4F	; 79
     cd2:	fe 4f       	sbci	r31, 0xFE	; 254
     cd4:	80 81       	ld	r24, Z
     cd6:	8a 95       	dec	r24
     cd8:	f1 f7       	brne	.-4      	; 0xcd6 <__stack+0x477>
     cda:	fe 01       	movw	r30, r28
     cdc:	ef 54       	subi	r30, 0x4F	; 79
     cde:	fe 4f       	sbci	r31, 0xFE	; 254
     ce0:	80 83       	st	Z, r24
	_delay_us(5);
	
	PORTC &= 0xFB;		//cmd low
     ce2:	a5 e3       	ldi	r26, 0x35	; 53
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	e5 e3       	ldi	r30, 0x35	; 53
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 81       	ld	r24, Z
     cec:	8b 7f       	andi	r24, 0xFB	; 251
     cee:	8c 93       	st	X, r24
	
	for(i = 0;i<7;i++)
     cf0:	10 92 61 00 	sts	0x0061, r1
     cf4:	10 92 60 00 	sts	0x0060, r1
     cf8:	69 c2       	rjmp	.+1234   	; 0x11cc <__stack+0x96d>
	{
		PORTC &= 0xFE;		//clock low
     cfa:	a5 e3       	ldi	r26, 0x35	; 53
     cfc:	b0 e0       	ldi	r27, 0x00	; 0
     cfe:	e5 e3       	ldi	r30, 0x35	; 53
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	80 81       	ld	r24, Z
     d04:	8e 7f       	andi	r24, 0xFE	; 254
     d06:	8c 93       	st	X, r24
     d08:	fe 01       	movw	r30, r28
     d0a:	e3 55       	subi	r30, 0x53	; 83
     d0c:	fe 4f       	sbci	r31, 0xFE	; 254
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	a0 ea       	ldi	r26, 0xA0	; 160
     d14:	b0 e4       	ldi	r27, 0x40	; 64
     d16:	80 83       	st	Z, r24
     d18:	91 83       	std	Z+1, r25	; 0x01
     d1a:	a2 83       	std	Z+2, r26	; 0x02
     d1c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     d1e:	8e 01       	movw	r16, r28
     d20:	07 55       	subi	r16, 0x57	; 87
     d22:	1e 4f       	sbci	r17, 0xFE	; 254
     d24:	fe 01       	movw	r30, r28
     d26:	e3 55       	subi	r30, 0x53	; 83
     d28:	fe 4f       	sbci	r31, 0xFE	; 254
     d2a:	60 81       	ld	r22, Z
     d2c:	71 81       	ldd	r23, Z+1	; 0x01
     d2e:	82 81       	ldd	r24, Z+2	; 0x02
     d30:	93 81       	ldd	r25, Z+3	; 0x03
     d32:	2b ea       	ldi	r18, 0xAB	; 171
     d34:	3a ea       	ldi	r19, 0xAA	; 170
     d36:	4a ea       	ldi	r20, 0xAA	; 170
     d38:	50 e4       	ldi	r21, 0x40	; 64
     d3a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     d3e:	dc 01       	movw	r26, r24
     d40:	cb 01       	movw	r24, r22
     d42:	f8 01       	movw	r30, r16
     d44:	80 83       	st	Z, r24
     d46:	91 83       	std	Z+1, r25	; 0x01
     d48:	a2 83       	std	Z+2, r26	; 0x02
     d4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d4c:	fe 01       	movw	r30, r28
     d4e:	e7 55       	subi	r30, 0x57	; 87
     d50:	fe 4f       	sbci	r31, 0xFE	; 254
     d52:	60 81       	ld	r22, Z
     d54:	71 81       	ldd	r23, Z+1	; 0x01
     d56:	82 81       	ldd	r24, Z+2	; 0x02
     d58:	93 81       	ldd	r25, Z+3	; 0x03
     d5a:	20 e0       	ldi	r18, 0x00	; 0
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	40 e8       	ldi	r20, 0x80	; 128
     d60:	5f e3       	ldi	r21, 0x3F	; 63
     d62:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     d66:	88 23       	and	r24, r24
     d68:	34 f4       	brge	.+12     	; 0xd76 <__stack+0x517>
		__ticks = 1;
     d6a:	fe 01       	movw	r30, r28
     d6c:	e8 55       	subi	r30, 0x58	; 88
     d6e:	fe 4f       	sbci	r31, 0xFE	; 254
     d70:	81 e0       	ldi	r24, 0x01	; 1
     d72:	80 83       	st	Z, r24
     d74:	e0 c0       	rjmp	.+448    	; 0xf36 <__stack+0x6d7>
	else if (__tmp > 255)
     d76:	fe 01       	movw	r30, r28
     d78:	e7 55       	subi	r30, 0x57	; 87
     d7a:	fe 4f       	sbci	r31, 0xFE	; 254
     d7c:	60 81       	ld	r22, Z
     d7e:	71 81       	ldd	r23, Z+1	; 0x01
     d80:	82 81       	ldd	r24, Z+2	; 0x02
     d82:	93 81       	ldd	r25, Z+3	; 0x03
     d84:	20 e0       	ldi	r18, 0x00	; 0
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	4f e7       	ldi	r20, 0x7F	; 127
     d8a:	53 e4       	ldi	r21, 0x43	; 67
     d8c:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     d90:	18 16       	cp	r1, r24
     d92:	0c f0       	brlt	.+2      	; 0xd96 <__stack+0x537>
     d94:	c0 c0       	rjmp	.+384    	; 0xf16 <__stack+0x6b7>
	{
		_delay_ms(__us / 1000.0);
     d96:	fe 01       	movw	r30, r28
     d98:	e3 55       	subi	r30, 0x53	; 83
     d9a:	fe 4f       	sbci	r31, 0xFE	; 254
     d9c:	60 81       	ld	r22, Z
     d9e:	71 81       	ldd	r23, Z+1	; 0x01
     da0:	82 81       	ldd	r24, Z+2	; 0x02
     da2:	93 81       	ldd	r25, Z+3	; 0x03
     da4:	20 e0       	ldi	r18, 0x00	; 0
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	4a e7       	ldi	r20, 0x7A	; 122
     daa:	54 e4       	ldi	r21, 0x44	; 68
     dac:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
     db0:	dc 01       	movw	r26, r24
     db2:	cb 01       	movw	r24, r22
     db4:	fe 01       	movw	r30, r28
     db6:	ec 55       	subi	r30, 0x5C	; 92
     db8:	fe 4f       	sbci	r31, 0xFE	; 254
     dba:	80 83       	st	Z, r24
     dbc:	91 83       	std	Z+1, r25	; 0x01
     dbe:	a2 83       	std	Z+2, r26	; 0x02
     dc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     dc2:	8e 01       	movw	r16, r28
     dc4:	00 56       	subi	r16, 0x60	; 96
     dc6:	1e 4f       	sbci	r17, 0xFE	; 254
     dc8:	fe 01       	movw	r30, r28
     dca:	ec 55       	subi	r30, 0x5C	; 92
     dcc:	fe 4f       	sbci	r31, 0xFE	; 254
     dce:	60 81       	ld	r22, Z
     dd0:	71 81       	ldd	r23, Z+1	; 0x01
     dd2:	82 81       	ldd	r24, Z+2	; 0x02
     dd4:	93 81       	ldd	r25, Z+3	; 0x03
     dd6:	20 e0       	ldi	r18, 0x00	; 0
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	4a e7       	ldi	r20, 0x7A	; 122
     ddc:	55 e4       	ldi	r21, 0x45	; 69
     dde:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     de2:	dc 01       	movw	r26, r24
     de4:	cb 01       	movw	r24, r22
     de6:	f8 01       	movw	r30, r16
     de8:	80 83       	st	Z, r24
     dea:	91 83       	std	Z+1, r25	; 0x01
     dec:	a2 83       	std	Z+2, r26	; 0x02
     dee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     df0:	fe 01       	movw	r30, r28
     df2:	e0 56       	subi	r30, 0x60	; 96
     df4:	fe 4f       	sbci	r31, 0xFE	; 254
     df6:	60 81       	ld	r22, Z
     df8:	71 81       	ldd	r23, Z+1	; 0x01
     dfa:	82 81       	ldd	r24, Z+2	; 0x02
     dfc:	93 81       	ldd	r25, Z+3	; 0x03
     dfe:	20 e0       	ldi	r18, 0x00	; 0
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	40 e8       	ldi	r20, 0x80	; 128
     e04:	5f e3       	ldi	r21, 0x3F	; 63
     e06:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     e0a:	88 23       	and	r24, r24
     e0c:	44 f4       	brge	.+16     	; 0xe1e <__stack+0x5bf>
		__ticks = 1;
     e0e:	fe 01       	movw	r30, r28
     e10:	e2 56       	subi	r30, 0x62	; 98
     e12:	fe 4f       	sbci	r31, 0xFE	; 254
     e14:	81 e0       	ldi	r24, 0x01	; 1
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	91 83       	std	Z+1, r25	; 0x01
     e1a:	80 83       	st	Z, r24
     e1c:	64 c0       	rjmp	.+200    	; 0xee6 <__stack+0x687>
	else if (__tmp > 65535)
     e1e:	fe 01       	movw	r30, r28
     e20:	e0 56       	subi	r30, 0x60	; 96
     e22:	fe 4f       	sbci	r31, 0xFE	; 254
     e24:	60 81       	ld	r22, Z
     e26:	71 81       	ldd	r23, Z+1	; 0x01
     e28:	82 81       	ldd	r24, Z+2	; 0x02
     e2a:	93 81       	ldd	r25, Z+3	; 0x03
     e2c:	20 e0       	ldi	r18, 0x00	; 0
     e2e:	3f ef       	ldi	r19, 0xFF	; 255
     e30:	4f e7       	ldi	r20, 0x7F	; 127
     e32:	57 e4       	ldi	r21, 0x47	; 71
     e34:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     e38:	18 16       	cp	r1, r24
     e3a:	0c f0       	brlt	.+2      	; 0xe3e <__stack+0x5df>
     e3c:	43 c0       	rjmp	.+134    	; 0xec4 <__stack+0x665>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e3e:	fe 01       	movw	r30, r28
     e40:	ec 55       	subi	r30, 0x5C	; 92
     e42:	fe 4f       	sbci	r31, 0xFE	; 254
     e44:	60 81       	ld	r22, Z
     e46:	71 81       	ldd	r23, Z+1	; 0x01
     e48:	82 81       	ldd	r24, Z+2	; 0x02
     e4a:	93 81       	ldd	r25, Z+3	; 0x03
     e4c:	20 e0       	ldi	r18, 0x00	; 0
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	40 e2       	ldi	r20, 0x20	; 32
     e52:	51 e4       	ldi	r21, 0x41	; 65
     e54:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     e58:	dc 01       	movw	r26, r24
     e5a:	cb 01       	movw	r24, r22
     e5c:	8e 01       	movw	r16, r28
     e5e:	02 56       	subi	r16, 0x62	; 98
     e60:	1e 4f       	sbci	r17, 0xFE	; 254
     e62:	bc 01       	movw	r22, r24
     e64:	cd 01       	movw	r24, r26
     e66:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     e6a:	dc 01       	movw	r26, r24
     e6c:	cb 01       	movw	r24, r22
     e6e:	f8 01       	movw	r30, r16
     e70:	91 83       	std	Z+1, r25	; 0x01
     e72:	80 83       	st	Z, r24
     e74:	1f c0       	rjmp	.+62     	; 0xeb4 <__stack+0x655>
     e76:	fe 01       	movw	r30, r28
     e78:	e4 56       	subi	r30, 0x64	; 100
     e7a:	fe 4f       	sbci	r31, 0xFE	; 254
     e7c:	80 e9       	ldi	r24, 0x90	; 144
     e7e:	91 e0       	ldi	r25, 0x01	; 1
     e80:	91 83       	std	Z+1, r25	; 0x01
     e82:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     e84:	fe 01       	movw	r30, r28
     e86:	e4 56       	subi	r30, 0x64	; 100
     e88:	fe 4f       	sbci	r31, 0xFE	; 254
     e8a:	80 81       	ld	r24, Z
     e8c:	91 81       	ldd	r25, Z+1	; 0x01
     e8e:	01 97       	sbiw	r24, 0x01	; 1
     e90:	f1 f7       	brne	.-4      	; 0xe8e <__stack+0x62f>
     e92:	fe 01       	movw	r30, r28
     e94:	e4 56       	subi	r30, 0x64	; 100
     e96:	fe 4f       	sbci	r31, 0xFE	; 254
     e98:	91 83       	std	Z+1, r25	; 0x01
     e9a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e9c:	de 01       	movw	r26, r28
     e9e:	a2 56       	subi	r26, 0x62	; 98
     ea0:	be 4f       	sbci	r27, 0xFE	; 254
     ea2:	fe 01       	movw	r30, r28
     ea4:	e2 56       	subi	r30, 0x62	; 98
     ea6:	fe 4f       	sbci	r31, 0xFE	; 254
     ea8:	80 81       	ld	r24, Z
     eaa:	91 81       	ldd	r25, Z+1	; 0x01
     eac:	01 97       	sbiw	r24, 0x01	; 1
     eae:	11 96       	adiw	r26, 0x01	; 1
     eb0:	9c 93       	st	X, r25
     eb2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     eb4:	fe 01       	movw	r30, r28
     eb6:	e2 56       	subi	r30, 0x62	; 98
     eb8:	fe 4f       	sbci	r31, 0xFE	; 254
     eba:	80 81       	ld	r24, Z
     ebc:	91 81       	ldd	r25, Z+1	; 0x01
     ebe:	00 97       	sbiw	r24, 0x00	; 0
     ec0:	d1 f6       	brne	.-76     	; 0xe76 <__stack+0x617>
     ec2:	4b c0       	rjmp	.+150    	; 0xf5a <__stack+0x6fb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ec4:	8e 01       	movw	r16, r28
     ec6:	02 56       	subi	r16, 0x62	; 98
     ec8:	1e 4f       	sbci	r17, 0xFE	; 254
     eca:	fe 01       	movw	r30, r28
     ecc:	e0 56       	subi	r30, 0x60	; 96
     ece:	fe 4f       	sbci	r31, 0xFE	; 254
     ed0:	60 81       	ld	r22, Z
     ed2:	71 81       	ldd	r23, Z+1	; 0x01
     ed4:	82 81       	ldd	r24, Z+2	; 0x02
     ed6:	93 81       	ldd	r25, Z+3	; 0x03
     ed8:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     edc:	dc 01       	movw	r26, r24
     ede:	cb 01       	movw	r24, r22
     ee0:	f8 01       	movw	r30, r16
     ee2:	91 83       	std	Z+1, r25	; 0x01
     ee4:	80 83       	st	Z, r24
     ee6:	de 01       	movw	r26, r28
     ee8:	a6 56       	subi	r26, 0x66	; 102
     eea:	be 4f       	sbci	r27, 0xFE	; 254
     eec:	fe 01       	movw	r30, r28
     eee:	e2 56       	subi	r30, 0x62	; 98
     ef0:	fe 4f       	sbci	r31, 0xFE	; 254
     ef2:	80 81       	ld	r24, Z
     ef4:	91 81       	ldd	r25, Z+1	; 0x01
     ef6:	11 96       	adiw	r26, 0x01	; 1
     ef8:	9c 93       	st	X, r25
     efa:	8e 93       	st	-X, r24
     efc:	fe 01       	movw	r30, r28
     efe:	e6 56       	subi	r30, 0x66	; 102
     f00:	fe 4f       	sbci	r31, 0xFE	; 254
     f02:	80 81       	ld	r24, Z
     f04:	91 81       	ldd	r25, Z+1	; 0x01
     f06:	01 97       	sbiw	r24, 0x01	; 1
     f08:	f1 f7       	brne	.-4      	; 0xf06 <__stack+0x6a7>
     f0a:	fe 01       	movw	r30, r28
     f0c:	e6 56       	subi	r30, 0x66	; 102
     f0e:	fe 4f       	sbci	r31, 0xFE	; 254
     f10:	91 83       	std	Z+1, r25	; 0x01
     f12:	80 83       	st	Z, r24
     f14:	22 c0       	rjmp	.+68     	; 0xf5a <__stack+0x6fb>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     f16:	8e 01       	movw	r16, r28
     f18:	08 55       	subi	r16, 0x58	; 88
     f1a:	1e 4f       	sbci	r17, 0xFE	; 254
     f1c:	fe 01       	movw	r30, r28
     f1e:	e7 55       	subi	r30, 0x57	; 87
     f20:	fe 4f       	sbci	r31, 0xFE	; 254
     f22:	60 81       	ld	r22, Z
     f24:	71 81       	ldd	r23, Z+1	; 0x01
     f26:	82 81       	ldd	r24, Z+2	; 0x02
     f28:	93 81       	ldd	r25, Z+3	; 0x03
     f2a:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
     f2e:	dc 01       	movw	r26, r24
     f30:	cb 01       	movw	r24, r22
     f32:	f8 01       	movw	r30, r16
     f34:	80 83       	st	Z, r24
     f36:	de 01       	movw	r26, r28
     f38:	a7 56       	subi	r26, 0x67	; 103
     f3a:	be 4f       	sbci	r27, 0xFE	; 254
     f3c:	fe 01       	movw	r30, r28
     f3e:	e8 55       	subi	r30, 0x58	; 88
     f40:	fe 4f       	sbci	r31, 0xFE	; 254
     f42:	80 81       	ld	r24, Z
     f44:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     f46:	fe 01       	movw	r30, r28
     f48:	e7 56       	subi	r30, 0x67	; 103
     f4a:	fe 4f       	sbci	r31, 0xFE	; 254
     f4c:	80 81       	ld	r24, Z
     f4e:	8a 95       	dec	r24
     f50:	f1 f7       	brne	.-4      	; 0xf4e <__stack+0x6ef>
     f52:	fe 01       	movw	r30, r28
     f54:	e7 56       	subi	r30, 0x67	; 103
     f56:	fe 4f       	sbci	r31, 0xFE	; 254
     f58:	80 83       	st	Z, r24
		_delay_us(5);
		PORTC |= 0x01;		//clock high
     f5a:	a5 e3       	ldi	r26, 0x35	; 53
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	e5 e3       	ldi	r30, 0x35	; 53
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	80 81       	ld	r24, Z
     f64:	81 60       	ori	r24, 0x01	; 1
     f66:	8c 93       	st	X, r24
     f68:	fe 01       	movw	r30, r28
     f6a:	eb 56       	subi	r30, 0x6B	; 107
     f6c:	fe 4f       	sbci	r31, 0xFE	; 254
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	a0 ea       	ldi	r26, 0xA0	; 160
     f74:	b0 e4       	ldi	r27, 0x40	; 64
     f76:	80 83       	st	Z, r24
     f78:	91 83       	std	Z+1, r25	; 0x01
     f7a:	a2 83       	std	Z+2, r26	; 0x02
     f7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     f7e:	8e 01       	movw	r16, r28
     f80:	0f 56       	subi	r16, 0x6F	; 111
     f82:	1e 4f       	sbci	r17, 0xFE	; 254
     f84:	fe 01       	movw	r30, r28
     f86:	eb 56       	subi	r30, 0x6B	; 107
     f88:	fe 4f       	sbci	r31, 0xFE	; 254
     f8a:	60 81       	ld	r22, Z
     f8c:	71 81       	ldd	r23, Z+1	; 0x01
     f8e:	82 81       	ldd	r24, Z+2	; 0x02
     f90:	93 81       	ldd	r25, Z+3	; 0x03
     f92:	2b ea       	ldi	r18, 0xAB	; 171
     f94:	3a ea       	ldi	r19, 0xAA	; 170
     f96:	4a ea       	ldi	r20, 0xAA	; 170
     f98:	50 e4       	ldi	r21, 0x40	; 64
     f9a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
     f9e:	dc 01       	movw	r26, r24
     fa0:	cb 01       	movw	r24, r22
     fa2:	f8 01       	movw	r30, r16
     fa4:	80 83       	st	Z, r24
     fa6:	91 83       	std	Z+1, r25	; 0x01
     fa8:	a2 83       	std	Z+2, r26	; 0x02
     faa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     fac:	fe 01       	movw	r30, r28
     fae:	ef 56       	subi	r30, 0x6F	; 111
     fb0:	fe 4f       	sbci	r31, 0xFE	; 254
     fb2:	60 81       	ld	r22, Z
     fb4:	71 81       	ldd	r23, Z+1	; 0x01
     fb6:	82 81       	ldd	r24, Z+2	; 0x02
     fb8:	93 81       	ldd	r25, Z+3	; 0x03
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	40 e8       	ldi	r20, 0x80	; 128
     fc0:	5f e3       	ldi	r21, 0x3F	; 63
     fc2:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
     fc6:	88 23       	and	r24, r24
     fc8:	34 f4       	brge	.+12     	; 0xfd6 <__stack+0x777>
		__ticks = 1;
     fca:	fe 01       	movw	r30, r28
     fcc:	e0 57       	subi	r30, 0x70	; 112
     fce:	fe 4f       	sbci	r31, 0xFE	; 254
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	80 83       	st	Z, r24
     fd4:	e0 c0       	rjmp	.+448    	; 0x1196 <__stack+0x937>
	else if (__tmp > 255)
     fd6:	fe 01       	movw	r30, r28
     fd8:	ef 56       	subi	r30, 0x6F	; 111
     fda:	fe 4f       	sbci	r31, 0xFE	; 254
     fdc:	60 81       	ld	r22, Z
     fde:	71 81       	ldd	r23, Z+1	; 0x01
     fe0:	82 81       	ldd	r24, Z+2	; 0x02
     fe2:	93 81       	ldd	r25, Z+3	; 0x03
     fe4:	20 e0       	ldi	r18, 0x00	; 0
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	4f e7       	ldi	r20, 0x7F	; 127
     fea:	53 e4       	ldi	r21, 0x43	; 67
     fec:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
     ff0:	18 16       	cp	r1, r24
     ff2:	0c f0       	brlt	.+2      	; 0xff6 <__stack+0x797>
     ff4:	c0 c0       	rjmp	.+384    	; 0x1176 <__stack+0x917>
	{
		_delay_ms(__us / 1000.0);
     ff6:	fe 01       	movw	r30, r28
     ff8:	eb 56       	subi	r30, 0x6B	; 107
     ffa:	fe 4f       	sbci	r31, 0xFE	; 254
     ffc:	60 81       	ld	r22, Z
     ffe:	71 81       	ldd	r23, Z+1	; 0x01
    1000:	82 81       	ldd	r24, Z+2	; 0x02
    1002:	93 81       	ldd	r25, Z+3	; 0x03
    1004:	20 e0       	ldi	r18, 0x00	; 0
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	4a e7       	ldi	r20, 0x7A	; 122
    100a:	54 e4       	ldi	r21, 0x44	; 68
    100c:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    1010:	dc 01       	movw	r26, r24
    1012:	cb 01       	movw	r24, r22
    1014:	fe 01       	movw	r30, r28
    1016:	e4 57       	subi	r30, 0x74	; 116
    1018:	fe 4f       	sbci	r31, 0xFE	; 254
    101a:	80 83       	st	Z, r24
    101c:	91 83       	std	Z+1, r25	; 0x01
    101e:	a2 83       	std	Z+2, r26	; 0x02
    1020:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1022:	8e 01       	movw	r16, r28
    1024:	08 57       	subi	r16, 0x78	; 120
    1026:	1e 4f       	sbci	r17, 0xFE	; 254
    1028:	fe 01       	movw	r30, r28
    102a:	e4 57       	subi	r30, 0x74	; 116
    102c:	fe 4f       	sbci	r31, 0xFE	; 254
    102e:	60 81       	ld	r22, Z
    1030:	71 81       	ldd	r23, Z+1	; 0x01
    1032:	82 81       	ldd	r24, Z+2	; 0x02
    1034:	93 81       	ldd	r25, Z+3	; 0x03
    1036:	20 e0       	ldi	r18, 0x00	; 0
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	4a e7       	ldi	r20, 0x7A	; 122
    103c:	55 e4       	ldi	r21, 0x45	; 69
    103e:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1042:	dc 01       	movw	r26, r24
    1044:	cb 01       	movw	r24, r22
    1046:	f8 01       	movw	r30, r16
    1048:	80 83       	st	Z, r24
    104a:	91 83       	std	Z+1, r25	; 0x01
    104c:	a2 83       	std	Z+2, r26	; 0x02
    104e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1050:	fe 01       	movw	r30, r28
    1052:	e8 57       	subi	r30, 0x78	; 120
    1054:	fe 4f       	sbci	r31, 0xFE	; 254
    1056:	60 81       	ld	r22, Z
    1058:	71 81       	ldd	r23, Z+1	; 0x01
    105a:	82 81       	ldd	r24, Z+2	; 0x02
    105c:	93 81       	ldd	r25, Z+3	; 0x03
    105e:	20 e0       	ldi	r18, 0x00	; 0
    1060:	30 e0       	ldi	r19, 0x00	; 0
    1062:	40 e8       	ldi	r20, 0x80	; 128
    1064:	5f e3       	ldi	r21, 0x3F	; 63
    1066:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    106a:	88 23       	and	r24, r24
    106c:	44 f4       	brge	.+16     	; 0x107e <__stack+0x81f>
		__ticks = 1;
    106e:	fe 01       	movw	r30, r28
    1070:	ea 57       	subi	r30, 0x7A	; 122
    1072:	fe 4f       	sbci	r31, 0xFE	; 254
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	91 83       	std	Z+1, r25	; 0x01
    107a:	80 83       	st	Z, r24
    107c:	64 c0       	rjmp	.+200    	; 0x1146 <__stack+0x8e7>
	else if (__tmp > 65535)
    107e:	fe 01       	movw	r30, r28
    1080:	e8 57       	subi	r30, 0x78	; 120
    1082:	fe 4f       	sbci	r31, 0xFE	; 254
    1084:	60 81       	ld	r22, Z
    1086:	71 81       	ldd	r23, Z+1	; 0x01
    1088:	82 81       	ldd	r24, Z+2	; 0x02
    108a:	93 81       	ldd	r25, Z+3	; 0x03
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	3f ef       	ldi	r19, 0xFF	; 255
    1090:	4f e7       	ldi	r20, 0x7F	; 127
    1092:	57 e4       	ldi	r21, 0x47	; 71
    1094:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1098:	18 16       	cp	r1, r24
    109a:	0c f0       	brlt	.+2      	; 0x109e <__stack+0x83f>
    109c:	43 c0       	rjmp	.+134    	; 0x1124 <__stack+0x8c5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    109e:	fe 01       	movw	r30, r28
    10a0:	e4 57       	subi	r30, 0x74	; 116
    10a2:	fe 4f       	sbci	r31, 0xFE	; 254
    10a4:	60 81       	ld	r22, Z
    10a6:	71 81       	ldd	r23, Z+1	; 0x01
    10a8:	82 81       	ldd	r24, Z+2	; 0x02
    10aa:	93 81       	ldd	r25, Z+3	; 0x03
    10ac:	20 e0       	ldi	r18, 0x00	; 0
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	40 e2       	ldi	r20, 0x20	; 32
    10b2:	51 e4       	ldi	r21, 0x41	; 65
    10b4:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    10b8:	dc 01       	movw	r26, r24
    10ba:	cb 01       	movw	r24, r22
    10bc:	8e 01       	movw	r16, r28
    10be:	0a 57       	subi	r16, 0x7A	; 122
    10c0:	1e 4f       	sbci	r17, 0xFE	; 254
    10c2:	bc 01       	movw	r22, r24
    10c4:	cd 01       	movw	r24, r26
    10c6:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    10ca:	dc 01       	movw	r26, r24
    10cc:	cb 01       	movw	r24, r22
    10ce:	f8 01       	movw	r30, r16
    10d0:	91 83       	std	Z+1, r25	; 0x01
    10d2:	80 83       	st	Z, r24
    10d4:	1f c0       	rjmp	.+62     	; 0x1114 <__stack+0x8b5>
    10d6:	fe 01       	movw	r30, r28
    10d8:	ec 57       	subi	r30, 0x7C	; 124
    10da:	fe 4f       	sbci	r31, 0xFE	; 254
    10dc:	80 e9       	ldi	r24, 0x90	; 144
    10de:	91 e0       	ldi	r25, 0x01	; 1
    10e0:	91 83       	std	Z+1, r25	; 0x01
    10e2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    10e4:	fe 01       	movw	r30, r28
    10e6:	ec 57       	subi	r30, 0x7C	; 124
    10e8:	fe 4f       	sbci	r31, 0xFE	; 254
    10ea:	80 81       	ld	r24, Z
    10ec:	91 81       	ldd	r25, Z+1	; 0x01
    10ee:	01 97       	sbiw	r24, 0x01	; 1
    10f0:	f1 f7       	brne	.-4      	; 0x10ee <__stack+0x88f>
    10f2:	fe 01       	movw	r30, r28
    10f4:	ec 57       	subi	r30, 0x7C	; 124
    10f6:	fe 4f       	sbci	r31, 0xFE	; 254
    10f8:	91 83       	std	Z+1, r25	; 0x01
    10fa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10fc:	de 01       	movw	r26, r28
    10fe:	aa 57       	subi	r26, 0x7A	; 122
    1100:	be 4f       	sbci	r27, 0xFE	; 254
    1102:	fe 01       	movw	r30, r28
    1104:	ea 57       	subi	r30, 0x7A	; 122
    1106:	fe 4f       	sbci	r31, 0xFE	; 254
    1108:	80 81       	ld	r24, Z
    110a:	91 81       	ldd	r25, Z+1	; 0x01
    110c:	01 97       	sbiw	r24, 0x01	; 1
    110e:	11 96       	adiw	r26, 0x01	; 1
    1110:	9c 93       	st	X, r25
    1112:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1114:	fe 01       	movw	r30, r28
    1116:	ea 57       	subi	r30, 0x7A	; 122
    1118:	fe 4f       	sbci	r31, 0xFE	; 254
    111a:	80 81       	ld	r24, Z
    111c:	91 81       	ldd	r25, Z+1	; 0x01
    111e:	00 97       	sbiw	r24, 0x00	; 0
    1120:	d1 f6       	brne	.-76     	; 0x10d6 <__stack+0x877>
    1122:	4b c0       	rjmp	.+150    	; 0x11ba <__stack+0x95b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1124:	8e 01       	movw	r16, r28
    1126:	0a 57       	subi	r16, 0x7A	; 122
    1128:	1e 4f       	sbci	r17, 0xFE	; 254
    112a:	fe 01       	movw	r30, r28
    112c:	e8 57       	subi	r30, 0x78	; 120
    112e:	fe 4f       	sbci	r31, 0xFE	; 254
    1130:	60 81       	ld	r22, Z
    1132:	71 81       	ldd	r23, Z+1	; 0x01
    1134:	82 81       	ldd	r24, Z+2	; 0x02
    1136:	93 81       	ldd	r25, Z+3	; 0x03
    1138:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    113c:	dc 01       	movw	r26, r24
    113e:	cb 01       	movw	r24, r22
    1140:	f8 01       	movw	r30, r16
    1142:	91 83       	std	Z+1, r25	; 0x01
    1144:	80 83       	st	Z, r24
    1146:	de 01       	movw	r26, r28
    1148:	ae 57       	subi	r26, 0x7E	; 126
    114a:	be 4f       	sbci	r27, 0xFE	; 254
    114c:	fe 01       	movw	r30, r28
    114e:	ea 57       	subi	r30, 0x7A	; 122
    1150:	fe 4f       	sbci	r31, 0xFE	; 254
    1152:	80 81       	ld	r24, Z
    1154:	91 81       	ldd	r25, Z+1	; 0x01
    1156:	11 96       	adiw	r26, 0x01	; 1
    1158:	9c 93       	st	X, r25
    115a:	8e 93       	st	-X, r24
    115c:	fe 01       	movw	r30, r28
    115e:	ee 57       	subi	r30, 0x7E	; 126
    1160:	fe 4f       	sbci	r31, 0xFE	; 254
    1162:	80 81       	ld	r24, Z
    1164:	91 81       	ldd	r25, Z+1	; 0x01
    1166:	01 97       	sbiw	r24, 0x01	; 1
    1168:	f1 f7       	brne	.-4      	; 0x1166 <__stack+0x907>
    116a:	fe 01       	movw	r30, r28
    116c:	ee 57       	subi	r30, 0x7E	; 126
    116e:	fe 4f       	sbci	r31, 0xFE	; 254
    1170:	91 83       	std	Z+1, r25	; 0x01
    1172:	80 83       	st	Z, r24
    1174:	22 c0       	rjmp	.+68     	; 0x11ba <__stack+0x95b>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1176:	8e 01       	movw	r16, r28
    1178:	00 57       	subi	r16, 0x70	; 112
    117a:	1e 4f       	sbci	r17, 0xFE	; 254
    117c:	fe 01       	movw	r30, r28
    117e:	ef 56       	subi	r30, 0x6F	; 111
    1180:	fe 4f       	sbci	r31, 0xFE	; 254
    1182:	60 81       	ld	r22, Z
    1184:	71 81       	ldd	r23, Z+1	; 0x01
    1186:	82 81       	ldd	r24, Z+2	; 0x02
    1188:	93 81       	ldd	r25, Z+3	; 0x03
    118a:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    118e:	dc 01       	movw	r26, r24
    1190:	cb 01       	movw	r24, r22
    1192:	f8 01       	movw	r30, r16
    1194:	80 83       	st	Z, r24
    1196:	de 01       	movw	r26, r28
    1198:	af 57       	subi	r26, 0x7F	; 127
    119a:	be 4f       	sbci	r27, 0xFE	; 254
    119c:	fe 01       	movw	r30, r28
    119e:	e0 57       	subi	r30, 0x70	; 112
    11a0:	fe 4f       	sbci	r31, 0xFE	; 254
    11a2:	80 81       	ld	r24, Z
    11a4:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    11a6:	fe 01       	movw	r30, r28
    11a8:	ef 57       	subi	r30, 0x7F	; 127
    11aa:	fe 4f       	sbci	r31, 0xFE	; 254
    11ac:	80 81       	ld	r24, Z
    11ae:	8a 95       	dec	r24
    11b0:	f1 f7       	brne	.-4      	; 0x11ae <__stack+0x94f>
    11b2:	fe 01       	movw	r30, r28
    11b4:	ef 57       	subi	r30, 0x7F	; 127
    11b6:	fe 4f       	sbci	r31, 0xFE	; 254
    11b8:	80 83       	st	Z, r24
	PORTC |= 0x01;		//clock high
	_delay_us(5);
	
	PORTC &= 0xFB;		//cmd low
	
	for(i = 0;i<7;i++)
    11ba:	80 91 60 00 	lds	r24, 0x0060
    11be:	90 91 61 00 	lds	r25, 0x0061
    11c2:	01 96       	adiw	r24, 0x01	; 1
    11c4:	90 93 61 00 	sts	0x0061, r25
    11c8:	80 93 60 00 	sts	0x0060, r24
    11cc:	80 91 60 00 	lds	r24, 0x0060
    11d0:	90 91 61 00 	lds	r25, 0x0061
    11d4:	87 30       	cpi	r24, 0x07	; 7
    11d6:	91 05       	cpc	r25, r1
    11d8:	0c f4       	brge	.+2      	; 0x11dc <__stack+0x97d>
    11da:	8f cd       	rjmp	.-1250   	; 0xcfa <__stack+0x49b>
	}
	
	
	//BYTE 2
	
	PORTC &= 0xFB;		//cmd low
    11dc:	a5 e3       	ldi	r26, 0x35	; 53
    11de:	b0 e0       	ldi	r27, 0x00	; 0
    11e0:	e5 e3       	ldi	r30, 0x35	; 53
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	80 81       	ld	r24, Z
    11e6:	8b 7f       	andi	r24, 0xFB	; 251
    11e8:	8c 93       	st	X, r24
	
	PORTC &= 0xFE;		//clock low
    11ea:	a5 e3       	ldi	r26, 0x35	; 53
    11ec:	b0 e0       	ldi	r27, 0x00	; 0
    11ee:	e5 e3       	ldi	r30, 0x35	; 53
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	80 81       	ld	r24, Z
    11f4:	8e 7f       	andi	r24, 0xFE	; 254
    11f6:	8c 93       	st	X, r24
    11f8:	fe 01       	movw	r30, r28
    11fa:	e3 58       	subi	r30, 0x83	; 131
    11fc:	fe 4f       	sbci	r31, 0xFE	; 254
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	a0 ea       	ldi	r26, 0xA0	; 160
    1204:	b0 e4       	ldi	r27, 0x40	; 64
    1206:	80 83       	st	Z, r24
    1208:	91 83       	std	Z+1, r25	; 0x01
    120a:	a2 83       	std	Z+2, r26	; 0x02
    120c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    120e:	8e 01       	movw	r16, r28
    1210:	07 58       	subi	r16, 0x87	; 135
    1212:	1e 4f       	sbci	r17, 0xFE	; 254
    1214:	fe 01       	movw	r30, r28
    1216:	e3 58       	subi	r30, 0x83	; 131
    1218:	fe 4f       	sbci	r31, 0xFE	; 254
    121a:	60 81       	ld	r22, Z
    121c:	71 81       	ldd	r23, Z+1	; 0x01
    121e:	82 81       	ldd	r24, Z+2	; 0x02
    1220:	93 81       	ldd	r25, Z+3	; 0x03
    1222:	2b ea       	ldi	r18, 0xAB	; 171
    1224:	3a ea       	ldi	r19, 0xAA	; 170
    1226:	4a ea       	ldi	r20, 0xAA	; 170
    1228:	50 e4       	ldi	r21, 0x40	; 64
    122a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    122e:	dc 01       	movw	r26, r24
    1230:	cb 01       	movw	r24, r22
    1232:	f8 01       	movw	r30, r16
    1234:	80 83       	st	Z, r24
    1236:	91 83       	std	Z+1, r25	; 0x01
    1238:	a2 83       	std	Z+2, r26	; 0x02
    123a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    123c:	fe 01       	movw	r30, r28
    123e:	e7 58       	subi	r30, 0x87	; 135
    1240:	fe 4f       	sbci	r31, 0xFE	; 254
    1242:	60 81       	ld	r22, Z
    1244:	71 81       	ldd	r23, Z+1	; 0x01
    1246:	82 81       	ldd	r24, Z+2	; 0x02
    1248:	93 81       	ldd	r25, Z+3	; 0x03
    124a:	20 e0       	ldi	r18, 0x00	; 0
    124c:	30 e0       	ldi	r19, 0x00	; 0
    124e:	40 e8       	ldi	r20, 0x80	; 128
    1250:	5f e3       	ldi	r21, 0x3F	; 63
    1252:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    1256:	88 23       	and	r24, r24
    1258:	34 f4       	brge	.+12     	; 0x1266 <__stack+0xa07>
		__ticks = 1;
    125a:	fe 01       	movw	r30, r28
    125c:	e8 58       	subi	r30, 0x88	; 136
    125e:	fe 4f       	sbci	r31, 0xFE	; 254
    1260:	81 e0       	ldi	r24, 0x01	; 1
    1262:	80 83       	st	Z, r24
    1264:	e0 c0       	rjmp	.+448    	; 0x1426 <__stack+0xbc7>
	else if (__tmp > 255)
    1266:	fe 01       	movw	r30, r28
    1268:	e7 58       	subi	r30, 0x87	; 135
    126a:	fe 4f       	sbci	r31, 0xFE	; 254
    126c:	60 81       	ld	r22, Z
    126e:	71 81       	ldd	r23, Z+1	; 0x01
    1270:	82 81       	ldd	r24, Z+2	; 0x02
    1272:	93 81       	ldd	r25, Z+3	; 0x03
    1274:	20 e0       	ldi	r18, 0x00	; 0
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	4f e7       	ldi	r20, 0x7F	; 127
    127a:	53 e4       	ldi	r21, 0x43	; 67
    127c:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1280:	18 16       	cp	r1, r24
    1282:	0c f0       	brlt	.+2      	; 0x1286 <__stack+0xa27>
    1284:	c0 c0       	rjmp	.+384    	; 0x1406 <__stack+0xba7>
	{
		_delay_ms(__us / 1000.0);
    1286:	fe 01       	movw	r30, r28
    1288:	e3 58       	subi	r30, 0x83	; 131
    128a:	fe 4f       	sbci	r31, 0xFE	; 254
    128c:	60 81       	ld	r22, Z
    128e:	71 81       	ldd	r23, Z+1	; 0x01
    1290:	82 81       	ldd	r24, Z+2	; 0x02
    1292:	93 81       	ldd	r25, Z+3	; 0x03
    1294:	20 e0       	ldi	r18, 0x00	; 0
    1296:	30 e0       	ldi	r19, 0x00	; 0
    1298:	4a e7       	ldi	r20, 0x7A	; 122
    129a:	54 e4       	ldi	r21, 0x44	; 68
    129c:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    12a0:	dc 01       	movw	r26, r24
    12a2:	cb 01       	movw	r24, r22
    12a4:	fe 01       	movw	r30, r28
    12a6:	ec 58       	subi	r30, 0x8C	; 140
    12a8:	fe 4f       	sbci	r31, 0xFE	; 254
    12aa:	80 83       	st	Z, r24
    12ac:	91 83       	std	Z+1, r25	; 0x01
    12ae:	a2 83       	std	Z+2, r26	; 0x02
    12b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12b2:	8e 01       	movw	r16, r28
    12b4:	00 59       	subi	r16, 0x90	; 144
    12b6:	1e 4f       	sbci	r17, 0xFE	; 254
    12b8:	fe 01       	movw	r30, r28
    12ba:	ec 58       	subi	r30, 0x8C	; 140
    12bc:	fe 4f       	sbci	r31, 0xFE	; 254
    12be:	60 81       	ld	r22, Z
    12c0:	71 81       	ldd	r23, Z+1	; 0x01
    12c2:	82 81       	ldd	r24, Z+2	; 0x02
    12c4:	93 81       	ldd	r25, Z+3	; 0x03
    12c6:	20 e0       	ldi	r18, 0x00	; 0
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	4a e7       	ldi	r20, 0x7A	; 122
    12cc:	55 e4       	ldi	r21, 0x45	; 69
    12ce:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    12d2:	dc 01       	movw	r26, r24
    12d4:	cb 01       	movw	r24, r22
    12d6:	f8 01       	movw	r30, r16
    12d8:	80 83       	st	Z, r24
    12da:	91 83       	std	Z+1, r25	; 0x01
    12dc:	a2 83       	std	Z+2, r26	; 0x02
    12de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12e0:	fe 01       	movw	r30, r28
    12e2:	e0 59       	subi	r30, 0x90	; 144
    12e4:	fe 4f       	sbci	r31, 0xFE	; 254
    12e6:	60 81       	ld	r22, Z
    12e8:	71 81       	ldd	r23, Z+1	; 0x01
    12ea:	82 81       	ldd	r24, Z+2	; 0x02
    12ec:	93 81       	ldd	r25, Z+3	; 0x03
    12ee:	20 e0       	ldi	r18, 0x00	; 0
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	40 e8       	ldi	r20, 0x80	; 128
    12f4:	5f e3       	ldi	r21, 0x3F	; 63
    12f6:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    12fa:	88 23       	and	r24, r24
    12fc:	44 f4       	brge	.+16     	; 0x130e <__stack+0xaaf>
		__ticks = 1;
    12fe:	fe 01       	movw	r30, r28
    1300:	e2 59       	subi	r30, 0x92	; 146
    1302:	fe 4f       	sbci	r31, 0xFE	; 254
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	91 83       	std	Z+1, r25	; 0x01
    130a:	80 83       	st	Z, r24
    130c:	64 c0       	rjmp	.+200    	; 0x13d6 <__stack+0xb77>
	else if (__tmp > 65535)
    130e:	fe 01       	movw	r30, r28
    1310:	e0 59       	subi	r30, 0x90	; 144
    1312:	fe 4f       	sbci	r31, 0xFE	; 254
    1314:	60 81       	ld	r22, Z
    1316:	71 81       	ldd	r23, Z+1	; 0x01
    1318:	82 81       	ldd	r24, Z+2	; 0x02
    131a:	93 81       	ldd	r25, Z+3	; 0x03
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	3f ef       	ldi	r19, 0xFF	; 255
    1320:	4f e7       	ldi	r20, 0x7F	; 127
    1322:	57 e4       	ldi	r21, 0x47	; 71
    1324:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1328:	18 16       	cp	r1, r24
    132a:	0c f0       	brlt	.+2      	; 0x132e <__stack+0xacf>
    132c:	43 c0       	rjmp	.+134    	; 0x13b4 <__stack+0xb55>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    132e:	fe 01       	movw	r30, r28
    1330:	ec 58       	subi	r30, 0x8C	; 140
    1332:	fe 4f       	sbci	r31, 0xFE	; 254
    1334:	60 81       	ld	r22, Z
    1336:	71 81       	ldd	r23, Z+1	; 0x01
    1338:	82 81       	ldd	r24, Z+2	; 0x02
    133a:	93 81       	ldd	r25, Z+3	; 0x03
    133c:	20 e0       	ldi	r18, 0x00	; 0
    133e:	30 e0       	ldi	r19, 0x00	; 0
    1340:	40 e2       	ldi	r20, 0x20	; 32
    1342:	51 e4       	ldi	r21, 0x41	; 65
    1344:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1348:	dc 01       	movw	r26, r24
    134a:	cb 01       	movw	r24, r22
    134c:	8e 01       	movw	r16, r28
    134e:	02 59       	subi	r16, 0x92	; 146
    1350:	1e 4f       	sbci	r17, 0xFE	; 254
    1352:	bc 01       	movw	r22, r24
    1354:	cd 01       	movw	r24, r26
    1356:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    135a:	dc 01       	movw	r26, r24
    135c:	cb 01       	movw	r24, r22
    135e:	f8 01       	movw	r30, r16
    1360:	91 83       	std	Z+1, r25	; 0x01
    1362:	80 83       	st	Z, r24
    1364:	1f c0       	rjmp	.+62     	; 0x13a4 <__stack+0xb45>
    1366:	fe 01       	movw	r30, r28
    1368:	e4 59       	subi	r30, 0x94	; 148
    136a:	fe 4f       	sbci	r31, 0xFE	; 254
    136c:	80 e9       	ldi	r24, 0x90	; 144
    136e:	91 e0       	ldi	r25, 0x01	; 1
    1370:	91 83       	std	Z+1, r25	; 0x01
    1372:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1374:	fe 01       	movw	r30, r28
    1376:	e4 59       	subi	r30, 0x94	; 148
    1378:	fe 4f       	sbci	r31, 0xFE	; 254
    137a:	80 81       	ld	r24, Z
    137c:	91 81       	ldd	r25, Z+1	; 0x01
    137e:	01 97       	sbiw	r24, 0x01	; 1
    1380:	f1 f7       	brne	.-4      	; 0x137e <__stack+0xb1f>
    1382:	fe 01       	movw	r30, r28
    1384:	e4 59       	subi	r30, 0x94	; 148
    1386:	fe 4f       	sbci	r31, 0xFE	; 254
    1388:	91 83       	std	Z+1, r25	; 0x01
    138a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    138c:	de 01       	movw	r26, r28
    138e:	a2 59       	subi	r26, 0x92	; 146
    1390:	be 4f       	sbci	r27, 0xFE	; 254
    1392:	fe 01       	movw	r30, r28
    1394:	e2 59       	subi	r30, 0x92	; 146
    1396:	fe 4f       	sbci	r31, 0xFE	; 254
    1398:	80 81       	ld	r24, Z
    139a:	91 81       	ldd	r25, Z+1	; 0x01
    139c:	01 97       	sbiw	r24, 0x01	; 1
    139e:	11 96       	adiw	r26, 0x01	; 1
    13a0:	9c 93       	st	X, r25
    13a2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13a4:	fe 01       	movw	r30, r28
    13a6:	e2 59       	subi	r30, 0x92	; 146
    13a8:	fe 4f       	sbci	r31, 0xFE	; 254
    13aa:	80 81       	ld	r24, Z
    13ac:	91 81       	ldd	r25, Z+1	; 0x01
    13ae:	00 97       	sbiw	r24, 0x00	; 0
    13b0:	d1 f6       	brne	.-76     	; 0x1366 <__stack+0xb07>
    13b2:	4b c0       	rjmp	.+150    	; 0x144a <__stack+0xbeb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13b4:	8e 01       	movw	r16, r28
    13b6:	02 59       	subi	r16, 0x92	; 146
    13b8:	1e 4f       	sbci	r17, 0xFE	; 254
    13ba:	fe 01       	movw	r30, r28
    13bc:	e0 59       	subi	r30, 0x90	; 144
    13be:	fe 4f       	sbci	r31, 0xFE	; 254
    13c0:	60 81       	ld	r22, Z
    13c2:	71 81       	ldd	r23, Z+1	; 0x01
    13c4:	82 81       	ldd	r24, Z+2	; 0x02
    13c6:	93 81       	ldd	r25, Z+3	; 0x03
    13c8:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    13cc:	dc 01       	movw	r26, r24
    13ce:	cb 01       	movw	r24, r22
    13d0:	f8 01       	movw	r30, r16
    13d2:	91 83       	std	Z+1, r25	; 0x01
    13d4:	80 83       	st	Z, r24
    13d6:	de 01       	movw	r26, r28
    13d8:	a6 59       	subi	r26, 0x96	; 150
    13da:	be 4f       	sbci	r27, 0xFE	; 254
    13dc:	fe 01       	movw	r30, r28
    13de:	e2 59       	subi	r30, 0x92	; 146
    13e0:	fe 4f       	sbci	r31, 0xFE	; 254
    13e2:	80 81       	ld	r24, Z
    13e4:	91 81       	ldd	r25, Z+1	; 0x01
    13e6:	11 96       	adiw	r26, 0x01	; 1
    13e8:	9c 93       	st	X, r25
    13ea:	8e 93       	st	-X, r24
    13ec:	fe 01       	movw	r30, r28
    13ee:	e6 59       	subi	r30, 0x96	; 150
    13f0:	fe 4f       	sbci	r31, 0xFE	; 254
    13f2:	80 81       	ld	r24, Z
    13f4:	91 81       	ldd	r25, Z+1	; 0x01
    13f6:	01 97       	sbiw	r24, 0x01	; 1
    13f8:	f1 f7       	brne	.-4      	; 0x13f6 <__stack+0xb97>
    13fa:	fe 01       	movw	r30, r28
    13fc:	e6 59       	subi	r30, 0x96	; 150
    13fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1400:	91 83       	std	Z+1, r25	; 0x01
    1402:	80 83       	st	Z, r24
    1404:	22 c0       	rjmp	.+68     	; 0x144a <__stack+0xbeb>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1406:	8e 01       	movw	r16, r28
    1408:	08 58       	subi	r16, 0x88	; 136
    140a:	1e 4f       	sbci	r17, 0xFE	; 254
    140c:	fe 01       	movw	r30, r28
    140e:	e7 58       	subi	r30, 0x87	; 135
    1410:	fe 4f       	sbci	r31, 0xFE	; 254
    1412:	60 81       	ld	r22, Z
    1414:	71 81       	ldd	r23, Z+1	; 0x01
    1416:	82 81       	ldd	r24, Z+2	; 0x02
    1418:	93 81       	ldd	r25, Z+3	; 0x03
    141a:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	f8 01       	movw	r30, r16
    1424:	80 83       	st	Z, r24
    1426:	de 01       	movw	r26, r28
    1428:	a7 59       	subi	r26, 0x97	; 151
    142a:	be 4f       	sbci	r27, 0xFE	; 254
    142c:	fe 01       	movw	r30, r28
    142e:	e8 58       	subi	r30, 0x88	; 136
    1430:	fe 4f       	sbci	r31, 0xFE	; 254
    1432:	80 81       	ld	r24, Z
    1434:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1436:	fe 01       	movw	r30, r28
    1438:	e7 59       	subi	r30, 0x97	; 151
    143a:	fe 4f       	sbci	r31, 0xFE	; 254
    143c:	80 81       	ld	r24, Z
    143e:	8a 95       	dec	r24
    1440:	f1 f7       	brne	.-4      	; 0x143e <__stack+0xbdf>
    1442:	fe 01       	movw	r30, r28
    1444:	e7 59       	subi	r30, 0x97	; 151
    1446:	fe 4f       	sbci	r31, 0xFE	; 254
    1448:	80 83       	st	Z, r24
	_delay_us(5);
	PORTC |= 0x01;		//clock high
    144a:	a5 e3       	ldi	r26, 0x35	; 53
    144c:	b0 e0       	ldi	r27, 0x00	; 0
    144e:	e5 e3       	ldi	r30, 0x35	; 53
    1450:	f0 e0       	ldi	r31, 0x00	; 0
    1452:	80 81       	ld	r24, Z
    1454:	81 60       	ori	r24, 0x01	; 1
    1456:	8c 93       	st	X, r24
    1458:	fe 01       	movw	r30, r28
    145a:	eb 59       	subi	r30, 0x9B	; 155
    145c:	fe 4f       	sbci	r31, 0xFE	; 254
    145e:	80 e0       	ldi	r24, 0x00	; 0
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	a0 ea       	ldi	r26, 0xA0	; 160
    1464:	b0 e4       	ldi	r27, 0x40	; 64
    1466:	80 83       	st	Z, r24
    1468:	91 83       	std	Z+1, r25	; 0x01
    146a:	a2 83       	std	Z+2, r26	; 0x02
    146c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    146e:	8e 01       	movw	r16, r28
    1470:	0f 59       	subi	r16, 0x9F	; 159
    1472:	1e 4f       	sbci	r17, 0xFE	; 254
    1474:	fe 01       	movw	r30, r28
    1476:	eb 59       	subi	r30, 0x9B	; 155
    1478:	fe 4f       	sbci	r31, 0xFE	; 254
    147a:	60 81       	ld	r22, Z
    147c:	71 81       	ldd	r23, Z+1	; 0x01
    147e:	82 81       	ldd	r24, Z+2	; 0x02
    1480:	93 81       	ldd	r25, Z+3	; 0x03
    1482:	2b ea       	ldi	r18, 0xAB	; 171
    1484:	3a ea       	ldi	r19, 0xAA	; 170
    1486:	4a ea       	ldi	r20, 0xAA	; 170
    1488:	50 e4       	ldi	r21, 0x40	; 64
    148a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    148e:	dc 01       	movw	r26, r24
    1490:	cb 01       	movw	r24, r22
    1492:	f8 01       	movw	r30, r16
    1494:	80 83       	st	Z, r24
    1496:	91 83       	std	Z+1, r25	; 0x01
    1498:	a2 83       	std	Z+2, r26	; 0x02
    149a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    149c:	fe 01       	movw	r30, r28
    149e:	ef 59       	subi	r30, 0x9F	; 159
    14a0:	fe 4f       	sbci	r31, 0xFE	; 254
    14a2:	60 81       	ld	r22, Z
    14a4:	71 81       	ldd	r23, Z+1	; 0x01
    14a6:	82 81       	ldd	r24, Z+2	; 0x02
    14a8:	93 81       	ldd	r25, Z+3	; 0x03
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	40 e8       	ldi	r20, 0x80	; 128
    14b0:	5f e3       	ldi	r21, 0x3F	; 63
    14b2:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    14b6:	88 23       	and	r24, r24
    14b8:	34 f4       	brge	.+12     	; 0x14c6 <__stack+0xc67>
		__ticks = 1;
    14ba:	fe 01       	movw	r30, r28
    14bc:	e0 5a       	subi	r30, 0xA0	; 160
    14be:	fe 4f       	sbci	r31, 0xFE	; 254
    14c0:	81 e0       	ldi	r24, 0x01	; 1
    14c2:	80 83       	st	Z, r24
    14c4:	e0 c0       	rjmp	.+448    	; 0x1686 <__stack+0xe27>
	else if (__tmp > 255)
    14c6:	fe 01       	movw	r30, r28
    14c8:	ef 59       	subi	r30, 0x9F	; 159
    14ca:	fe 4f       	sbci	r31, 0xFE	; 254
    14cc:	60 81       	ld	r22, Z
    14ce:	71 81       	ldd	r23, Z+1	; 0x01
    14d0:	82 81       	ldd	r24, Z+2	; 0x02
    14d2:	93 81       	ldd	r25, Z+3	; 0x03
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	4f e7       	ldi	r20, 0x7F	; 127
    14da:	53 e4       	ldi	r21, 0x43	; 67
    14dc:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    14e0:	18 16       	cp	r1, r24
    14e2:	0c f0       	brlt	.+2      	; 0x14e6 <__stack+0xc87>
    14e4:	c0 c0       	rjmp	.+384    	; 0x1666 <__stack+0xe07>
	{
		_delay_ms(__us / 1000.0);
    14e6:	fe 01       	movw	r30, r28
    14e8:	eb 59       	subi	r30, 0x9B	; 155
    14ea:	fe 4f       	sbci	r31, 0xFE	; 254
    14ec:	60 81       	ld	r22, Z
    14ee:	71 81       	ldd	r23, Z+1	; 0x01
    14f0:	82 81       	ldd	r24, Z+2	; 0x02
    14f2:	93 81       	ldd	r25, Z+3	; 0x03
    14f4:	20 e0       	ldi	r18, 0x00	; 0
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	4a e7       	ldi	r20, 0x7A	; 122
    14fa:	54 e4       	ldi	r21, 0x44	; 68
    14fc:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    1500:	dc 01       	movw	r26, r24
    1502:	cb 01       	movw	r24, r22
    1504:	fe 01       	movw	r30, r28
    1506:	e4 5a       	subi	r30, 0xA4	; 164
    1508:	fe 4f       	sbci	r31, 0xFE	; 254
    150a:	80 83       	st	Z, r24
    150c:	91 83       	std	Z+1, r25	; 0x01
    150e:	a2 83       	std	Z+2, r26	; 0x02
    1510:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1512:	8e 01       	movw	r16, r28
    1514:	08 5a       	subi	r16, 0xA8	; 168
    1516:	1e 4f       	sbci	r17, 0xFE	; 254
    1518:	fe 01       	movw	r30, r28
    151a:	e4 5a       	subi	r30, 0xA4	; 164
    151c:	fe 4f       	sbci	r31, 0xFE	; 254
    151e:	60 81       	ld	r22, Z
    1520:	71 81       	ldd	r23, Z+1	; 0x01
    1522:	82 81       	ldd	r24, Z+2	; 0x02
    1524:	93 81       	ldd	r25, Z+3	; 0x03
    1526:	20 e0       	ldi	r18, 0x00	; 0
    1528:	30 e0       	ldi	r19, 0x00	; 0
    152a:	4a e7       	ldi	r20, 0x7A	; 122
    152c:	55 e4       	ldi	r21, 0x45	; 69
    152e:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1532:	dc 01       	movw	r26, r24
    1534:	cb 01       	movw	r24, r22
    1536:	f8 01       	movw	r30, r16
    1538:	80 83       	st	Z, r24
    153a:	91 83       	std	Z+1, r25	; 0x01
    153c:	a2 83       	std	Z+2, r26	; 0x02
    153e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1540:	fe 01       	movw	r30, r28
    1542:	e8 5a       	subi	r30, 0xA8	; 168
    1544:	fe 4f       	sbci	r31, 0xFE	; 254
    1546:	60 81       	ld	r22, Z
    1548:	71 81       	ldd	r23, Z+1	; 0x01
    154a:	82 81       	ldd	r24, Z+2	; 0x02
    154c:	93 81       	ldd	r25, Z+3	; 0x03
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	40 e8       	ldi	r20, 0x80	; 128
    1554:	5f e3       	ldi	r21, 0x3F	; 63
    1556:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    155a:	88 23       	and	r24, r24
    155c:	44 f4       	brge	.+16     	; 0x156e <__stack+0xd0f>
		__ticks = 1;
    155e:	fe 01       	movw	r30, r28
    1560:	ea 5a       	subi	r30, 0xAA	; 170
    1562:	fe 4f       	sbci	r31, 0xFE	; 254
    1564:	81 e0       	ldi	r24, 0x01	; 1
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	91 83       	std	Z+1, r25	; 0x01
    156a:	80 83       	st	Z, r24
    156c:	64 c0       	rjmp	.+200    	; 0x1636 <__stack+0xdd7>
	else if (__tmp > 65535)
    156e:	fe 01       	movw	r30, r28
    1570:	e8 5a       	subi	r30, 0xA8	; 168
    1572:	fe 4f       	sbci	r31, 0xFE	; 254
    1574:	60 81       	ld	r22, Z
    1576:	71 81       	ldd	r23, Z+1	; 0x01
    1578:	82 81       	ldd	r24, Z+2	; 0x02
    157a:	93 81       	ldd	r25, Z+3	; 0x03
    157c:	20 e0       	ldi	r18, 0x00	; 0
    157e:	3f ef       	ldi	r19, 0xFF	; 255
    1580:	4f e7       	ldi	r20, 0x7F	; 127
    1582:	57 e4       	ldi	r21, 0x47	; 71
    1584:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1588:	18 16       	cp	r1, r24
    158a:	0c f0       	brlt	.+2      	; 0x158e <__stack+0xd2f>
    158c:	43 c0       	rjmp	.+134    	; 0x1614 <__stack+0xdb5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    158e:	fe 01       	movw	r30, r28
    1590:	e4 5a       	subi	r30, 0xA4	; 164
    1592:	fe 4f       	sbci	r31, 0xFE	; 254
    1594:	60 81       	ld	r22, Z
    1596:	71 81       	ldd	r23, Z+1	; 0x01
    1598:	82 81       	ldd	r24, Z+2	; 0x02
    159a:	93 81       	ldd	r25, Z+3	; 0x03
    159c:	20 e0       	ldi	r18, 0x00	; 0
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	40 e2       	ldi	r20, 0x20	; 32
    15a2:	51 e4       	ldi	r21, 0x41	; 65
    15a4:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    15a8:	dc 01       	movw	r26, r24
    15aa:	cb 01       	movw	r24, r22
    15ac:	8e 01       	movw	r16, r28
    15ae:	0a 5a       	subi	r16, 0xAA	; 170
    15b0:	1e 4f       	sbci	r17, 0xFE	; 254
    15b2:	bc 01       	movw	r22, r24
    15b4:	cd 01       	movw	r24, r26
    15b6:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    15ba:	dc 01       	movw	r26, r24
    15bc:	cb 01       	movw	r24, r22
    15be:	f8 01       	movw	r30, r16
    15c0:	91 83       	std	Z+1, r25	; 0x01
    15c2:	80 83       	st	Z, r24
    15c4:	1f c0       	rjmp	.+62     	; 0x1604 <__stack+0xda5>
    15c6:	fe 01       	movw	r30, r28
    15c8:	ec 5a       	subi	r30, 0xAC	; 172
    15ca:	fe 4f       	sbci	r31, 0xFE	; 254
    15cc:	80 e9       	ldi	r24, 0x90	; 144
    15ce:	91 e0       	ldi	r25, 0x01	; 1
    15d0:	91 83       	std	Z+1, r25	; 0x01
    15d2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15d4:	fe 01       	movw	r30, r28
    15d6:	ec 5a       	subi	r30, 0xAC	; 172
    15d8:	fe 4f       	sbci	r31, 0xFE	; 254
    15da:	80 81       	ld	r24, Z
    15dc:	91 81       	ldd	r25, Z+1	; 0x01
    15de:	01 97       	sbiw	r24, 0x01	; 1
    15e0:	f1 f7       	brne	.-4      	; 0x15de <__stack+0xd7f>
    15e2:	fe 01       	movw	r30, r28
    15e4:	ec 5a       	subi	r30, 0xAC	; 172
    15e6:	fe 4f       	sbci	r31, 0xFE	; 254
    15e8:	91 83       	std	Z+1, r25	; 0x01
    15ea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ec:	de 01       	movw	r26, r28
    15ee:	aa 5a       	subi	r26, 0xAA	; 170
    15f0:	be 4f       	sbci	r27, 0xFE	; 254
    15f2:	fe 01       	movw	r30, r28
    15f4:	ea 5a       	subi	r30, 0xAA	; 170
    15f6:	fe 4f       	sbci	r31, 0xFE	; 254
    15f8:	80 81       	ld	r24, Z
    15fa:	91 81       	ldd	r25, Z+1	; 0x01
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	11 96       	adiw	r26, 0x01	; 1
    1600:	9c 93       	st	X, r25
    1602:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1604:	fe 01       	movw	r30, r28
    1606:	ea 5a       	subi	r30, 0xAA	; 170
    1608:	fe 4f       	sbci	r31, 0xFE	; 254
    160a:	80 81       	ld	r24, Z
    160c:	91 81       	ldd	r25, Z+1	; 0x01
    160e:	00 97       	sbiw	r24, 0x00	; 0
    1610:	d1 f6       	brne	.-76     	; 0x15c6 <__stack+0xd67>
    1612:	4b c0       	rjmp	.+150    	; 0x16aa <__stack+0xe4b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1614:	8e 01       	movw	r16, r28
    1616:	0a 5a       	subi	r16, 0xAA	; 170
    1618:	1e 4f       	sbci	r17, 0xFE	; 254
    161a:	fe 01       	movw	r30, r28
    161c:	e8 5a       	subi	r30, 0xA8	; 168
    161e:	fe 4f       	sbci	r31, 0xFE	; 254
    1620:	60 81       	ld	r22, Z
    1622:	71 81       	ldd	r23, Z+1	; 0x01
    1624:	82 81       	ldd	r24, Z+2	; 0x02
    1626:	93 81       	ldd	r25, Z+3	; 0x03
    1628:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    162c:	dc 01       	movw	r26, r24
    162e:	cb 01       	movw	r24, r22
    1630:	f8 01       	movw	r30, r16
    1632:	91 83       	std	Z+1, r25	; 0x01
    1634:	80 83       	st	Z, r24
    1636:	de 01       	movw	r26, r28
    1638:	ae 5a       	subi	r26, 0xAE	; 174
    163a:	be 4f       	sbci	r27, 0xFE	; 254
    163c:	fe 01       	movw	r30, r28
    163e:	ea 5a       	subi	r30, 0xAA	; 170
    1640:	fe 4f       	sbci	r31, 0xFE	; 254
    1642:	80 81       	ld	r24, Z
    1644:	91 81       	ldd	r25, Z+1	; 0x01
    1646:	11 96       	adiw	r26, 0x01	; 1
    1648:	9c 93       	st	X, r25
    164a:	8e 93       	st	-X, r24
    164c:	fe 01       	movw	r30, r28
    164e:	ee 5a       	subi	r30, 0xAE	; 174
    1650:	fe 4f       	sbci	r31, 0xFE	; 254
    1652:	80 81       	ld	r24, Z
    1654:	91 81       	ldd	r25, Z+1	; 0x01
    1656:	01 97       	sbiw	r24, 0x01	; 1
    1658:	f1 f7       	brne	.-4      	; 0x1656 <__stack+0xdf7>
    165a:	fe 01       	movw	r30, r28
    165c:	ee 5a       	subi	r30, 0xAE	; 174
    165e:	fe 4f       	sbci	r31, 0xFE	; 254
    1660:	91 83       	std	Z+1, r25	; 0x01
    1662:	80 83       	st	Z, r24
    1664:	22 c0       	rjmp	.+68     	; 0x16aa <__stack+0xe4b>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1666:	8e 01       	movw	r16, r28
    1668:	00 5a       	subi	r16, 0xA0	; 160
    166a:	1e 4f       	sbci	r17, 0xFE	; 254
    166c:	fe 01       	movw	r30, r28
    166e:	ef 59       	subi	r30, 0x9F	; 159
    1670:	fe 4f       	sbci	r31, 0xFE	; 254
    1672:	60 81       	ld	r22, Z
    1674:	71 81       	ldd	r23, Z+1	; 0x01
    1676:	82 81       	ldd	r24, Z+2	; 0x02
    1678:	93 81       	ldd	r25, Z+3	; 0x03
    167a:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    167e:	dc 01       	movw	r26, r24
    1680:	cb 01       	movw	r24, r22
    1682:	f8 01       	movw	r30, r16
    1684:	80 83       	st	Z, r24
    1686:	de 01       	movw	r26, r28
    1688:	af 5a       	subi	r26, 0xAF	; 175
    168a:	be 4f       	sbci	r27, 0xFE	; 254
    168c:	fe 01       	movw	r30, r28
    168e:	e0 5a       	subi	r30, 0xA0	; 160
    1690:	fe 4f       	sbci	r31, 0xFE	; 254
    1692:	80 81       	ld	r24, Z
    1694:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1696:	fe 01       	movw	r30, r28
    1698:	ef 5a       	subi	r30, 0xAF	; 175
    169a:	fe 4f       	sbci	r31, 0xFE	; 254
    169c:	80 81       	ld	r24, Z
    169e:	8a 95       	dec	r24
    16a0:	f1 f7       	brne	.-4      	; 0x169e <__stack+0xe3f>
    16a2:	fe 01       	movw	r30, r28
    16a4:	ef 5a       	subi	r30, 0xAF	; 175
    16a6:	fe 4f       	sbci	r31, 0xFE	; 254
    16a8:	80 83       	st	Z, r24
	_delay_us(5);
	
	PORTC |= 0x04;		//cmd high
    16aa:	a5 e3       	ldi	r26, 0x35	; 53
    16ac:	b0 e0       	ldi	r27, 0x00	; 0
    16ae:	e5 e3       	ldi	r30, 0x35	; 53
    16b0:	f0 e0       	ldi	r31, 0x00	; 0
    16b2:	80 81       	ld	r24, Z
    16b4:	84 60       	ori	r24, 0x04	; 4
    16b6:	8c 93       	st	X, r24
	
	PORTC &= 0xFE;		//clock low
    16b8:	a5 e3       	ldi	r26, 0x35	; 53
    16ba:	b0 e0       	ldi	r27, 0x00	; 0
    16bc:	e5 e3       	ldi	r30, 0x35	; 53
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	80 81       	ld	r24, Z
    16c2:	8e 7f       	andi	r24, 0xFE	; 254
    16c4:	8c 93       	st	X, r24
    16c6:	fe 01       	movw	r30, r28
    16c8:	e3 5b       	subi	r30, 0xB3	; 179
    16ca:	fe 4f       	sbci	r31, 0xFE	; 254
    16cc:	80 e0       	ldi	r24, 0x00	; 0
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	a0 ea       	ldi	r26, 0xA0	; 160
    16d2:	b0 e4       	ldi	r27, 0x40	; 64
    16d4:	80 83       	st	Z, r24
    16d6:	91 83       	std	Z+1, r25	; 0x01
    16d8:	a2 83       	std	Z+2, r26	; 0x02
    16da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    16dc:	8e 01       	movw	r16, r28
    16de:	07 5b       	subi	r16, 0xB7	; 183
    16e0:	1e 4f       	sbci	r17, 0xFE	; 254
    16e2:	fe 01       	movw	r30, r28
    16e4:	e3 5b       	subi	r30, 0xB3	; 179
    16e6:	fe 4f       	sbci	r31, 0xFE	; 254
    16e8:	60 81       	ld	r22, Z
    16ea:	71 81       	ldd	r23, Z+1	; 0x01
    16ec:	82 81       	ldd	r24, Z+2	; 0x02
    16ee:	93 81       	ldd	r25, Z+3	; 0x03
    16f0:	2b ea       	ldi	r18, 0xAB	; 171
    16f2:	3a ea       	ldi	r19, 0xAA	; 170
    16f4:	4a ea       	ldi	r20, 0xAA	; 170
    16f6:	50 e4       	ldi	r21, 0x40	; 64
    16f8:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    16fc:	dc 01       	movw	r26, r24
    16fe:	cb 01       	movw	r24, r22
    1700:	f8 01       	movw	r30, r16
    1702:	80 83       	st	Z, r24
    1704:	91 83       	std	Z+1, r25	; 0x01
    1706:	a2 83       	std	Z+2, r26	; 0x02
    1708:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    170a:	fe 01       	movw	r30, r28
    170c:	e7 5b       	subi	r30, 0xB7	; 183
    170e:	fe 4f       	sbci	r31, 0xFE	; 254
    1710:	60 81       	ld	r22, Z
    1712:	71 81       	ldd	r23, Z+1	; 0x01
    1714:	82 81       	ldd	r24, Z+2	; 0x02
    1716:	93 81       	ldd	r25, Z+3	; 0x03
    1718:	20 e0       	ldi	r18, 0x00	; 0
    171a:	30 e0       	ldi	r19, 0x00	; 0
    171c:	40 e8       	ldi	r20, 0x80	; 128
    171e:	5f e3       	ldi	r21, 0x3F	; 63
    1720:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    1724:	88 23       	and	r24, r24
    1726:	34 f4       	brge	.+12     	; 0x1734 <__stack+0xed5>
		__ticks = 1;
    1728:	fe 01       	movw	r30, r28
    172a:	e8 5b       	subi	r30, 0xB8	; 184
    172c:	fe 4f       	sbci	r31, 0xFE	; 254
    172e:	81 e0       	ldi	r24, 0x01	; 1
    1730:	80 83       	st	Z, r24
    1732:	e0 c0       	rjmp	.+448    	; 0x18f4 <__stack+0x1095>
	else if (__tmp > 255)
    1734:	fe 01       	movw	r30, r28
    1736:	e7 5b       	subi	r30, 0xB7	; 183
    1738:	fe 4f       	sbci	r31, 0xFE	; 254
    173a:	60 81       	ld	r22, Z
    173c:	71 81       	ldd	r23, Z+1	; 0x01
    173e:	82 81       	ldd	r24, Z+2	; 0x02
    1740:	93 81       	ldd	r25, Z+3	; 0x03
    1742:	20 e0       	ldi	r18, 0x00	; 0
    1744:	30 e0       	ldi	r19, 0x00	; 0
    1746:	4f e7       	ldi	r20, 0x7F	; 127
    1748:	53 e4       	ldi	r21, 0x43	; 67
    174a:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    174e:	18 16       	cp	r1, r24
    1750:	0c f0       	brlt	.+2      	; 0x1754 <__stack+0xef5>
    1752:	c0 c0       	rjmp	.+384    	; 0x18d4 <__stack+0x1075>
	{
		_delay_ms(__us / 1000.0);
    1754:	fe 01       	movw	r30, r28
    1756:	e3 5b       	subi	r30, 0xB3	; 179
    1758:	fe 4f       	sbci	r31, 0xFE	; 254
    175a:	60 81       	ld	r22, Z
    175c:	71 81       	ldd	r23, Z+1	; 0x01
    175e:	82 81       	ldd	r24, Z+2	; 0x02
    1760:	93 81       	ldd	r25, Z+3	; 0x03
    1762:	20 e0       	ldi	r18, 0x00	; 0
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	4a e7       	ldi	r20, 0x7A	; 122
    1768:	54 e4       	ldi	r21, 0x44	; 68
    176a:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    176e:	dc 01       	movw	r26, r24
    1770:	cb 01       	movw	r24, r22
    1772:	fe 01       	movw	r30, r28
    1774:	ec 5b       	subi	r30, 0xBC	; 188
    1776:	fe 4f       	sbci	r31, 0xFE	; 254
    1778:	80 83       	st	Z, r24
    177a:	91 83       	std	Z+1, r25	; 0x01
    177c:	a2 83       	std	Z+2, r26	; 0x02
    177e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1780:	8e 01       	movw	r16, r28
    1782:	00 5c       	subi	r16, 0xC0	; 192
    1784:	1e 4f       	sbci	r17, 0xFE	; 254
    1786:	fe 01       	movw	r30, r28
    1788:	ec 5b       	subi	r30, 0xBC	; 188
    178a:	fe 4f       	sbci	r31, 0xFE	; 254
    178c:	60 81       	ld	r22, Z
    178e:	71 81       	ldd	r23, Z+1	; 0x01
    1790:	82 81       	ldd	r24, Z+2	; 0x02
    1792:	93 81       	ldd	r25, Z+3	; 0x03
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	4a e7       	ldi	r20, 0x7A	; 122
    179a:	55 e4       	ldi	r21, 0x45	; 69
    179c:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    17a0:	dc 01       	movw	r26, r24
    17a2:	cb 01       	movw	r24, r22
    17a4:	f8 01       	movw	r30, r16
    17a6:	80 83       	st	Z, r24
    17a8:	91 83       	std	Z+1, r25	; 0x01
    17aa:	a2 83       	std	Z+2, r26	; 0x02
    17ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17ae:	fe 01       	movw	r30, r28
    17b0:	e0 5c       	subi	r30, 0xC0	; 192
    17b2:	fe 4f       	sbci	r31, 0xFE	; 254
    17b4:	60 81       	ld	r22, Z
    17b6:	71 81       	ldd	r23, Z+1	; 0x01
    17b8:	82 81       	ldd	r24, Z+2	; 0x02
    17ba:	93 81       	ldd	r25, Z+3	; 0x03
    17bc:	20 e0       	ldi	r18, 0x00	; 0
    17be:	30 e0       	ldi	r19, 0x00	; 0
    17c0:	40 e8       	ldi	r20, 0x80	; 128
    17c2:	5f e3       	ldi	r21, 0x3F	; 63
    17c4:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    17c8:	88 23       	and	r24, r24
    17ca:	44 f4       	brge	.+16     	; 0x17dc <__stack+0xf7d>
		__ticks = 1;
    17cc:	fe 01       	movw	r30, r28
    17ce:	e2 5c       	subi	r30, 0xC2	; 194
    17d0:	fe 4f       	sbci	r31, 0xFE	; 254
    17d2:	81 e0       	ldi	r24, 0x01	; 1
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	91 83       	std	Z+1, r25	; 0x01
    17d8:	80 83       	st	Z, r24
    17da:	64 c0       	rjmp	.+200    	; 0x18a4 <__stack+0x1045>
	else if (__tmp > 65535)
    17dc:	fe 01       	movw	r30, r28
    17de:	e0 5c       	subi	r30, 0xC0	; 192
    17e0:	fe 4f       	sbci	r31, 0xFE	; 254
    17e2:	60 81       	ld	r22, Z
    17e4:	71 81       	ldd	r23, Z+1	; 0x01
    17e6:	82 81       	ldd	r24, Z+2	; 0x02
    17e8:	93 81       	ldd	r25, Z+3	; 0x03
    17ea:	20 e0       	ldi	r18, 0x00	; 0
    17ec:	3f ef       	ldi	r19, 0xFF	; 255
    17ee:	4f e7       	ldi	r20, 0x7F	; 127
    17f0:	57 e4       	ldi	r21, 0x47	; 71
    17f2:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    17f6:	18 16       	cp	r1, r24
    17f8:	0c f0       	brlt	.+2      	; 0x17fc <__stack+0xf9d>
    17fa:	43 c0       	rjmp	.+134    	; 0x1882 <__stack+0x1023>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17fc:	fe 01       	movw	r30, r28
    17fe:	ec 5b       	subi	r30, 0xBC	; 188
    1800:	fe 4f       	sbci	r31, 0xFE	; 254
    1802:	60 81       	ld	r22, Z
    1804:	71 81       	ldd	r23, Z+1	; 0x01
    1806:	82 81       	ldd	r24, Z+2	; 0x02
    1808:	93 81       	ldd	r25, Z+3	; 0x03
    180a:	20 e0       	ldi	r18, 0x00	; 0
    180c:	30 e0       	ldi	r19, 0x00	; 0
    180e:	40 e2       	ldi	r20, 0x20	; 32
    1810:	51 e4       	ldi	r21, 0x41	; 65
    1812:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1816:	dc 01       	movw	r26, r24
    1818:	cb 01       	movw	r24, r22
    181a:	8e 01       	movw	r16, r28
    181c:	02 5c       	subi	r16, 0xC2	; 194
    181e:	1e 4f       	sbci	r17, 0xFE	; 254
    1820:	bc 01       	movw	r22, r24
    1822:	cd 01       	movw	r24, r26
    1824:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1828:	dc 01       	movw	r26, r24
    182a:	cb 01       	movw	r24, r22
    182c:	f8 01       	movw	r30, r16
    182e:	91 83       	std	Z+1, r25	; 0x01
    1830:	80 83       	st	Z, r24
    1832:	1f c0       	rjmp	.+62     	; 0x1872 <__stack+0x1013>
    1834:	fe 01       	movw	r30, r28
    1836:	e4 5c       	subi	r30, 0xC4	; 196
    1838:	fe 4f       	sbci	r31, 0xFE	; 254
    183a:	80 e9       	ldi	r24, 0x90	; 144
    183c:	91 e0       	ldi	r25, 0x01	; 1
    183e:	91 83       	std	Z+1, r25	; 0x01
    1840:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1842:	fe 01       	movw	r30, r28
    1844:	e4 5c       	subi	r30, 0xC4	; 196
    1846:	fe 4f       	sbci	r31, 0xFE	; 254
    1848:	80 81       	ld	r24, Z
    184a:	91 81       	ldd	r25, Z+1	; 0x01
    184c:	01 97       	sbiw	r24, 0x01	; 1
    184e:	f1 f7       	brne	.-4      	; 0x184c <__stack+0xfed>
    1850:	fe 01       	movw	r30, r28
    1852:	e4 5c       	subi	r30, 0xC4	; 196
    1854:	fe 4f       	sbci	r31, 0xFE	; 254
    1856:	91 83       	std	Z+1, r25	; 0x01
    1858:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    185a:	de 01       	movw	r26, r28
    185c:	a2 5c       	subi	r26, 0xC2	; 194
    185e:	be 4f       	sbci	r27, 0xFE	; 254
    1860:	fe 01       	movw	r30, r28
    1862:	e2 5c       	subi	r30, 0xC2	; 194
    1864:	fe 4f       	sbci	r31, 0xFE	; 254
    1866:	80 81       	ld	r24, Z
    1868:	91 81       	ldd	r25, Z+1	; 0x01
    186a:	01 97       	sbiw	r24, 0x01	; 1
    186c:	11 96       	adiw	r26, 0x01	; 1
    186e:	9c 93       	st	X, r25
    1870:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1872:	fe 01       	movw	r30, r28
    1874:	e2 5c       	subi	r30, 0xC2	; 194
    1876:	fe 4f       	sbci	r31, 0xFE	; 254
    1878:	80 81       	ld	r24, Z
    187a:	91 81       	ldd	r25, Z+1	; 0x01
    187c:	00 97       	sbiw	r24, 0x00	; 0
    187e:	d1 f6       	brne	.-76     	; 0x1834 <__stack+0xfd5>
    1880:	4b c0       	rjmp	.+150    	; 0x1918 <__stack+0x10b9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1882:	8e 01       	movw	r16, r28
    1884:	02 5c       	subi	r16, 0xC2	; 194
    1886:	1e 4f       	sbci	r17, 0xFE	; 254
    1888:	fe 01       	movw	r30, r28
    188a:	e0 5c       	subi	r30, 0xC0	; 192
    188c:	fe 4f       	sbci	r31, 0xFE	; 254
    188e:	60 81       	ld	r22, Z
    1890:	71 81       	ldd	r23, Z+1	; 0x01
    1892:	82 81       	ldd	r24, Z+2	; 0x02
    1894:	93 81       	ldd	r25, Z+3	; 0x03
    1896:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    189a:	dc 01       	movw	r26, r24
    189c:	cb 01       	movw	r24, r22
    189e:	f8 01       	movw	r30, r16
    18a0:	91 83       	std	Z+1, r25	; 0x01
    18a2:	80 83       	st	Z, r24
    18a4:	de 01       	movw	r26, r28
    18a6:	a6 5c       	subi	r26, 0xC6	; 198
    18a8:	be 4f       	sbci	r27, 0xFE	; 254
    18aa:	fe 01       	movw	r30, r28
    18ac:	e2 5c       	subi	r30, 0xC2	; 194
    18ae:	fe 4f       	sbci	r31, 0xFE	; 254
    18b0:	80 81       	ld	r24, Z
    18b2:	91 81       	ldd	r25, Z+1	; 0x01
    18b4:	11 96       	adiw	r26, 0x01	; 1
    18b6:	9c 93       	st	X, r25
    18b8:	8e 93       	st	-X, r24
    18ba:	fe 01       	movw	r30, r28
    18bc:	e6 5c       	subi	r30, 0xC6	; 198
    18be:	fe 4f       	sbci	r31, 0xFE	; 254
    18c0:	80 81       	ld	r24, Z
    18c2:	91 81       	ldd	r25, Z+1	; 0x01
    18c4:	01 97       	sbiw	r24, 0x01	; 1
    18c6:	f1 f7       	brne	.-4      	; 0x18c4 <__stack+0x1065>
    18c8:	fe 01       	movw	r30, r28
    18ca:	e6 5c       	subi	r30, 0xC6	; 198
    18cc:	fe 4f       	sbci	r31, 0xFE	; 254
    18ce:	91 83       	std	Z+1, r25	; 0x01
    18d0:	80 83       	st	Z, r24
    18d2:	22 c0       	rjmp	.+68     	; 0x1918 <__stack+0x10b9>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    18d4:	8e 01       	movw	r16, r28
    18d6:	08 5b       	subi	r16, 0xB8	; 184
    18d8:	1e 4f       	sbci	r17, 0xFE	; 254
    18da:	fe 01       	movw	r30, r28
    18dc:	e7 5b       	subi	r30, 0xB7	; 183
    18de:	fe 4f       	sbci	r31, 0xFE	; 254
    18e0:	60 81       	ld	r22, Z
    18e2:	71 81       	ldd	r23, Z+1	; 0x01
    18e4:	82 81       	ldd	r24, Z+2	; 0x02
    18e6:	93 81       	ldd	r25, Z+3	; 0x03
    18e8:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    18ec:	dc 01       	movw	r26, r24
    18ee:	cb 01       	movw	r24, r22
    18f0:	f8 01       	movw	r30, r16
    18f2:	80 83       	st	Z, r24
    18f4:	de 01       	movw	r26, r28
    18f6:	a7 5c       	subi	r26, 0xC7	; 199
    18f8:	be 4f       	sbci	r27, 0xFE	; 254
    18fa:	fe 01       	movw	r30, r28
    18fc:	e8 5b       	subi	r30, 0xB8	; 184
    18fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1900:	80 81       	ld	r24, Z
    1902:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1904:	fe 01       	movw	r30, r28
    1906:	e7 5c       	subi	r30, 0xC7	; 199
    1908:	fe 4f       	sbci	r31, 0xFE	; 254
    190a:	80 81       	ld	r24, Z
    190c:	8a 95       	dec	r24
    190e:	f1 f7       	brne	.-4      	; 0x190c <__stack+0x10ad>
    1910:	fe 01       	movw	r30, r28
    1912:	e7 5c       	subi	r30, 0xC7	; 199
    1914:	fe 4f       	sbci	r31, 0xFE	; 254
    1916:	80 83       	st	Z, r24
	_delay_us(5);
	PORTC |= 0x01;		//clock high
    1918:	a5 e3       	ldi	r26, 0x35	; 53
    191a:	b0 e0       	ldi	r27, 0x00	; 0
    191c:	e5 e3       	ldi	r30, 0x35	; 53
    191e:	f0 e0       	ldi	r31, 0x00	; 0
    1920:	80 81       	ld	r24, Z
    1922:	81 60       	ori	r24, 0x01	; 1
    1924:	8c 93       	st	X, r24
    1926:	fe 01       	movw	r30, r28
    1928:	eb 5c       	subi	r30, 0xCB	; 203
    192a:	fe 4f       	sbci	r31, 0xFE	; 254
    192c:	80 e0       	ldi	r24, 0x00	; 0
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	a0 ea       	ldi	r26, 0xA0	; 160
    1932:	b0 e4       	ldi	r27, 0x40	; 64
    1934:	80 83       	st	Z, r24
    1936:	91 83       	std	Z+1, r25	; 0x01
    1938:	a2 83       	std	Z+2, r26	; 0x02
    193a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    193c:	8e 01       	movw	r16, r28
    193e:	0f 5c       	subi	r16, 0xCF	; 207
    1940:	1e 4f       	sbci	r17, 0xFE	; 254
    1942:	fe 01       	movw	r30, r28
    1944:	eb 5c       	subi	r30, 0xCB	; 203
    1946:	fe 4f       	sbci	r31, 0xFE	; 254
    1948:	60 81       	ld	r22, Z
    194a:	71 81       	ldd	r23, Z+1	; 0x01
    194c:	82 81       	ldd	r24, Z+2	; 0x02
    194e:	93 81       	ldd	r25, Z+3	; 0x03
    1950:	2b ea       	ldi	r18, 0xAB	; 171
    1952:	3a ea       	ldi	r19, 0xAA	; 170
    1954:	4a ea       	ldi	r20, 0xAA	; 170
    1956:	50 e4       	ldi	r21, 0x40	; 64
    1958:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    195c:	dc 01       	movw	r26, r24
    195e:	cb 01       	movw	r24, r22
    1960:	f8 01       	movw	r30, r16
    1962:	80 83       	st	Z, r24
    1964:	91 83       	std	Z+1, r25	; 0x01
    1966:	a2 83       	std	Z+2, r26	; 0x02
    1968:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    196a:	fe 01       	movw	r30, r28
    196c:	ef 5c       	subi	r30, 0xCF	; 207
    196e:	fe 4f       	sbci	r31, 0xFE	; 254
    1970:	60 81       	ld	r22, Z
    1972:	71 81       	ldd	r23, Z+1	; 0x01
    1974:	82 81       	ldd	r24, Z+2	; 0x02
    1976:	93 81       	ldd	r25, Z+3	; 0x03
    1978:	20 e0       	ldi	r18, 0x00	; 0
    197a:	30 e0       	ldi	r19, 0x00	; 0
    197c:	40 e8       	ldi	r20, 0x80	; 128
    197e:	5f e3       	ldi	r21, 0x3F	; 63
    1980:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    1984:	88 23       	and	r24, r24
    1986:	34 f4       	brge	.+12     	; 0x1994 <__stack+0x1135>
		__ticks = 1;
    1988:	fe 01       	movw	r30, r28
    198a:	e0 5d       	subi	r30, 0xD0	; 208
    198c:	fe 4f       	sbci	r31, 0xFE	; 254
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	80 83       	st	Z, r24
    1992:	e0 c0       	rjmp	.+448    	; 0x1b54 <__stack+0x12f5>
	else if (__tmp > 255)
    1994:	fe 01       	movw	r30, r28
    1996:	ef 5c       	subi	r30, 0xCF	; 207
    1998:	fe 4f       	sbci	r31, 0xFE	; 254
    199a:	60 81       	ld	r22, Z
    199c:	71 81       	ldd	r23, Z+1	; 0x01
    199e:	82 81       	ldd	r24, Z+2	; 0x02
    19a0:	93 81       	ldd	r25, Z+3	; 0x03
    19a2:	20 e0       	ldi	r18, 0x00	; 0
    19a4:	30 e0       	ldi	r19, 0x00	; 0
    19a6:	4f e7       	ldi	r20, 0x7F	; 127
    19a8:	53 e4       	ldi	r21, 0x43	; 67
    19aa:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    19ae:	18 16       	cp	r1, r24
    19b0:	0c f0       	brlt	.+2      	; 0x19b4 <__stack+0x1155>
    19b2:	c0 c0       	rjmp	.+384    	; 0x1b34 <__stack+0x12d5>
	{
		_delay_ms(__us / 1000.0);
    19b4:	fe 01       	movw	r30, r28
    19b6:	eb 5c       	subi	r30, 0xCB	; 203
    19b8:	fe 4f       	sbci	r31, 0xFE	; 254
    19ba:	60 81       	ld	r22, Z
    19bc:	71 81       	ldd	r23, Z+1	; 0x01
    19be:	82 81       	ldd	r24, Z+2	; 0x02
    19c0:	93 81       	ldd	r25, Z+3	; 0x03
    19c2:	20 e0       	ldi	r18, 0x00	; 0
    19c4:	30 e0       	ldi	r19, 0x00	; 0
    19c6:	4a e7       	ldi	r20, 0x7A	; 122
    19c8:	54 e4       	ldi	r21, 0x44	; 68
    19ca:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    19ce:	dc 01       	movw	r26, r24
    19d0:	cb 01       	movw	r24, r22
    19d2:	fe 01       	movw	r30, r28
    19d4:	e4 5d       	subi	r30, 0xD4	; 212
    19d6:	fe 4f       	sbci	r31, 0xFE	; 254
    19d8:	80 83       	st	Z, r24
    19da:	91 83       	std	Z+1, r25	; 0x01
    19dc:	a2 83       	std	Z+2, r26	; 0x02
    19de:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19e0:	8e 01       	movw	r16, r28
    19e2:	08 5d       	subi	r16, 0xD8	; 216
    19e4:	1e 4f       	sbci	r17, 0xFE	; 254
    19e6:	fe 01       	movw	r30, r28
    19e8:	e4 5d       	subi	r30, 0xD4	; 212
    19ea:	fe 4f       	sbci	r31, 0xFE	; 254
    19ec:	60 81       	ld	r22, Z
    19ee:	71 81       	ldd	r23, Z+1	; 0x01
    19f0:	82 81       	ldd	r24, Z+2	; 0x02
    19f2:	93 81       	ldd	r25, Z+3	; 0x03
    19f4:	20 e0       	ldi	r18, 0x00	; 0
    19f6:	30 e0       	ldi	r19, 0x00	; 0
    19f8:	4a e7       	ldi	r20, 0x7A	; 122
    19fa:	55 e4       	ldi	r21, 0x45	; 69
    19fc:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1a00:	dc 01       	movw	r26, r24
    1a02:	cb 01       	movw	r24, r22
    1a04:	f8 01       	movw	r30, r16
    1a06:	80 83       	st	Z, r24
    1a08:	91 83       	std	Z+1, r25	; 0x01
    1a0a:	a2 83       	std	Z+2, r26	; 0x02
    1a0c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a0e:	fe 01       	movw	r30, r28
    1a10:	e8 5d       	subi	r30, 0xD8	; 216
    1a12:	fe 4f       	sbci	r31, 0xFE	; 254
    1a14:	60 81       	ld	r22, Z
    1a16:	71 81       	ldd	r23, Z+1	; 0x01
    1a18:	82 81       	ldd	r24, Z+2	; 0x02
    1a1a:	93 81       	ldd	r25, Z+3	; 0x03
    1a1c:	20 e0       	ldi	r18, 0x00	; 0
    1a1e:	30 e0       	ldi	r19, 0x00	; 0
    1a20:	40 e8       	ldi	r20, 0x80	; 128
    1a22:	5f e3       	ldi	r21, 0x3F	; 63
    1a24:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    1a28:	88 23       	and	r24, r24
    1a2a:	44 f4       	brge	.+16     	; 0x1a3c <__stack+0x11dd>
		__ticks = 1;
    1a2c:	fe 01       	movw	r30, r28
    1a2e:	ea 5d       	subi	r30, 0xDA	; 218
    1a30:	fe 4f       	sbci	r31, 0xFE	; 254
    1a32:	81 e0       	ldi	r24, 0x01	; 1
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	91 83       	std	Z+1, r25	; 0x01
    1a38:	80 83       	st	Z, r24
    1a3a:	64 c0       	rjmp	.+200    	; 0x1b04 <__stack+0x12a5>
	else if (__tmp > 65535)
    1a3c:	fe 01       	movw	r30, r28
    1a3e:	e8 5d       	subi	r30, 0xD8	; 216
    1a40:	fe 4f       	sbci	r31, 0xFE	; 254
    1a42:	60 81       	ld	r22, Z
    1a44:	71 81       	ldd	r23, Z+1	; 0x01
    1a46:	82 81       	ldd	r24, Z+2	; 0x02
    1a48:	93 81       	ldd	r25, Z+3	; 0x03
    1a4a:	20 e0       	ldi	r18, 0x00	; 0
    1a4c:	3f ef       	ldi	r19, 0xFF	; 255
    1a4e:	4f e7       	ldi	r20, 0x7F	; 127
    1a50:	57 e4       	ldi	r21, 0x47	; 71
    1a52:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1a56:	18 16       	cp	r1, r24
    1a58:	0c f0       	brlt	.+2      	; 0x1a5c <__stack+0x11fd>
    1a5a:	43 c0       	rjmp	.+134    	; 0x1ae2 <__stack+0x1283>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a5c:	fe 01       	movw	r30, r28
    1a5e:	e4 5d       	subi	r30, 0xD4	; 212
    1a60:	fe 4f       	sbci	r31, 0xFE	; 254
    1a62:	60 81       	ld	r22, Z
    1a64:	71 81       	ldd	r23, Z+1	; 0x01
    1a66:	82 81       	ldd	r24, Z+2	; 0x02
    1a68:	93 81       	ldd	r25, Z+3	; 0x03
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	40 e2       	ldi	r20, 0x20	; 32
    1a70:	51 e4       	ldi	r21, 0x41	; 65
    1a72:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1a76:	dc 01       	movw	r26, r24
    1a78:	cb 01       	movw	r24, r22
    1a7a:	8e 01       	movw	r16, r28
    1a7c:	0a 5d       	subi	r16, 0xDA	; 218
    1a7e:	1e 4f       	sbci	r17, 0xFE	; 254
    1a80:	bc 01       	movw	r22, r24
    1a82:	cd 01       	movw	r24, r26
    1a84:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1a88:	dc 01       	movw	r26, r24
    1a8a:	cb 01       	movw	r24, r22
    1a8c:	f8 01       	movw	r30, r16
    1a8e:	91 83       	std	Z+1, r25	; 0x01
    1a90:	80 83       	st	Z, r24
    1a92:	1f c0       	rjmp	.+62     	; 0x1ad2 <__stack+0x1273>
    1a94:	fe 01       	movw	r30, r28
    1a96:	ec 5d       	subi	r30, 0xDC	; 220
    1a98:	fe 4f       	sbci	r31, 0xFE	; 254
    1a9a:	80 e9       	ldi	r24, 0x90	; 144
    1a9c:	91 e0       	ldi	r25, 0x01	; 1
    1a9e:	91 83       	std	Z+1, r25	; 0x01
    1aa0:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	ec 5d       	subi	r30, 0xDC	; 220
    1aa6:	fe 4f       	sbci	r31, 0xFE	; 254
    1aa8:	80 81       	ld	r24, Z
    1aaa:	91 81       	ldd	r25, Z+1	; 0x01
    1aac:	01 97       	sbiw	r24, 0x01	; 1
    1aae:	f1 f7       	brne	.-4      	; 0x1aac <__stack+0x124d>
    1ab0:	fe 01       	movw	r30, r28
    1ab2:	ec 5d       	subi	r30, 0xDC	; 220
    1ab4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ab6:	91 83       	std	Z+1, r25	; 0x01
    1ab8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aba:	de 01       	movw	r26, r28
    1abc:	aa 5d       	subi	r26, 0xDA	; 218
    1abe:	be 4f       	sbci	r27, 0xFE	; 254
    1ac0:	fe 01       	movw	r30, r28
    1ac2:	ea 5d       	subi	r30, 0xDA	; 218
    1ac4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ac6:	80 81       	ld	r24, Z
    1ac8:	91 81       	ldd	r25, Z+1	; 0x01
    1aca:	01 97       	sbiw	r24, 0x01	; 1
    1acc:	11 96       	adiw	r26, 0x01	; 1
    1ace:	9c 93       	st	X, r25
    1ad0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ad2:	fe 01       	movw	r30, r28
    1ad4:	ea 5d       	subi	r30, 0xDA	; 218
    1ad6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ad8:	80 81       	ld	r24, Z
    1ada:	91 81       	ldd	r25, Z+1	; 0x01
    1adc:	00 97       	sbiw	r24, 0x00	; 0
    1ade:	d1 f6       	brne	.-76     	; 0x1a94 <__stack+0x1235>
    1ae0:	4b c0       	rjmp	.+150    	; 0x1b78 <__stack+0x1319>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ae2:	8e 01       	movw	r16, r28
    1ae4:	0a 5d       	subi	r16, 0xDA	; 218
    1ae6:	1e 4f       	sbci	r17, 0xFE	; 254
    1ae8:	fe 01       	movw	r30, r28
    1aea:	e8 5d       	subi	r30, 0xD8	; 216
    1aec:	fe 4f       	sbci	r31, 0xFE	; 254
    1aee:	60 81       	ld	r22, Z
    1af0:	71 81       	ldd	r23, Z+1	; 0x01
    1af2:	82 81       	ldd	r24, Z+2	; 0x02
    1af4:	93 81       	ldd	r25, Z+3	; 0x03
    1af6:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1afa:	dc 01       	movw	r26, r24
    1afc:	cb 01       	movw	r24, r22
    1afe:	f8 01       	movw	r30, r16
    1b00:	91 83       	std	Z+1, r25	; 0x01
    1b02:	80 83       	st	Z, r24
    1b04:	de 01       	movw	r26, r28
    1b06:	ae 5d       	subi	r26, 0xDE	; 222
    1b08:	be 4f       	sbci	r27, 0xFE	; 254
    1b0a:	fe 01       	movw	r30, r28
    1b0c:	ea 5d       	subi	r30, 0xDA	; 218
    1b0e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b10:	80 81       	ld	r24, Z
    1b12:	91 81       	ldd	r25, Z+1	; 0x01
    1b14:	11 96       	adiw	r26, 0x01	; 1
    1b16:	9c 93       	st	X, r25
    1b18:	8e 93       	st	-X, r24
    1b1a:	fe 01       	movw	r30, r28
    1b1c:	ee 5d       	subi	r30, 0xDE	; 222
    1b1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b20:	80 81       	ld	r24, Z
    1b22:	91 81       	ldd	r25, Z+1	; 0x01
    1b24:	01 97       	sbiw	r24, 0x01	; 1
    1b26:	f1 f7       	brne	.-4      	; 0x1b24 <__stack+0x12c5>
    1b28:	fe 01       	movw	r30, r28
    1b2a:	ee 5d       	subi	r30, 0xDE	; 222
    1b2c:	fe 4f       	sbci	r31, 0xFE	; 254
    1b2e:	91 83       	std	Z+1, r25	; 0x01
    1b30:	80 83       	st	Z, r24
    1b32:	22 c0       	rjmp	.+68     	; 0x1b78 <__stack+0x1319>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1b34:	8e 01       	movw	r16, r28
    1b36:	00 5d       	subi	r16, 0xD0	; 208
    1b38:	1e 4f       	sbci	r17, 0xFE	; 254
    1b3a:	fe 01       	movw	r30, r28
    1b3c:	ef 5c       	subi	r30, 0xCF	; 207
    1b3e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b40:	60 81       	ld	r22, Z
    1b42:	71 81       	ldd	r23, Z+1	; 0x01
    1b44:	82 81       	ldd	r24, Z+2	; 0x02
    1b46:	93 81       	ldd	r25, Z+3	; 0x03
    1b48:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1b4c:	dc 01       	movw	r26, r24
    1b4e:	cb 01       	movw	r24, r22
    1b50:	f8 01       	movw	r30, r16
    1b52:	80 83       	st	Z, r24
    1b54:	de 01       	movw	r26, r28
    1b56:	af 5d       	subi	r26, 0xDF	; 223
    1b58:	be 4f       	sbci	r27, 0xFE	; 254
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	e0 5d       	subi	r30, 0xD0	; 208
    1b5e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b60:	80 81       	ld	r24, Z
    1b62:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1b64:	fe 01       	movw	r30, r28
    1b66:	ef 5d       	subi	r30, 0xDF	; 223
    1b68:	fe 4f       	sbci	r31, 0xFE	; 254
    1b6a:	80 81       	ld	r24, Z
    1b6c:	8a 95       	dec	r24
    1b6e:	f1 f7       	brne	.-4      	; 0x1b6c <__stack+0x130d>
    1b70:	fe 01       	movw	r30, r28
    1b72:	ef 5d       	subi	r30, 0xDF	; 223
    1b74:	fe 4f       	sbci	r31, 0xFE	; 254
    1b76:	80 83       	st	Z, r24
	_delay_us(5);
	
	PORTC &= 0xFB;		//cmd low
    1b78:	a5 e3       	ldi	r26, 0x35	; 53
    1b7a:	b0 e0       	ldi	r27, 0x00	; 0
    1b7c:	e5 e3       	ldi	r30, 0x35	; 53
    1b7e:	f0 e0       	ldi	r31, 0x00	; 0
    1b80:	80 81       	ld	r24, Z
    1b82:	8b 7f       	andi	r24, 0xFB	; 251
    1b84:	8c 93       	st	X, r24
	
	for(i = 0;i<4;i++)
    1b86:	10 92 61 00 	sts	0x0061, r1
    1b8a:	10 92 60 00 	sts	0x0060, r1
    1b8e:	69 c2       	rjmp	.+1234   	; 0x2062 <__stack+0x1803>
	{
		PORTC &= 0xFE;		//clock low
    1b90:	a5 e3       	ldi	r26, 0x35	; 53
    1b92:	b0 e0       	ldi	r27, 0x00	; 0
    1b94:	e5 e3       	ldi	r30, 0x35	; 53
    1b96:	f0 e0       	ldi	r31, 0x00	; 0
    1b98:	80 81       	ld	r24, Z
    1b9a:	8e 7f       	andi	r24, 0xFE	; 254
    1b9c:	8c 93       	st	X, r24
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	e3 5e       	subi	r30, 0xE3	; 227
    1ba2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba4:	80 e0       	ldi	r24, 0x00	; 0
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	a0 ea       	ldi	r26, 0xA0	; 160
    1baa:	b0 e4       	ldi	r27, 0x40	; 64
    1bac:	80 83       	st	Z, r24
    1bae:	91 83       	std	Z+1, r25	; 0x01
    1bb0:	a2 83       	std	Z+2, r26	; 0x02
    1bb2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1bb4:	8e 01       	movw	r16, r28
    1bb6:	07 5e       	subi	r16, 0xE7	; 231
    1bb8:	1e 4f       	sbci	r17, 0xFE	; 254
    1bba:	fe 01       	movw	r30, r28
    1bbc:	e3 5e       	subi	r30, 0xE3	; 227
    1bbe:	fe 4f       	sbci	r31, 0xFE	; 254
    1bc0:	60 81       	ld	r22, Z
    1bc2:	71 81       	ldd	r23, Z+1	; 0x01
    1bc4:	82 81       	ldd	r24, Z+2	; 0x02
    1bc6:	93 81       	ldd	r25, Z+3	; 0x03
    1bc8:	2b ea       	ldi	r18, 0xAB	; 171
    1bca:	3a ea       	ldi	r19, 0xAA	; 170
    1bcc:	4a ea       	ldi	r20, 0xAA	; 170
    1bce:	50 e4       	ldi	r21, 0x40	; 64
    1bd0:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1bd4:	dc 01       	movw	r26, r24
    1bd6:	cb 01       	movw	r24, r22
    1bd8:	f8 01       	movw	r30, r16
    1bda:	80 83       	st	Z, r24
    1bdc:	91 83       	std	Z+1, r25	; 0x01
    1bde:	a2 83       	std	Z+2, r26	; 0x02
    1be0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1be2:	fe 01       	movw	r30, r28
    1be4:	e7 5e       	subi	r30, 0xE7	; 231
    1be6:	fe 4f       	sbci	r31, 0xFE	; 254
    1be8:	60 81       	ld	r22, Z
    1bea:	71 81       	ldd	r23, Z+1	; 0x01
    1bec:	82 81       	ldd	r24, Z+2	; 0x02
    1bee:	93 81       	ldd	r25, Z+3	; 0x03
    1bf0:	20 e0       	ldi	r18, 0x00	; 0
    1bf2:	30 e0       	ldi	r19, 0x00	; 0
    1bf4:	40 e8       	ldi	r20, 0x80	; 128
    1bf6:	5f e3       	ldi	r21, 0x3F	; 63
    1bf8:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    1bfc:	88 23       	and	r24, r24
    1bfe:	34 f4       	brge	.+12     	; 0x1c0c <__stack+0x13ad>
		__ticks = 1;
    1c00:	fe 01       	movw	r30, r28
    1c02:	e8 5e       	subi	r30, 0xE8	; 232
    1c04:	fe 4f       	sbci	r31, 0xFE	; 254
    1c06:	81 e0       	ldi	r24, 0x01	; 1
    1c08:	80 83       	st	Z, r24
    1c0a:	e0 c0       	rjmp	.+448    	; 0x1dcc <__stack+0x156d>
	else if (__tmp > 255)
    1c0c:	fe 01       	movw	r30, r28
    1c0e:	e7 5e       	subi	r30, 0xE7	; 231
    1c10:	fe 4f       	sbci	r31, 0xFE	; 254
    1c12:	60 81       	ld	r22, Z
    1c14:	71 81       	ldd	r23, Z+1	; 0x01
    1c16:	82 81       	ldd	r24, Z+2	; 0x02
    1c18:	93 81       	ldd	r25, Z+3	; 0x03
    1c1a:	20 e0       	ldi	r18, 0x00	; 0
    1c1c:	30 e0       	ldi	r19, 0x00	; 0
    1c1e:	4f e7       	ldi	r20, 0x7F	; 127
    1c20:	53 e4       	ldi	r21, 0x43	; 67
    1c22:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1c26:	18 16       	cp	r1, r24
    1c28:	0c f0       	brlt	.+2      	; 0x1c2c <__stack+0x13cd>
    1c2a:	c0 c0       	rjmp	.+384    	; 0x1dac <__stack+0x154d>
	{
		_delay_ms(__us / 1000.0);
    1c2c:	fe 01       	movw	r30, r28
    1c2e:	e3 5e       	subi	r30, 0xE3	; 227
    1c30:	fe 4f       	sbci	r31, 0xFE	; 254
    1c32:	60 81       	ld	r22, Z
    1c34:	71 81       	ldd	r23, Z+1	; 0x01
    1c36:	82 81       	ldd	r24, Z+2	; 0x02
    1c38:	93 81       	ldd	r25, Z+3	; 0x03
    1c3a:	20 e0       	ldi	r18, 0x00	; 0
    1c3c:	30 e0       	ldi	r19, 0x00	; 0
    1c3e:	4a e7       	ldi	r20, 0x7A	; 122
    1c40:	54 e4       	ldi	r21, 0x44	; 68
    1c42:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    1c46:	dc 01       	movw	r26, r24
    1c48:	cb 01       	movw	r24, r22
    1c4a:	fe 01       	movw	r30, r28
    1c4c:	ec 5e       	subi	r30, 0xEC	; 236
    1c4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c50:	80 83       	st	Z, r24
    1c52:	91 83       	std	Z+1, r25	; 0x01
    1c54:	a2 83       	std	Z+2, r26	; 0x02
    1c56:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c58:	8e 01       	movw	r16, r28
    1c5a:	00 5f       	subi	r16, 0xF0	; 240
    1c5c:	1e 4f       	sbci	r17, 0xFE	; 254
    1c5e:	fe 01       	movw	r30, r28
    1c60:	ec 5e       	subi	r30, 0xEC	; 236
    1c62:	fe 4f       	sbci	r31, 0xFE	; 254
    1c64:	60 81       	ld	r22, Z
    1c66:	71 81       	ldd	r23, Z+1	; 0x01
    1c68:	82 81       	ldd	r24, Z+2	; 0x02
    1c6a:	93 81       	ldd	r25, Z+3	; 0x03
    1c6c:	20 e0       	ldi	r18, 0x00	; 0
    1c6e:	30 e0       	ldi	r19, 0x00	; 0
    1c70:	4a e7       	ldi	r20, 0x7A	; 122
    1c72:	55 e4       	ldi	r21, 0x45	; 69
    1c74:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1c78:	dc 01       	movw	r26, r24
    1c7a:	cb 01       	movw	r24, r22
    1c7c:	f8 01       	movw	r30, r16
    1c7e:	80 83       	st	Z, r24
    1c80:	91 83       	std	Z+1, r25	; 0x01
    1c82:	a2 83       	std	Z+2, r26	; 0x02
    1c84:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c86:	fe 01       	movw	r30, r28
    1c88:	e0 5f       	subi	r30, 0xF0	; 240
    1c8a:	fe 4f       	sbci	r31, 0xFE	; 254
    1c8c:	60 81       	ld	r22, Z
    1c8e:	71 81       	ldd	r23, Z+1	; 0x01
    1c90:	82 81       	ldd	r24, Z+2	; 0x02
    1c92:	93 81       	ldd	r25, Z+3	; 0x03
    1c94:	20 e0       	ldi	r18, 0x00	; 0
    1c96:	30 e0       	ldi	r19, 0x00	; 0
    1c98:	40 e8       	ldi	r20, 0x80	; 128
    1c9a:	5f e3       	ldi	r21, 0x3F	; 63
    1c9c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    1ca0:	88 23       	and	r24, r24
    1ca2:	44 f4       	brge	.+16     	; 0x1cb4 <__stack+0x1455>
		__ticks = 1;
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	e2 5f       	subi	r30, 0xF2	; 242
    1ca8:	fe 4f       	sbci	r31, 0xFE	; 254
    1caa:	81 e0       	ldi	r24, 0x01	; 1
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	91 83       	std	Z+1, r25	; 0x01
    1cb0:	80 83       	st	Z, r24
    1cb2:	64 c0       	rjmp	.+200    	; 0x1d7c <__stack+0x151d>
	else if (__tmp > 65535)
    1cb4:	fe 01       	movw	r30, r28
    1cb6:	e0 5f       	subi	r30, 0xF0	; 240
    1cb8:	fe 4f       	sbci	r31, 0xFE	; 254
    1cba:	60 81       	ld	r22, Z
    1cbc:	71 81       	ldd	r23, Z+1	; 0x01
    1cbe:	82 81       	ldd	r24, Z+2	; 0x02
    1cc0:	93 81       	ldd	r25, Z+3	; 0x03
    1cc2:	20 e0       	ldi	r18, 0x00	; 0
    1cc4:	3f ef       	ldi	r19, 0xFF	; 255
    1cc6:	4f e7       	ldi	r20, 0x7F	; 127
    1cc8:	57 e4       	ldi	r21, 0x47	; 71
    1cca:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1cce:	18 16       	cp	r1, r24
    1cd0:	0c f0       	brlt	.+2      	; 0x1cd4 <__stack+0x1475>
    1cd2:	43 c0       	rjmp	.+134    	; 0x1d5a <__stack+0x14fb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cd4:	fe 01       	movw	r30, r28
    1cd6:	ec 5e       	subi	r30, 0xEC	; 236
    1cd8:	fe 4f       	sbci	r31, 0xFE	; 254
    1cda:	60 81       	ld	r22, Z
    1cdc:	71 81       	ldd	r23, Z+1	; 0x01
    1cde:	82 81       	ldd	r24, Z+2	; 0x02
    1ce0:	93 81       	ldd	r25, Z+3	; 0x03
    1ce2:	20 e0       	ldi	r18, 0x00	; 0
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	40 e2       	ldi	r20, 0x20	; 32
    1ce8:	51 e4       	ldi	r21, 0x41	; 65
    1cea:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1cee:	dc 01       	movw	r26, r24
    1cf0:	cb 01       	movw	r24, r22
    1cf2:	8e 01       	movw	r16, r28
    1cf4:	02 5f       	subi	r16, 0xF2	; 242
    1cf6:	1e 4f       	sbci	r17, 0xFE	; 254
    1cf8:	bc 01       	movw	r22, r24
    1cfa:	cd 01       	movw	r24, r26
    1cfc:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1d00:	dc 01       	movw	r26, r24
    1d02:	cb 01       	movw	r24, r22
    1d04:	f8 01       	movw	r30, r16
    1d06:	91 83       	std	Z+1, r25	; 0x01
    1d08:	80 83       	st	Z, r24
    1d0a:	1f c0       	rjmp	.+62     	; 0x1d4a <__stack+0x14eb>
    1d0c:	fe 01       	movw	r30, r28
    1d0e:	e4 5f       	subi	r30, 0xF4	; 244
    1d10:	fe 4f       	sbci	r31, 0xFE	; 254
    1d12:	80 e9       	ldi	r24, 0x90	; 144
    1d14:	91 e0       	ldi	r25, 0x01	; 1
    1d16:	91 83       	std	Z+1, r25	; 0x01
    1d18:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1d1a:	fe 01       	movw	r30, r28
    1d1c:	e4 5f       	subi	r30, 0xF4	; 244
    1d1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d20:	80 81       	ld	r24, Z
    1d22:	91 81       	ldd	r25, Z+1	; 0x01
    1d24:	01 97       	sbiw	r24, 0x01	; 1
    1d26:	f1 f7       	brne	.-4      	; 0x1d24 <__stack+0x14c5>
    1d28:	fe 01       	movw	r30, r28
    1d2a:	e4 5f       	subi	r30, 0xF4	; 244
    1d2c:	fe 4f       	sbci	r31, 0xFE	; 254
    1d2e:	91 83       	std	Z+1, r25	; 0x01
    1d30:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d32:	de 01       	movw	r26, r28
    1d34:	a2 5f       	subi	r26, 0xF2	; 242
    1d36:	be 4f       	sbci	r27, 0xFE	; 254
    1d38:	fe 01       	movw	r30, r28
    1d3a:	e2 5f       	subi	r30, 0xF2	; 242
    1d3c:	fe 4f       	sbci	r31, 0xFE	; 254
    1d3e:	80 81       	ld	r24, Z
    1d40:	91 81       	ldd	r25, Z+1	; 0x01
    1d42:	01 97       	sbiw	r24, 0x01	; 1
    1d44:	11 96       	adiw	r26, 0x01	; 1
    1d46:	9c 93       	st	X, r25
    1d48:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d4a:	fe 01       	movw	r30, r28
    1d4c:	e2 5f       	subi	r30, 0xF2	; 242
    1d4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d50:	80 81       	ld	r24, Z
    1d52:	91 81       	ldd	r25, Z+1	; 0x01
    1d54:	00 97       	sbiw	r24, 0x00	; 0
    1d56:	d1 f6       	brne	.-76     	; 0x1d0c <__stack+0x14ad>
    1d58:	4b c0       	rjmp	.+150    	; 0x1df0 <__stack+0x1591>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d5a:	8e 01       	movw	r16, r28
    1d5c:	02 5f       	subi	r16, 0xF2	; 242
    1d5e:	1e 4f       	sbci	r17, 0xFE	; 254
    1d60:	fe 01       	movw	r30, r28
    1d62:	e0 5f       	subi	r30, 0xF0	; 240
    1d64:	fe 4f       	sbci	r31, 0xFE	; 254
    1d66:	60 81       	ld	r22, Z
    1d68:	71 81       	ldd	r23, Z+1	; 0x01
    1d6a:	82 81       	ldd	r24, Z+2	; 0x02
    1d6c:	93 81       	ldd	r25, Z+3	; 0x03
    1d6e:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1d72:	dc 01       	movw	r26, r24
    1d74:	cb 01       	movw	r24, r22
    1d76:	f8 01       	movw	r30, r16
    1d78:	91 83       	std	Z+1, r25	; 0x01
    1d7a:	80 83       	st	Z, r24
    1d7c:	de 01       	movw	r26, r28
    1d7e:	a6 5f       	subi	r26, 0xF6	; 246
    1d80:	be 4f       	sbci	r27, 0xFE	; 254
    1d82:	fe 01       	movw	r30, r28
    1d84:	e2 5f       	subi	r30, 0xF2	; 242
    1d86:	fe 4f       	sbci	r31, 0xFE	; 254
    1d88:	80 81       	ld	r24, Z
    1d8a:	91 81       	ldd	r25, Z+1	; 0x01
    1d8c:	11 96       	adiw	r26, 0x01	; 1
    1d8e:	9c 93       	st	X, r25
    1d90:	8e 93       	st	-X, r24
    1d92:	fe 01       	movw	r30, r28
    1d94:	e6 5f       	subi	r30, 0xF6	; 246
    1d96:	fe 4f       	sbci	r31, 0xFE	; 254
    1d98:	80 81       	ld	r24, Z
    1d9a:	91 81       	ldd	r25, Z+1	; 0x01
    1d9c:	01 97       	sbiw	r24, 0x01	; 1
    1d9e:	f1 f7       	brne	.-4      	; 0x1d9c <__stack+0x153d>
    1da0:	fe 01       	movw	r30, r28
    1da2:	e6 5f       	subi	r30, 0xF6	; 246
    1da4:	fe 4f       	sbci	r31, 0xFE	; 254
    1da6:	91 83       	std	Z+1, r25	; 0x01
    1da8:	80 83       	st	Z, r24
    1daa:	22 c0       	rjmp	.+68     	; 0x1df0 <__stack+0x1591>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1dac:	8e 01       	movw	r16, r28
    1dae:	08 5e       	subi	r16, 0xE8	; 232
    1db0:	1e 4f       	sbci	r17, 0xFE	; 254
    1db2:	fe 01       	movw	r30, r28
    1db4:	e7 5e       	subi	r30, 0xE7	; 231
    1db6:	fe 4f       	sbci	r31, 0xFE	; 254
    1db8:	60 81       	ld	r22, Z
    1dba:	71 81       	ldd	r23, Z+1	; 0x01
    1dbc:	82 81       	ldd	r24, Z+2	; 0x02
    1dbe:	93 81       	ldd	r25, Z+3	; 0x03
    1dc0:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1dc4:	dc 01       	movw	r26, r24
    1dc6:	cb 01       	movw	r24, r22
    1dc8:	f8 01       	movw	r30, r16
    1dca:	80 83       	st	Z, r24
    1dcc:	de 01       	movw	r26, r28
    1dce:	a7 5f       	subi	r26, 0xF7	; 247
    1dd0:	be 4f       	sbci	r27, 0xFE	; 254
    1dd2:	fe 01       	movw	r30, r28
    1dd4:	e8 5e       	subi	r30, 0xE8	; 232
    1dd6:	fe 4f       	sbci	r31, 0xFE	; 254
    1dd8:	80 81       	ld	r24, Z
    1dda:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1ddc:	fe 01       	movw	r30, r28
    1dde:	e7 5f       	subi	r30, 0xF7	; 247
    1de0:	fe 4f       	sbci	r31, 0xFE	; 254
    1de2:	80 81       	ld	r24, Z
    1de4:	8a 95       	dec	r24
    1de6:	f1 f7       	brne	.-4      	; 0x1de4 <__stack+0x1585>
    1de8:	fe 01       	movw	r30, r28
    1dea:	e7 5f       	subi	r30, 0xF7	; 247
    1dec:	fe 4f       	sbci	r31, 0xFE	; 254
    1dee:	80 83       	st	Z, r24
		_delay_us(5);
		PORTC |= 0x01;		//clock high
    1df0:	a5 e3       	ldi	r26, 0x35	; 53
    1df2:	b0 e0       	ldi	r27, 0x00	; 0
    1df4:	e5 e3       	ldi	r30, 0x35	; 53
    1df6:	f0 e0       	ldi	r31, 0x00	; 0
    1df8:	80 81       	ld	r24, Z
    1dfa:	81 60       	ori	r24, 0x01	; 1
    1dfc:	8c 93       	st	X, r24
    1dfe:	fe 01       	movw	r30, r28
    1e00:	eb 5f       	subi	r30, 0xFB	; 251
    1e02:	fe 4f       	sbci	r31, 0xFE	; 254
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	a0 ea       	ldi	r26, 0xA0	; 160
    1e0a:	b0 e4       	ldi	r27, 0x40	; 64
    1e0c:	80 83       	st	Z, r24
    1e0e:	91 83       	std	Z+1, r25	; 0x01
    1e10:	a2 83       	std	Z+2, r26	; 0x02
    1e12:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1e14:	8e 01       	movw	r16, r28
    1e16:	0f 5f       	subi	r16, 0xFF	; 255
    1e18:	1e 4f       	sbci	r17, 0xFE	; 254
    1e1a:	fe 01       	movw	r30, r28
    1e1c:	eb 5f       	subi	r30, 0xFB	; 251
    1e1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1e20:	60 81       	ld	r22, Z
    1e22:	71 81       	ldd	r23, Z+1	; 0x01
    1e24:	82 81       	ldd	r24, Z+2	; 0x02
    1e26:	93 81       	ldd	r25, Z+3	; 0x03
    1e28:	2b ea       	ldi	r18, 0xAB	; 171
    1e2a:	3a ea       	ldi	r19, 0xAA	; 170
    1e2c:	4a ea       	ldi	r20, 0xAA	; 170
    1e2e:	50 e4       	ldi	r21, 0x40	; 64
    1e30:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1e34:	dc 01       	movw	r26, r24
    1e36:	cb 01       	movw	r24, r22
    1e38:	f8 01       	movw	r30, r16
    1e3a:	80 83       	st	Z, r24
    1e3c:	91 83       	std	Z+1, r25	; 0x01
    1e3e:	a2 83       	std	Z+2, r26	; 0x02
    1e40:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e42:	fe 01       	movw	r30, r28
    1e44:	ef 5f       	subi	r30, 0xFF	; 255
    1e46:	fe 4f       	sbci	r31, 0xFE	; 254
    1e48:	60 81       	ld	r22, Z
    1e4a:	71 81       	ldd	r23, Z+1	; 0x01
    1e4c:	82 81       	ldd	r24, Z+2	; 0x02
    1e4e:	93 81       	ldd	r25, Z+3	; 0x03
    1e50:	20 e0       	ldi	r18, 0x00	; 0
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	40 e8       	ldi	r20, 0x80	; 128
    1e56:	5f e3       	ldi	r21, 0x3F	; 63
    1e58:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    1e5c:	88 23       	and	r24, r24
    1e5e:	34 f4       	brge	.+12     	; 0x1e6c <__stack+0x160d>
		__ticks = 1;
    1e60:	fe 01       	movw	r30, r28
    1e62:	e0 50       	subi	r30, 0x00	; 0
    1e64:	ff 4f       	sbci	r31, 0xFF	; 255
    1e66:	81 e0       	ldi	r24, 0x01	; 1
    1e68:	80 83       	st	Z, r24
    1e6a:	e0 c0       	rjmp	.+448    	; 0x202c <__stack+0x17cd>
	else if (__tmp > 255)
    1e6c:	fe 01       	movw	r30, r28
    1e6e:	ef 5f       	subi	r30, 0xFF	; 255
    1e70:	fe 4f       	sbci	r31, 0xFE	; 254
    1e72:	60 81       	ld	r22, Z
    1e74:	71 81       	ldd	r23, Z+1	; 0x01
    1e76:	82 81       	ldd	r24, Z+2	; 0x02
    1e78:	93 81       	ldd	r25, Z+3	; 0x03
    1e7a:	20 e0       	ldi	r18, 0x00	; 0
    1e7c:	30 e0       	ldi	r19, 0x00	; 0
    1e7e:	4f e7       	ldi	r20, 0x7F	; 127
    1e80:	53 e4       	ldi	r21, 0x43	; 67
    1e82:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1e86:	18 16       	cp	r1, r24
    1e88:	0c f0       	brlt	.+2      	; 0x1e8c <__stack+0x162d>
    1e8a:	c0 c0       	rjmp	.+384    	; 0x200c <__stack+0x17ad>
	{
		_delay_ms(__us / 1000.0);
    1e8c:	fe 01       	movw	r30, r28
    1e8e:	eb 5f       	subi	r30, 0xFB	; 251
    1e90:	fe 4f       	sbci	r31, 0xFE	; 254
    1e92:	60 81       	ld	r22, Z
    1e94:	71 81       	ldd	r23, Z+1	; 0x01
    1e96:	82 81       	ldd	r24, Z+2	; 0x02
    1e98:	93 81       	ldd	r25, Z+3	; 0x03
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	30 e0       	ldi	r19, 0x00	; 0
    1e9e:	4a e7       	ldi	r20, 0x7A	; 122
    1ea0:	54 e4       	ldi	r21, 0x44	; 68
    1ea2:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    1ea6:	dc 01       	movw	r26, r24
    1ea8:	cb 01       	movw	r24, r22
    1eaa:	fe 01       	movw	r30, r28
    1eac:	e4 50       	subi	r30, 0x04	; 4
    1eae:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb0:	80 83       	st	Z, r24
    1eb2:	91 83       	std	Z+1, r25	; 0x01
    1eb4:	a2 83       	std	Z+2, r26	; 0x02
    1eb6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1eb8:	8e 01       	movw	r16, r28
    1eba:	08 50       	subi	r16, 0x08	; 8
    1ebc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ebe:	fe 01       	movw	r30, r28
    1ec0:	e4 50       	subi	r30, 0x04	; 4
    1ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec4:	60 81       	ld	r22, Z
    1ec6:	71 81       	ldd	r23, Z+1	; 0x01
    1ec8:	82 81       	ldd	r24, Z+2	; 0x02
    1eca:	93 81       	ldd	r25, Z+3	; 0x03
    1ecc:	20 e0       	ldi	r18, 0x00	; 0
    1ece:	30 e0       	ldi	r19, 0x00	; 0
    1ed0:	4a e7       	ldi	r20, 0x7A	; 122
    1ed2:	55 e4       	ldi	r21, 0x45	; 69
    1ed4:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1ed8:	dc 01       	movw	r26, r24
    1eda:	cb 01       	movw	r24, r22
    1edc:	f8 01       	movw	r30, r16
    1ede:	80 83       	st	Z, r24
    1ee0:	91 83       	std	Z+1, r25	; 0x01
    1ee2:	a2 83       	std	Z+2, r26	; 0x02
    1ee4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ee6:	fe 01       	movw	r30, r28
    1ee8:	e8 50       	subi	r30, 0x08	; 8
    1eea:	ff 4f       	sbci	r31, 0xFF	; 255
    1eec:	60 81       	ld	r22, Z
    1eee:	71 81       	ldd	r23, Z+1	; 0x01
    1ef0:	82 81       	ldd	r24, Z+2	; 0x02
    1ef2:	93 81       	ldd	r25, Z+3	; 0x03
    1ef4:	20 e0       	ldi	r18, 0x00	; 0
    1ef6:	30 e0       	ldi	r19, 0x00	; 0
    1ef8:	40 e8       	ldi	r20, 0x80	; 128
    1efa:	5f e3       	ldi	r21, 0x3F	; 63
    1efc:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    1f00:	88 23       	and	r24, r24
    1f02:	44 f4       	brge	.+16     	; 0x1f14 <__stack+0x16b5>
		__ticks = 1;
    1f04:	fe 01       	movw	r30, r28
    1f06:	ea 50       	subi	r30, 0x0A	; 10
    1f08:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0a:	81 e0       	ldi	r24, 0x01	; 1
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	91 83       	std	Z+1, r25	; 0x01
    1f10:	80 83       	st	Z, r24
    1f12:	64 c0       	rjmp	.+200    	; 0x1fdc <__stack+0x177d>
	else if (__tmp > 65535)
    1f14:	fe 01       	movw	r30, r28
    1f16:	e8 50       	subi	r30, 0x08	; 8
    1f18:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1a:	60 81       	ld	r22, Z
    1f1c:	71 81       	ldd	r23, Z+1	; 0x01
    1f1e:	82 81       	ldd	r24, Z+2	; 0x02
    1f20:	93 81       	ldd	r25, Z+3	; 0x03
    1f22:	20 e0       	ldi	r18, 0x00	; 0
    1f24:	3f ef       	ldi	r19, 0xFF	; 255
    1f26:	4f e7       	ldi	r20, 0x7F	; 127
    1f28:	57 e4       	ldi	r21, 0x47	; 71
    1f2a:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    1f2e:	18 16       	cp	r1, r24
    1f30:	0c f0       	brlt	.+2      	; 0x1f34 <__stack+0x16d5>
    1f32:	43 c0       	rjmp	.+134    	; 0x1fba <__stack+0x175b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f34:	fe 01       	movw	r30, r28
    1f36:	e4 50       	subi	r30, 0x04	; 4
    1f38:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3a:	60 81       	ld	r22, Z
    1f3c:	71 81       	ldd	r23, Z+1	; 0x01
    1f3e:	82 81       	ldd	r24, Z+2	; 0x02
    1f40:	93 81       	ldd	r25, Z+3	; 0x03
    1f42:	20 e0       	ldi	r18, 0x00	; 0
    1f44:	30 e0       	ldi	r19, 0x00	; 0
    1f46:	40 e2       	ldi	r20, 0x20	; 32
    1f48:	51 e4       	ldi	r21, 0x41	; 65
    1f4a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    1f4e:	dc 01       	movw	r26, r24
    1f50:	cb 01       	movw	r24, r22
    1f52:	8e 01       	movw	r16, r28
    1f54:	0a 50       	subi	r16, 0x0A	; 10
    1f56:	1f 4f       	sbci	r17, 0xFF	; 255
    1f58:	bc 01       	movw	r22, r24
    1f5a:	cd 01       	movw	r24, r26
    1f5c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1f60:	dc 01       	movw	r26, r24
    1f62:	cb 01       	movw	r24, r22
    1f64:	f8 01       	movw	r30, r16
    1f66:	91 83       	std	Z+1, r25	; 0x01
    1f68:	80 83       	st	Z, r24
    1f6a:	1f c0       	rjmp	.+62     	; 0x1faa <__stack+0x174b>
    1f6c:	fe 01       	movw	r30, r28
    1f6e:	ec 50       	subi	r30, 0x0C	; 12
    1f70:	ff 4f       	sbci	r31, 0xFF	; 255
    1f72:	80 e9       	ldi	r24, 0x90	; 144
    1f74:	91 e0       	ldi	r25, 0x01	; 1
    1f76:	91 83       	std	Z+1, r25	; 0x01
    1f78:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	ec 50       	subi	r30, 0x0C	; 12
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	80 81       	ld	r24, Z
    1f82:	91 81       	ldd	r25, Z+1	; 0x01
    1f84:	01 97       	sbiw	r24, 0x01	; 1
    1f86:	f1 f7       	brne	.-4      	; 0x1f84 <__stack+0x1725>
    1f88:	fe 01       	movw	r30, r28
    1f8a:	ec 50       	subi	r30, 0x0C	; 12
    1f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8e:	91 83       	std	Z+1, r25	; 0x01
    1f90:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f92:	de 01       	movw	r26, r28
    1f94:	aa 50       	subi	r26, 0x0A	; 10
    1f96:	bf 4f       	sbci	r27, 0xFF	; 255
    1f98:	fe 01       	movw	r30, r28
    1f9a:	ea 50       	subi	r30, 0x0A	; 10
    1f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9e:	80 81       	ld	r24, Z
    1fa0:	91 81       	ldd	r25, Z+1	; 0x01
    1fa2:	01 97       	sbiw	r24, 0x01	; 1
    1fa4:	11 96       	adiw	r26, 0x01	; 1
    1fa6:	9c 93       	st	X, r25
    1fa8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1faa:	fe 01       	movw	r30, r28
    1fac:	ea 50       	subi	r30, 0x0A	; 10
    1fae:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb0:	80 81       	ld	r24, Z
    1fb2:	91 81       	ldd	r25, Z+1	; 0x01
    1fb4:	00 97       	sbiw	r24, 0x00	; 0
    1fb6:	d1 f6       	brne	.-76     	; 0x1f6c <__stack+0x170d>
    1fb8:	4b c0       	rjmp	.+150    	; 0x2050 <__stack+0x17f1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fba:	8e 01       	movw	r16, r28
    1fbc:	0a 50       	subi	r16, 0x0A	; 10
    1fbe:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	e8 50       	subi	r30, 0x08	; 8
    1fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc6:	60 81       	ld	r22, Z
    1fc8:	71 81       	ldd	r23, Z+1	; 0x01
    1fca:	82 81       	ldd	r24, Z+2	; 0x02
    1fcc:	93 81       	ldd	r25, Z+3	; 0x03
    1fce:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    1fd2:	dc 01       	movw	r26, r24
    1fd4:	cb 01       	movw	r24, r22
    1fd6:	f8 01       	movw	r30, r16
    1fd8:	91 83       	std	Z+1, r25	; 0x01
    1fda:	80 83       	st	Z, r24
    1fdc:	de 01       	movw	r26, r28
    1fde:	ae 50       	subi	r26, 0x0E	; 14
    1fe0:	bf 4f       	sbci	r27, 0xFF	; 255
    1fe2:	fe 01       	movw	r30, r28
    1fe4:	ea 50       	subi	r30, 0x0A	; 10
    1fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe8:	80 81       	ld	r24, Z
    1fea:	91 81       	ldd	r25, Z+1	; 0x01
    1fec:	11 96       	adiw	r26, 0x01	; 1
    1fee:	9c 93       	st	X, r25
    1ff0:	8e 93       	st	-X, r24
    1ff2:	fe 01       	movw	r30, r28
    1ff4:	ee 50       	subi	r30, 0x0E	; 14
    1ff6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff8:	80 81       	ld	r24, Z
    1ffa:	91 81       	ldd	r25, Z+1	; 0x01
    1ffc:	01 97       	sbiw	r24, 0x01	; 1
    1ffe:	f1 f7       	brne	.-4      	; 0x1ffc <__stack+0x179d>
    2000:	fe 01       	movw	r30, r28
    2002:	ee 50       	subi	r30, 0x0E	; 14
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	91 83       	std	Z+1, r25	; 0x01
    2008:	80 83       	st	Z, r24
    200a:	22 c0       	rjmp	.+68     	; 0x2050 <__stack+0x17f1>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    200c:	8e 01       	movw	r16, r28
    200e:	00 50       	subi	r16, 0x00	; 0
    2010:	1f 4f       	sbci	r17, 0xFF	; 255
    2012:	fe 01       	movw	r30, r28
    2014:	ef 5f       	subi	r30, 0xFF	; 255
    2016:	fe 4f       	sbci	r31, 0xFE	; 254
    2018:	60 81       	ld	r22, Z
    201a:	71 81       	ldd	r23, Z+1	; 0x01
    201c:	82 81       	ldd	r24, Z+2	; 0x02
    201e:	93 81       	ldd	r25, Z+3	; 0x03
    2020:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2024:	dc 01       	movw	r26, r24
    2026:	cb 01       	movw	r24, r22
    2028:	f8 01       	movw	r30, r16
    202a:	80 83       	st	Z, r24
    202c:	de 01       	movw	r26, r28
    202e:	af 50       	subi	r26, 0x0F	; 15
    2030:	bf 4f       	sbci	r27, 0xFF	; 255
    2032:	fe 01       	movw	r30, r28
    2034:	e0 50       	subi	r30, 0x00	; 0
    2036:	ff 4f       	sbci	r31, 0xFF	; 255
    2038:	80 81       	ld	r24, Z
    203a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    203c:	fe 01       	movw	r30, r28
    203e:	ef 50       	subi	r30, 0x0F	; 15
    2040:	ff 4f       	sbci	r31, 0xFF	; 255
    2042:	80 81       	ld	r24, Z
    2044:	8a 95       	dec	r24
    2046:	f1 f7       	brne	.-4      	; 0x2044 <__stack+0x17e5>
    2048:	fe 01       	movw	r30, r28
    204a:	ef 50       	subi	r30, 0x0F	; 15
    204c:	ff 4f       	sbci	r31, 0xFF	; 255
    204e:	80 83       	st	Z, r24
	PORTC |= 0x01;		//clock high
	_delay_us(5);
	
	PORTC &= 0xFB;		//cmd low
	
	for(i = 0;i<4;i++)
    2050:	80 91 60 00 	lds	r24, 0x0060
    2054:	90 91 61 00 	lds	r25, 0x0061
    2058:	01 96       	adiw	r24, 0x01	; 1
    205a:	90 93 61 00 	sts	0x0061, r25
    205e:	80 93 60 00 	sts	0x0060, r24
    2062:	80 91 60 00 	lds	r24, 0x0060
    2066:	90 91 61 00 	lds	r25, 0x0061
    206a:	84 30       	cpi	r24, 0x04	; 4
    206c:	91 05       	cpc	r25, r1
    206e:	0c f4       	brge	.+2      	; 0x2072 <__stack+0x1813>
    2070:	8f cd       	rjmp	.-1250   	; 0x1b90 <__stack+0x1331>
		_delay_us(5);
		PORTC |= 0x01;		//clock high
		_delay_us(5);
	}
	
	PORTC |= 0x04;		//cmd high
    2072:	a5 e3       	ldi	r26, 0x35	; 53
    2074:	b0 e0       	ldi	r27, 0x00	; 0
    2076:	e5 e3       	ldi	r30, 0x35	; 53
    2078:	f0 e0       	ldi	r31, 0x00	; 0
    207a:	80 81       	ld	r24, Z
    207c:	84 60       	ori	r24, 0x04	; 4
    207e:	8c 93       	st	X, r24
	
	PORTC &= 0xFE;		//clock low
    2080:	a5 e3       	ldi	r26, 0x35	; 53
    2082:	b0 e0       	ldi	r27, 0x00	; 0
    2084:	e5 e3       	ldi	r30, 0x35	; 53
    2086:	f0 e0       	ldi	r31, 0x00	; 0
    2088:	80 81       	ld	r24, Z
    208a:	8e 7f       	andi	r24, 0xFE	; 254
    208c:	8c 93       	st	X, r24
    208e:	fe 01       	movw	r30, r28
    2090:	e3 51       	subi	r30, 0x13	; 19
    2092:	ff 4f       	sbci	r31, 0xFF	; 255
    2094:	80 e0       	ldi	r24, 0x00	; 0
    2096:	90 e0       	ldi	r25, 0x00	; 0
    2098:	a0 ea       	ldi	r26, 0xA0	; 160
    209a:	b0 e4       	ldi	r27, 0x40	; 64
    209c:	80 83       	st	Z, r24
    209e:	91 83       	std	Z+1, r25	; 0x01
    20a0:	a2 83       	std	Z+2, r26	; 0x02
    20a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    20a4:	8e 01       	movw	r16, r28
    20a6:	07 51       	subi	r16, 0x17	; 23
    20a8:	1f 4f       	sbci	r17, 0xFF	; 255
    20aa:	fe 01       	movw	r30, r28
    20ac:	e3 51       	subi	r30, 0x13	; 19
    20ae:	ff 4f       	sbci	r31, 0xFF	; 255
    20b0:	60 81       	ld	r22, Z
    20b2:	71 81       	ldd	r23, Z+1	; 0x01
    20b4:	82 81       	ldd	r24, Z+2	; 0x02
    20b6:	93 81       	ldd	r25, Z+3	; 0x03
    20b8:	2b ea       	ldi	r18, 0xAB	; 171
    20ba:	3a ea       	ldi	r19, 0xAA	; 170
    20bc:	4a ea       	ldi	r20, 0xAA	; 170
    20be:	50 e4       	ldi	r21, 0x40	; 64
    20c0:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    20c4:	dc 01       	movw	r26, r24
    20c6:	cb 01       	movw	r24, r22
    20c8:	f8 01       	movw	r30, r16
    20ca:	80 83       	st	Z, r24
    20cc:	91 83       	std	Z+1, r25	; 0x01
    20ce:	a2 83       	std	Z+2, r26	; 0x02
    20d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20d2:	fe 01       	movw	r30, r28
    20d4:	e7 51       	subi	r30, 0x17	; 23
    20d6:	ff 4f       	sbci	r31, 0xFF	; 255
    20d8:	60 81       	ld	r22, Z
    20da:	71 81       	ldd	r23, Z+1	; 0x01
    20dc:	82 81       	ldd	r24, Z+2	; 0x02
    20de:	93 81       	ldd	r25, Z+3	; 0x03
    20e0:	20 e0       	ldi	r18, 0x00	; 0
    20e2:	30 e0       	ldi	r19, 0x00	; 0
    20e4:	40 e8       	ldi	r20, 0x80	; 128
    20e6:	5f e3       	ldi	r21, 0x3F	; 63
    20e8:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    20ec:	88 23       	and	r24, r24
    20ee:	34 f4       	brge	.+12     	; 0x20fc <__stack+0x189d>
		__ticks = 1;
    20f0:	fe 01       	movw	r30, r28
    20f2:	e8 51       	subi	r30, 0x18	; 24
    20f4:	ff 4f       	sbci	r31, 0xFF	; 255
    20f6:	81 e0       	ldi	r24, 0x01	; 1
    20f8:	80 83       	st	Z, r24
    20fa:	e0 c0       	rjmp	.+448    	; 0x22bc <__stack+0x1a5d>
	else if (__tmp > 255)
    20fc:	fe 01       	movw	r30, r28
    20fe:	e7 51       	subi	r30, 0x17	; 23
    2100:	ff 4f       	sbci	r31, 0xFF	; 255
    2102:	60 81       	ld	r22, Z
    2104:	71 81       	ldd	r23, Z+1	; 0x01
    2106:	82 81       	ldd	r24, Z+2	; 0x02
    2108:	93 81       	ldd	r25, Z+3	; 0x03
    210a:	20 e0       	ldi	r18, 0x00	; 0
    210c:	30 e0       	ldi	r19, 0x00	; 0
    210e:	4f e7       	ldi	r20, 0x7F	; 127
    2110:	53 e4       	ldi	r21, 0x43	; 67
    2112:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    2116:	18 16       	cp	r1, r24
    2118:	0c f0       	brlt	.+2      	; 0x211c <__stack+0x18bd>
    211a:	c0 c0       	rjmp	.+384    	; 0x229c <__stack+0x1a3d>
	{
		_delay_ms(__us / 1000.0);
    211c:	fe 01       	movw	r30, r28
    211e:	e3 51       	subi	r30, 0x13	; 19
    2120:	ff 4f       	sbci	r31, 0xFF	; 255
    2122:	60 81       	ld	r22, Z
    2124:	71 81       	ldd	r23, Z+1	; 0x01
    2126:	82 81       	ldd	r24, Z+2	; 0x02
    2128:	93 81       	ldd	r25, Z+3	; 0x03
    212a:	20 e0       	ldi	r18, 0x00	; 0
    212c:	30 e0       	ldi	r19, 0x00	; 0
    212e:	4a e7       	ldi	r20, 0x7A	; 122
    2130:	54 e4       	ldi	r21, 0x44	; 68
    2132:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    2136:	dc 01       	movw	r26, r24
    2138:	cb 01       	movw	r24, r22
    213a:	fe 01       	movw	r30, r28
    213c:	ec 51       	subi	r30, 0x1C	; 28
    213e:	ff 4f       	sbci	r31, 0xFF	; 255
    2140:	80 83       	st	Z, r24
    2142:	91 83       	std	Z+1, r25	; 0x01
    2144:	a2 83       	std	Z+2, r26	; 0x02
    2146:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2148:	8e 01       	movw	r16, r28
    214a:	00 52       	subi	r16, 0x20	; 32
    214c:	1f 4f       	sbci	r17, 0xFF	; 255
    214e:	fe 01       	movw	r30, r28
    2150:	ec 51       	subi	r30, 0x1C	; 28
    2152:	ff 4f       	sbci	r31, 0xFF	; 255
    2154:	60 81       	ld	r22, Z
    2156:	71 81       	ldd	r23, Z+1	; 0x01
    2158:	82 81       	ldd	r24, Z+2	; 0x02
    215a:	93 81       	ldd	r25, Z+3	; 0x03
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	30 e0       	ldi	r19, 0x00	; 0
    2160:	4a e7       	ldi	r20, 0x7A	; 122
    2162:	55 e4       	ldi	r21, 0x45	; 69
    2164:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2168:	dc 01       	movw	r26, r24
    216a:	cb 01       	movw	r24, r22
    216c:	f8 01       	movw	r30, r16
    216e:	80 83       	st	Z, r24
    2170:	91 83       	std	Z+1, r25	; 0x01
    2172:	a2 83       	std	Z+2, r26	; 0x02
    2174:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2176:	fe 01       	movw	r30, r28
    2178:	e0 52       	subi	r30, 0x20	; 32
    217a:	ff 4f       	sbci	r31, 0xFF	; 255
    217c:	60 81       	ld	r22, Z
    217e:	71 81       	ldd	r23, Z+1	; 0x01
    2180:	82 81       	ldd	r24, Z+2	; 0x02
    2182:	93 81       	ldd	r25, Z+3	; 0x03
    2184:	20 e0       	ldi	r18, 0x00	; 0
    2186:	30 e0       	ldi	r19, 0x00	; 0
    2188:	40 e8       	ldi	r20, 0x80	; 128
    218a:	5f e3       	ldi	r21, 0x3F	; 63
    218c:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    2190:	88 23       	and	r24, r24
    2192:	44 f4       	brge	.+16     	; 0x21a4 <__stack+0x1945>
		__ticks = 1;
    2194:	fe 01       	movw	r30, r28
    2196:	e2 52       	subi	r30, 0x22	; 34
    2198:	ff 4f       	sbci	r31, 0xFF	; 255
    219a:	81 e0       	ldi	r24, 0x01	; 1
    219c:	90 e0       	ldi	r25, 0x00	; 0
    219e:	91 83       	std	Z+1, r25	; 0x01
    21a0:	80 83       	st	Z, r24
    21a2:	64 c0       	rjmp	.+200    	; 0x226c <__stack+0x1a0d>
	else if (__tmp > 65535)
    21a4:	fe 01       	movw	r30, r28
    21a6:	e0 52       	subi	r30, 0x20	; 32
    21a8:	ff 4f       	sbci	r31, 0xFF	; 255
    21aa:	60 81       	ld	r22, Z
    21ac:	71 81       	ldd	r23, Z+1	; 0x01
    21ae:	82 81       	ldd	r24, Z+2	; 0x02
    21b0:	93 81       	ldd	r25, Z+3	; 0x03
    21b2:	20 e0       	ldi	r18, 0x00	; 0
    21b4:	3f ef       	ldi	r19, 0xFF	; 255
    21b6:	4f e7       	ldi	r20, 0x7F	; 127
    21b8:	57 e4       	ldi	r21, 0x47	; 71
    21ba:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    21be:	18 16       	cp	r1, r24
    21c0:	0c f0       	brlt	.+2      	; 0x21c4 <__stack+0x1965>
    21c2:	43 c0       	rjmp	.+134    	; 0x224a <__stack+0x19eb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21c4:	fe 01       	movw	r30, r28
    21c6:	ec 51       	subi	r30, 0x1C	; 28
    21c8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ca:	60 81       	ld	r22, Z
    21cc:	71 81       	ldd	r23, Z+1	; 0x01
    21ce:	82 81       	ldd	r24, Z+2	; 0x02
    21d0:	93 81       	ldd	r25, Z+3	; 0x03
    21d2:	20 e0       	ldi	r18, 0x00	; 0
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	40 e2       	ldi	r20, 0x20	; 32
    21d8:	51 e4       	ldi	r21, 0x41	; 65
    21da:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    21de:	dc 01       	movw	r26, r24
    21e0:	cb 01       	movw	r24, r22
    21e2:	8e 01       	movw	r16, r28
    21e4:	02 52       	subi	r16, 0x22	; 34
    21e6:	1f 4f       	sbci	r17, 0xFF	; 255
    21e8:	bc 01       	movw	r22, r24
    21ea:	cd 01       	movw	r24, r26
    21ec:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    21f0:	dc 01       	movw	r26, r24
    21f2:	cb 01       	movw	r24, r22
    21f4:	f8 01       	movw	r30, r16
    21f6:	91 83       	std	Z+1, r25	; 0x01
    21f8:	80 83       	st	Z, r24
    21fa:	1f c0       	rjmp	.+62     	; 0x223a <__stack+0x19db>
    21fc:	fe 01       	movw	r30, r28
    21fe:	e4 52       	subi	r30, 0x24	; 36
    2200:	ff 4f       	sbci	r31, 0xFF	; 255
    2202:	80 e9       	ldi	r24, 0x90	; 144
    2204:	91 e0       	ldi	r25, 0x01	; 1
    2206:	91 83       	std	Z+1, r25	; 0x01
    2208:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    220a:	fe 01       	movw	r30, r28
    220c:	e4 52       	subi	r30, 0x24	; 36
    220e:	ff 4f       	sbci	r31, 0xFF	; 255
    2210:	80 81       	ld	r24, Z
    2212:	91 81       	ldd	r25, Z+1	; 0x01
    2214:	01 97       	sbiw	r24, 0x01	; 1
    2216:	f1 f7       	brne	.-4      	; 0x2214 <__stack+0x19b5>
    2218:	fe 01       	movw	r30, r28
    221a:	e4 52       	subi	r30, 0x24	; 36
    221c:	ff 4f       	sbci	r31, 0xFF	; 255
    221e:	91 83       	std	Z+1, r25	; 0x01
    2220:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2222:	de 01       	movw	r26, r28
    2224:	a2 52       	subi	r26, 0x22	; 34
    2226:	bf 4f       	sbci	r27, 0xFF	; 255
    2228:	fe 01       	movw	r30, r28
    222a:	e2 52       	subi	r30, 0x22	; 34
    222c:	ff 4f       	sbci	r31, 0xFF	; 255
    222e:	80 81       	ld	r24, Z
    2230:	91 81       	ldd	r25, Z+1	; 0x01
    2232:	01 97       	sbiw	r24, 0x01	; 1
    2234:	11 96       	adiw	r26, 0x01	; 1
    2236:	9c 93       	st	X, r25
    2238:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    223a:	fe 01       	movw	r30, r28
    223c:	e2 52       	subi	r30, 0x22	; 34
    223e:	ff 4f       	sbci	r31, 0xFF	; 255
    2240:	80 81       	ld	r24, Z
    2242:	91 81       	ldd	r25, Z+1	; 0x01
    2244:	00 97       	sbiw	r24, 0x00	; 0
    2246:	d1 f6       	brne	.-76     	; 0x21fc <__stack+0x199d>
    2248:	4b c0       	rjmp	.+150    	; 0x22e0 <__stack+0x1a81>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    224a:	8e 01       	movw	r16, r28
    224c:	02 52       	subi	r16, 0x22	; 34
    224e:	1f 4f       	sbci	r17, 0xFF	; 255
    2250:	fe 01       	movw	r30, r28
    2252:	e0 52       	subi	r30, 0x20	; 32
    2254:	ff 4f       	sbci	r31, 0xFF	; 255
    2256:	60 81       	ld	r22, Z
    2258:	71 81       	ldd	r23, Z+1	; 0x01
    225a:	82 81       	ldd	r24, Z+2	; 0x02
    225c:	93 81       	ldd	r25, Z+3	; 0x03
    225e:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2262:	dc 01       	movw	r26, r24
    2264:	cb 01       	movw	r24, r22
    2266:	f8 01       	movw	r30, r16
    2268:	91 83       	std	Z+1, r25	; 0x01
    226a:	80 83       	st	Z, r24
    226c:	de 01       	movw	r26, r28
    226e:	a6 52       	subi	r26, 0x26	; 38
    2270:	bf 4f       	sbci	r27, 0xFF	; 255
    2272:	fe 01       	movw	r30, r28
    2274:	e2 52       	subi	r30, 0x22	; 34
    2276:	ff 4f       	sbci	r31, 0xFF	; 255
    2278:	80 81       	ld	r24, Z
    227a:	91 81       	ldd	r25, Z+1	; 0x01
    227c:	11 96       	adiw	r26, 0x01	; 1
    227e:	9c 93       	st	X, r25
    2280:	8e 93       	st	-X, r24
    2282:	fe 01       	movw	r30, r28
    2284:	e6 52       	subi	r30, 0x26	; 38
    2286:	ff 4f       	sbci	r31, 0xFF	; 255
    2288:	80 81       	ld	r24, Z
    228a:	91 81       	ldd	r25, Z+1	; 0x01
    228c:	01 97       	sbiw	r24, 0x01	; 1
    228e:	f1 f7       	brne	.-4      	; 0x228c <__stack+0x1a2d>
    2290:	fe 01       	movw	r30, r28
    2292:	e6 52       	subi	r30, 0x26	; 38
    2294:	ff 4f       	sbci	r31, 0xFF	; 255
    2296:	91 83       	std	Z+1, r25	; 0x01
    2298:	80 83       	st	Z, r24
    229a:	22 c0       	rjmp	.+68     	; 0x22e0 <__stack+0x1a81>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    229c:	8e 01       	movw	r16, r28
    229e:	08 51       	subi	r16, 0x18	; 24
    22a0:	1f 4f       	sbci	r17, 0xFF	; 255
    22a2:	fe 01       	movw	r30, r28
    22a4:	e7 51       	subi	r30, 0x17	; 23
    22a6:	ff 4f       	sbci	r31, 0xFF	; 255
    22a8:	60 81       	ld	r22, Z
    22aa:	71 81       	ldd	r23, Z+1	; 0x01
    22ac:	82 81       	ldd	r24, Z+2	; 0x02
    22ae:	93 81       	ldd	r25, Z+3	; 0x03
    22b0:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    22b4:	dc 01       	movw	r26, r24
    22b6:	cb 01       	movw	r24, r22
    22b8:	f8 01       	movw	r30, r16
    22ba:	80 83       	st	Z, r24
    22bc:	de 01       	movw	r26, r28
    22be:	a7 52       	subi	r26, 0x27	; 39
    22c0:	bf 4f       	sbci	r27, 0xFF	; 255
    22c2:	fe 01       	movw	r30, r28
    22c4:	e8 51       	subi	r30, 0x18	; 24
    22c6:	ff 4f       	sbci	r31, 0xFF	; 255
    22c8:	80 81       	ld	r24, Z
    22ca:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    22cc:	fe 01       	movw	r30, r28
    22ce:	e7 52       	subi	r30, 0x27	; 39
    22d0:	ff 4f       	sbci	r31, 0xFF	; 255
    22d2:	80 81       	ld	r24, Z
    22d4:	8a 95       	dec	r24
    22d6:	f1 f7       	brne	.-4      	; 0x22d4 <__stack+0x1a75>
    22d8:	fe 01       	movw	r30, r28
    22da:	e7 52       	subi	r30, 0x27	; 39
    22dc:	ff 4f       	sbci	r31, 0xFF	; 255
    22de:	80 83       	st	Z, r24
	_delay_us(5);
	PORTC |= 0x01;		//clock high
    22e0:	a5 e3       	ldi	r26, 0x35	; 53
    22e2:	b0 e0       	ldi	r27, 0x00	; 0
    22e4:	e5 e3       	ldi	r30, 0x35	; 53
    22e6:	f0 e0       	ldi	r31, 0x00	; 0
    22e8:	80 81       	ld	r24, Z
    22ea:	81 60       	ori	r24, 0x01	; 1
    22ec:	8c 93       	st	X, r24
    22ee:	fe 01       	movw	r30, r28
    22f0:	eb 52       	subi	r30, 0x2B	; 43
    22f2:	ff 4f       	sbci	r31, 0xFF	; 255
    22f4:	80 e0       	ldi	r24, 0x00	; 0
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	a0 ea       	ldi	r26, 0xA0	; 160
    22fa:	b0 e4       	ldi	r27, 0x40	; 64
    22fc:	80 83       	st	Z, r24
    22fe:	91 83       	std	Z+1, r25	; 0x01
    2300:	a2 83       	std	Z+2, r26	; 0x02
    2302:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2304:	8e 01       	movw	r16, r28
    2306:	0f 52       	subi	r16, 0x2F	; 47
    2308:	1f 4f       	sbci	r17, 0xFF	; 255
    230a:	fe 01       	movw	r30, r28
    230c:	eb 52       	subi	r30, 0x2B	; 43
    230e:	ff 4f       	sbci	r31, 0xFF	; 255
    2310:	60 81       	ld	r22, Z
    2312:	71 81       	ldd	r23, Z+1	; 0x01
    2314:	82 81       	ldd	r24, Z+2	; 0x02
    2316:	93 81       	ldd	r25, Z+3	; 0x03
    2318:	2b ea       	ldi	r18, 0xAB	; 171
    231a:	3a ea       	ldi	r19, 0xAA	; 170
    231c:	4a ea       	ldi	r20, 0xAA	; 170
    231e:	50 e4       	ldi	r21, 0x40	; 64
    2320:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2324:	dc 01       	movw	r26, r24
    2326:	cb 01       	movw	r24, r22
    2328:	f8 01       	movw	r30, r16
    232a:	80 83       	st	Z, r24
    232c:	91 83       	std	Z+1, r25	; 0x01
    232e:	a2 83       	std	Z+2, r26	; 0x02
    2330:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2332:	fe 01       	movw	r30, r28
    2334:	ef 52       	subi	r30, 0x2F	; 47
    2336:	ff 4f       	sbci	r31, 0xFF	; 255
    2338:	60 81       	ld	r22, Z
    233a:	71 81       	ldd	r23, Z+1	; 0x01
    233c:	82 81       	ldd	r24, Z+2	; 0x02
    233e:	93 81       	ldd	r25, Z+3	; 0x03
    2340:	20 e0       	ldi	r18, 0x00	; 0
    2342:	30 e0       	ldi	r19, 0x00	; 0
    2344:	40 e8       	ldi	r20, 0x80	; 128
    2346:	5f e3       	ldi	r21, 0x3F	; 63
    2348:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    234c:	88 23       	and	r24, r24
    234e:	34 f4       	brge	.+12     	; 0x235c <__stack+0x1afd>
		__ticks = 1;
    2350:	fe 01       	movw	r30, r28
    2352:	e0 53       	subi	r30, 0x30	; 48
    2354:	ff 4f       	sbci	r31, 0xFF	; 255
    2356:	81 e0       	ldi	r24, 0x01	; 1
    2358:	80 83       	st	Z, r24
    235a:	e0 c0       	rjmp	.+448    	; 0x251c <__stack+0x1cbd>
	else if (__tmp > 255)
    235c:	fe 01       	movw	r30, r28
    235e:	ef 52       	subi	r30, 0x2F	; 47
    2360:	ff 4f       	sbci	r31, 0xFF	; 255
    2362:	60 81       	ld	r22, Z
    2364:	71 81       	ldd	r23, Z+1	; 0x01
    2366:	82 81       	ldd	r24, Z+2	; 0x02
    2368:	93 81       	ldd	r25, Z+3	; 0x03
    236a:	20 e0       	ldi	r18, 0x00	; 0
    236c:	30 e0       	ldi	r19, 0x00	; 0
    236e:	4f e7       	ldi	r20, 0x7F	; 127
    2370:	53 e4       	ldi	r21, 0x43	; 67
    2372:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    2376:	18 16       	cp	r1, r24
    2378:	0c f0       	brlt	.+2      	; 0x237c <__stack+0x1b1d>
    237a:	c0 c0       	rjmp	.+384    	; 0x24fc <__stack+0x1c9d>
	{
		_delay_ms(__us / 1000.0);
    237c:	fe 01       	movw	r30, r28
    237e:	eb 52       	subi	r30, 0x2B	; 43
    2380:	ff 4f       	sbci	r31, 0xFF	; 255
    2382:	60 81       	ld	r22, Z
    2384:	71 81       	ldd	r23, Z+1	; 0x01
    2386:	82 81       	ldd	r24, Z+2	; 0x02
    2388:	93 81       	ldd	r25, Z+3	; 0x03
    238a:	20 e0       	ldi	r18, 0x00	; 0
    238c:	30 e0       	ldi	r19, 0x00	; 0
    238e:	4a e7       	ldi	r20, 0x7A	; 122
    2390:	54 e4       	ldi	r21, 0x44	; 68
    2392:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    2396:	dc 01       	movw	r26, r24
    2398:	cb 01       	movw	r24, r22
    239a:	fe 01       	movw	r30, r28
    239c:	e4 53       	subi	r30, 0x34	; 52
    239e:	ff 4f       	sbci	r31, 0xFF	; 255
    23a0:	80 83       	st	Z, r24
    23a2:	91 83       	std	Z+1, r25	; 0x01
    23a4:	a2 83       	std	Z+2, r26	; 0x02
    23a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23a8:	8e 01       	movw	r16, r28
    23aa:	08 53       	subi	r16, 0x38	; 56
    23ac:	1f 4f       	sbci	r17, 0xFF	; 255
    23ae:	fe 01       	movw	r30, r28
    23b0:	e4 53       	subi	r30, 0x34	; 52
    23b2:	ff 4f       	sbci	r31, 0xFF	; 255
    23b4:	60 81       	ld	r22, Z
    23b6:	71 81       	ldd	r23, Z+1	; 0x01
    23b8:	82 81       	ldd	r24, Z+2	; 0x02
    23ba:	93 81       	ldd	r25, Z+3	; 0x03
    23bc:	20 e0       	ldi	r18, 0x00	; 0
    23be:	30 e0       	ldi	r19, 0x00	; 0
    23c0:	4a e7       	ldi	r20, 0x7A	; 122
    23c2:	55 e4       	ldi	r21, 0x45	; 69
    23c4:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    23c8:	dc 01       	movw	r26, r24
    23ca:	cb 01       	movw	r24, r22
    23cc:	f8 01       	movw	r30, r16
    23ce:	80 83       	st	Z, r24
    23d0:	91 83       	std	Z+1, r25	; 0x01
    23d2:	a2 83       	std	Z+2, r26	; 0x02
    23d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23d6:	fe 01       	movw	r30, r28
    23d8:	e8 53       	subi	r30, 0x38	; 56
    23da:	ff 4f       	sbci	r31, 0xFF	; 255
    23dc:	60 81       	ld	r22, Z
    23de:	71 81       	ldd	r23, Z+1	; 0x01
    23e0:	82 81       	ldd	r24, Z+2	; 0x02
    23e2:	93 81       	ldd	r25, Z+3	; 0x03
    23e4:	20 e0       	ldi	r18, 0x00	; 0
    23e6:	30 e0       	ldi	r19, 0x00	; 0
    23e8:	40 e8       	ldi	r20, 0x80	; 128
    23ea:	5f e3       	ldi	r21, 0x3F	; 63
    23ec:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    23f0:	88 23       	and	r24, r24
    23f2:	44 f4       	brge	.+16     	; 0x2404 <__stack+0x1ba5>
		__ticks = 1;
    23f4:	fe 01       	movw	r30, r28
    23f6:	ea 53       	subi	r30, 0x3A	; 58
    23f8:	ff 4f       	sbci	r31, 0xFF	; 255
    23fa:	81 e0       	ldi	r24, 0x01	; 1
    23fc:	90 e0       	ldi	r25, 0x00	; 0
    23fe:	91 83       	std	Z+1, r25	; 0x01
    2400:	80 83       	st	Z, r24
    2402:	64 c0       	rjmp	.+200    	; 0x24cc <__stack+0x1c6d>
	else if (__tmp > 65535)
    2404:	fe 01       	movw	r30, r28
    2406:	e8 53       	subi	r30, 0x38	; 56
    2408:	ff 4f       	sbci	r31, 0xFF	; 255
    240a:	60 81       	ld	r22, Z
    240c:	71 81       	ldd	r23, Z+1	; 0x01
    240e:	82 81       	ldd	r24, Z+2	; 0x02
    2410:	93 81       	ldd	r25, Z+3	; 0x03
    2412:	20 e0       	ldi	r18, 0x00	; 0
    2414:	3f ef       	ldi	r19, 0xFF	; 255
    2416:	4f e7       	ldi	r20, 0x7F	; 127
    2418:	57 e4       	ldi	r21, 0x47	; 71
    241a:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    241e:	18 16       	cp	r1, r24
    2420:	0c f0       	brlt	.+2      	; 0x2424 <__stack+0x1bc5>
    2422:	43 c0       	rjmp	.+134    	; 0x24aa <__stack+0x1c4b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2424:	fe 01       	movw	r30, r28
    2426:	e4 53       	subi	r30, 0x34	; 52
    2428:	ff 4f       	sbci	r31, 0xFF	; 255
    242a:	60 81       	ld	r22, Z
    242c:	71 81       	ldd	r23, Z+1	; 0x01
    242e:	82 81       	ldd	r24, Z+2	; 0x02
    2430:	93 81       	ldd	r25, Z+3	; 0x03
    2432:	20 e0       	ldi	r18, 0x00	; 0
    2434:	30 e0       	ldi	r19, 0x00	; 0
    2436:	40 e2       	ldi	r20, 0x20	; 32
    2438:	51 e4       	ldi	r21, 0x41	; 65
    243a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    243e:	dc 01       	movw	r26, r24
    2440:	cb 01       	movw	r24, r22
    2442:	8e 01       	movw	r16, r28
    2444:	0a 53       	subi	r16, 0x3A	; 58
    2446:	1f 4f       	sbci	r17, 0xFF	; 255
    2448:	bc 01       	movw	r22, r24
    244a:	cd 01       	movw	r24, r26
    244c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2450:	dc 01       	movw	r26, r24
    2452:	cb 01       	movw	r24, r22
    2454:	f8 01       	movw	r30, r16
    2456:	91 83       	std	Z+1, r25	; 0x01
    2458:	80 83       	st	Z, r24
    245a:	1f c0       	rjmp	.+62     	; 0x249a <__stack+0x1c3b>
    245c:	fe 01       	movw	r30, r28
    245e:	ec 53       	subi	r30, 0x3C	; 60
    2460:	ff 4f       	sbci	r31, 0xFF	; 255
    2462:	80 e9       	ldi	r24, 0x90	; 144
    2464:	91 e0       	ldi	r25, 0x01	; 1
    2466:	91 83       	std	Z+1, r25	; 0x01
    2468:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    246a:	fe 01       	movw	r30, r28
    246c:	ec 53       	subi	r30, 0x3C	; 60
    246e:	ff 4f       	sbci	r31, 0xFF	; 255
    2470:	80 81       	ld	r24, Z
    2472:	91 81       	ldd	r25, Z+1	; 0x01
    2474:	01 97       	sbiw	r24, 0x01	; 1
    2476:	f1 f7       	brne	.-4      	; 0x2474 <__stack+0x1c15>
    2478:	fe 01       	movw	r30, r28
    247a:	ec 53       	subi	r30, 0x3C	; 60
    247c:	ff 4f       	sbci	r31, 0xFF	; 255
    247e:	91 83       	std	Z+1, r25	; 0x01
    2480:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2482:	de 01       	movw	r26, r28
    2484:	aa 53       	subi	r26, 0x3A	; 58
    2486:	bf 4f       	sbci	r27, 0xFF	; 255
    2488:	fe 01       	movw	r30, r28
    248a:	ea 53       	subi	r30, 0x3A	; 58
    248c:	ff 4f       	sbci	r31, 0xFF	; 255
    248e:	80 81       	ld	r24, Z
    2490:	91 81       	ldd	r25, Z+1	; 0x01
    2492:	01 97       	sbiw	r24, 0x01	; 1
    2494:	11 96       	adiw	r26, 0x01	; 1
    2496:	9c 93       	st	X, r25
    2498:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    249a:	fe 01       	movw	r30, r28
    249c:	ea 53       	subi	r30, 0x3A	; 58
    249e:	ff 4f       	sbci	r31, 0xFF	; 255
    24a0:	80 81       	ld	r24, Z
    24a2:	91 81       	ldd	r25, Z+1	; 0x01
    24a4:	00 97       	sbiw	r24, 0x00	; 0
    24a6:	d1 f6       	brne	.-76     	; 0x245c <__stack+0x1bfd>
    24a8:	4b c0       	rjmp	.+150    	; 0x2540 <__stack+0x1ce1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24aa:	8e 01       	movw	r16, r28
    24ac:	0a 53       	subi	r16, 0x3A	; 58
    24ae:	1f 4f       	sbci	r17, 0xFF	; 255
    24b0:	fe 01       	movw	r30, r28
    24b2:	e8 53       	subi	r30, 0x38	; 56
    24b4:	ff 4f       	sbci	r31, 0xFF	; 255
    24b6:	60 81       	ld	r22, Z
    24b8:	71 81       	ldd	r23, Z+1	; 0x01
    24ba:	82 81       	ldd	r24, Z+2	; 0x02
    24bc:	93 81       	ldd	r25, Z+3	; 0x03
    24be:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    24c2:	dc 01       	movw	r26, r24
    24c4:	cb 01       	movw	r24, r22
    24c6:	f8 01       	movw	r30, r16
    24c8:	91 83       	std	Z+1, r25	; 0x01
    24ca:	80 83       	st	Z, r24
    24cc:	de 01       	movw	r26, r28
    24ce:	ae 53       	subi	r26, 0x3E	; 62
    24d0:	bf 4f       	sbci	r27, 0xFF	; 255
    24d2:	fe 01       	movw	r30, r28
    24d4:	ea 53       	subi	r30, 0x3A	; 58
    24d6:	ff 4f       	sbci	r31, 0xFF	; 255
    24d8:	80 81       	ld	r24, Z
    24da:	91 81       	ldd	r25, Z+1	; 0x01
    24dc:	11 96       	adiw	r26, 0x01	; 1
    24de:	9c 93       	st	X, r25
    24e0:	8e 93       	st	-X, r24
    24e2:	fe 01       	movw	r30, r28
    24e4:	ee 53       	subi	r30, 0x3E	; 62
    24e6:	ff 4f       	sbci	r31, 0xFF	; 255
    24e8:	80 81       	ld	r24, Z
    24ea:	91 81       	ldd	r25, Z+1	; 0x01
    24ec:	01 97       	sbiw	r24, 0x01	; 1
    24ee:	f1 f7       	brne	.-4      	; 0x24ec <__stack+0x1c8d>
    24f0:	fe 01       	movw	r30, r28
    24f2:	ee 53       	subi	r30, 0x3E	; 62
    24f4:	ff 4f       	sbci	r31, 0xFF	; 255
    24f6:	91 83       	std	Z+1, r25	; 0x01
    24f8:	80 83       	st	Z, r24
    24fa:	22 c0       	rjmp	.+68     	; 0x2540 <__stack+0x1ce1>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    24fc:	8e 01       	movw	r16, r28
    24fe:	00 53       	subi	r16, 0x30	; 48
    2500:	1f 4f       	sbci	r17, 0xFF	; 255
    2502:	fe 01       	movw	r30, r28
    2504:	ef 52       	subi	r30, 0x2F	; 47
    2506:	ff 4f       	sbci	r31, 0xFF	; 255
    2508:	60 81       	ld	r22, Z
    250a:	71 81       	ldd	r23, Z+1	; 0x01
    250c:	82 81       	ldd	r24, Z+2	; 0x02
    250e:	93 81       	ldd	r25, Z+3	; 0x03
    2510:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2514:	dc 01       	movw	r26, r24
    2516:	cb 01       	movw	r24, r22
    2518:	f8 01       	movw	r30, r16
    251a:	80 83       	st	Z, r24
    251c:	de 01       	movw	r26, r28
    251e:	af 53       	subi	r26, 0x3F	; 63
    2520:	bf 4f       	sbci	r27, 0xFF	; 255
    2522:	fe 01       	movw	r30, r28
    2524:	e0 53       	subi	r30, 0x30	; 48
    2526:	ff 4f       	sbci	r31, 0xFF	; 255
    2528:	80 81       	ld	r24, Z
    252a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    252c:	fe 01       	movw	r30, r28
    252e:	ef 53       	subi	r30, 0x3F	; 63
    2530:	ff 4f       	sbci	r31, 0xFF	; 255
    2532:	80 81       	ld	r24, Z
    2534:	8a 95       	dec	r24
    2536:	f1 f7       	brne	.-4      	; 0x2534 <__stack+0x1cd5>
    2538:	fe 01       	movw	r30, r28
    253a:	ef 53       	subi	r30, 0x3F	; 63
    253c:	ff 4f       	sbci	r31, 0xFF	; 255
    253e:	80 83       	st	Z, r24
	_delay_us(5);
	
	PORTC &= 0xFB;		//cmd low
    2540:	a5 e3       	ldi	r26, 0x35	; 53
    2542:	b0 e0       	ldi	r27, 0x00	; 0
    2544:	e5 e3       	ldi	r30, 0x35	; 53
    2546:	f0 e0       	ldi	r31, 0x00	; 0
    2548:	80 81       	ld	r24, Z
    254a:	8b 7f       	andi	r24, 0xFB	; 251
    254c:	8c 93       	st	X, r24
	
	PORTC &= 0xFE;		//clock low
    254e:	a5 e3       	ldi	r26, 0x35	; 53
    2550:	b0 e0       	ldi	r27, 0x00	; 0
    2552:	e5 e3       	ldi	r30, 0x35	; 53
    2554:	f0 e0       	ldi	r31, 0x00	; 0
    2556:	80 81       	ld	r24, Z
    2558:	8e 7f       	andi	r24, 0xFE	; 254
    255a:	8c 93       	st	X, r24
    255c:	fe 01       	movw	r30, r28
    255e:	e3 54       	subi	r30, 0x43	; 67
    2560:	ff 4f       	sbci	r31, 0xFF	; 255
    2562:	80 e0       	ldi	r24, 0x00	; 0
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	a0 ea       	ldi	r26, 0xA0	; 160
    2568:	b0 e4       	ldi	r27, 0x40	; 64
    256a:	80 83       	st	Z, r24
    256c:	91 83       	std	Z+1, r25	; 0x01
    256e:	a2 83       	std	Z+2, r26	; 0x02
    2570:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2572:	8e 01       	movw	r16, r28
    2574:	07 54       	subi	r16, 0x47	; 71
    2576:	1f 4f       	sbci	r17, 0xFF	; 255
    2578:	fe 01       	movw	r30, r28
    257a:	e3 54       	subi	r30, 0x43	; 67
    257c:	ff 4f       	sbci	r31, 0xFF	; 255
    257e:	60 81       	ld	r22, Z
    2580:	71 81       	ldd	r23, Z+1	; 0x01
    2582:	82 81       	ldd	r24, Z+2	; 0x02
    2584:	93 81       	ldd	r25, Z+3	; 0x03
    2586:	2b ea       	ldi	r18, 0xAB	; 171
    2588:	3a ea       	ldi	r19, 0xAA	; 170
    258a:	4a ea       	ldi	r20, 0xAA	; 170
    258c:	50 e4       	ldi	r21, 0x40	; 64
    258e:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2592:	dc 01       	movw	r26, r24
    2594:	cb 01       	movw	r24, r22
    2596:	f8 01       	movw	r30, r16
    2598:	80 83       	st	Z, r24
    259a:	91 83       	std	Z+1, r25	; 0x01
    259c:	a2 83       	std	Z+2, r26	; 0x02
    259e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25a0:	fe 01       	movw	r30, r28
    25a2:	e7 54       	subi	r30, 0x47	; 71
    25a4:	ff 4f       	sbci	r31, 0xFF	; 255
    25a6:	60 81       	ld	r22, Z
    25a8:	71 81       	ldd	r23, Z+1	; 0x01
    25aa:	82 81       	ldd	r24, Z+2	; 0x02
    25ac:	93 81       	ldd	r25, Z+3	; 0x03
    25ae:	20 e0       	ldi	r18, 0x00	; 0
    25b0:	30 e0       	ldi	r19, 0x00	; 0
    25b2:	40 e8       	ldi	r20, 0x80	; 128
    25b4:	5f e3       	ldi	r21, 0x3F	; 63
    25b6:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    25ba:	88 23       	and	r24, r24
    25bc:	34 f4       	brge	.+12     	; 0x25ca <__stack+0x1d6b>
		__ticks = 1;
    25be:	fe 01       	movw	r30, r28
    25c0:	e8 54       	subi	r30, 0x48	; 72
    25c2:	ff 4f       	sbci	r31, 0xFF	; 255
    25c4:	81 e0       	ldi	r24, 0x01	; 1
    25c6:	80 83       	st	Z, r24
    25c8:	e0 c0       	rjmp	.+448    	; 0x278a <__stack+0x1f2b>
	else if (__tmp > 255)
    25ca:	fe 01       	movw	r30, r28
    25cc:	e7 54       	subi	r30, 0x47	; 71
    25ce:	ff 4f       	sbci	r31, 0xFF	; 255
    25d0:	60 81       	ld	r22, Z
    25d2:	71 81       	ldd	r23, Z+1	; 0x01
    25d4:	82 81       	ldd	r24, Z+2	; 0x02
    25d6:	93 81       	ldd	r25, Z+3	; 0x03
    25d8:	20 e0       	ldi	r18, 0x00	; 0
    25da:	30 e0       	ldi	r19, 0x00	; 0
    25dc:	4f e7       	ldi	r20, 0x7F	; 127
    25de:	53 e4       	ldi	r21, 0x43	; 67
    25e0:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    25e4:	18 16       	cp	r1, r24
    25e6:	0c f0       	brlt	.+2      	; 0x25ea <__stack+0x1d8b>
    25e8:	c0 c0       	rjmp	.+384    	; 0x276a <__stack+0x1f0b>
	{
		_delay_ms(__us / 1000.0);
    25ea:	fe 01       	movw	r30, r28
    25ec:	e3 54       	subi	r30, 0x43	; 67
    25ee:	ff 4f       	sbci	r31, 0xFF	; 255
    25f0:	60 81       	ld	r22, Z
    25f2:	71 81       	ldd	r23, Z+1	; 0x01
    25f4:	82 81       	ldd	r24, Z+2	; 0x02
    25f6:	93 81       	ldd	r25, Z+3	; 0x03
    25f8:	20 e0       	ldi	r18, 0x00	; 0
    25fa:	30 e0       	ldi	r19, 0x00	; 0
    25fc:	4a e7       	ldi	r20, 0x7A	; 122
    25fe:	54 e4       	ldi	r21, 0x44	; 68
    2600:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    2604:	dc 01       	movw	r26, r24
    2606:	cb 01       	movw	r24, r22
    2608:	fe 01       	movw	r30, r28
    260a:	ec 54       	subi	r30, 0x4C	; 76
    260c:	ff 4f       	sbci	r31, 0xFF	; 255
    260e:	80 83       	st	Z, r24
    2610:	91 83       	std	Z+1, r25	; 0x01
    2612:	a2 83       	std	Z+2, r26	; 0x02
    2614:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2616:	8e 01       	movw	r16, r28
    2618:	00 55       	subi	r16, 0x50	; 80
    261a:	1f 4f       	sbci	r17, 0xFF	; 255
    261c:	fe 01       	movw	r30, r28
    261e:	ec 54       	subi	r30, 0x4C	; 76
    2620:	ff 4f       	sbci	r31, 0xFF	; 255
    2622:	60 81       	ld	r22, Z
    2624:	71 81       	ldd	r23, Z+1	; 0x01
    2626:	82 81       	ldd	r24, Z+2	; 0x02
    2628:	93 81       	ldd	r25, Z+3	; 0x03
    262a:	20 e0       	ldi	r18, 0x00	; 0
    262c:	30 e0       	ldi	r19, 0x00	; 0
    262e:	4a e7       	ldi	r20, 0x7A	; 122
    2630:	55 e4       	ldi	r21, 0x45	; 69
    2632:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2636:	dc 01       	movw	r26, r24
    2638:	cb 01       	movw	r24, r22
    263a:	f8 01       	movw	r30, r16
    263c:	80 83       	st	Z, r24
    263e:	91 83       	std	Z+1, r25	; 0x01
    2640:	a2 83       	std	Z+2, r26	; 0x02
    2642:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2644:	fe 01       	movw	r30, r28
    2646:	e0 55       	subi	r30, 0x50	; 80
    2648:	ff 4f       	sbci	r31, 0xFF	; 255
    264a:	60 81       	ld	r22, Z
    264c:	71 81       	ldd	r23, Z+1	; 0x01
    264e:	82 81       	ldd	r24, Z+2	; 0x02
    2650:	93 81       	ldd	r25, Z+3	; 0x03
    2652:	20 e0       	ldi	r18, 0x00	; 0
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	40 e8       	ldi	r20, 0x80	; 128
    2658:	5f e3       	ldi	r21, 0x3F	; 63
    265a:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    265e:	88 23       	and	r24, r24
    2660:	44 f4       	brge	.+16     	; 0x2672 <__stack+0x1e13>
		__ticks = 1;
    2662:	fe 01       	movw	r30, r28
    2664:	e2 55       	subi	r30, 0x52	; 82
    2666:	ff 4f       	sbci	r31, 0xFF	; 255
    2668:	81 e0       	ldi	r24, 0x01	; 1
    266a:	90 e0       	ldi	r25, 0x00	; 0
    266c:	91 83       	std	Z+1, r25	; 0x01
    266e:	80 83       	st	Z, r24
    2670:	64 c0       	rjmp	.+200    	; 0x273a <__stack+0x1edb>
	else if (__tmp > 65535)
    2672:	fe 01       	movw	r30, r28
    2674:	e0 55       	subi	r30, 0x50	; 80
    2676:	ff 4f       	sbci	r31, 0xFF	; 255
    2678:	60 81       	ld	r22, Z
    267a:	71 81       	ldd	r23, Z+1	; 0x01
    267c:	82 81       	ldd	r24, Z+2	; 0x02
    267e:	93 81       	ldd	r25, Z+3	; 0x03
    2680:	20 e0       	ldi	r18, 0x00	; 0
    2682:	3f ef       	ldi	r19, 0xFF	; 255
    2684:	4f e7       	ldi	r20, 0x7F	; 127
    2686:	57 e4       	ldi	r21, 0x47	; 71
    2688:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    268c:	18 16       	cp	r1, r24
    268e:	0c f0       	brlt	.+2      	; 0x2692 <__stack+0x1e33>
    2690:	43 c0       	rjmp	.+134    	; 0x2718 <__stack+0x1eb9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2692:	fe 01       	movw	r30, r28
    2694:	ec 54       	subi	r30, 0x4C	; 76
    2696:	ff 4f       	sbci	r31, 0xFF	; 255
    2698:	60 81       	ld	r22, Z
    269a:	71 81       	ldd	r23, Z+1	; 0x01
    269c:	82 81       	ldd	r24, Z+2	; 0x02
    269e:	93 81       	ldd	r25, Z+3	; 0x03
    26a0:	20 e0       	ldi	r18, 0x00	; 0
    26a2:	30 e0       	ldi	r19, 0x00	; 0
    26a4:	40 e2       	ldi	r20, 0x20	; 32
    26a6:	51 e4       	ldi	r21, 0x41	; 65
    26a8:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    26ac:	dc 01       	movw	r26, r24
    26ae:	cb 01       	movw	r24, r22
    26b0:	8e 01       	movw	r16, r28
    26b2:	02 55       	subi	r16, 0x52	; 82
    26b4:	1f 4f       	sbci	r17, 0xFF	; 255
    26b6:	bc 01       	movw	r22, r24
    26b8:	cd 01       	movw	r24, r26
    26ba:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    26be:	dc 01       	movw	r26, r24
    26c0:	cb 01       	movw	r24, r22
    26c2:	f8 01       	movw	r30, r16
    26c4:	91 83       	std	Z+1, r25	; 0x01
    26c6:	80 83       	st	Z, r24
    26c8:	1f c0       	rjmp	.+62     	; 0x2708 <__stack+0x1ea9>
    26ca:	fe 01       	movw	r30, r28
    26cc:	e4 55       	subi	r30, 0x54	; 84
    26ce:	ff 4f       	sbci	r31, 0xFF	; 255
    26d0:	80 e9       	ldi	r24, 0x90	; 144
    26d2:	91 e0       	ldi	r25, 0x01	; 1
    26d4:	91 83       	std	Z+1, r25	; 0x01
    26d6:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    26d8:	fe 01       	movw	r30, r28
    26da:	e4 55       	subi	r30, 0x54	; 84
    26dc:	ff 4f       	sbci	r31, 0xFF	; 255
    26de:	80 81       	ld	r24, Z
    26e0:	91 81       	ldd	r25, Z+1	; 0x01
    26e2:	01 97       	sbiw	r24, 0x01	; 1
    26e4:	f1 f7       	brne	.-4      	; 0x26e2 <__stack+0x1e83>
    26e6:	fe 01       	movw	r30, r28
    26e8:	e4 55       	subi	r30, 0x54	; 84
    26ea:	ff 4f       	sbci	r31, 0xFF	; 255
    26ec:	91 83       	std	Z+1, r25	; 0x01
    26ee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26f0:	de 01       	movw	r26, r28
    26f2:	a2 55       	subi	r26, 0x52	; 82
    26f4:	bf 4f       	sbci	r27, 0xFF	; 255
    26f6:	fe 01       	movw	r30, r28
    26f8:	e2 55       	subi	r30, 0x52	; 82
    26fa:	ff 4f       	sbci	r31, 0xFF	; 255
    26fc:	80 81       	ld	r24, Z
    26fe:	91 81       	ldd	r25, Z+1	; 0x01
    2700:	01 97       	sbiw	r24, 0x01	; 1
    2702:	11 96       	adiw	r26, 0x01	; 1
    2704:	9c 93       	st	X, r25
    2706:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2708:	fe 01       	movw	r30, r28
    270a:	e2 55       	subi	r30, 0x52	; 82
    270c:	ff 4f       	sbci	r31, 0xFF	; 255
    270e:	80 81       	ld	r24, Z
    2710:	91 81       	ldd	r25, Z+1	; 0x01
    2712:	00 97       	sbiw	r24, 0x00	; 0
    2714:	d1 f6       	brne	.-76     	; 0x26ca <__stack+0x1e6b>
    2716:	4b c0       	rjmp	.+150    	; 0x27ae <__stack+0x1f4f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2718:	8e 01       	movw	r16, r28
    271a:	02 55       	subi	r16, 0x52	; 82
    271c:	1f 4f       	sbci	r17, 0xFF	; 255
    271e:	fe 01       	movw	r30, r28
    2720:	e0 55       	subi	r30, 0x50	; 80
    2722:	ff 4f       	sbci	r31, 0xFF	; 255
    2724:	60 81       	ld	r22, Z
    2726:	71 81       	ldd	r23, Z+1	; 0x01
    2728:	82 81       	ldd	r24, Z+2	; 0x02
    272a:	93 81       	ldd	r25, Z+3	; 0x03
    272c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2730:	dc 01       	movw	r26, r24
    2732:	cb 01       	movw	r24, r22
    2734:	f8 01       	movw	r30, r16
    2736:	91 83       	std	Z+1, r25	; 0x01
    2738:	80 83       	st	Z, r24
    273a:	de 01       	movw	r26, r28
    273c:	a6 55       	subi	r26, 0x56	; 86
    273e:	bf 4f       	sbci	r27, 0xFF	; 255
    2740:	fe 01       	movw	r30, r28
    2742:	e2 55       	subi	r30, 0x52	; 82
    2744:	ff 4f       	sbci	r31, 0xFF	; 255
    2746:	80 81       	ld	r24, Z
    2748:	91 81       	ldd	r25, Z+1	; 0x01
    274a:	11 96       	adiw	r26, 0x01	; 1
    274c:	9c 93       	st	X, r25
    274e:	8e 93       	st	-X, r24
    2750:	fe 01       	movw	r30, r28
    2752:	e6 55       	subi	r30, 0x56	; 86
    2754:	ff 4f       	sbci	r31, 0xFF	; 255
    2756:	80 81       	ld	r24, Z
    2758:	91 81       	ldd	r25, Z+1	; 0x01
    275a:	01 97       	sbiw	r24, 0x01	; 1
    275c:	f1 f7       	brne	.-4      	; 0x275a <__stack+0x1efb>
    275e:	fe 01       	movw	r30, r28
    2760:	e6 55       	subi	r30, 0x56	; 86
    2762:	ff 4f       	sbci	r31, 0xFF	; 255
    2764:	91 83       	std	Z+1, r25	; 0x01
    2766:	80 83       	st	Z, r24
    2768:	22 c0       	rjmp	.+68     	; 0x27ae <__stack+0x1f4f>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    276a:	8e 01       	movw	r16, r28
    276c:	08 54       	subi	r16, 0x48	; 72
    276e:	1f 4f       	sbci	r17, 0xFF	; 255
    2770:	fe 01       	movw	r30, r28
    2772:	e7 54       	subi	r30, 0x47	; 71
    2774:	ff 4f       	sbci	r31, 0xFF	; 255
    2776:	60 81       	ld	r22, Z
    2778:	71 81       	ldd	r23, Z+1	; 0x01
    277a:	82 81       	ldd	r24, Z+2	; 0x02
    277c:	93 81       	ldd	r25, Z+3	; 0x03
    277e:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2782:	dc 01       	movw	r26, r24
    2784:	cb 01       	movw	r24, r22
    2786:	f8 01       	movw	r30, r16
    2788:	80 83       	st	Z, r24
    278a:	de 01       	movw	r26, r28
    278c:	a7 55       	subi	r26, 0x57	; 87
    278e:	bf 4f       	sbci	r27, 0xFF	; 255
    2790:	fe 01       	movw	r30, r28
    2792:	e8 54       	subi	r30, 0x48	; 72
    2794:	ff 4f       	sbci	r31, 0xFF	; 255
    2796:	80 81       	ld	r24, Z
    2798:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    279a:	fe 01       	movw	r30, r28
    279c:	e7 55       	subi	r30, 0x57	; 87
    279e:	ff 4f       	sbci	r31, 0xFF	; 255
    27a0:	80 81       	ld	r24, Z
    27a2:	8a 95       	dec	r24
    27a4:	f1 f7       	brne	.-4      	; 0x27a2 <__stack+0x1f43>
    27a6:	fe 01       	movw	r30, r28
    27a8:	e7 55       	subi	r30, 0x57	; 87
    27aa:	ff 4f       	sbci	r31, 0xFF	; 255
    27ac:	80 83       	st	Z, r24
	_delay_us(5);
	PORTC |= 0x01;		//clock high
    27ae:	a5 e3       	ldi	r26, 0x35	; 53
    27b0:	b0 e0       	ldi	r27, 0x00	; 0
    27b2:	e5 e3       	ldi	r30, 0x35	; 53
    27b4:	f0 e0       	ldi	r31, 0x00	; 0
    27b6:	80 81       	ld	r24, Z
    27b8:	81 60       	ori	r24, 0x01	; 1
    27ba:	8c 93       	st	X, r24
    27bc:	fe 01       	movw	r30, r28
    27be:	eb 55       	subi	r30, 0x5B	; 91
    27c0:	ff 4f       	sbci	r31, 0xFF	; 255
    27c2:	80 e0       	ldi	r24, 0x00	; 0
    27c4:	90 e0       	ldi	r25, 0x00	; 0
    27c6:	a0 ea       	ldi	r26, 0xA0	; 160
    27c8:	b0 e4       	ldi	r27, 0x40	; 64
    27ca:	80 83       	st	Z, r24
    27cc:	91 83       	std	Z+1, r25	; 0x01
    27ce:	a2 83       	std	Z+2, r26	; 0x02
    27d0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    27d2:	8e 01       	movw	r16, r28
    27d4:	0f 55       	subi	r16, 0x5F	; 95
    27d6:	1f 4f       	sbci	r17, 0xFF	; 255
    27d8:	fe 01       	movw	r30, r28
    27da:	eb 55       	subi	r30, 0x5B	; 91
    27dc:	ff 4f       	sbci	r31, 0xFF	; 255
    27de:	60 81       	ld	r22, Z
    27e0:	71 81       	ldd	r23, Z+1	; 0x01
    27e2:	82 81       	ldd	r24, Z+2	; 0x02
    27e4:	93 81       	ldd	r25, Z+3	; 0x03
    27e6:	2b ea       	ldi	r18, 0xAB	; 171
    27e8:	3a ea       	ldi	r19, 0xAA	; 170
    27ea:	4a ea       	ldi	r20, 0xAA	; 170
    27ec:	50 e4       	ldi	r21, 0x40	; 64
    27ee:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    27f2:	dc 01       	movw	r26, r24
    27f4:	cb 01       	movw	r24, r22
    27f6:	f8 01       	movw	r30, r16
    27f8:	80 83       	st	Z, r24
    27fa:	91 83       	std	Z+1, r25	; 0x01
    27fc:	a2 83       	std	Z+2, r26	; 0x02
    27fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2800:	fe 01       	movw	r30, r28
    2802:	ef 55       	subi	r30, 0x5F	; 95
    2804:	ff 4f       	sbci	r31, 0xFF	; 255
    2806:	60 81       	ld	r22, Z
    2808:	71 81       	ldd	r23, Z+1	; 0x01
    280a:	82 81       	ldd	r24, Z+2	; 0x02
    280c:	93 81       	ldd	r25, Z+3	; 0x03
    280e:	20 e0       	ldi	r18, 0x00	; 0
    2810:	30 e0       	ldi	r19, 0x00	; 0
    2812:	40 e8       	ldi	r20, 0x80	; 128
    2814:	5f e3       	ldi	r21, 0x3F	; 63
    2816:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    281a:	88 23       	and	r24, r24
    281c:	34 f4       	brge	.+12     	; 0x282a <__stack+0x1fcb>
		__ticks = 1;
    281e:	fe 01       	movw	r30, r28
    2820:	e0 56       	subi	r30, 0x60	; 96
    2822:	ff 4f       	sbci	r31, 0xFF	; 255
    2824:	81 e0       	ldi	r24, 0x01	; 1
    2826:	80 83       	st	Z, r24
    2828:	e0 c0       	rjmp	.+448    	; 0x29ea <__stack+0x218b>
	else if (__tmp > 255)
    282a:	fe 01       	movw	r30, r28
    282c:	ef 55       	subi	r30, 0x5F	; 95
    282e:	ff 4f       	sbci	r31, 0xFF	; 255
    2830:	60 81       	ld	r22, Z
    2832:	71 81       	ldd	r23, Z+1	; 0x01
    2834:	82 81       	ldd	r24, Z+2	; 0x02
    2836:	93 81       	ldd	r25, Z+3	; 0x03
    2838:	20 e0       	ldi	r18, 0x00	; 0
    283a:	30 e0       	ldi	r19, 0x00	; 0
    283c:	4f e7       	ldi	r20, 0x7F	; 127
    283e:	53 e4       	ldi	r21, 0x43	; 67
    2840:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    2844:	18 16       	cp	r1, r24
    2846:	0c f0       	brlt	.+2      	; 0x284a <__stack+0x1feb>
    2848:	c0 c0       	rjmp	.+384    	; 0x29ca <__stack+0x216b>
	{
		_delay_ms(__us / 1000.0);
    284a:	fe 01       	movw	r30, r28
    284c:	eb 55       	subi	r30, 0x5B	; 91
    284e:	ff 4f       	sbci	r31, 0xFF	; 255
    2850:	60 81       	ld	r22, Z
    2852:	71 81       	ldd	r23, Z+1	; 0x01
    2854:	82 81       	ldd	r24, Z+2	; 0x02
    2856:	93 81       	ldd	r25, Z+3	; 0x03
    2858:	20 e0       	ldi	r18, 0x00	; 0
    285a:	30 e0       	ldi	r19, 0x00	; 0
    285c:	4a e7       	ldi	r20, 0x7A	; 122
    285e:	54 e4       	ldi	r21, 0x44	; 68
    2860:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    2864:	dc 01       	movw	r26, r24
    2866:	cb 01       	movw	r24, r22
    2868:	fe 01       	movw	r30, r28
    286a:	e4 56       	subi	r30, 0x64	; 100
    286c:	ff 4f       	sbci	r31, 0xFF	; 255
    286e:	80 83       	st	Z, r24
    2870:	91 83       	std	Z+1, r25	; 0x01
    2872:	a2 83       	std	Z+2, r26	; 0x02
    2874:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2876:	8e 01       	movw	r16, r28
    2878:	08 56       	subi	r16, 0x68	; 104
    287a:	1f 4f       	sbci	r17, 0xFF	; 255
    287c:	fe 01       	movw	r30, r28
    287e:	e4 56       	subi	r30, 0x64	; 100
    2880:	ff 4f       	sbci	r31, 0xFF	; 255
    2882:	60 81       	ld	r22, Z
    2884:	71 81       	ldd	r23, Z+1	; 0x01
    2886:	82 81       	ldd	r24, Z+2	; 0x02
    2888:	93 81       	ldd	r25, Z+3	; 0x03
    288a:	20 e0       	ldi	r18, 0x00	; 0
    288c:	30 e0       	ldi	r19, 0x00	; 0
    288e:	4a e7       	ldi	r20, 0x7A	; 122
    2890:	55 e4       	ldi	r21, 0x45	; 69
    2892:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2896:	dc 01       	movw	r26, r24
    2898:	cb 01       	movw	r24, r22
    289a:	f8 01       	movw	r30, r16
    289c:	80 83       	st	Z, r24
    289e:	91 83       	std	Z+1, r25	; 0x01
    28a0:	a2 83       	std	Z+2, r26	; 0x02
    28a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28a4:	fe 01       	movw	r30, r28
    28a6:	e8 56       	subi	r30, 0x68	; 104
    28a8:	ff 4f       	sbci	r31, 0xFF	; 255
    28aa:	60 81       	ld	r22, Z
    28ac:	71 81       	ldd	r23, Z+1	; 0x01
    28ae:	82 81       	ldd	r24, Z+2	; 0x02
    28b0:	93 81       	ldd	r25, Z+3	; 0x03
    28b2:	20 e0       	ldi	r18, 0x00	; 0
    28b4:	30 e0       	ldi	r19, 0x00	; 0
    28b6:	40 e8       	ldi	r20, 0x80	; 128
    28b8:	5f e3       	ldi	r21, 0x3F	; 63
    28ba:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    28be:	88 23       	and	r24, r24
    28c0:	44 f4       	brge	.+16     	; 0x28d2 <__stack+0x2073>
		__ticks = 1;
    28c2:	fe 01       	movw	r30, r28
    28c4:	ea 56       	subi	r30, 0x6A	; 106
    28c6:	ff 4f       	sbci	r31, 0xFF	; 255
    28c8:	81 e0       	ldi	r24, 0x01	; 1
    28ca:	90 e0       	ldi	r25, 0x00	; 0
    28cc:	91 83       	std	Z+1, r25	; 0x01
    28ce:	80 83       	st	Z, r24
    28d0:	64 c0       	rjmp	.+200    	; 0x299a <__stack+0x213b>
	else if (__tmp > 65535)
    28d2:	fe 01       	movw	r30, r28
    28d4:	e8 56       	subi	r30, 0x68	; 104
    28d6:	ff 4f       	sbci	r31, 0xFF	; 255
    28d8:	60 81       	ld	r22, Z
    28da:	71 81       	ldd	r23, Z+1	; 0x01
    28dc:	82 81       	ldd	r24, Z+2	; 0x02
    28de:	93 81       	ldd	r25, Z+3	; 0x03
    28e0:	20 e0       	ldi	r18, 0x00	; 0
    28e2:	3f ef       	ldi	r19, 0xFF	; 255
    28e4:	4f e7       	ldi	r20, 0x7F	; 127
    28e6:	57 e4       	ldi	r21, 0x47	; 71
    28e8:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    28ec:	18 16       	cp	r1, r24
    28ee:	0c f0       	brlt	.+2      	; 0x28f2 <__stack+0x2093>
    28f0:	43 c0       	rjmp	.+134    	; 0x2978 <__stack+0x2119>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28f2:	fe 01       	movw	r30, r28
    28f4:	e4 56       	subi	r30, 0x64	; 100
    28f6:	ff 4f       	sbci	r31, 0xFF	; 255
    28f8:	60 81       	ld	r22, Z
    28fa:	71 81       	ldd	r23, Z+1	; 0x01
    28fc:	82 81       	ldd	r24, Z+2	; 0x02
    28fe:	93 81       	ldd	r25, Z+3	; 0x03
    2900:	20 e0       	ldi	r18, 0x00	; 0
    2902:	30 e0       	ldi	r19, 0x00	; 0
    2904:	40 e2       	ldi	r20, 0x20	; 32
    2906:	51 e4       	ldi	r21, 0x41	; 65
    2908:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    290c:	dc 01       	movw	r26, r24
    290e:	cb 01       	movw	r24, r22
    2910:	8e 01       	movw	r16, r28
    2912:	0a 56       	subi	r16, 0x6A	; 106
    2914:	1f 4f       	sbci	r17, 0xFF	; 255
    2916:	bc 01       	movw	r22, r24
    2918:	cd 01       	movw	r24, r26
    291a:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    291e:	dc 01       	movw	r26, r24
    2920:	cb 01       	movw	r24, r22
    2922:	f8 01       	movw	r30, r16
    2924:	91 83       	std	Z+1, r25	; 0x01
    2926:	80 83       	st	Z, r24
    2928:	1f c0       	rjmp	.+62     	; 0x2968 <__stack+0x2109>
    292a:	fe 01       	movw	r30, r28
    292c:	ec 56       	subi	r30, 0x6C	; 108
    292e:	ff 4f       	sbci	r31, 0xFF	; 255
    2930:	80 e9       	ldi	r24, 0x90	; 144
    2932:	91 e0       	ldi	r25, 0x01	; 1
    2934:	91 83       	std	Z+1, r25	; 0x01
    2936:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2938:	fe 01       	movw	r30, r28
    293a:	ec 56       	subi	r30, 0x6C	; 108
    293c:	ff 4f       	sbci	r31, 0xFF	; 255
    293e:	80 81       	ld	r24, Z
    2940:	91 81       	ldd	r25, Z+1	; 0x01
    2942:	01 97       	sbiw	r24, 0x01	; 1
    2944:	f1 f7       	brne	.-4      	; 0x2942 <__stack+0x20e3>
    2946:	fe 01       	movw	r30, r28
    2948:	ec 56       	subi	r30, 0x6C	; 108
    294a:	ff 4f       	sbci	r31, 0xFF	; 255
    294c:	91 83       	std	Z+1, r25	; 0x01
    294e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2950:	de 01       	movw	r26, r28
    2952:	aa 56       	subi	r26, 0x6A	; 106
    2954:	bf 4f       	sbci	r27, 0xFF	; 255
    2956:	fe 01       	movw	r30, r28
    2958:	ea 56       	subi	r30, 0x6A	; 106
    295a:	ff 4f       	sbci	r31, 0xFF	; 255
    295c:	80 81       	ld	r24, Z
    295e:	91 81       	ldd	r25, Z+1	; 0x01
    2960:	01 97       	sbiw	r24, 0x01	; 1
    2962:	11 96       	adiw	r26, 0x01	; 1
    2964:	9c 93       	st	X, r25
    2966:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2968:	fe 01       	movw	r30, r28
    296a:	ea 56       	subi	r30, 0x6A	; 106
    296c:	ff 4f       	sbci	r31, 0xFF	; 255
    296e:	80 81       	ld	r24, Z
    2970:	91 81       	ldd	r25, Z+1	; 0x01
    2972:	00 97       	sbiw	r24, 0x00	; 0
    2974:	d1 f6       	brne	.-76     	; 0x292a <__stack+0x20cb>
    2976:	4b c0       	rjmp	.+150    	; 0x2a0e <__stack+0x21af>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2978:	8e 01       	movw	r16, r28
    297a:	0a 56       	subi	r16, 0x6A	; 106
    297c:	1f 4f       	sbci	r17, 0xFF	; 255
    297e:	fe 01       	movw	r30, r28
    2980:	e8 56       	subi	r30, 0x68	; 104
    2982:	ff 4f       	sbci	r31, 0xFF	; 255
    2984:	60 81       	ld	r22, Z
    2986:	71 81       	ldd	r23, Z+1	; 0x01
    2988:	82 81       	ldd	r24, Z+2	; 0x02
    298a:	93 81       	ldd	r25, Z+3	; 0x03
    298c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2990:	dc 01       	movw	r26, r24
    2992:	cb 01       	movw	r24, r22
    2994:	f8 01       	movw	r30, r16
    2996:	91 83       	std	Z+1, r25	; 0x01
    2998:	80 83       	st	Z, r24
    299a:	de 01       	movw	r26, r28
    299c:	ae 56       	subi	r26, 0x6E	; 110
    299e:	bf 4f       	sbci	r27, 0xFF	; 255
    29a0:	fe 01       	movw	r30, r28
    29a2:	ea 56       	subi	r30, 0x6A	; 106
    29a4:	ff 4f       	sbci	r31, 0xFF	; 255
    29a6:	80 81       	ld	r24, Z
    29a8:	91 81       	ldd	r25, Z+1	; 0x01
    29aa:	11 96       	adiw	r26, 0x01	; 1
    29ac:	9c 93       	st	X, r25
    29ae:	8e 93       	st	-X, r24
    29b0:	fe 01       	movw	r30, r28
    29b2:	ee 56       	subi	r30, 0x6E	; 110
    29b4:	ff 4f       	sbci	r31, 0xFF	; 255
    29b6:	80 81       	ld	r24, Z
    29b8:	91 81       	ldd	r25, Z+1	; 0x01
    29ba:	01 97       	sbiw	r24, 0x01	; 1
    29bc:	f1 f7       	brne	.-4      	; 0x29ba <__stack+0x215b>
    29be:	fe 01       	movw	r30, r28
    29c0:	ee 56       	subi	r30, 0x6E	; 110
    29c2:	ff 4f       	sbci	r31, 0xFF	; 255
    29c4:	91 83       	std	Z+1, r25	; 0x01
    29c6:	80 83       	st	Z, r24
    29c8:	22 c0       	rjmp	.+68     	; 0x2a0e <__stack+0x21af>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    29ca:	8e 01       	movw	r16, r28
    29cc:	00 56       	subi	r16, 0x60	; 96
    29ce:	1f 4f       	sbci	r17, 0xFF	; 255
    29d0:	fe 01       	movw	r30, r28
    29d2:	ef 55       	subi	r30, 0x5F	; 95
    29d4:	ff 4f       	sbci	r31, 0xFF	; 255
    29d6:	60 81       	ld	r22, Z
    29d8:	71 81       	ldd	r23, Z+1	; 0x01
    29da:	82 81       	ldd	r24, Z+2	; 0x02
    29dc:	93 81       	ldd	r25, Z+3	; 0x03
    29de:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    29e2:	dc 01       	movw	r26, r24
    29e4:	cb 01       	movw	r24, r22
    29e6:	f8 01       	movw	r30, r16
    29e8:	80 83       	st	Z, r24
    29ea:	de 01       	movw	r26, r28
    29ec:	af 56       	subi	r26, 0x6F	; 111
    29ee:	bf 4f       	sbci	r27, 0xFF	; 255
    29f0:	fe 01       	movw	r30, r28
    29f2:	e0 56       	subi	r30, 0x60	; 96
    29f4:	ff 4f       	sbci	r31, 0xFF	; 255
    29f6:	80 81       	ld	r24, Z
    29f8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    29fa:	fe 01       	movw	r30, r28
    29fc:	ef 56       	subi	r30, 0x6F	; 111
    29fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2a00:	80 81       	ld	r24, Z
    2a02:	8a 95       	dec	r24
    2a04:	f1 f7       	brne	.-4      	; 0x2a02 <__stack+0x21a3>
    2a06:	fe 01       	movw	r30, r28
    2a08:	ef 56       	subi	r30, 0x6F	; 111
    2a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0c:	80 83       	st	Z, r24
	_delay_us(5);
	
	
	//BYTE3
	
	PORTC &= 0xFB;		//cmd low
    2a0e:	a5 e3       	ldi	r26, 0x35	; 53
    2a10:	b0 e0       	ldi	r27, 0x00	; 0
    2a12:	e5 e3       	ldi	r30, 0x35	; 53
    2a14:	f0 e0       	ldi	r31, 0x00	; 0
    2a16:	80 81       	ld	r24, Z
    2a18:	8b 7f       	andi	r24, 0xFB	; 251
    2a1a:	8c 93       	st	X, r24
	
	for(i = 0;i<8;i++)
    2a1c:	10 92 61 00 	sts	0x0061, r1
    2a20:	10 92 60 00 	sts	0x0060, r1
    2a24:	69 c2       	rjmp	.+1234   	; 0x2ef8 <__stack+0x2699>
	{
		PORTC &= 0xFE;		//clock low
    2a26:	a5 e3       	ldi	r26, 0x35	; 53
    2a28:	b0 e0       	ldi	r27, 0x00	; 0
    2a2a:	e5 e3       	ldi	r30, 0x35	; 53
    2a2c:	f0 e0       	ldi	r31, 0x00	; 0
    2a2e:	80 81       	ld	r24, Z
    2a30:	8e 7f       	andi	r24, 0xFE	; 254
    2a32:	8c 93       	st	X, r24
    2a34:	fe 01       	movw	r30, r28
    2a36:	e3 57       	subi	r30, 0x73	; 115
    2a38:	ff 4f       	sbci	r31, 0xFF	; 255
    2a3a:	80 e0       	ldi	r24, 0x00	; 0
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	a0 ea       	ldi	r26, 0xA0	; 160
    2a40:	b0 e4       	ldi	r27, 0x40	; 64
    2a42:	80 83       	st	Z, r24
    2a44:	91 83       	std	Z+1, r25	; 0x01
    2a46:	a2 83       	std	Z+2, r26	; 0x02
    2a48:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2a4a:	8e 01       	movw	r16, r28
    2a4c:	07 57       	subi	r16, 0x77	; 119
    2a4e:	1f 4f       	sbci	r17, 0xFF	; 255
    2a50:	fe 01       	movw	r30, r28
    2a52:	e3 57       	subi	r30, 0x73	; 115
    2a54:	ff 4f       	sbci	r31, 0xFF	; 255
    2a56:	60 81       	ld	r22, Z
    2a58:	71 81       	ldd	r23, Z+1	; 0x01
    2a5a:	82 81       	ldd	r24, Z+2	; 0x02
    2a5c:	93 81       	ldd	r25, Z+3	; 0x03
    2a5e:	2b ea       	ldi	r18, 0xAB	; 171
    2a60:	3a ea       	ldi	r19, 0xAA	; 170
    2a62:	4a ea       	ldi	r20, 0xAA	; 170
    2a64:	50 e4       	ldi	r21, 0x40	; 64
    2a66:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2a6a:	dc 01       	movw	r26, r24
    2a6c:	cb 01       	movw	r24, r22
    2a6e:	f8 01       	movw	r30, r16
    2a70:	80 83       	st	Z, r24
    2a72:	91 83       	std	Z+1, r25	; 0x01
    2a74:	a2 83       	std	Z+2, r26	; 0x02
    2a76:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a78:	fe 01       	movw	r30, r28
    2a7a:	e7 57       	subi	r30, 0x77	; 119
    2a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7e:	60 81       	ld	r22, Z
    2a80:	71 81       	ldd	r23, Z+1	; 0x01
    2a82:	82 81       	ldd	r24, Z+2	; 0x02
    2a84:	93 81       	ldd	r25, Z+3	; 0x03
    2a86:	20 e0       	ldi	r18, 0x00	; 0
    2a88:	30 e0       	ldi	r19, 0x00	; 0
    2a8a:	40 e8       	ldi	r20, 0x80	; 128
    2a8c:	5f e3       	ldi	r21, 0x3F	; 63
    2a8e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    2a92:	88 23       	and	r24, r24
    2a94:	34 f4       	brge	.+12     	; 0x2aa2 <__stack+0x2243>
		__ticks = 1;
    2a96:	fe 01       	movw	r30, r28
    2a98:	e8 57       	subi	r30, 0x78	; 120
    2a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9c:	81 e0       	ldi	r24, 0x01	; 1
    2a9e:	80 83       	st	Z, r24
    2aa0:	e0 c0       	rjmp	.+448    	; 0x2c62 <__stack+0x2403>
	else if (__tmp > 255)
    2aa2:	fe 01       	movw	r30, r28
    2aa4:	e7 57       	subi	r30, 0x77	; 119
    2aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa8:	60 81       	ld	r22, Z
    2aaa:	71 81       	ldd	r23, Z+1	; 0x01
    2aac:	82 81       	ldd	r24, Z+2	; 0x02
    2aae:	93 81       	ldd	r25, Z+3	; 0x03
    2ab0:	20 e0       	ldi	r18, 0x00	; 0
    2ab2:	30 e0       	ldi	r19, 0x00	; 0
    2ab4:	4f e7       	ldi	r20, 0x7F	; 127
    2ab6:	53 e4       	ldi	r21, 0x43	; 67
    2ab8:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    2abc:	18 16       	cp	r1, r24
    2abe:	0c f0       	brlt	.+2      	; 0x2ac2 <__stack+0x2263>
    2ac0:	c0 c0       	rjmp	.+384    	; 0x2c42 <__stack+0x23e3>
	{
		_delay_ms(__us / 1000.0);
    2ac2:	fe 01       	movw	r30, r28
    2ac4:	e3 57       	subi	r30, 0x73	; 115
    2ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac8:	60 81       	ld	r22, Z
    2aca:	71 81       	ldd	r23, Z+1	; 0x01
    2acc:	82 81       	ldd	r24, Z+2	; 0x02
    2ace:	93 81       	ldd	r25, Z+3	; 0x03
    2ad0:	20 e0       	ldi	r18, 0x00	; 0
    2ad2:	30 e0       	ldi	r19, 0x00	; 0
    2ad4:	4a e7       	ldi	r20, 0x7A	; 122
    2ad6:	54 e4       	ldi	r21, 0x44	; 68
    2ad8:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    2adc:	dc 01       	movw	r26, r24
    2ade:	cb 01       	movw	r24, r22
    2ae0:	fe 01       	movw	r30, r28
    2ae2:	ec 57       	subi	r30, 0x7C	; 124
    2ae4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae6:	80 83       	st	Z, r24
    2ae8:	91 83       	std	Z+1, r25	; 0x01
    2aea:	a2 83       	std	Z+2, r26	; 0x02
    2aec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2aee:	8e 01       	movw	r16, r28
    2af0:	00 58       	subi	r16, 0x80	; 128
    2af2:	1f 4f       	sbci	r17, 0xFF	; 255
    2af4:	fe 01       	movw	r30, r28
    2af6:	ec 57       	subi	r30, 0x7C	; 124
    2af8:	ff 4f       	sbci	r31, 0xFF	; 255
    2afa:	60 81       	ld	r22, Z
    2afc:	71 81       	ldd	r23, Z+1	; 0x01
    2afe:	82 81       	ldd	r24, Z+2	; 0x02
    2b00:	93 81       	ldd	r25, Z+3	; 0x03
    2b02:	20 e0       	ldi	r18, 0x00	; 0
    2b04:	30 e0       	ldi	r19, 0x00	; 0
    2b06:	4a e7       	ldi	r20, 0x7A	; 122
    2b08:	55 e4       	ldi	r21, 0x45	; 69
    2b0a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2b0e:	dc 01       	movw	r26, r24
    2b10:	cb 01       	movw	r24, r22
    2b12:	f8 01       	movw	r30, r16
    2b14:	80 83       	st	Z, r24
    2b16:	91 83       	std	Z+1, r25	; 0x01
    2b18:	a2 83       	std	Z+2, r26	; 0x02
    2b1a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b1c:	fe 01       	movw	r30, r28
    2b1e:	e0 58       	subi	r30, 0x80	; 128
    2b20:	ff 4f       	sbci	r31, 0xFF	; 255
    2b22:	60 81       	ld	r22, Z
    2b24:	71 81       	ldd	r23, Z+1	; 0x01
    2b26:	82 81       	ldd	r24, Z+2	; 0x02
    2b28:	93 81       	ldd	r25, Z+3	; 0x03
    2b2a:	20 e0       	ldi	r18, 0x00	; 0
    2b2c:	30 e0       	ldi	r19, 0x00	; 0
    2b2e:	40 e8       	ldi	r20, 0x80	; 128
    2b30:	5f e3       	ldi	r21, 0x3F	; 63
    2b32:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    2b36:	88 23       	and	r24, r24
    2b38:	44 f4       	brge	.+16     	; 0x2b4a <__stack+0x22eb>
		__ticks = 1;
    2b3a:	fe 01       	movw	r30, r28
    2b3c:	e2 58       	subi	r30, 0x82	; 130
    2b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b40:	81 e0       	ldi	r24, 0x01	; 1
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	91 83       	std	Z+1, r25	; 0x01
    2b46:	80 83       	st	Z, r24
    2b48:	64 c0       	rjmp	.+200    	; 0x2c12 <__stack+0x23b3>
	else if (__tmp > 65535)
    2b4a:	fe 01       	movw	r30, r28
    2b4c:	e0 58       	subi	r30, 0x80	; 128
    2b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b50:	60 81       	ld	r22, Z
    2b52:	71 81       	ldd	r23, Z+1	; 0x01
    2b54:	82 81       	ldd	r24, Z+2	; 0x02
    2b56:	93 81       	ldd	r25, Z+3	; 0x03
    2b58:	20 e0       	ldi	r18, 0x00	; 0
    2b5a:	3f ef       	ldi	r19, 0xFF	; 255
    2b5c:	4f e7       	ldi	r20, 0x7F	; 127
    2b5e:	57 e4       	ldi	r21, 0x47	; 71
    2b60:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    2b64:	18 16       	cp	r1, r24
    2b66:	0c f0       	brlt	.+2      	; 0x2b6a <__stack+0x230b>
    2b68:	43 c0       	rjmp	.+134    	; 0x2bf0 <__stack+0x2391>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b6a:	fe 01       	movw	r30, r28
    2b6c:	ec 57       	subi	r30, 0x7C	; 124
    2b6e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b70:	60 81       	ld	r22, Z
    2b72:	71 81       	ldd	r23, Z+1	; 0x01
    2b74:	82 81       	ldd	r24, Z+2	; 0x02
    2b76:	93 81       	ldd	r25, Z+3	; 0x03
    2b78:	20 e0       	ldi	r18, 0x00	; 0
    2b7a:	30 e0       	ldi	r19, 0x00	; 0
    2b7c:	40 e2       	ldi	r20, 0x20	; 32
    2b7e:	51 e4       	ldi	r21, 0x41	; 65
    2b80:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2b84:	dc 01       	movw	r26, r24
    2b86:	cb 01       	movw	r24, r22
    2b88:	8e 01       	movw	r16, r28
    2b8a:	02 58       	subi	r16, 0x82	; 130
    2b8c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b8e:	bc 01       	movw	r22, r24
    2b90:	cd 01       	movw	r24, r26
    2b92:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2b96:	dc 01       	movw	r26, r24
    2b98:	cb 01       	movw	r24, r22
    2b9a:	f8 01       	movw	r30, r16
    2b9c:	91 83       	std	Z+1, r25	; 0x01
    2b9e:	80 83       	st	Z, r24
    2ba0:	1f c0       	rjmp	.+62     	; 0x2be0 <__stack+0x2381>
    2ba2:	fe 01       	movw	r30, r28
    2ba4:	e4 58       	subi	r30, 0x84	; 132
    2ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba8:	80 e9       	ldi	r24, 0x90	; 144
    2baa:	91 e0       	ldi	r25, 0x01	; 1
    2bac:	91 83       	std	Z+1, r25	; 0x01
    2bae:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2bb0:	fe 01       	movw	r30, r28
    2bb2:	e4 58       	subi	r30, 0x84	; 132
    2bb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb6:	80 81       	ld	r24, Z
    2bb8:	91 81       	ldd	r25, Z+1	; 0x01
    2bba:	01 97       	sbiw	r24, 0x01	; 1
    2bbc:	f1 f7       	brne	.-4      	; 0x2bba <__stack+0x235b>
    2bbe:	fe 01       	movw	r30, r28
    2bc0:	e4 58       	subi	r30, 0x84	; 132
    2bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc4:	91 83       	std	Z+1, r25	; 0x01
    2bc6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bc8:	de 01       	movw	r26, r28
    2bca:	a2 58       	subi	r26, 0x82	; 130
    2bcc:	bf 4f       	sbci	r27, 0xFF	; 255
    2bce:	fe 01       	movw	r30, r28
    2bd0:	e2 58       	subi	r30, 0x82	; 130
    2bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd4:	80 81       	ld	r24, Z
    2bd6:	91 81       	ldd	r25, Z+1	; 0x01
    2bd8:	01 97       	sbiw	r24, 0x01	; 1
    2bda:	11 96       	adiw	r26, 0x01	; 1
    2bdc:	9c 93       	st	X, r25
    2bde:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2be0:	fe 01       	movw	r30, r28
    2be2:	e2 58       	subi	r30, 0x82	; 130
    2be4:	ff 4f       	sbci	r31, 0xFF	; 255
    2be6:	80 81       	ld	r24, Z
    2be8:	91 81       	ldd	r25, Z+1	; 0x01
    2bea:	00 97       	sbiw	r24, 0x00	; 0
    2bec:	d1 f6       	brne	.-76     	; 0x2ba2 <__stack+0x2343>
    2bee:	4b c0       	rjmp	.+150    	; 0x2c86 <__stack+0x2427>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bf0:	8e 01       	movw	r16, r28
    2bf2:	02 58       	subi	r16, 0x82	; 130
    2bf4:	1f 4f       	sbci	r17, 0xFF	; 255
    2bf6:	fe 01       	movw	r30, r28
    2bf8:	e0 58       	subi	r30, 0x80	; 128
    2bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    2bfc:	60 81       	ld	r22, Z
    2bfe:	71 81       	ldd	r23, Z+1	; 0x01
    2c00:	82 81       	ldd	r24, Z+2	; 0x02
    2c02:	93 81       	ldd	r25, Z+3	; 0x03
    2c04:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2c08:	dc 01       	movw	r26, r24
    2c0a:	cb 01       	movw	r24, r22
    2c0c:	f8 01       	movw	r30, r16
    2c0e:	91 83       	std	Z+1, r25	; 0x01
    2c10:	80 83       	st	Z, r24
    2c12:	de 01       	movw	r26, r28
    2c14:	a6 58       	subi	r26, 0x86	; 134
    2c16:	bf 4f       	sbci	r27, 0xFF	; 255
    2c18:	fe 01       	movw	r30, r28
    2c1a:	e2 58       	subi	r30, 0x82	; 130
    2c1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c1e:	80 81       	ld	r24, Z
    2c20:	91 81       	ldd	r25, Z+1	; 0x01
    2c22:	11 96       	adiw	r26, 0x01	; 1
    2c24:	9c 93       	st	X, r25
    2c26:	8e 93       	st	-X, r24
    2c28:	fe 01       	movw	r30, r28
    2c2a:	e6 58       	subi	r30, 0x86	; 134
    2c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2e:	80 81       	ld	r24, Z
    2c30:	91 81       	ldd	r25, Z+1	; 0x01
    2c32:	01 97       	sbiw	r24, 0x01	; 1
    2c34:	f1 f7       	brne	.-4      	; 0x2c32 <__stack+0x23d3>
    2c36:	fe 01       	movw	r30, r28
    2c38:	e6 58       	subi	r30, 0x86	; 134
    2c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3c:	91 83       	std	Z+1, r25	; 0x01
    2c3e:	80 83       	st	Z, r24
    2c40:	22 c0       	rjmp	.+68     	; 0x2c86 <__stack+0x2427>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2c42:	8e 01       	movw	r16, r28
    2c44:	08 57       	subi	r16, 0x78	; 120
    2c46:	1f 4f       	sbci	r17, 0xFF	; 255
    2c48:	fe 01       	movw	r30, r28
    2c4a:	e7 57       	subi	r30, 0x77	; 119
    2c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4e:	60 81       	ld	r22, Z
    2c50:	71 81       	ldd	r23, Z+1	; 0x01
    2c52:	82 81       	ldd	r24, Z+2	; 0x02
    2c54:	93 81       	ldd	r25, Z+3	; 0x03
    2c56:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2c5a:	dc 01       	movw	r26, r24
    2c5c:	cb 01       	movw	r24, r22
    2c5e:	f8 01       	movw	r30, r16
    2c60:	80 83       	st	Z, r24
    2c62:	de 01       	movw	r26, r28
    2c64:	a7 58       	subi	r26, 0x87	; 135
    2c66:	bf 4f       	sbci	r27, 0xFF	; 255
    2c68:	fe 01       	movw	r30, r28
    2c6a:	e8 57       	subi	r30, 0x78	; 120
    2c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6e:	80 81       	ld	r24, Z
    2c70:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2c72:	fe 01       	movw	r30, r28
    2c74:	e7 58       	subi	r30, 0x87	; 135
    2c76:	ff 4f       	sbci	r31, 0xFF	; 255
    2c78:	80 81       	ld	r24, Z
    2c7a:	8a 95       	dec	r24
    2c7c:	f1 f7       	brne	.-4      	; 0x2c7a <__stack+0x241b>
    2c7e:	fe 01       	movw	r30, r28
    2c80:	e7 58       	subi	r30, 0x87	; 135
    2c82:	ff 4f       	sbci	r31, 0xFF	; 255
    2c84:	80 83       	st	Z, r24
		_delay_us(5);
		PORTC |= 0x01;		//clock high
    2c86:	a5 e3       	ldi	r26, 0x35	; 53
    2c88:	b0 e0       	ldi	r27, 0x00	; 0
    2c8a:	e5 e3       	ldi	r30, 0x35	; 53
    2c8c:	f0 e0       	ldi	r31, 0x00	; 0
    2c8e:	80 81       	ld	r24, Z
    2c90:	81 60       	ori	r24, 0x01	; 1
    2c92:	8c 93       	st	X, r24
    2c94:	fe 01       	movw	r30, r28
    2c96:	eb 58       	subi	r30, 0x8B	; 139
    2c98:	ff 4f       	sbci	r31, 0xFF	; 255
    2c9a:	80 e0       	ldi	r24, 0x00	; 0
    2c9c:	90 e0       	ldi	r25, 0x00	; 0
    2c9e:	a0 ea       	ldi	r26, 0xA0	; 160
    2ca0:	b0 e4       	ldi	r27, 0x40	; 64
    2ca2:	80 83       	st	Z, r24
    2ca4:	91 83       	std	Z+1, r25	; 0x01
    2ca6:	a2 83       	std	Z+2, r26	; 0x02
    2ca8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2caa:	8e 01       	movw	r16, r28
    2cac:	0f 58       	subi	r16, 0x8F	; 143
    2cae:	1f 4f       	sbci	r17, 0xFF	; 255
    2cb0:	fe 01       	movw	r30, r28
    2cb2:	eb 58       	subi	r30, 0x8B	; 139
    2cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb6:	60 81       	ld	r22, Z
    2cb8:	71 81       	ldd	r23, Z+1	; 0x01
    2cba:	82 81       	ldd	r24, Z+2	; 0x02
    2cbc:	93 81       	ldd	r25, Z+3	; 0x03
    2cbe:	2b ea       	ldi	r18, 0xAB	; 171
    2cc0:	3a ea       	ldi	r19, 0xAA	; 170
    2cc2:	4a ea       	ldi	r20, 0xAA	; 170
    2cc4:	50 e4       	ldi	r21, 0x40	; 64
    2cc6:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2cca:	dc 01       	movw	r26, r24
    2ccc:	cb 01       	movw	r24, r22
    2cce:	f8 01       	movw	r30, r16
    2cd0:	80 83       	st	Z, r24
    2cd2:	91 83       	std	Z+1, r25	; 0x01
    2cd4:	a2 83       	std	Z+2, r26	; 0x02
    2cd6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cd8:	fe 01       	movw	r30, r28
    2cda:	ef 58       	subi	r30, 0x8F	; 143
    2cdc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cde:	60 81       	ld	r22, Z
    2ce0:	71 81       	ldd	r23, Z+1	; 0x01
    2ce2:	82 81       	ldd	r24, Z+2	; 0x02
    2ce4:	93 81       	ldd	r25, Z+3	; 0x03
    2ce6:	20 e0       	ldi	r18, 0x00	; 0
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	40 e8       	ldi	r20, 0x80	; 128
    2cec:	5f e3       	ldi	r21, 0x3F	; 63
    2cee:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    2cf2:	88 23       	and	r24, r24
    2cf4:	34 f4       	brge	.+12     	; 0x2d02 <__stack+0x24a3>
		__ticks = 1;
    2cf6:	fe 01       	movw	r30, r28
    2cf8:	e0 59       	subi	r30, 0x90	; 144
    2cfa:	ff 4f       	sbci	r31, 0xFF	; 255
    2cfc:	81 e0       	ldi	r24, 0x01	; 1
    2cfe:	80 83       	st	Z, r24
    2d00:	e0 c0       	rjmp	.+448    	; 0x2ec2 <__stack+0x2663>
	else if (__tmp > 255)
    2d02:	fe 01       	movw	r30, r28
    2d04:	ef 58       	subi	r30, 0x8F	; 143
    2d06:	ff 4f       	sbci	r31, 0xFF	; 255
    2d08:	60 81       	ld	r22, Z
    2d0a:	71 81       	ldd	r23, Z+1	; 0x01
    2d0c:	82 81       	ldd	r24, Z+2	; 0x02
    2d0e:	93 81       	ldd	r25, Z+3	; 0x03
    2d10:	20 e0       	ldi	r18, 0x00	; 0
    2d12:	30 e0       	ldi	r19, 0x00	; 0
    2d14:	4f e7       	ldi	r20, 0x7F	; 127
    2d16:	53 e4       	ldi	r21, 0x43	; 67
    2d18:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    2d1c:	18 16       	cp	r1, r24
    2d1e:	0c f0       	brlt	.+2      	; 0x2d22 <__stack+0x24c3>
    2d20:	c0 c0       	rjmp	.+384    	; 0x2ea2 <__stack+0x2643>
	{
		_delay_ms(__us / 1000.0);
    2d22:	fe 01       	movw	r30, r28
    2d24:	eb 58       	subi	r30, 0x8B	; 139
    2d26:	ff 4f       	sbci	r31, 0xFF	; 255
    2d28:	60 81       	ld	r22, Z
    2d2a:	71 81       	ldd	r23, Z+1	; 0x01
    2d2c:	82 81       	ldd	r24, Z+2	; 0x02
    2d2e:	93 81       	ldd	r25, Z+3	; 0x03
    2d30:	20 e0       	ldi	r18, 0x00	; 0
    2d32:	30 e0       	ldi	r19, 0x00	; 0
    2d34:	4a e7       	ldi	r20, 0x7A	; 122
    2d36:	54 e4       	ldi	r21, 0x44	; 68
    2d38:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    2d3c:	dc 01       	movw	r26, r24
    2d3e:	cb 01       	movw	r24, r22
    2d40:	fe 01       	movw	r30, r28
    2d42:	e4 59       	subi	r30, 0x94	; 148
    2d44:	ff 4f       	sbci	r31, 0xFF	; 255
    2d46:	80 83       	st	Z, r24
    2d48:	91 83       	std	Z+1, r25	; 0x01
    2d4a:	a2 83       	std	Z+2, r26	; 0x02
    2d4c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d4e:	8e 01       	movw	r16, r28
    2d50:	08 59       	subi	r16, 0x98	; 152
    2d52:	1f 4f       	sbci	r17, 0xFF	; 255
    2d54:	fe 01       	movw	r30, r28
    2d56:	e4 59       	subi	r30, 0x94	; 148
    2d58:	ff 4f       	sbci	r31, 0xFF	; 255
    2d5a:	60 81       	ld	r22, Z
    2d5c:	71 81       	ldd	r23, Z+1	; 0x01
    2d5e:	82 81       	ldd	r24, Z+2	; 0x02
    2d60:	93 81       	ldd	r25, Z+3	; 0x03
    2d62:	20 e0       	ldi	r18, 0x00	; 0
    2d64:	30 e0       	ldi	r19, 0x00	; 0
    2d66:	4a e7       	ldi	r20, 0x7A	; 122
    2d68:	55 e4       	ldi	r21, 0x45	; 69
    2d6a:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2d6e:	dc 01       	movw	r26, r24
    2d70:	cb 01       	movw	r24, r22
    2d72:	f8 01       	movw	r30, r16
    2d74:	80 83       	st	Z, r24
    2d76:	91 83       	std	Z+1, r25	; 0x01
    2d78:	a2 83       	std	Z+2, r26	; 0x02
    2d7a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d7c:	fe 01       	movw	r30, r28
    2d7e:	e8 59       	subi	r30, 0x98	; 152
    2d80:	ff 4f       	sbci	r31, 0xFF	; 255
    2d82:	60 81       	ld	r22, Z
    2d84:	71 81       	ldd	r23, Z+1	; 0x01
    2d86:	82 81       	ldd	r24, Z+2	; 0x02
    2d88:	93 81       	ldd	r25, Z+3	; 0x03
    2d8a:	20 e0       	ldi	r18, 0x00	; 0
    2d8c:	30 e0       	ldi	r19, 0x00	; 0
    2d8e:	40 e8       	ldi	r20, 0x80	; 128
    2d90:	5f e3       	ldi	r21, 0x3F	; 63
    2d92:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    2d96:	88 23       	and	r24, r24
    2d98:	44 f4       	brge	.+16     	; 0x2daa <__stack+0x254b>
		__ticks = 1;
    2d9a:	fe 01       	movw	r30, r28
    2d9c:	ea 59       	subi	r30, 0x9A	; 154
    2d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2da0:	81 e0       	ldi	r24, 0x01	; 1
    2da2:	90 e0       	ldi	r25, 0x00	; 0
    2da4:	91 83       	std	Z+1, r25	; 0x01
    2da6:	80 83       	st	Z, r24
    2da8:	64 c0       	rjmp	.+200    	; 0x2e72 <__stack+0x2613>
	else if (__tmp > 65535)
    2daa:	fe 01       	movw	r30, r28
    2dac:	e8 59       	subi	r30, 0x98	; 152
    2dae:	ff 4f       	sbci	r31, 0xFF	; 255
    2db0:	60 81       	ld	r22, Z
    2db2:	71 81       	ldd	r23, Z+1	; 0x01
    2db4:	82 81       	ldd	r24, Z+2	; 0x02
    2db6:	93 81       	ldd	r25, Z+3	; 0x03
    2db8:	20 e0       	ldi	r18, 0x00	; 0
    2dba:	3f ef       	ldi	r19, 0xFF	; 255
    2dbc:	4f e7       	ldi	r20, 0x7F	; 127
    2dbe:	57 e4       	ldi	r21, 0x47	; 71
    2dc0:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    2dc4:	18 16       	cp	r1, r24
    2dc6:	0c f0       	brlt	.+2      	; 0x2dca <__stack+0x256b>
    2dc8:	43 c0       	rjmp	.+134    	; 0x2e50 <__stack+0x25f1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2dca:	fe 01       	movw	r30, r28
    2dcc:	e4 59       	subi	r30, 0x94	; 148
    2dce:	ff 4f       	sbci	r31, 0xFF	; 255
    2dd0:	60 81       	ld	r22, Z
    2dd2:	71 81       	ldd	r23, Z+1	; 0x01
    2dd4:	82 81       	ldd	r24, Z+2	; 0x02
    2dd6:	93 81       	ldd	r25, Z+3	; 0x03
    2dd8:	20 e0       	ldi	r18, 0x00	; 0
    2dda:	30 e0       	ldi	r19, 0x00	; 0
    2ddc:	40 e2       	ldi	r20, 0x20	; 32
    2dde:	51 e4       	ldi	r21, 0x41	; 65
    2de0:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2de4:	dc 01       	movw	r26, r24
    2de6:	cb 01       	movw	r24, r22
    2de8:	8e 01       	movw	r16, r28
    2dea:	0a 59       	subi	r16, 0x9A	; 154
    2dec:	1f 4f       	sbci	r17, 0xFF	; 255
    2dee:	bc 01       	movw	r22, r24
    2df0:	cd 01       	movw	r24, r26
    2df2:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2df6:	dc 01       	movw	r26, r24
    2df8:	cb 01       	movw	r24, r22
    2dfa:	f8 01       	movw	r30, r16
    2dfc:	91 83       	std	Z+1, r25	; 0x01
    2dfe:	80 83       	st	Z, r24
    2e00:	1f c0       	rjmp	.+62     	; 0x2e40 <__stack+0x25e1>
    2e02:	fe 01       	movw	r30, r28
    2e04:	ec 59       	subi	r30, 0x9C	; 156
    2e06:	ff 4f       	sbci	r31, 0xFF	; 255
    2e08:	80 e9       	ldi	r24, 0x90	; 144
    2e0a:	91 e0       	ldi	r25, 0x01	; 1
    2e0c:	91 83       	std	Z+1, r25	; 0x01
    2e0e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2e10:	fe 01       	movw	r30, r28
    2e12:	ec 59       	subi	r30, 0x9C	; 156
    2e14:	ff 4f       	sbci	r31, 0xFF	; 255
    2e16:	80 81       	ld	r24, Z
    2e18:	91 81       	ldd	r25, Z+1	; 0x01
    2e1a:	01 97       	sbiw	r24, 0x01	; 1
    2e1c:	f1 f7       	brne	.-4      	; 0x2e1a <__stack+0x25bb>
    2e1e:	fe 01       	movw	r30, r28
    2e20:	ec 59       	subi	r30, 0x9C	; 156
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	91 83       	std	Z+1, r25	; 0x01
    2e26:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e28:	de 01       	movw	r26, r28
    2e2a:	aa 59       	subi	r26, 0x9A	; 154
    2e2c:	bf 4f       	sbci	r27, 0xFF	; 255
    2e2e:	fe 01       	movw	r30, r28
    2e30:	ea 59       	subi	r30, 0x9A	; 154
    2e32:	ff 4f       	sbci	r31, 0xFF	; 255
    2e34:	80 81       	ld	r24, Z
    2e36:	91 81       	ldd	r25, Z+1	; 0x01
    2e38:	01 97       	sbiw	r24, 0x01	; 1
    2e3a:	11 96       	adiw	r26, 0x01	; 1
    2e3c:	9c 93       	st	X, r25
    2e3e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e40:	fe 01       	movw	r30, r28
    2e42:	ea 59       	subi	r30, 0x9A	; 154
    2e44:	ff 4f       	sbci	r31, 0xFF	; 255
    2e46:	80 81       	ld	r24, Z
    2e48:	91 81       	ldd	r25, Z+1	; 0x01
    2e4a:	00 97       	sbiw	r24, 0x00	; 0
    2e4c:	d1 f6       	brne	.-76     	; 0x2e02 <__stack+0x25a3>
    2e4e:	4b c0       	rjmp	.+150    	; 0x2ee6 <__stack+0x2687>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e50:	8e 01       	movw	r16, r28
    2e52:	0a 59       	subi	r16, 0x9A	; 154
    2e54:	1f 4f       	sbci	r17, 0xFF	; 255
    2e56:	fe 01       	movw	r30, r28
    2e58:	e8 59       	subi	r30, 0x98	; 152
    2e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e5c:	60 81       	ld	r22, Z
    2e5e:	71 81       	ldd	r23, Z+1	; 0x01
    2e60:	82 81       	ldd	r24, Z+2	; 0x02
    2e62:	93 81       	ldd	r25, Z+3	; 0x03
    2e64:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2e68:	dc 01       	movw	r26, r24
    2e6a:	cb 01       	movw	r24, r22
    2e6c:	f8 01       	movw	r30, r16
    2e6e:	91 83       	std	Z+1, r25	; 0x01
    2e70:	80 83       	st	Z, r24
    2e72:	de 01       	movw	r26, r28
    2e74:	ae 59       	subi	r26, 0x9E	; 158
    2e76:	bf 4f       	sbci	r27, 0xFF	; 255
    2e78:	fe 01       	movw	r30, r28
    2e7a:	ea 59       	subi	r30, 0x9A	; 154
    2e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7e:	80 81       	ld	r24, Z
    2e80:	91 81       	ldd	r25, Z+1	; 0x01
    2e82:	11 96       	adiw	r26, 0x01	; 1
    2e84:	9c 93       	st	X, r25
    2e86:	8e 93       	st	-X, r24
    2e88:	fe 01       	movw	r30, r28
    2e8a:	ee 59       	subi	r30, 0x9E	; 158
    2e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8e:	80 81       	ld	r24, Z
    2e90:	91 81       	ldd	r25, Z+1	; 0x01
    2e92:	01 97       	sbiw	r24, 0x01	; 1
    2e94:	f1 f7       	brne	.-4      	; 0x2e92 <__stack+0x2633>
    2e96:	fe 01       	movw	r30, r28
    2e98:	ee 59       	subi	r30, 0x9E	; 158
    2e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e9c:	91 83       	std	Z+1, r25	; 0x01
    2e9e:	80 83       	st	Z, r24
    2ea0:	22 c0       	rjmp	.+68     	; 0x2ee6 <__stack+0x2687>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2ea2:	8e 01       	movw	r16, r28
    2ea4:	00 59       	subi	r16, 0x90	; 144
    2ea6:	1f 4f       	sbci	r17, 0xFF	; 255
    2ea8:	fe 01       	movw	r30, r28
    2eaa:	ef 58       	subi	r30, 0x8F	; 143
    2eac:	ff 4f       	sbci	r31, 0xFF	; 255
    2eae:	60 81       	ld	r22, Z
    2eb0:	71 81       	ldd	r23, Z+1	; 0x01
    2eb2:	82 81       	ldd	r24, Z+2	; 0x02
    2eb4:	93 81       	ldd	r25, Z+3	; 0x03
    2eb6:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    2eba:	dc 01       	movw	r26, r24
    2ebc:	cb 01       	movw	r24, r22
    2ebe:	f8 01       	movw	r30, r16
    2ec0:	80 83       	st	Z, r24
    2ec2:	de 01       	movw	r26, r28
    2ec4:	af 59       	subi	r26, 0x9F	; 159
    2ec6:	bf 4f       	sbci	r27, 0xFF	; 255
    2ec8:	fe 01       	movw	r30, r28
    2eca:	e0 59       	subi	r30, 0x90	; 144
    2ecc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ece:	80 81       	ld	r24, Z
    2ed0:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2ed2:	fe 01       	movw	r30, r28
    2ed4:	ef 59       	subi	r30, 0x9F	; 159
    2ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed8:	80 81       	ld	r24, Z
    2eda:	8a 95       	dec	r24
    2edc:	f1 f7       	brne	.-4      	; 0x2eda <__stack+0x267b>
    2ede:	fe 01       	movw	r30, r28
    2ee0:	ef 59       	subi	r30, 0x9F	; 159
    2ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee4:	80 83       	st	Z, r24
	
	//BYTE3
	
	PORTC &= 0xFB;		//cmd low
	
	for(i = 0;i<8;i++)
    2ee6:	80 91 60 00 	lds	r24, 0x0060
    2eea:	90 91 61 00 	lds	r25, 0x0061
    2eee:	01 96       	adiw	r24, 0x01	; 1
    2ef0:	90 93 61 00 	sts	0x0061, r25
    2ef4:	80 93 60 00 	sts	0x0060, r24
    2ef8:	80 91 60 00 	lds	r24, 0x0060
    2efc:	90 91 61 00 	lds	r25, 0x0061
    2f00:	88 30       	cpi	r24, 0x08	; 8
    2f02:	91 05       	cpc	r25, r1
    2f04:	0c f4       	brge	.+2      	; 0x2f08 <__stack+0x26a9>
    2f06:	8f cd       	rjmp	.-1250   	; 0x2a26 <__stack+0x21c7>
	}
	
	//	PORTC &= 0xEF;		//att high
	
	//BYTE4
	for(i = 7;i<=0;i--)
    2f08:	87 e0       	ldi	r24, 0x07	; 7
    2f0a:	90 e0       	ldi	r25, 0x00	; 0
    2f0c:	90 93 61 00 	sts	0x0061, r25
    2f10:	80 93 60 00 	sts	0x0060, r24
    2f14:	6a c2       	rjmp	.+1236   	; 0x33ea <__stack+0x2b8b>
	{
		
		PORTC &= 0xFE;		//clock low
    2f16:	a5 e3       	ldi	r26, 0x35	; 53
    2f18:	b0 e0       	ldi	r27, 0x00	; 0
    2f1a:	e5 e3       	ldi	r30, 0x35	; 53
    2f1c:	f0 e0       	ldi	r31, 0x00	; 0
    2f1e:	80 81       	ld	r24, Z
    2f20:	8e 7f       	andi	r24, 0xFE	; 254
    2f22:	8c 93       	st	X, r24
    2f24:	fe 01       	movw	r30, r28
    2f26:	e3 5a       	subi	r30, 0xA3	; 163
    2f28:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2a:	80 e0       	ldi	r24, 0x00	; 0
    2f2c:	90 e0       	ldi	r25, 0x00	; 0
    2f2e:	a0 ea       	ldi	r26, 0xA0	; 160
    2f30:	b0 e4       	ldi	r27, 0x40	; 64
    2f32:	80 83       	st	Z, r24
    2f34:	91 83       	std	Z+1, r25	; 0x01
    2f36:	a2 83       	std	Z+2, r26	; 0x02
    2f38:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2f3a:	8e 01       	movw	r16, r28
    2f3c:	07 5a       	subi	r16, 0xA7	; 167
    2f3e:	1f 4f       	sbci	r17, 0xFF	; 255
    2f40:	fe 01       	movw	r30, r28
    2f42:	e3 5a       	subi	r30, 0xA3	; 163
    2f44:	ff 4f       	sbci	r31, 0xFF	; 255
    2f46:	60 81       	ld	r22, Z
    2f48:	71 81       	ldd	r23, Z+1	; 0x01
    2f4a:	82 81       	ldd	r24, Z+2	; 0x02
    2f4c:	93 81       	ldd	r25, Z+3	; 0x03
    2f4e:	2b ea       	ldi	r18, 0xAB	; 171
    2f50:	3a ea       	ldi	r19, 0xAA	; 170
    2f52:	4a ea       	ldi	r20, 0xAA	; 170
    2f54:	50 e4       	ldi	r21, 0x40	; 64
    2f56:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2f5a:	dc 01       	movw	r26, r24
    2f5c:	cb 01       	movw	r24, r22
    2f5e:	f8 01       	movw	r30, r16
    2f60:	80 83       	st	Z, r24
    2f62:	91 83       	std	Z+1, r25	; 0x01
    2f64:	a2 83       	std	Z+2, r26	; 0x02
    2f66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f68:	fe 01       	movw	r30, r28
    2f6a:	e7 5a       	subi	r30, 0xA7	; 167
    2f6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f6e:	60 81       	ld	r22, Z
    2f70:	71 81       	ldd	r23, Z+1	; 0x01
    2f72:	82 81       	ldd	r24, Z+2	; 0x02
    2f74:	93 81       	ldd	r25, Z+3	; 0x03
    2f76:	20 e0       	ldi	r18, 0x00	; 0
    2f78:	30 e0       	ldi	r19, 0x00	; 0
    2f7a:	40 e8       	ldi	r20, 0x80	; 128
    2f7c:	5f e3       	ldi	r21, 0x3F	; 63
    2f7e:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    2f82:	88 23       	and	r24, r24
    2f84:	34 f4       	brge	.+12     	; 0x2f92 <__stack+0x2733>
		__ticks = 1;
    2f86:	fe 01       	movw	r30, r28
    2f88:	e8 5a       	subi	r30, 0xA8	; 168
    2f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f8c:	81 e0       	ldi	r24, 0x01	; 1
    2f8e:	80 83       	st	Z, r24
    2f90:	e0 c0       	rjmp	.+448    	; 0x3152 <__stack+0x28f3>
	else if (__tmp > 255)
    2f92:	fe 01       	movw	r30, r28
    2f94:	e7 5a       	subi	r30, 0xA7	; 167
    2f96:	ff 4f       	sbci	r31, 0xFF	; 255
    2f98:	60 81       	ld	r22, Z
    2f9a:	71 81       	ldd	r23, Z+1	; 0x01
    2f9c:	82 81       	ldd	r24, Z+2	; 0x02
    2f9e:	93 81       	ldd	r25, Z+3	; 0x03
    2fa0:	20 e0       	ldi	r18, 0x00	; 0
    2fa2:	30 e0       	ldi	r19, 0x00	; 0
    2fa4:	4f e7       	ldi	r20, 0x7F	; 127
    2fa6:	53 e4       	ldi	r21, 0x43	; 67
    2fa8:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    2fac:	18 16       	cp	r1, r24
    2fae:	0c f0       	brlt	.+2      	; 0x2fb2 <__stack+0x2753>
    2fb0:	c0 c0       	rjmp	.+384    	; 0x3132 <__stack+0x28d3>
	{
		_delay_ms(__us / 1000.0);
    2fb2:	fe 01       	movw	r30, r28
    2fb4:	e3 5a       	subi	r30, 0xA3	; 163
    2fb6:	ff 4f       	sbci	r31, 0xFF	; 255
    2fb8:	60 81       	ld	r22, Z
    2fba:	71 81       	ldd	r23, Z+1	; 0x01
    2fbc:	82 81       	ldd	r24, Z+2	; 0x02
    2fbe:	93 81       	ldd	r25, Z+3	; 0x03
    2fc0:	20 e0       	ldi	r18, 0x00	; 0
    2fc2:	30 e0       	ldi	r19, 0x00	; 0
    2fc4:	4a e7       	ldi	r20, 0x7A	; 122
    2fc6:	54 e4       	ldi	r21, 0x44	; 68
    2fc8:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    2fcc:	dc 01       	movw	r26, r24
    2fce:	cb 01       	movw	r24, r22
    2fd0:	fe 01       	movw	r30, r28
    2fd2:	ec 5a       	subi	r30, 0xAC	; 172
    2fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd6:	80 83       	st	Z, r24
    2fd8:	91 83       	std	Z+1, r25	; 0x01
    2fda:	a2 83       	std	Z+2, r26	; 0x02
    2fdc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fde:	8e 01       	movw	r16, r28
    2fe0:	00 5b       	subi	r16, 0xB0	; 176
    2fe2:	1f 4f       	sbci	r17, 0xFF	; 255
    2fe4:	fe 01       	movw	r30, r28
    2fe6:	ec 5a       	subi	r30, 0xAC	; 172
    2fe8:	ff 4f       	sbci	r31, 0xFF	; 255
    2fea:	60 81       	ld	r22, Z
    2fec:	71 81       	ldd	r23, Z+1	; 0x01
    2fee:	82 81       	ldd	r24, Z+2	; 0x02
    2ff0:	93 81       	ldd	r25, Z+3	; 0x03
    2ff2:	20 e0       	ldi	r18, 0x00	; 0
    2ff4:	30 e0       	ldi	r19, 0x00	; 0
    2ff6:	4a e7       	ldi	r20, 0x7A	; 122
    2ff8:	55 e4       	ldi	r21, 0x45	; 69
    2ffa:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    2ffe:	dc 01       	movw	r26, r24
    3000:	cb 01       	movw	r24, r22
    3002:	f8 01       	movw	r30, r16
    3004:	80 83       	st	Z, r24
    3006:	91 83       	std	Z+1, r25	; 0x01
    3008:	a2 83       	std	Z+2, r26	; 0x02
    300a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    300c:	fe 01       	movw	r30, r28
    300e:	e0 5b       	subi	r30, 0xB0	; 176
    3010:	ff 4f       	sbci	r31, 0xFF	; 255
    3012:	60 81       	ld	r22, Z
    3014:	71 81       	ldd	r23, Z+1	; 0x01
    3016:	82 81       	ldd	r24, Z+2	; 0x02
    3018:	93 81       	ldd	r25, Z+3	; 0x03
    301a:	20 e0       	ldi	r18, 0x00	; 0
    301c:	30 e0       	ldi	r19, 0x00	; 0
    301e:	40 e8       	ldi	r20, 0x80	; 128
    3020:	5f e3       	ldi	r21, 0x3F	; 63
    3022:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    3026:	88 23       	and	r24, r24
    3028:	44 f4       	brge	.+16     	; 0x303a <__stack+0x27db>
		__ticks = 1;
    302a:	fe 01       	movw	r30, r28
    302c:	e2 5b       	subi	r30, 0xB2	; 178
    302e:	ff 4f       	sbci	r31, 0xFF	; 255
    3030:	81 e0       	ldi	r24, 0x01	; 1
    3032:	90 e0       	ldi	r25, 0x00	; 0
    3034:	91 83       	std	Z+1, r25	; 0x01
    3036:	80 83       	st	Z, r24
    3038:	64 c0       	rjmp	.+200    	; 0x3102 <__stack+0x28a3>
	else if (__tmp > 65535)
    303a:	fe 01       	movw	r30, r28
    303c:	e0 5b       	subi	r30, 0xB0	; 176
    303e:	ff 4f       	sbci	r31, 0xFF	; 255
    3040:	60 81       	ld	r22, Z
    3042:	71 81       	ldd	r23, Z+1	; 0x01
    3044:	82 81       	ldd	r24, Z+2	; 0x02
    3046:	93 81       	ldd	r25, Z+3	; 0x03
    3048:	20 e0       	ldi	r18, 0x00	; 0
    304a:	3f ef       	ldi	r19, 0xFF	; 255
    304c:	4f e7       	ldi	r20, 0x7F	; 127
    304e:	57 e4       	ldi	r21, 0x47	; 71
    3050:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    3054:	18 16       	cp	r1, r24
    3056:	0c f0       	brlt	.+2      	; 0x305a <__stack+0x27fb>
    3058:	43 c0       	rjmp	.+134    	; 0x30e0 <__stack+0x2881>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    305a:	fe 01       	movw	r30, r28
    305c:	ec 5a       	subi	r30, 0xAC	; 172
    305e:	ff 4f       	sbci	r31, 0xFF	; 255
    3060:	60 81       	ld	r22, Z
    3062:	71 81       	ldd	r23, Z+1	; 0x01
    3064:	82 81       	ldd	r24, Z+2	; 0x02
    3066:	93 81       	ldd	r25, Z+3	; 0x03
    3068:	20 e0       	ldi	r18, 0x00	; 0
    306a:	30 e0       	ldi	r19, 0x00	; 0
    306c:	40 e2       	ldi	r20, 0x20	; 32
    306e:	51 e4       	ldi	r21, 0x41	; 65
    3070:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    3074:	dc 01       	movw	r26, r24
    3076:	cb 01       	movw	r24, r22
    3078:	8e 01       	movw	r16, r28
    307a:	02 5b       	subi	r16, 0xB2	; 178
    307c:	1f 4f       	sbci	r17, 0xFF	; 255
    307e:	bc 01       	movw	r22, r24
    3080:	cd 01       	movw	r24, r26
    3082:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    3086:	dc 01       	movw	r26, r24
    3088:	cb 01       	movw	r24, r22
    308a:	f8 01       	movw	r30, r16
    308c:	91 83       	std	Z+1, r25	; 0x01
    308e:	80 83       	st	Z, r24
    3090:	1f c0       	rjmp	.+62     	; 0x30d0 <__stack+0x2871>
    3092:	fe 01       	movw	r30, r28
    3094:	e4 5b       	subi	r30, 0xB4	; 180
    3096:	ff 4f       	sbci	r31, 0xFF	; 255
    3098:	80 e9       	ldi	r24, 0x90	; 144
    309a:	91 e0       	ldi	r25, 0x01	; 1
    309c:	91 83       	std	Z+1, r25	; 0x01
    309e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    30a0:	fe 01       	movw	r30, r28
    30a2:	e4 5b       	subi	r30, 0xB4	; 180
    30a4:	ff 4f       	sbci	r31, 0xFF	; 255
    30a6:	80 81       	ld	r24, Z
    30a8:	91 81       	ldd	r25, Z+1	; 0x01
    30aa:	01 97       	sbiw	r24, 0x01	; 1
    30ac:	f1 f7       	brne	.-4      	; 0x30aa <__stack+0x284b>
    30ae:	fe 01       	movw	r30, r28
    30b0:	e4 5b       	subi	r30, 0xB4	; 180
    30b2:	ff 4f       	sbci	r31, 0xFF	; 255
    30b4:	91 83       	std	Z+1, r25	; 0x01
    30b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30b8:	de 01       	movw	r26, r28
    30ba:	a2 5b       	subi	r26, 0xB2	; 178
    30bc:	bf 4f       	sbci	r27, 0xFF	; 255
    30be:	fe 01       	movw	r30, r28
    30c0:	e2 5b       	subi	r30, 0xB2	; 178
    30c2:	ff 4f       	sbci	r31, 0xFF	; 255
    30c4:	80 81       	ld	r24, Z
    30c6:	91 81       	ldd	r25, Z+1	; 0x01
    30c8:	01 97       	sbiw	r24, 0x01	; 1
    30ca:	11 96       	adiw	r26, 0x01	; 1
    30cc:	9c 93       	st	X, r25
    30ce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30d0:	fe 01       	movw	r30, r28
    30d2:	e2 5b       	subi	r30, 0xB2	; 178
    30d4:	ff 4f       	sbci	r31, 0xFF	; 255
    30d6:	80 81       	ld	r24, Z
    30d8:	91 81       	ldd	r25, Z+1	; 0x01
    30da:	00 97       	sbiw	r24, 0x00	; 0
    30dc:	d1 f6       	brne	.-76     	; 0x3092 <__stack+0x2833>
    30de:	4b c0       	rjmp	.+150    	; 0x3176 <__stack+0x2917>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30e0:	8e 01       	movw	r16, r28
    30e2:	02 5b       	subi	r16, 0xB2	; 178
    30e4:	1f 4f       	sbci	r17, 0xFF	; 255
    30e6:	fe 01       	movw	r30, r28
    30e8:	e0 5b       	subi	r30, 0xB0	; 176
    30ea:	ff 4f       	sbci	r31, 0xFF	; 255
    30ec:	60 81       	ld	r22, Z
    30ee:	71 81       	ldd	r23, Z+1	; 0x01
    30f0:	82 81       	ldd	r24, Z+2	; 0x02
    30f2:	93 81       	ldd	r25, Z+3	; 0x03
    30f4:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    30f8:	dc 01       	movw	r26, r24
    30fa:	cb 01       	movw	r24, r22
    30fc:	f8 01       	movw	r30, r16
    30fe:	91 83       	std	Z+1, r25	; 0x01
    3100:	80 83       	st	Z, r24
    3102:	de 01       	movw	r26, r28
    3104:	a6 5b       	subi	r26, 0xB6	; 182
    3106:	bf 4f       	sbci	r27, 0xFF	; 255
    3108:	fe 01       	movw	r30, r28
    310a:	e2 5b       	subi	r30, 0xB2	; 178
    310c:	ff 4f       	sbci	r31, 0xFF	; 255
    310e:	80 81       	ld	r24, Z
    3110:	91 81       	ldd	r25, Z+1	; 0x01
    3112:	11 96       	adiw	r26, 0x01	; 1
    3114:	9c 93       	st	X, r25
    3116:	8e 93       	st	-X, r24
    3118:	fe 01       	movw	r30, r28
    311a:	e6 5b       	subi	r30, 0xB6	; 182
    311c:	ff 4f       	sbci	r31, 0xFF	; 255
    311e:	80 81       	ld	r24, Z
    3120:	91 81       	ldd	r25, Z+1	; 0x01
    3122:	01 97       	sbiw	r24, 0x01	; 1
    3124:	f1 f7       	brne	.-4      	; 0x3122 <__stack+0x28c3>
    3126:	fe 01       	movw	r30, r28
    3128:	e6 5b       	subi	r30, 0xB6	; 182
    312a:	ff 4f       	sbci	r31, 0xFF	; 255
    312c:	91 83       	std	Z+1, r25	; 0x01
    312e:	80 83       	st	Z, r24
    3130:	22 c0       	rjmp	.+68     	; 0x3176 <__stack+0x2917>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3132:	8e 01       	movw	r16, r28
    3134:	08 5a       	subi	r16, 0xA8	; 168
    3136:	1f 4f       	sbci	r17, 0xFF	; 255
    3138:	fe 01       	movw	r30, r28
    313a:	e7 5a       	subi	r30, 0xA7	; 167
    313c:	ff 4f       	sbci	r31, 0xFF	; 255
    313e:	60 81       	ld	r22, Z
    3140:	71 81       	ldd	r23, Z+1	; 0x01
    3142:	82 81       	ldd	r24, Z+2	; 0x02
    3144:	93 81       	ldd	r25, Z+3	; 0x03
    3146:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    314a:	dc 01       	movw	r26, r24
    314c:	cb 01       	movw	r24, r22
    314e:	f8 01       	movw	r30, r16
    3150:	80 83       	st	Z, r24
    3152:	de 01       	movw	r26, r28
    3154:	a7 5b       	subi	r26, 0xB7	; 183
    3156:	bf 4f       	sbci	r27, 0xFF	; 255
    3158:	fe 01       	movw	r30, r28
    315a:	e8 5a       	subi	r30, 0xA8	; 168
    315c:	ff 4f       	sbci	r31, 0xFF	; 255
    315e:	80 81       	ld	r24, Z
    3160:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3162:	fe 01       	movw	r30, r28
    3164:	e7 5b       	subi	r30, 0xB7	; 183
    3166:	ff 4f       	sbci	r31, 0xFF	; 255
    3168:	80 81       	ld	r24, Z
    316a:	8a 95       	dec	r24
    316c:	f1 f7       	brne	.-4      	; 0x316a <__stack+0x290b>
    316e:	fe 01       	movw	r30, r28
    3170:	e7 5b       	subi	r30, 0xB7	; 183
    3172:	ff 4f       	sbci	r31, 0xFF	; 255
    3174:	80 83       	st	Z, r24
		_delay_us(5);
		if((PINB&(0x02))==0x00)
    3176:	e6 e3       	ldi	r30, 0x36	; 54
    3178:	f0 e0       	ldi	r31, 0x00	; 0
    317a:	80 81       	ld	r24, Z
    317c:	88 2f       	mov	r24, r24
    317e:	90 e0       	ldi	r25, 0x00	; 0
    3180:	82 70       	andi	r24, 0x02	; 2
    3182:	90 70       	andi	r25, 0x00	; 0
    3184:	00 97       	sbiw	r24, 0x00	; 0
    3186:	19 f4       	brne	.+6      	; 0x318e <__stack+0x292f>
			a=0;
    3188:	10 92 63 00 	sts	0x0063, r1
    318c:	03 c0       	rjmp	.+6      	; 0x3194 <__stack+0x2935>
		else
			a=1;
    318e:	81 e0       	ldi	r24, 0x01	; 1
    3190:	80 93 63 00 	sts	0x0063, r24
		data = data + pow(a,i);
    3194:	80 91 62 00 	lds	r24, 0x0062
    3198:	88 2f       	mov	r24, r24
    319a:	90 e0       	ldi	r25, 0x00	; 0
    319c:	aa 27       	eor	r26, r26
    319e:	97 fd       	sbrc	r25, 7
    31a0:	a0 95       	com	r26
    31a2:	ba 2f       	mov	r27, r26
    31a4:	bc 01       	movw	r22, r24
    31a6:	cd 01       	movw	r24, r26
    31a8:	0e 94 23 1d 	call	0x3a46	; 0x3a46 <__floatsisf>
    31ac:	5b 01       	movw	r10, r22
    31ae:	6c 01       	movw	r12, r24
    31b0:	80 91 63 00 	lds	r24, 0x0063
    31b4:	88 2f       	mov	r24, r24
    31b6:	90 e0       	ldi	r25, 0x00	; 0
    31b8:	a0 e0       	ldi	r26, 0x00	; 0
    31ba:	b0 e0       	ldi	r27, 0x00	; 0
    31bc:	bc 01       	movw	r22, r24
    31be:	cd 01       	movw	r24, r26
    31c0:	0e 94 21 1d 	call	0x3a42	; 0x3a42 <__floatunsisf>
    31c4:	7b 01       	movw	r14, r22
    31c6:	8c 01       	movw	r16, r24
    31c8:	80 91 60 00 	lds	r24, 0x0060
    31cc:	90 91 61 00 	lds	r25, 0x0061
    31d0:	aa 27       	eor	r26, r26
    31d2:	97 fd       	sbrc	r25, 7
    31d4:	a0 95       	com	r26
    31d6:	ba 2f       	mov	r27, r26
    31d8:	bc 01       	movw	r22, r24
    31da:	cd 01       	movw	r24, r26
    31dc:	0e 94 23 1d 	call	0x3a46	; 0x3a46 <__floatsisf>
    31e0:	9b 01       	movw	r18, r22
    31e2:	ac 01       	movw	r20, r24
    31e4:	c8 01       	movw	r24, r16
    31e6:	b7 01       	movw	r22, r14
    31e8:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <pow>
    31ec:	dc 01       	movw	r26, r24
    31ee:	cb 01       	movw	r24, r22
    31f0:	9c 01       	movw	r18, r24
    31f2:	ad 01       	movw	r20, r26
    31f4:	c6 01       	movw	r24, r12
    31f6:	b5 01       	movw	r22, r10
    31f8:	0e 94 25 1c 	call	0x384a	; 0x384a <__addsf3>
    31fc:	dc 01       	movw	r26, r24
    31fe:	cb 01       	movw	r24, r22
    3200:	bc 01       	movw	r22, r24
    3202:	cd 01       	movw	r24, r26
    3204:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    3208:	dc 01       	movw	r26, r24
    320a:	cb 01       	movw	r24, r22
    320c:	80 93 62 00 	sts	0x0062, r24
		
		PORTC |= 0x01;		//clock high
    3210:	a5 e3       	ldi	r26, 0x35	; 53
    3212:	b0 e0       	ldi	r27, 0x00	; 0
    3214:	e5 e3       	ldi	r30, 0x35	; 53
    3216:	f0 e0       	ldi	r31, 0x00	; 0
    3218:	80 81       	ld	r24, Z
    321a:	81 60       	ori	r24, 0x01	; 1
    321c:	8c 93       	st	X, r24
    321e:	fe 01       	movw	r30, r28
    3220:	eb 5b       	subi	r30, 0xBB	; 187
    3222:	ff 4f       	sbci	r31, 0xFF	; 255
    3224:	80 e0       	ldi	r24, 0x00	; 0
    3226:	90 e0       	ldi	r25, 0x00	; 0
    3228:	a0 ea       	ldi	r26, 0xA0	; 160
    322a:	b0 e4       	ldi	r27, 0x40	; 64
    322c:	80 83       	st	Z, r24
    322e:	91 83       	std	Z+1, r25	; 0x01
    3230:	a2 83       	std	Z+2, r26	; 0x02
    3232:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3234:	8e 01       	movw	r16, r28
    3236:	0f 5b       	subi	r16, 0xBF	; 191
    3238:	1f 4f       	sbci	r17, 0xFF	; 255
    323a:	fe 01       	movw	r30, r28
    323c:	eb 5b       	subi	r30, 0xBB	; 187
    323e:	ff 4f       	sbci	r31, 0xFF	; 255
    3240:	60 81       	ld	r22, Z
    3242:	71 81       	ldd	r23, Z+1	; 0x01
    3244:	82 81       	ldd	r24, Z+2	; 0x02
    3246:	93 81       	ldd	r25, Z+3	; 0x03
    3248:	2b ea       	ldi	r18, 0xAB	; 171
    324a:	3a ea       	ldi	r19, 0xAA	; 170
    324c:	4a ea       	ldi	r20, 0xAA	; 170
    324e:	50 e4       	ldi	r21, 0x40	; 64
    3250:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    3254:	dc 01       	movw	r26, r24
    3256:	cb 01       	movw	r24, r22
    3258:	f8 01       	movw	r30, r16
    325a:	80 83       	st	Z, r24
    325c:	91 83       	std	Z+1, r25	; 0x01
    325e:	a2 83       	std	Z+2, r26	; 0x02
    3260:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3262:	fe 01       	movw	r30, r28
    3264:	ef 5b       	subi	r30, 0xBF	; 191
    3266:	ff 4f       	sbci	r31, 0xFF	; 255
    3268:	60 81       	ld	r22, Z
    326a:	71 81       	ldd	r23, Z+1	; 0x01
    326c:	82 81       	ldd	r24, Z+2	; 0x02
    326e:	93 81       	ldd	r25, Z+3	; 0x03
    3270:	20 e0       	ldi	r18, 0x00	; 0
    3272:	30 e0       	ldi	r19, 0x00	; 0
    3274:	40 e8       	ldi	r20, 0x80	; 128
    3276:	5f e3       	ldi	r21, 0x3F	; 63
    3278:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    327c:	88 23       	and	r24, r24
    327e:	34 f4       	brge	.+12     	; 0x328c <__stack+0x2a2d>
		__ticks = 1;
    3280:	81 e0       	ldi	r24, 0x01	; 1
    3282:	fe 01       	movw	r30, r28
    3284:	e0 5c       	subi	r30, 0xC0	; 192
    3286:	ff 4f       	sbci	r31, 0xFF	; 255
    3288:	80 83       	st	Z, r24
    328a:	9d c0       	rjmp	.+314    	; 0x33c6 <__stack+0x2b67>
	else if (__tmp > 255)
    328c:	fe 01       	movw	r30, r28
    328e:	ef 5b       	subi	r30, 0xBF	; 191
    3290:	ff 4f       	sbci	r31, 0xFF	; 255
    3292:	60 81       	ld	r22, Z
    3294:	71 81       	ldd	r23, Z+1	; 0x01
    3296:	82 81       	ldd	r24, Z+2	; 0x02
    3298:	93 81       	ldd	r25, Z+3	; 0x03
    329a:	20 e0       	ldi	r18, 0x00	; 0
    329c:	30 e0       	ldi	r19, 0x00	; 0
    329e:	4f e7       	ldi	r20, 0x7F	; 127
    32a0:	53 e4       	ldi	r21, 0x43	; 67
    32a2:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    32a6:	18 16       	cp	r1, r24
    32a8:	0c f0       	brlt	.+2      	; 0x32ac <__stack+0x2a4d>
    32aa:	7e c0       	rjmp	.+252    	; 0x33a8 <__stack+0x2b49>
	{
		_delay_ms(__us / 1000.0);
    32ac:	fe 01       	movw	r30, r28
    32ae:	eb 5b       	subi	r30, 0xBB	; 187
    32b0:	ff 4f       	sbci	r31, 0xFF	; 255
    32b2:	60 81       	ld	r22, Z
    32b4:	71 81       	ldd	r23, Z+1	; 0x01
    32b6:	82 81       	ldd	r24, Z+2	; 0x02
    32b8:	93 81       	ldd	r25, Z+3	; 0x03
    32ba:	20 e0       	ldi	r18, 0x00	; 0
    32bc:	30 e0       	ldi	r19, 0x00	; 0
    32be:	4a e7       	ldi	r20, 0x7A	; 122
    32c0:	54 e4       	ldi	r21, 0x44	; 68
    32c2:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    32c6:	dc 01       	movw	r26, r24
    32c8:	cb 01       	movw	r24, r22
    32ca:	8c af       	std	Y+60, r24	; 0x3c
    32cc:	9d af       	std	Y+61, r25	; 0x3d
    32ce:	ae af       	std	Y+62, r26	; 0x3e
    32d0:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32d2:	6c ad       	ldd	r22, Y+60	; 0x3c
    32d4:	7d ad       	ldd	r23, Y+61	; 0x3d
    32d6:	8e ad       	ldd	r24, Y+62	; 0x3e
    32d8:	9f ad       	ldd	r25, Y+63	; 0x3f
    32da:	20 e0       	ldi	r18, 0x00	; 0
    32dc:	30 e0       	ldi	r19, 0x00	; 0
    32de:	4a e7       	ldi	r20, 0x7A	; 122
    32e0:	55 e4       	ldi	r21, 0x45	; 69
    32e2:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    32e6:	dc 01       	movw	r26, r24
    32e8:	cb 01       	movw	r24, r22
    32ea:	88 af       	std	Y+56, r24	; 0x38
    32ec:	99 af       	std	Y+57, r25	; 0x39
    32ee:	aa af       	std	Y+58, r26	; 0x3a
    32f0:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    32f2:	68 ad       	ldd	r22, Y+56	; 0x38
    32f4:	79 ad       	ldd	r23, Y+57	; 0x39
    32f6:	8a ad       	ldd	r24, Y+58	; 0x3a
    32f8:	9b ad       	ldd	r25, Y+59	; 0x3b
    32fa:	20 e0       	ldi	r18, 0x00	; 0
    32fc:	30 e0       	ldi	r19, 0x00	; 0
    32fe:	40 e8       	ldi	r20, 0x80	; 128
    3300:	5f e3       	ldi	r21, 0x3F	; 63
    3302:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    3306:	88 23       	and	r24, r24
    3308:	2c f4       	brge	.+10     	; 0x3314 <__stack+0x2ab5>
		__ticks = 1;
    330a:	81 e0       	ldi	r24, 0x01	; 1
    330c:	90 e0       	ldi	r25, 0x00	; 0
    330e:	9f ab       	std	Y+55, r25	; 0x37
    3310:	8e ab       	std	Y+54, r24	; 0x36
    3312:	3f c0       	rjmp	.+126    	; 0x3392 <__stack+0x2b33>
	else if (__tmp > 65535)
    3314:	68 ad       	ldd	r22, Y+56	; 0x38
    3316:	79 ad       	ldd	r23, Y+57	; 0x39
    3318:	8a ad       	ldd	r24, Y+58	; 0x3a
    331a:	9b ad       	ldd	r25, Y+59	; 0x3b
    331c:	20 e0       	ldi	r18, 0x00	; 0
    331e:	3f ef       	ldi	r19, 0xFF	; 255
    3320:	4f e7       	ldi	r20, 0x7F	; 127
    3322:	57 e4       	ldi	r21, 0x47	; 71
    3324:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    3328:	18 16       	cp	r1, r24
    332a:	4c f5       	brge	.+82     	; 0x337e <__stack+0x2b1f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    332c:	6c ad       	ldd	r22, Y+60	; 0x3c
    332e:	7d ad       	ldd	r23, Y+61	; 0x3d
    3330:	8e ad       	ldd	r24, Y+62	; 0x3e
    3332:	9f ad       	ldd	r25, Y+63	; 0x3f
    3334:	20 e0       	ldi	r18, 0x00	; 0
    3336:	30 e0       	ldi	r19, 0x00	; 0
    3338:	40 e2       	ldi	r20, 0x20	; 32
    333a:	51 e4       	ldi	r21, 0x41	; 65
    333c:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    3340:	dc 01       	movw	r26, r24
    3342:	cb 01       	movw	r24, r22
    3344:	bc 01       	movw	r22, r24
    3346:	cd 01       	movw	r24, r26
    3348:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    334c:	dc 01       	movw	r26, r24
    334e:	cb 01       	movw	r24, r22
    3350:	9f ab       	std	Y+55, r25	; 0x37
    3352:	8e ab       	std	Y+54, r24	; 0x36
    3354:	0f c0       	rjmp	.+30     	; 0x3374 <__stack+0x2b15>
    3356:	80 e9       	ldi	r24, 0x90	; 144
    3358:	91 e0       	ldi	r25, 0x01	; 1
    335a:	9d ab       	std	Y+53, r25	; 0x35
    335c:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    335e:	8c a9       	ldd	r24, Y+52	; 0x34
    3360:	9d a9       	ldd	r25, Y+53	; 0x35
    3362:	01 97       	sbiw	r24, 0x01	; 1
    3364:	f1 f7       	brne	.-4      	; 0x3362 <__stack+0x2b03>
    3366:	9d ab       	std	Y+53, r25	; 0x35
    3368:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    336a:	8e a9       	ldd	r24, Y+54	; 0x36
    336c:	9f a9       	ldd	r25, Y+55	; 0x37
    336e:	01 97       	sbiw	r24, 0x01	; 1
    3370:	9f ab       	std	Y+55, r25	; 0x37
    3372:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3374:	8e a9       	ldd	r24, Y+54	; 0x36
    3376:	9f a9       	ldd	r25, Y+55	; 0x37
    3378:	00 97       	sbiw	r24, 0x00	; 0
    337a:	69 f7       	brne	.-38     	; 0x3356 <__stack+0x2af7>
    337c:	2d c0       	rjmp	.+90     	; 0x33d8 <__stack+0x2b79>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    337e:	68 ad       	ldd	r22, Y+56	; 0x38
    3380:	79 ad       	ldd	r23, Y+57	; 0x39
    3382:	8a ad       	ldd	r24, Y+58	; 0x3a
    3384:	9b ad       	ldd	r25, Y+59	; 0x3b
    3386:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    338a:	dc 01       	movw	r26, r24
    338c:	cb 01       	movw	r24, r22
    338e:	9f ab       	std	Y+55, r25	; 0x37
    3390:	8e ab       	std	Y+54, r24	; 0x36
    3392:	8e a9       	ldd	r24, Y+54	; 0x36
    3394:	9f a9       	ldd	r25, Y+55	; 0x37
    3396:	9b ab       	std	Y+51, r25	; 0x33
    3398:	8a ab       	std	Y+50, r24	; 0x32
    339a:	8a a9       	ldd	r24, Y+50	; 0x32
    339c:	9b a9       	ldd	r25, Y+51	; 0x33
    339e:	01 97       	sbiw	r24, 0x01	; 1
    33a0:	f1 f7       	brne	.-4      	; 0x339e <__stack+0x2b3f>
    33a2:	9b ab       	std	Y+51, r25	; 0x33
    33a4:	8a ab       	std	Y+50, r24	; 0x32
    33a6:	18 c0       	rjmp	.+48     	; 0x33d8 <__stack+0x2b79>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    33a8:	fe 01       	movw	r30, r28
    33aa:	ef 5b       	subi	r30, 0xBF	; 191
    33ac:	ff 4f       	sbci	r31, 0xFF	; 255
    33ae:	60 81       	ld	r22, Z
    33b0:	71 81       	ldd	r23, Z+1	; 0x01
    33b2:	82 81       	ldd	r24, Z+2	; 0x02
    33b4:	93 81       	ldd	r25, Z+3	; 0x03
    33b6:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    33ba:	dc 01       	movw	r26, r24
    33bc:	cb 01       	movw	r24, r22
    33be:	fe 01       	movw	r30, r28
    33c0:	e0 5c       	subi	r30, 0xC0	; 192
    33c2:	ff 4f       	sbci	r31, 0xFF	; 255
    33c4:	80 83       	st	Z, r24
    33c6:	fe 01       	movw	r30, r28
    33c8:	e0 5c       	subi	r30, 0xC0	; 192
    33ca:	ff 4f       	sbci	r31, 0xFF	; 255
    33cc:	80 81       	ld	r24, Z
    33ce:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    33d0:	89 a9       	ldd	r24, Y+49	; 0x31
    33d2:	8a 95       	dec	r24
    33d4:	f1 f7       	brne	.-4      	; 0x33d2 <__stack+0x2b73>
    33d6:	89 ab       	std	Y+49, r24	; 0x31
	}
	
	//	PORTC &= 0xEF;		//att high
	
	//BYTE4
	for(i = 7;i<=0;i--)
    33d8:	80 91 60 00 	lds	r24, 0x0060
    33dc:	90 91 61 00 	lds	r25, 0x0061
    33e0:	01 97       	sbiw	r24, 0x01	; 1
    33e2:	90 93 61 00 	sts	0x0061, r25
    33e6:	80 93 60 00 	sts	0x0060, r24
    33ea:	80 91 60 00 	lds	r24, 0x0060
    33ee:	90 91 61 00 	lds	r25, 0x0061
    33f2:	18 16       	cp	r1, r24
    33f4:	19 06       	cpc	r1, r25
    33f6:	0c f0       	brlt	.+2      	; 0x33fa <__stack+0x2b9b>
    33f8:	8e cd       	rjmp	.-1252   	; 0x2f16 <__stack+0x26b7>
		data = data + pow(a,i);
		
		PORTC |= 0x01;		//clock high
		_delay_us(5);
	}
	PORTA = data;
    33fa:	eb e3       	ldi	r30, 0x3B	; 59
    33fc:	f0 e0       	ldi	r31, 0x00	; 0
    33fe:	80 91 62 00 	lds	r24, 0x0062
    3402:	80 83       	st	Z, r24
	
	
	//BYTE5
	for(i = 7;i<=0;i--)
    3404:	87 e0       	ldi	r24, 0x07	; 7
    3406:	90 e0       	ldi	r25, 0x00	; 0
    3408:	90 93 61 00 	sts	0x0061, r25
    340c:	80 93 60 00 	sts	0x0060, r24
    3410:	de c1       	rjmp	.+956    	; 0x37ce <__stack+0x2f6f>
	{
		
		PORTC &= 0xFE;		//clock low
    3412:	a5 e3       	ldi	r26, 0x35	; 53
    3414:	b0 e0       	ldi	r27, 0x00	; 0
    3416:	e5 e3       	ldi	r30, 0x35	; 53
    3418:	f0 e0       	ldi	r31, 0x00	; 0
    341a:	80 81       	ld	r24, Z
    341c:	8e 7f       	andi	r24, 0xFE	; 254
    341e:	8c 93       	st	X, r24
    3420:	80 e0       	ldi	r24, 0x00	; 0
    3422:	90 e0       	ldi	r25, 0x00	; 0
    3424:	a0 ea       	ldi	r26, 0xA0	; 160
    3426:	b0 e4       	ldi	r27, 0x40	; 64
    3428:	8d a7       	std	Y+45, r24	; 0x2d
    342a:	9e a7       	std	Y+46, r25	; 0x2e
    342c:	af a7       	std	Y+47, r26	; 0x2f
    342e:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3430:	6d a5       	ldd	r22, Y+45	; 0x2d
    3432:	7e a5       	ldd	r23, Y+46	; 0x2e
    3434:	8f a5       	ldd	r24, Y+47	; 0x2f
    3436:	98 a9       	ldd	r25, Y+48	; 0x30
    3438:	2b ea       	ldi	r18, 0xAB	; 171
    343a:	3a ea       	ldi	r19, 0xAA	; 170
    343c:	4a ea       	ldi	r20, 0xAA	; 170
    343e:	50 e4       	ldi	r21, 0x40	; 64
    3440:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    3444:	dc 01       	movw	r26, r24
    3446:	cb 01       	movw	r24, r22
    3448:	89 a7       	std	Y+41, r24	; 0x29
    344a:	9a a7       	std	Y+42, r25	; 0x2a
    344c:	ab a7       	std	Y+43, r26	; 0x2b
    344e:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    3450:	69 a5       	ldd	r22, Y+41	; 0x29
    3452:	7a a5       	ldd	r23, Y+42	; 0x2a
    3454:	8b a5       	ldd	r24, Y+43	; 0x2b
    3456:	9c a5       	ldd	r25, Y+44	; 0x2c
    3458:	20 e0       	ldi	r18, 0x00	; 0
    345a:	30 e0       	ldi	r19, 0x00	; 0
    345c:	40 e8       	ldi	r20, 0x80	; 128
    345e:	5f e3       	ldi	r21, 0x3F	; 63
    3460:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    3464:	88 23       	and	r24, r24
    3466:	1c f4       	brge	.+6      	; 0x346e <__stack+0x2c0f>
		__ticks = 1;
    3468:	81 e0       	ldi	r24, 0x01	; 1
    346a:	88 a7       	std	Y+40, r24	; 0x28
    346c:	91 c0       	rjmp	.+290    	; 0x3590 <__stack+0x2d31>
	else if (__tmp > 255)
    346e:	69 a5       	ldd	r22, Y+41	; 0x29
    3470:	7a a5       	ldd	r23, Y+42	; 0x2a
    3472:	8b a5       	ldd	r24, Y+43	; 0x2b
    3474:	9c a5       	ldd	r25, Y+44	; 0x2c
    3476:	20 e0       	ldi	r18, 0x00	; 0
    3478:	30 e0       	ldi	r19, 0x00	; 0
    347a:	4f e7       	ldi	r20, 0x7F	; 127
    347c:	53 e4       	ldi	r21, 0x43	; 67
    347e:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    3482:	18 16       	cp	r1, r24
    3484:	0c f0       	brlt	.+2      	; 0x3488 <__stack+0x2c29>
    3486:	7b c0       	rjmp	.+246    	; 0x357e <__stack+0x2d1f>
	{
		_delay_ms(__us / 1000.0);
    3488:	6d a5       	ldd	r22, Y+45	; 0x2d
    348a:	7e a5       	ldd	r23, Y+46	; 0x2e
    348c:	8f a5       	ldd	r24, Y+47	; 0x2f
    348e:	98 a9       	ldd	r25, Y+48	; 0x30
    3490:	20 e0       	ldi	r18, 0x00	; 0
    3492:	30 e0       	ldi	r19, 0x00	; 0
    3494:	4a e7       	ldi	r20, 0x7A	; 122
    3496:	54 e4       	ldi	r21, 0x44	; 68
    3498:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    349c:	dc 01       	movw	r26, r24
    349e:	cb 01       	movw	r24, r22
    34a0:	8c a3       	std	Y+36, r24	; 0x24
    34a2:	9d a3       	std	Y+37, r25	; 0x25
    34a4:	ae a3       	std	Y+38, r26	; 0x26
    34a6:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34a8:	6c a1       	ldd	r22, Y+36	; 0x24
    34aa:	7d a1       	ldd	r23, Y+37	; 0x25
    34ac:	8e a1       	ldd	r24, Y+38	; 0x26
    34ae:	9f a1       	ldd	r25, Y+39	; 0x27
    34b0:	20 e0       	ldi	r18, 0x00	; 0
    34b2:	30 e0       	ldi	r19, 0x00	; 0
    34b4:	4a e7       	ldi	r20, 0x7A	; 122
    34b6:	55 e4       	ldi	r21, 0x45	; 69
    34b8:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    34bc:	dc 01       	movw	r26, r24
    34be:	cb 01       	movw	r24, r22
    34c0:	88 a3       	std	Y+32, r24	; 0x20
    34c2:	99 a3       	std	Y+33, r25	; 0x21
    34c4:	aa a3       	std	Y+34, r26	; 0x22
    34c6:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    34c8:	68 a1       	ldd	r22, Y+32	; 0x20
    34ca:	79 a1       	ldd	r23, Y+33	; 0x21
    34cc:	8a a1       	ldd	r24, Y+34	; 0x22
    34ce:	9b a1       	ldd	r25, Y+35	; 0x23
    34d0:	20 e0       	ldi	r18, 0x00	; 0
    34d2:	30 e0       	ldi	r19, 0x00	; 0
    34d4:	40 e8       	ldi	r20, 0x80	; 128
    34d6:	5f e3       	ldi	r21, 0x3F	; 63
    34d8:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    34dc:	88 23       	and	r24, r24
    34de:	2c f4       	brge	.+10     	; 0x34ea <__stack+0x2c8b>
		__ticks = 1;
    34e0:	81 e0       	ldi	r24, 0x01	; 1
    34e2:	90 e0       	ldi	r25, 0x00	; 0
    34e4:	9f 8f       	std	Y+31, r25	; 0x1f
    34e6:	8e 8f       	std	Y+30, r24	; 0x1e
    34e8:	3f c0       	rjmp	.+126    	; 0x3568 <__stack+0x2d09>
	else if (__tmp > 65535)
    34ea:	68 a1       	ldd	r22, Y+32	; 0x20
    34ec:	79 a1       	ldd	r23, Y+33	; 0x21
    34ee:	8a a1       	ldd	r24, Y+34	; 0x22
    34f0:	9b a1       	ldd	r25, Y+35	; 0x23
    34f2:	20 e0       	ldi	r18, 0x00	; 0
    34f4:	3f ef       	ldi	r19, 0xFF	; 255
    34f6:	4f e7       	ldi	r20, 0x7F	; 127
    34f8:	57 e4       	ldi	r21, 0x47	; 71
    34fa:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    34fe:	18 16       	cp	r1, r24
    3500:	4c f5       	brge	.+82     	; 0x3554 <__stack+0x2cf5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3502:	6c a1       	ldd	r22, Y+36	; 0x24
    3504:	7d a1       	ldd	r23, Y+37	; 0x25
    3506:	8e a1       	ldd	r24, Y+38	; 0x26
    3508:	9f a1       	ldd	r25, Y+39	; 0x27
    350a:	20 e0       	ldi	r18, 0x00	; 0
    350c:	30 e0       	ldi	r19, 0x00	; 0
    350e:	40 e2       	ldi	r20, 0x20	; 32
    3510:	51 e4       	ldi	r21, 0x41	; 65
    3512:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    3516:	dc 01       	movw	r26, r24
    3518:	cb 01       	movw	r24, r22
    351a:	bc 01       	movw	r22, r24
    351c:	cd 01       	movw	r24, r26
    351e:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    3522:	dc 01       	movw	r26, r24
    3524:	cb 01       	movw	r24, r22
    3526:	9f 8f       	std	Y+31, r25	; 0x1f
    3528:	8e 8f       	std	Y+30, r24	; 0x1e
    352a:	0f c0       	rjmp	.+30     	; 0x354a <__stack+0x2ceb>
    352c:	80 e9       	ldi	r24, 0x90	; 144
    352e:	91 e0       	ldi	r25, 0x01	; 1
    3530:	9d 8f       	std	Y+29, r25	; 0x1d
    3532:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3534:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3536:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3538:	01 97       	sbiw	r24, 0x01	; 1
    353a:	f1 f7       	brne	.-4      	; 0x3538 <__stack+0x2cd9>
    353c:	9d 8f       	std	Y+29, r25	; 0x1d
    353e:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3540:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3542:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3544:	01 97       	sbiw	r24, 0x01	; 1
    3546:	9f 8f       	std	Y+31, r25	; 0x1f
    3548:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    354a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    354c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    354e:	00 97       	sbiw	r24, 0x00	; 0
    3550:	69 f7       	brne	.-38     	; 0x352c <__stack+0x2ccd>
    3552:	24 c0       	rjmp	.+72     	; 0x359c <__stack+0x2d3d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3554:	68 a1       	ldd	r22, Y+32	; 0x20
    3556:	79 a1       	ldd	r23, Y+33	; 0x21
    3558:	8a a1       	ldd	r24, Y+34	; 0x22
    355a:	9b a1       	ldd	r25, Y+35	; 0x23
    355c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    3560:	dc 01       	movw	r26, r24
    3562:	cb 01       	movw	r24, r22
    3564:	9f 8f       	std	Y+31, r25	; 0x1f
    3566:	8e 8f       	std	Y+30, r24	; 0x1e
    3568:	8e 8d       	ldd	r24, Y+30	; 0x1e
    356a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    356c:	9b 8f       	std	Y+27, r25	; 0x1b
    356e:	8a 8f       	std	Y+26, r24	; 0x1a
    3570:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3572:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3574:	01 97       	sbiw	r24, 0x01	; 1
    3576:	f1 f7       	brne	.-4      	; 0x3574 <__stack+0x2d15>
    3578:	9b 8f       	std	Y+27, r25	; 0x1b
    357a:	8a 8f       	std	Y+26, r24	; 0x1a
    357c:	0f c0       	rjmp	.+30     	; 0x359c <__stack+0x2d3d>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    357e:	69 a5       	ldd	r22, Y+41	; 0x29
    3580:	7a a5       	ldd	r23, Y+42	; 0x2a
    3582:	8b a5       	ldd	r24, Y+43	; 0x2b
    3584:	9c a5       	ldd	r25, Y+44	; 0x2c
    3586:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    358a:	dc 01       	movw	r26, r24
    358c:	cb 01       	movw	r24, r22
    358e:	88 a7       	std	Y+40, r24	; 0x28
    3590:	88 a5       	ldd	r24, Y+40	; 0x28
    3592:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3594:	89 8d       	ldd	r24, Y+25	; 0x19
    3596:	8a 95       	dec	r24
    3598:	f1 f7       	brne	.-4      	; 0x3596 <__stack+0x2d37>
    359a:	89 8f       	std	Y+25, r24	; 0x19
		_delay_us(5);
		if((PINB&(0x02))==0x00)
    359c:	e6 e3       	ldi	r30, 0x36	; 54
    359e:	f0 e0       	ldi	r31, 0x00	; 0
    35a0:	80 81       	ld	r24, Z
    35a2:	88 2f       	mov	r24, r24
    35a4:	90 e0       	ldi	r25, 0x00	; 0
    35a6:	82 70       	andi	r24, 0x02	; 2
    35a8:	90 70       	andi	r25, 0x00	; 0
    35aa:	00 97       	sbiw	r24, 0x00	; 0
    35ac:	19 f4       	brne	.+6      	; 0x35b4 <__stack+0x2d55>
			a=0;
    35ae:	10 92 63 00 	sts	0x0063, r1
    35b2:	03 c0       	rjmp	.+6      	; 0x35ba <__stack+0x2d5b>
		else
			a=1;
    35b4:	81 e0       	ldi	r24, 0x01	; 1
    35b6:	80 93 63 00 	sts	0x0063, r24
		data = data + pow(a,i);
    35ba:	80 91 62 00 	lds	r24, 0x0062
    35be:	88 2f       	mov	r24, r24
    35c0:	90 e0       	ldi	r25, 0x00	; 0
    35c2:	aa 27       	eor	r26, r26
    35c4:	97 fd       	sbrc	r25, 7
    35c6:	a0 95       	com	r26
    35c8:	ba 2f       	mov	r27, r26
    35ca:	bc 01       	movw	r22, r24
    35cc:	cd 01       	movw	r24, r26
    35ce:	0e 94 23 1d 	call	0x3a46	; 0x3a46 <__floatsisf>
    35d2:	5b 01       	movw	r10, r22
    35d4:	6c 01       	movw	r12, r24
    35d6:	80 91 63 00 	lds	r24, 0x0063
    35da:	88 2f       	mov	r24, r24
    35dc:	90 e0       	ldi	r25, 0x00	; 0
    35de:	a0 e0       	ldi	r26, 0x00	; 0
    35e0:	b0 e0       	ldi	r27, 0x00	; 0
    35e2:	bc 01       	movw	r22, r24
    35e4:	cd 01       	movw	r24, r26
    35e6:	0e 94 21 1d 	call	0x3a42	; 0x3a42 <__floatunsisf>
    35ea:	7b 01       	movw	r14, r22
    35ec:	8c 01       	movw	r16, r24
    35ee:	80 91 60 00 	lds	r24, 0x0060
    35f2:	90 91 61 00 	lds	r25, 0x0061
    35f6:	aa 27       	eor	r26, r26
    35f8:	97 fd       	sbrc	r25, 7
    35fa:	a0 95       	com	r26
    35fc:	ba 2f       	mov	r27, r26
    35fe:	bc 01       	movw	r22, r24
    3600:	cd 01       	movw	r24, r26
    3602:	0e 94 23 1d 	call	0x3a46	; 0x3a46 <__floatsisf>
    3606:	9b 01       	movw	r18, r22
    3608:	ac 01       	movw	r20, r24
    360a:	c8 01       	movw	r24, r16
    360c:	b7 01       	movw	r22, r14
    360e:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <pow>
    3612:	9b 01       	movw	r18, r22
    3614:	ac 01       	movw	r20, r24
    3616:	c6 01       	movw	r24, r12
    3618:	b5 01       	movw	r22, r10
    361a:	0e 94 25 1c 	call	0x384a	; 0x384a <__addsf3>
    361e:	dc 01       	movw	r26, r24
    3620:	cb 01       	movw	r24, r22
    3622:	bc 01       	movw	r22, r24
    3624:	cd 01       	movw	r24, r26
    3626:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    362a:	dc 01       	movw	r26, r24
    362c:	cb 01       	movw	r24, r22
    362e:	80 93 62 00 	sts	0x0062, r24
		
		PORTC |= 0x01;		//clock high
    3632:	a5 e3       	ldi	r26, 0x35	; 53
    3634:	b0 e0       	ldi	r27, 0x00	; 0
    3636:	e5 e3       	ldi	r30, 0x35	; 53
    3638:	f0 e0       	ldi	r31, 0x00	; 0
    363a:	80 81       	ld	r24, Z
    363c:	81 60       	ori	r24, 0x01	; 1
    363e:	8c 93       	st	X, r24
    3640:	80 e0       	ldi	r24, 0x00	; 0
    3642:	90 e0       	ldi	r25, 0x00	; 0
    3644:	a0 ea       	ldi	r26, 0xA0	; 160
    3646:	b0 e4       	ldi	r27, 0x40	; 64
    3648:	8d 8b       	std	Y+21, r24	; 0x15
    364a:	9e 8b       	std	Y+22, r25	; 0x16
    364c:	af 8b       	std	Y+23, r26	; 0x17
    364e:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3650:	6d 89       	ldd	r22, Y+21	; 0x15
    3652:	7e 89       	ldd	r23, Y+22	; 0x16
    3654:	8f 89       	ldd	r24, Y+23	; 0x17
    3656:	98 8d       	ldd	r25, Y+24	; 0x18
    3658:	2b ea       	ldi	r18, 0xAB	; 171
    365a:	3a ea       	ldi	r19, 0xAA	; 170
    365c:	4a ea       	ldi	r20, 0xAA	; 170
    365e:	50 e4       	ldi	r21, 0x40	; 64
    3660:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    3664:	dc 01       	movw	r26, r24
    3666:	cb 01       	movw	r24, r22
    3668:	89 8b       	std	Y+17, r24	; 0x11
    366a:	9a 8b       	std	Y+18, r25	; 0x12
    366c:	ab 8b       	std	Y+19, r26	; 0x13
    366e:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    3670:	69 89       	ldd	r22, Y+17	; 0x11
    3672:	7a 89       	ldd	r23, Y+18	; 0x12
    3674:	8b 89       	ldd	r24, Y+19	; 0x13
    3676:	9c 89       	ldd	r25, Y+20	; 0x14
    3678:	20 e0       	ldi	r18, 0x00	; 0
    367a:	30 e0       	ldi	r19, 0x00	; 0
    367c:	40 e8       	ldi	r20, 0x80	; 128
    367e:	5f e3       	ldi	r21, 0x3F	; 63
    3680:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    3684:	88 23       	and	r24, r24
    3686:	1c f4       	brge	.+6      	; 0x368e <__stack+0x2e2f>
		__ticks = 1;
    3688:	81 e0       	ldi	r24, 0x01	; 1
    368a:	88 8b       	std	Y+16, r24	; 0x10
    368c:	91 c0       	rjmp	.+290    	; 0x37b0 <__stack+0x2f51>
	else if (__tmp > 255)
    368e:	69 89       	ldd	r22, Y+17	; 0x11
    3690:	7a 89       	ldd	r23, Y+18	; 0x12
    3692:	8b 89       	ldd	r24, Y+19	; 0x13
    3694:	9c 89       	ldd	r25, Y+20	; 0x14
    3696:	20 e0       	ldi	r18, 0x00	; 0
    3698:	30 e0       	ldi	r19, 0x00	; 0
    369a:	4f e7       	ldi	r20, 0x7F	; 127
    369c:	53 e4       	ldi	r21, 0x43	; 67
    369e:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    36a2:	18 16       	cp	r1, r24
    36a4:	0c f0       	brlt	.+2      	; 0x36a8 <__stack+0x2e49>
    36a6:	7b c0       	rjmp	.+246    	; 0x379e <__stack+0x2f3f>
	{
		_delay_ms(__us / 1000.0);
    36a8:	6d 89       	ldd	r22, Y+21	; 0x15
    36aa:	7e 89       	ldd	r23, Y+22	; 0x16
    36ac:	8f 89       	ldd	r24, Y+23	; 0x17
    36ae:	98 8d       	ldd	r25, Y+24	; 0x18
    36b0:	20 e0       	ldi	r18, 0x00	; 0
    36b2:	30 e0       	ldi	r19, 0x00	; 0
    36b4:	4a e7       	ldi	r20, 0x7A	; 122
    36b6:	54 e4       	ldi	r21, 0x44	; 68
    36b8:	0e 94 8d 1c 	call	0x391a	; 0x391a <__divsf3>
    36bc:	dc 01       	movw	r26, r24
    36be:	cb 01       	movw	r24, r22
    36c0:	8c 87       	std	Y+12, r24	; 0x0c
    36c2:	9d 87       	std	Y+13, r25	; 0x0d
    36c4:	ae 87       	std	Y+14, r26	; 0x0e
    36c6:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36c8:	6c 85       	ldd	r22, Y+12	; 0x0c
    36ca:	7d 85       	ldd	r23, Y+13	; 0x0d
    36cc:	8e 85       	ldd	r24, Y+14	; 0x0e
    36ce:	9f 85       	ldd	r25, Y+15	; 0x0f
    36d0:	20 e0       	ldi	r18, 0x00	; 0
    36d2:	30 e0       	ldi	r19, 0x00	; 0
    36d4:	4a e7       	ldi	r20, 0x7A	; 122
    36d6:	55 e4       	ldi	r21, 0x45	; 69
    36d8:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    36dc:	dc 01       	movw	r26, r24
    36de:	cb 01       	movw	r24, r22
    36e0:	88 87       	std	Y+8, r24	; 0x08
    36e2:	99 87       	std	Y+9, r25	; 0x09
    36e4:	aa 87       	std	Y+10, r26	; 0x0a
    36e6:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    36e8:	68 85       	ldd	r22, Y+8	; 0x08
    36ea:	79 85       	ldd	r23, Y+9	; 0x09
    36ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    36ee:	9b 85       	ldd	r25, Y+11	; 0x0b
    36f0:	20 e0       	ldi	r18, 0x00	; 0
    36f2:	30 e0       	ldi	r19, 0x00	; 0
    36f4:	40 e8       	ldi	r20, 0x80	; 128
    36f6:	5f e3       	ldi	r21, 0x3F	; 63
    36f8:	0e 94 89 1c 	call	0x3912	; 0x3912 <__cmpsf2>
    36fc:	88 23       	and	r24, r24
    36fe:	2c f4       	brge	.+10     	; 0x370a <__stack+0x2eab>
		__ticks = 1;
    3700:	81 e0       	ldi	r24, 0x01	; 1
    3702:	90 e0       	ldi	r25, 0x00	; 0
    3704:	9f 83       	std	Y+7, r25	; 0x07
    3706:	8e 83       	std	Y+6, r24	; 0x06
    3708:	3f c0       	rjmp	.+126    	; 0x3788 <__stack+0x2f29>
	else if (__tmp > 65535)
    370a:	68 85       	ldd	r22, Y+8	; 0x08
    370c:	79 85       	ldd	r23, Y+9	; 0x09
    370e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3710:	9b 85       	ldd	r25, Y+11	; 0x0b
    3712:	20 e0       	ldi	r18, 0x00	; 0
    3714:	3f ef       	ldi	r19, 0xFF	; 255
    3716:	4f e7       	ldi	r20, 0x7F	; 127
    3718:	57 e4       	ldi	r21, 0x47	; 71
    371a:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <__gesf2>
    371e:	18 16       	cp	r1, r24
    3720:	4c f5       	brge	.+82     	; 0x3774 <__stack+0x2f15>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3722:	6c 85       	ldd	r22, Y+12	; 0x0c
    3724:	7d 85       	ldd	r23, Y+13	; 0x0d
    3726:	8e 85       	ldd	r24, Y+14	; 0x0e
    3728:	9f 85       	ldd	r25, Y+15	; 0x0f
    372a:	20 e0       	ldi	r18, 0x00	; 0
    372c:	30 e0       	ldi	r19, 0x00	; 0
    372e:	40 e2       	ldi	r20, 0x20	; 32
    3730:	51 e4       	ldi	r21, 0x41	; 65
    3732:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__mulsf3>
    3736:	dc 01       	movw	r26, r24
    3738:	cb 01       	movw	r24, r22
    373a:	bc 01       	movw	r22, r24
    373c:	cd 01       	movw	r24, r26
    373e:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    3742:	dc 01       	movw	r26, r24
    3744:	cb 01       	movw	r24, r22
    3746:	9f 83       	std	Y+7, r25	; 0x07
    3748:	8e 83       	std	Y+6, r24	; 0x06
    374a:	0f c0       	rjmp	.+30     	; 0x376a <__stack+0x2f0b>
    374c:	80 e9       	ldi	r24, 0x90	; 144
    374e:	91 e0       	ldi	r25, 0x01	; 1
    3750:	9d 83       	std	Y+5, r25	; 0x05
    3752:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3754:	8c 81       	ldd	r24, Y+4	; 0x04
    3756:	9d 81       	ldd	r25, Y+5	; 0x05
    3758:	01 97       	sbiw	r24, 0x01	; 1
    375a:	f1 f7       	brne	.-4      	; 0x3758 <__stack+0x2ef9>
    375c:	9d 83       	std	Y+5, r25	; 0x05
    375e:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3760:	8e 81       	ldd	r24, Y+6	; 0x06
    3762:	9f 81       	ldd	r25, Y+7	; 0x07
    3764:	01 97       	sbiw	r24, 0x01	; 1
    3766:	9f 83       	std	Y+7, r25	; 0x07
    3768:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    376a:	8e 81       	ldd	r24, Y+6	; 0x06
    376c:	9f 81       	ldd	r25, Y+7	; 0x07
    376e:	00 97       	sbiw	r24, 0x00	; 0
    3770:	69 f7       	brne	.-38     	; 0x374c <__stack+0x2eed>
    3772:	24 c0       	rjmp	.+72     	; 0x37bc <__stack+0x2f5d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3774:	68 85       	ldd	r22, Y+8	; 0x08
    3776:	79 85       	ldd	r23, Y+9	; 0x09
    3778:	8a 85       	ldd	r24, Y+10	; 0x0a
    377a:	9b 85       	ldd	r25, Y+11	; 0x0b
    377c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    3780:	dc 01       	movw	r26, r24
    3782:	cb 01       	movw	r24, r22
    3784:	9f 83       	std	Y+7, r25	; 0x07
    3786:	8e 83       	std	Y+6, r24	; 0x06
    3788:	8e 81       	ldd	r24, Y+6	; 0x06
    378a:	9f 81       	ldd	r25, Y+7	; 0x07
    378c:	9b 83       	std	Y+3, r25	; 0x03
    378e:	8a 83       	std	Y+2, r24	; 0x02
    3790:	8a 81       	ldd	r24, Y+2	; 0x02
    3792:	9b 81       	ldd	r25, Y+3	; 0x03
    3794:	01 97       	sbiw	r24, 0x01	; 1
    3796:	f1 f7       	brne	.-4      	; 0x3794 <__stack+0x2f35>
    3798:	9b 83       	std	Y+3, r25	; 0x03
    379a:	8a 83       	std	Y+2, r24	; 0x02
    379c:	0f c0       	rjmp	.+30     	; 0x37bc <__stack+0x2f5d>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    379e:	69 89       	ldd	r22, Y+17	; 0x11
    37a0:	7a 89       	ldd	r23, Y+18	; 0x12
    37a2:	8b 89       	ldd	r24, Y+19	; 0x13
    37a4:	9c 89       	ldd	r25, Y+20	; 0x14
    37a6:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__fixunssfsi>
    37aa:	dc 01       	movw	r26, r24
    37ac:	cb 01       	movw	r24, r22
    37ae:	88 8b       	std	Y+16, r24	; 0x10
    37b0:	88 89       	ldd	r24, Y+16	; 0x10
    37b2:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    37b4:	89 81       	ldd	r24, Y+1	; 0x01
    37b6:	8a 95       	dec	r24
    37b8:	f1 f7       	brne	.-4      	; 0x37b6 <__stack+0x2f57>
    37ba:	89 83       	std	Y+1, r24	; 0x01
	}
	PORTA = data;
	
	
	//BYTE5
	for(i = 7;i<=0;i--)
    37bc:	80 91 60 00 	lds	r24, 0x0060
    37c0:	90 91 61 00 	lds	r25, 0x0061
    37c4:	01 97       	sbiw	r24, 0x01	; 1
    37c6:	90 93 61 00 	sts	0x0061, r25
    37ca:	80 93 60 00 	sts	0x0060, r24
    37ce:	80 91 60 00 	lds	r24, 0x0060
    37d2:	90 91 61 00 	lds	r25, 0x0061
    37d6:	18 16       	cp	r1, r24
    37d8:	19 06       	cpc	r1, r25
    37da:	0c f0       	brlt	.+2      	; 0x37de <__stack+0x2f7f>
    37dc:	1a ce       	rjmp	.-972    	; 0x3412 <__stack+0x2bb3>
		data = data + pow(a,i);
		
		PORTC |= 0x01;		//clock high
		_delay_us(5);
	}
	PORTA = data;
    37de:	eb e3       	ldi	r30, 0x3B	; 59
    37e0:	f0 e0       	ldi	r31, 0x00	; 0
    37e2:	80 91 62 00 	lds	r24, 0x0062
    37e6:	80 83       	st	Z, r24
	
	PORTC |= 0x10;		//att high
    37e8:	a5 e3       	ldi	r26, 0x35	; 53
    37ea:	b0 e0       	ldi	r27, 0x00	; 0
    37ec:	e5 e3       	ldi	r30, 0x35	; 53
    37ee:	f0 e0       	ldi	r31, 0x00	; 0
    37f0:	80 81       	ld	r24, Z
    37f2:	80 61       	ori	r24, 0x10	; 16
    37f4:	8c 93       	st	X, r24
}
    37f6:	c8 50       	subi	r28, 0x08	; 8
    37f8:	de 4f       	sbci	r29, 0xFE	; 254
    37fa:	0f b6       	in	r0, 0x3f	; 63
    37fc:	f8 94       	cli
    37fe:	de bf       	out	0x3e, r29	; 62
    3800:	0f be       	out	0x3f, r0	; 63
    3802:	cd bf       	out	0x3d, r28	; 61
    3804:	cf 91       	pop	r28
    3806:	df 91       	pop	r29
    3808:	1f 91       	pop	r17
    380a:	0f 91       	pop	r16
    380c:	ff 90       	pop	r15
    380e:	ef 90       	pop	r14
    3810:	df 90       	pop	r13
    3812:	cf 90       	pop	r12
    3814:	bf 90       	pop	r11
    3816:	af 90       	pop	r10
    3818:	08 95       	ret

0000381a <main>:

void main()
{	
    381a:	df 93       	push	r29
    381c:	cf 93       	push	r28
    381e:	cd b7       	in	r28, 0x3d	; 61
    3820:	de b7       	in	r29, 0x3e	; 62
	DDRC = 0xFD;
    3822:	e4 e3       	ldi	r30, 0x34	; 52
    3824:	f0 e0       	ldi	r31, 0x00	; 0
    3826:	8d ef       	ldi	r24, 0xFD	; 253
    3828:	80 83       	st	Z, r24
	DDRD = 0xFF;
    382a:	e1 e3       	ldi	r30, 0x31	; 49
    382c:	f0 e0       	ldi	r31, 0x00	; 0
    382e:	8f ef       	ldi	r24, 0xFF	; 255
    3830:	80 83       	st	Z, r24
	DDRA = 0xFF;
    3832:	ea e3       	ldi	r30, 0x3A	; 58
    3834:	f0 e0       	ldi	r31, 0x00	; 0
    3836:	8f ef       	ldi	r24, 0xFF	; 255
    3838:	80 83       	st	Z, r24
	PORTC = 0xFF;
    383a:	e5 e3       	ldi	r30, 0x35	; 53
    383c:	f0 e0       	ldi	r31, 0x00	; 0
    383e:	8f ef       	ldi	r24, 0xFF	; 255
    3840:	80 83       	st	Z, r24
	while(1)
	{
	read();
    3842:	0e 94 b9 02 	call	0x572	; 0x572 <read>
    3846:	fd cf       	rjmp	.-6      	; 0x3842 <main+0x28>

00003848 <__subsf3>:
    3848:	50 58       	subi	r21, 0x80	; 128

0000384a <__addsf3>:
    384a:	bb 27       	eor	r27, r27
    384c:	aa 27       	eor	r26, r26
    384e:	0e d0       	rcall	.+28     	; 0x386c <__addsf3x>
    3850:	70 c1       	rjmp	.+736    	; 0x3b32 <__fp_round>
    3852:	61 d1       	rcall	.+706    	; 0x3b16 <__fp_pscA>
    3854:	30 f0       	brcs	.+12     	; 0x3862 <__addsf3+0x18>
    3856:	66 d1       	rcall	.+716    	; 0x3b24 <__fp_pscB>
    3858:	20 f0       	brcs	.+8      	; 0x3862 <__addsf3+0x18>
    385a:	31 f4       	brne	.+12     	; 0x3868 <__addsf3+0x1e>
    385c:	9f 3f       	cpi	r25, 0xFF	; 255
    385e:	11 f4       	brne	.+4      	; 0x3864 <__addsf3+0x1a>
    3860:	1e f4       	brtc	.+6      	; 0x3868 <__addsf3+0x1e>
    3862:	56 c1       	rjmp	.+684    	; 0x3b10 <__fp_nan>
    3864:	0e f4       	brtc	.+2      	; 0x3868 <__addsf3+0x1e>
    3866:	e0 95       	com	r30
    3868:	e7 fb       	bst	r30, 7
    386a:	4c c1       	rjmp	.+664    	; 0x3b04 <__fp_inf>

0000386c <__addsf3x>:
    386c:	e9 2f       	mov	r30, r25
    386e:	72 d1       	rcall	.+740    	; 0x3b54 <__fp_split3>
    3870:	80 f3       	brcs	.-32     	; 0x3852 <__addsf3+0x8>
    3872:	ba 17       	cp	r27, r26
    3874:	62 07       	cpc	r22, r18
    3876:	73 07       	cpc	r23, r19
    3878:	84 07       	cpc	r24, r20
    387a:	95 07       	cpc	r25, r21
    387c:	18 f0       	brcs	.+6      	; 0x3884 <__addsf3x+0x18>
    387e:	71 f4       	brne	.+28     	; 0x389c <__addsf3x+0x30>
    3880:	9e f5       	brtc	.+102    	; 0x38e8 <__addsf3x+0x7c>
    3882:	8a c1       	rjmp	.+788    	; 0x3b98 <__fp_zero>
    3884:	0e f4       	brtc	.+2      	; 0x3888 <__addsf3x+0x1c>
    3886:	e0 95       	com	r30
    3888:	0b 2e       	mov	r0, r27
    388a:	ba 2f       	mov	r27, r26
    388c:	a0 2d       	mov	r26, r0
    388e:	0b 01       	movw	r0, r22
    3890:	b9 01       	movw	r22, r18
    3892:	90 01       	movw	r18, r0
    3894:	0c 01       	movw	r0, r24
    3896:	ca 01       	movw	r24, r20
    3898:	a0 01       	movw	r20, r0
    389a:	11 24       	eor	r1, r1
    389c:	ff 27       	eor	r31, r31
    389e:	59 1b       	sub	r21, r25
    38a0:	99 f0       	breq	.+38     	; 0x38c8 <__addsf3x+0x5c>
    38a2:	59 3f       	cpi	r21, 0xF9	; 249
    38a4:	50 f4       	brcc	.+20     	; 0x38ba <__addsf3x+0x4e>
    38a6:	50 3e       	cpi	r21, 0xE0	; 224
    38a8:	68 f1       	brcs	.+90     	; 0x3904 <__addsf3x+0x98>
    38aa:	1a 16       	cp	r1, r26
    38ac:	f0 40       	sbci	r31, 0x00	; 0
    38ae:	a2 2f       	mov	r26, r18
    38b0:	23 2f       	mov	r18, r19
    38b2:	34 2f       	mov	r19, r20
    38b4:	44 27       	eor	r20, r20
    38b6:	58 5f       	subi	r21, 0xF8	; 248
    38b8:	f3 cf       	rjmp	.-26     	; 0x38a0 <__addsf3x+0x34>
    38ba:	46 95       	lsr	r20
    38bc:	37 95       	ror	r19
    38be:	27 95       	ror	r18
    38c0:	a7 95       	ror	r26
    38c2:	f0 40       	sbci	r31, 0x00	; 0
    38c4:	53 95       	inc	r21
    38c6:	c9 f7       	brne	.-14     	; 0x38ba <__addsf3x+0x4e>
    38c8:	7e f4       	brtc	.+30     	; 0x38e8 <__addsf3x+0x7c>
    38ca:	1f 16       	cp	r1, r31
    38cc:	ba 0b       	sbc	r27, r26
    38ce:	62 0b       	sbc	r22, r18
    38d0:	73 0b       	sbc	r23, r19
    38d2:	84 0b       	sbc	r24, r20
    38d4:	ba f0       	brmi	.+46     	; 0x3904 <__addsf3x+0x98>
    38d6:	91 50       	subi	r25, 0x01	; 1
    38d8:	a1 f0       	breq	.+40     	; 0x3902 <__addsf3x+0x96>
    38da:	ff 0f       	add	r31, r31
    38dc:	bb 1f       	adc	r27, r27
    38de:	66 1f       	adc	r22, r22
    38e0:	77 1f       	adc	r23, r23
    38e2:	88 1f       	adc	r24, r24
    38e4:	c2 f7       	brpl	.-16     	; 0x38d6 <__addsf3x+0x6a>
    38e6:	0e c0       	rjmp	.+28     	; 0x3904 <__addsf3x+0x98>
    38e8:	ba 0f       	add	r27, r26
    38ea:	62 1f       	adc	r22, r18
    38ec:	73 1f       	adc	r23, r19
    38ee:	84 1f       	adc	r24, r20
    38f0:	48 f4       	brcc	.+18     	; 0x3904 <__addsf3x+0x98>
    38f2:	87 95       	ror	r24
    38f4:	77 95       	ror	r23
    38f6:	67 95       	ror	r22
    38f8:	b7 95       	ror	r27
    38fa:	f7 95       	ror	r31
    38fc:	9e 3f       	cpi	r25, 0xFE	; 254
    38fe:	08 f0       	brcs	.+2      	; 0x3902 <__addsf3x+0x96>
    3900:	b3 cf       	rjmp	.-154    	; 0x3868 <__addsf3+0x1e>
    3902:	93 95       	inc	r25
    3904:	88 0f       	add	r24, r24
    3906:	08 f0       	brcs	.+2      	; 0x390a <__addsf3x+0x9e>
    3908:	99 27       	eor	r25, r25
    390a:	ee 0f       	add	r30, r30
    390c:	97 95       	ror	r25
    390e:	87 95       	ror	r24
    3910:	08 95       	ret

00003912 <__cmpsf2>:
    3912:	d4 d0       	rcall	.+424    	; 0x3abc <__fp_cmp>
    3914:	08 f4       	brcc	.+2      	; 0x3918 <__cmpsf2+0x6>
    3916:	81 e0       	ldi	r24, 0x01	; 1
    3918:	08 95       	ret

0000391a <__divsf3>:
    391a:	0c d0       	rcall	.+24     	; 0x3934 <__divsf3x>
    391c:	0a c1       	rjmp	.+532    	; 0x3b32 <__fp_round>
    391e:	02 d1       	rcall	.+516    	; 0x3b24 <__fp_pscB>
    3920:	40 f0       	brcs	.+16     	; 0x3932 <__divsf3+0x18>
    3922:	f9 d0       	rcall	.+498    	; 0x3b16 <__fp_pscA>
    3924:	30 f0       	brcs	.+12     	; 0x3932 <__divsf3+0x18>
    3926:	21 f4       	brne	.+8      	; 0x3930 <__divsf3+0x16>
    3928:	5f 3f       	cpi	r21, 0xFF	; 255
    392a:	19 f0       	breq	.+6      	; 0x3932 <__divsf3+0x18>
    392c:	eb c0       	rjmp	.+470    	; 0x3b04 <__fp_inf>
    392e:	51 11       	cpse	r21, r1
    3930:	34 c1       	rjmp	.+616    	; 0x3b9a <__fp_szero>
    3932:	ee c0       	rjmp	.+476    	; 0x3b10 <__fp_nan>

00003934 <__divsf3x>:
    3934:	0f d1       	rcall	.+542    	; 0x3b54 <__fp_split3>
    3936:	98 f3       	brcs	.-26     	; 0x391e <__divsf3+0x4>

00003938 <__divsf3_pse>:
    3938:	99 23       	and	r25, r25
    393a:	c9 f3       	breq	.-14     	; 0x392e <__divsf3+0x14>
    393c:	55 23       	and	r21, r21
    393e:	b1 f3       	breq	.-20     	; 0x392c <__divsf3+0x12>
    3940:	95 1b       	sub	r25, r21
    3942:	55 0b       	sbc	r21, r21
    3944:	bb 27       	eor	r27, r27
    3946:	aa 27       	eor	r26, r26
    3948:	62 17       	cp	r22, r18
    394a:	73 07       	cpc	r23, r19
    394c:	84 07       	cpc	r24, r20
    394e:	38 f0       	brcs	.+14     	; 0x395e <__divsf3_pse+0x26>
    3950:	9f 5f       	subi	r25, 0xFF	; 255
    3952:	5f 4f       	sbci	r21, 0xFF	; 255
    3954:	22 0f       	add	r18, r18
    3956:	33 1f       	adc	r19, r19
    3958:	44 1f       	adc	r20, r20
    395a:	aa 1f       	adc	r26, r26
    395c:	a9 f3       	breq	.-22     	; 0x3948 <__divsf3_pse+0x10>
    395e:	33 d0       	rcall	.+102    	; 0x39c6 <__divsf3_pse+0x8e>
    3960:	0e 2e       	mov	r0, r30
    3962:	3a f0       	brmi	.+14     	; 0x3972 <__divsf3_pse+0x3a>
    3964:	e0 e8       	ldi	r30, 0x80	; 128
    3966:	30 d0       	rcall	.+96     	; 0x39c8 <__divsf3_pse+0x90>
    3968:	91 50       	subi	r25, 0x01	; 1
    396a:	50 40       	sbci	r21, 0x00	; 0
    396c:	e6 95       	lsr	r30
    396e:	00 1c       	adc	r0, r0
    3970:	ca f7       	brpl	.-14     	; 0x3964 <__divsf3_pse+0x2c>
    3972:	29 d0       	rcall	.+82     	; 0x39c6 <__divsf3_pse+0x8e>
    3974:	fe 2f       	mov	r31, r30
    3976:	27 d0       	rcall	.+78     	; 0x39c6 <__divsf3_pse+0x8e>
    3978:	66 0f       	add	r22, r22
    397a:	77 1f       	adc	r23, r23
    397c:	88 1f       	adc	r24, r24
    397e:	bb 1f       	adc	r27, r27
    3980:	26 17       	cp	r18, r22
    3982:	37 07       	cpc	r19, r23
    3984:	48 07       	cpc	r20, r24
    3986:	ab 07       	cpc	r26, r27
    3988:	b0 e8       	ldi	r27, 0x80	; 128
    398a:	09 f0       	breq	.+2      	; 0x398e <__divsf3_pse+0x56>
    398c:	bb 0b       	sbc	r27, r27
    398e:	80 2d       	mov	r24, r0
    3990:	bf 01       	movw	r22, r30
    3992:	ff 27       	eor	r31, r31
    3994:	93 58       	subi	r25, 0x83	; 131
    3996:	5f 4f       	sbci	r21, 0xFF	; 255
    3998:	2a f0       	brmi	.+10     	; 0x39a4 <__divsf3_pse+0x6c>
    399a:	9e 3f       	cpi	r25, 0xFE	; 254
    399c:	51 05       	cpc	r21, r1
    399e:	68 f0       	brcs	.+26     	; 0x39ba <__divsf3_pse+0x82>
    39a0:	b1 c0       	rjmp	.+354    	; 0x3b04 <__fp_inf>
    39a2:	fb c0       	rjmp	.+502    	; 0x3b9a <__fp_szero>
    39a4:	5f 3f       	cpi	r21, 0xFF	; 255
    39a6:	ec f3       	brlt	.-6      	; 0x39a2 <__divsf3_pse+0x6a>
    39a8:	98 3e       	cpi	r25, 0xE8	; 232
    39aa:	dc f3       	brlt	.-10     	; 0x39a2 <__divsf3_pse+0x6a>
    39ac:	86 95       	lsr	r24
    39ae:	77 95       	ror	r23
    39b0:	67 95       	ror	r22
    39b2:	b7 95       	ror	r27
    39b4:	f7 95       	ror	r31
    39b6:	9f 5f       	subi	r25, 0xFF	; 255
    39b8:	c9 f7       	brne	.-14     	; 0x39ac <__divsf3_pse+0x74>
    39ba:	88 0f       	add	r24, r24
    39bc:	91 1d       	adc	r25, r1
    39be:	96 95       	lsr	r25
    39c0:	87 95       	ror	r24
    39c2:	97 f9       	bld	r25, 7
    39c4:	08 95       	ret
    39c6:	e1 e0       	ldi	r30, 0x01	; 1
    39c8:	66 0f       	add	r22, r22
    39ca:	77 1f       	adc	r23, r23
    39cc:	88 1f       	adc	r24, r24
    39ce:	bb 1f       	adc	r27, r27
    39d0:	62 17       	cp	r22, r18
    39d2:	73 07       	cpc	r23, r19
    39d4:	84 07       	cpc	r24, r20
    39d6:	ba 07       	cpc	r27, r26
    39d8:	20 f0       	brcs	.+8      	; 0x39e2 <__divsf3_pse+0xaa>
    39da:	62 1b       	sub	r22, r18
    39dc:	73 0b       	sbc	r23, r19
    39de:	84 0b       	sbc	r24, r20
    39e0:	ba 0b       	sbc	r27, r26
    39e2:	ee 1f       	adc	r30, r30
    39e4:	88 f7       	brcc	.-30     	; 0x39c8 <__divsf3_pse+0x90>
    39e6:	e0 95       	com	r30
    39e8:	08 95       	ret

000039ea <__fixunssfsi>:
    39ea:	bc d0       	rcall	.+376    	; 0x3b64 <__fp_splitA>
    39ec:	88 f0       	brcs	.+34     	; 0x3a10 <__fixunssfsi+0x26>
    39ee:	9f 57       	subi	r25, 0x7F	; 127
    39f0:	90 f0       	brcs	.+36     	; 0x3a16 <__fixunssfsi+0x2c>
    39f2:	b9 2f       	mov	r27, r25
    39f4:	99 27       	eor	r25, r25
    39f6:	b7 51       	subi	r27, 0x17	; 23
    39f8:	a0 f0       	brcs	.+40     	; 0x3a22 <__fixunssfsi+0x38>
    39fa:	d1 f0       	breq	.+52     	; 0x3a30 <__fixunssfsi+0x46>
    39fc:	66 0f       	add	r22, r22
    39fe:	77 1f       	adc	r23, r23
    3a00:	88 1f       	adc	r24, r24
    3a02:	99 1f       	adc	r25, r25
    3a04:	1a f0       	brmi	.+6      	; 0x3a0c <__fixunssfsi+0x22>
    3a06:	ba 95       	dec	r27
    3a08:	c9 f7       	brne	.-14     	; 0x39fc <__fixunssfsi+0x12>
    3a0a:	12 c0       	rjmp	.+36     	; 0x3a30 <__fixunssfsi+0x46>
    3a0c:	b1 30       	cpi	r27, 0x01	; 1
    3a0e:	81 f0       	breq	.+32     	; 0x3a30 <__fixunssfsi+0x46>
    3a10:	c3 d0       	rcall	.+390    	; 0x3b98 <__fp_zero>
    3a12:	b1 e0       	ldi	r27, 0x01	; 1
    3a14:	08 95       	ret
    3a16:	c0 c0       	rjmp	.+384    	; 0x3b98 <__fp_zero>
    3a18:	67 2f       	mov	r22, r23
    3a1a:	78 2f       	mov	r23, r24
    3a1c:	88 27       	eor	r24, r24
    3a1e:	b8 5f       	subi	r27, 0xF8	; 248
    3a20:	39 f0       	breq	.+14     	; 0x3a30 <__fixunssfsi+0x46>
    3a22:	b9 3f       	cpi	r27, 0xF9	; 249
    3a24:	cc f3       	brlt	.-14     	; 0x3a18 <__fixunssfsi+0x2e>
    3a26:	86 95       	lsr	r24
    3a28:	77 95       	ror	r23
    3a2a:	67 95       	ror	r22
    3a2c:	b3 95       	inc	r27
    3a2e:	d9 f7       	brne	.-10     	; 0x3a26 <__fixunssfsi+0x3c>
    3a30:	3e f4       	brtc	.+14     	; 0x3a40 <__fixunssfsi+0x56>
    3a32:	90 95       	com	r25
    3a34:	80 95       	com	r24
    3a36:	70 95       	com	r23
    3a38:	61 95       	neg	r22
    3a3a:	7f 4f       	sbci	r23, 0xFF	; 255
    3a3c:	8f 4f       	sbci	r24, 0xFF	; 255
    3a3e:	9f 4f       	sbci	r25, 0xFF	; 255
    3a40:	08 95       	ret

00003a42 <__floatunsisf>:
    3a42:	e8 94       	clt
    3a44:	09 c0       	rjmp	.+18     	; 0x3a58 <__floatsisf+0x12>

00003a46 <__floatsisf>:
    3a46:	97 fb       	bst	r25, 7
    3a48:	3e f4       	brtc	.+14     	; 0x3a58 <__floatsisf+0x12>
    3a4a:	90 95       	com	r25
    3a4c:	80 95       	com	r24
    3a4e:	70 95       	com	r23
    3a50:	61 95       	neg	r22
    3a52:	7f 4f       	sbci	r23, 0xFF	; 255
    3a54:	8f 4f       	sbci	r24, 0xFF	; 255
    3a56:	9f 4f       	sbci	r25, 0xFF	; 255
    3a58:	99 23       	and	r25, r25
    3a5a:	a9 f0       	breq	.+42     	; 0x3a86 <__floatsisf+0x40>
    3a5c:	f9 2f       	mov	r31, r25
    3a5e:	96 e9       	ldi	r25, 0x96	; 150
    3a60:	bb 27       	eor	r27, r27
    3a62:	93 95       	inc	r25
    3a64:	f6 95       	lsr	r31
    3a66:	87 95       	ror	r24
    3a68:	77 95       	ror	r23
    3a6a:	67 95       	ror	r22
    3a6c:	b7 95       	ror	r27
    3a6e:	f1 11       	cpse	r31, r1
    3a70:	f8 cf       	rjmp	.-16     	; 0x3a62 <__floatsisf+0x1c>
    3a72:	fa f4       	brpl	.+62     	; 0x3ab2 <__floatsisf+0x6c>
    3a74:	bb 0f       	add	r27, r27
    3a76:	11 f4       	brne	.+4      	; 0x3a7c <__floatsisf+0x36>
    3a78:	60 ff       	sbrs	r22, 0
    3a7a:	1b c0       	rjmp	.+54     	; 0x3ab2 <__floatsisf+0x6c>
    3a7c:	6f 5f       	subi	r22, 0xFF	; 255
    3a7e:	7f 4f       	sbci	r23, 0xFF	; 255
    3a80:	8f 4f       	sbci	r24, 0xFF	; 255
    3a82:	9f 4f       	sbci	r25, 0xFF	; 255
    3a84:	16 c0       	rjmp	.+44     	; 0x3ab2 <__floatsisf+0x6c>
    3a86:	88 23       	and	r24, r24
    3a88:	11 f0       	breq	.+4      	; 0x3a8e <__floatsisf+0x48>
    3a8a:	96 e9       	ldi	r25, 0x96	; 150
    3a8c:	11 c0       	rjmp	.+34     	; 0x3ab0 <__floatsisf+0x6a>
    3a8e:	77 23       	and	r23, r23
    3a90:	21 f0       	breq	.+8      	; 0x3a9a <__floatsisf+0x54>
    3a92:	9e e8       	ldi	r25, 0x8E	; 142
    3a94:	87 2f       	mov	r24, r23
    3a96:	76 2f       	mov	r23, r22
    3a98:	05 c0       	rjmp	.+10     	; 0x3aa4 <__floatsisf+0x5e>
    3a9a:	66 23       	and	r22, r22
    3a9c:	71 f0       	breq	.+28     	; 0x3aba <__floatsisf+0x74>
    3a9e:	96 e8       	ldi	r25, 0x86	; 134
    3aa0:	86 2f       	mov	r24, r22
    3aa2:	70 e0       	ldi	r23, 0x00	; 0
    3aa4:	60 e0       	ldi	r22, 0x00	; 0
    3aa6:	2a f0       	brmi	.+10     	; 0x3ab2 <__floatsisf+0x6c>
    3aa8:	9a 95       	dec	r25
    3aaa:	66 0f       	add	r22, r22
    3aac:	77 1f       	adc	r23, r23
    3aae:	88 1f       	adc	r24, r24
    3ab0:	da f7       	brpl	.-10     	; 0x3aa8 <__floatsisf+0x62>
    3ab2:	88 0f       	add	r24, r24
    3ab4:	96 95       	lsr	r25
    3ab6:	87 95       	ror	r24
    3ab8:	97 f9       	bld	r25, 7
    3aba:	08 95       	ret

00003abc <__fp_cmp>:
    3abc:	99 0f       	add	r25, r25
    3abe:	00 08       	sbc	r0, r0
    3ac0:	55 0f       	add	r21, r21
    3ac2:	aa 0b       	sbc	r26, r26
    3ac4:	e0 e8       	ldi	r30, 0x80	; 128
    3ac6:	fe ef       	ldi	r31, 0xFE	; 254
    3ac8:	16 16       	cp	r1, r22
    3aca:	17 06       	cpc	r1, r23
    3acc:	e8 07       	cpc	r30, r24
    3ace:	f9 07       	cpc	r31, r25
    3ad0:	c0 f0       	brcs	.+48     	; 0x3b02 <__fp_cmp+0x46>
    3ad2:	12 16       	cp	r1, r18
    3ad4:	13 06       	cpc	r1, r19
    3ad6:	e4 07       	cpc	r30, r20
    3ad8:	f5 07       	cpc	r31, r21
    3ada:	98 f0       	brcs	.+38     	; 0x3b02 <__fp_cmp+0x46>
    3adc:	62 1b       	sub	r22, r18
    3ade:	73 0b       	sbc	r23, r19
    3ae0:	84 0b       	sbc	r24, r20
    3ae2:	95 0b       	sbc	r25, r21
    3ae4:	39 f4       	brne	.+14     	; 0x3af4 <__fp_cmp+0x38>
    3ae6:	0a 26       	eor	r0, r26
    3ae8:	61 f0       	breq	.+24     	; 0x3b02 <__fp_cmp+0x46>
    3aea:	23 2b       	or	r18, r19
    3aec:	24 2b       	or	r18, r20
    3aee:	25 2b       	or	r18, r21
    3af0:	21 f4       	brne	.+8      	; 0x3afa <__fp_cmp+0x3e>
    3af2:	08 95       	ret
    3af4:	0a 26       	eor	r0, r26
    3af6:	09 f4       	brne	.+2      	; 0x3afa <__fp_cmp+0x3e>
    3af8:	a1 40       	sbci	r26, 0x01	; 1
    3afa:	a6 95       	lsr	r26
    3afc:	8f ef       	ldi	r24, 0xFF	; 255
    3afe:	81 1d       	adc	r24, r1
    3b00:	81 1d       	adc	r24, r1
    3b02:	08 95       	ret

00003b04 <__fp_inf>:
    3b04:	97 f9       	bld	r25, 7
    3b06:	9f 67       	ori	r25, 0x7F	; 127
    3b08:	80 e8       	ldi	r24, 0x80	; 128
    3b0a:	70 e0       	ldi	r23, 0x00	; 0
    3b0c:	60 e0       	ldi	r22, 0x00	; 0
    3b0e:	08 95       	ret

00003b10 <__fp_nan>:
    3b10:	9f ef       	ldi	r25, 0xFF	; 255
    3b12:	80 ec       	ldi	r24, 0xC0	; 192
    3b14:	08 95       	ret

00003b16 <__fp_pscA>:
    3b16:	00 24       	eor	r0, r0
    3b18:	0a 94       	dec	r0
    3b1a:	16 16       	cp	r1, r22
    3b1c:	17 06       	cpc	r1, r23
    3b1e:	18 06       	cpc	r1, r24
    3b20:	09 06       	cpc	r0, r25
    3b22:	08 95       	ret

00003b24 <__fp_pscB>:
    3b24:	00 24       	eor	r0, r0
    3b26:	0a 94       	dec	r0
    3b28:	12 16       	cp	r1, r18
    3b2a:	13 06       	cpc	r1, r19
    3b2c:	14 06       	cpc	r1, r20
    3b2e:	05 06       	cpc	r0, r21
    3b30:	08 95       	ret

00003b32 <__fp_round>:
    3b32:	09 2e       	mov	r0, r25
    3b34:	03 94       	inc	r0
    3b36:	00 0c       	add	r0, r0
    3b38:	11 f4       	brne	.+4      	; 0x3b3e <__fp_round+0xc>
    3b3a:	88 23       	and	r24, r24
    3b3c:	52 f0       	brmi	.+20     	; 0x3b52 <__fp_round+0x20>
    3b3e:	bb 0f       	add	r27, r27
    3b40:	40 f4       	brcc	.+16     	; 0x3b52 <__fp_round+0x20>
    3b42:	bf 2b       	or	r27, r31
    3b44:	11 f4       	brne	.+4      	; 0x3b4a <__fp_round+0x18>
    3b46:	60 ff       	sbrs	r22, 0
    3b48:	04 c0       	rjmp	.+8      	; 0x3b52 <__fp_round+0x20>
    3b4a:	6f 5f       	subi	r22, 0xFF	; 255
    3b4c:	7f 4f       	sbci	r23, 0xFF	; 255
    3b4e:	8f 4f       	sbci	r24, 0xFF	; 255
    3b50:	9f 4f       	sbci	r25, 0xFF	; 255
    3b52:	08 95       	ret

00003b54 <__fp_split3>:
    3b54:	57 fd       	sbrc	r21, 7
    3b56:	90 58       	subi	r25, 0x80	; 128
    3b58:	44 0f       	add	r20, r20
    3b5a:	55 1f       	adc	r21, r21
    3b5c:	59 f0       	breq	.+22     	; 0x3b74 <__fp_splitA+0x10>
    3b5e:	5f 3f       	cpi	r21, 0xFF	; 255
    3b60:	71 f0       	breq	.+28     	; 0x3b7e <__fp_splitA+0x1a>
    3b62:	47 95       	ror	r20

00003b64 <__fp_splitA>:
    3b64:	88 0f       	add	r24, r24
    3b66:	97 fb       	bst	r25, 7
    3b68:	99 1f       	adc	r25, r25
    3b6a:	61 f0       	breq	.+24     	; 0x3b84 <__fp_splitA+0x20>
    3b6c:	9f 3f       	cpi	r25, 0xFF	; 255
    3b6e:	79 f0       	breq	.+30     	; 0x3b8e <__fp_splitA+0x2a>
    3b70:	87 95       	ror	r24
    3b72:	08 95       	ret
    3b74:	12 16       	cp	r1, r18
    3b76:	13 06       	cpc	r1, r19
    3b78:	14 06       	cpc	r1, r20
    3b7a:	55 1f       	adc	r21, r21
    3b7c:	f2 cf       	rjmp	.-28     	; 0x3b62 <__fp_split3+0xe>
    3b7e:	46 95       	lsr	r20
    3b80:	f1 df       	rcall	.-30     	; 0x3b64 <__fp_splitA>
    3b82:	08 c0       	rjmp	.+16     	; 0x3b94 <__fp_splitA+0x30>
    3b84:	16 16       	cp	r1, r22
    3b86:	17 06       	cpc	r1, r23
    3b88:	18 06       	cpc	r1, r24
    3b8a:	99 1f       	adc	r25, r25
    3b8c:	f1 cf       	rjmp	.-30     	; 0x3b70 <__fp_splitA+0xc>
    3b8e:	86 95       	lsr	r24
    3b90:	71 05       	cpc	r23, r1
    3b92:	61 05       	cpc	r22, r1
    3b94:	08 94       	sec
    3b96:	08 95       	ret

00003b98 <__fp_zero>:
    3b98:	e8 94       	clt

00003b9a <__fp_szero>:
    3b9a:	bb 27       	eor	r27, r27
    3b9c:	66 27       	eor	r22, r22
    3b9e:	77 27       	eor	r23, r23
    3ba0:	cb 01       	movw	r24, r22
    3ba2:	97 f9       	bld	r25, 7
    3ba4:	08 95       	ret

00003ba6 <__gesf2>:
    3ba6:	8a df       	rcall	.-236    	; 0x3abc <__fp_cmp>
    3ba8:	08 f4       	brcc	.+2      	; 0x3bac <__gesf2+0x6>
    3baa:	8f ef       	ldi	r24, 0xFF	; 255
    3bac:	08 95       	ret

00003bae <__mulsf3>:
    3bae:	0b d0       	rcall	.+22     	; 0x3bc6 <__mulsf3x>
    3bb0:	c0 cf       	rjmp	.-128    	; 0x3b32 <__fp_round>
    3bb2:	b1 df       	rcall	.-158    	; 0x3b16 <__fp_pscA>
    3bb4:	28 f0       	brcs	.+10     	; 0x3bc0 <__mulsf3+0x12>
    3bb6:	b6 df       	rcall	.-148    	; 0x3b24 <__fp_pscB>
    3bb8:	18 f0       	brcs	.+6      	; 0x3bc0 <__mulsf3+0x12>
    3bba:	95 23       	and	r25, r21
    3bbc:	09 f0       	breq	.+2      	; 0x3bc0 <__mulsf3+0x12>
    3bbe:	a2 cf       	rjmp	.-188    	; 0x3b04 <__fp_inf>
    3bc0:	a7 cf       	rjmp	.-178    	; 0x3b10 <__fp_nan>
    3bc2:	11 24       	eor	r1, r1
    3bc4:	ea cf       	rjmp	.-44     	; 0x3b9a <__fp_szero>

00003bc6 <__mulsf3x>:
    3bc6:	c6 df       	rcall	.-116    	; 0x3b54 <__fp_split3>
    3bc8:	a0 f3       	brcs	.-24     	; 0x3bb2 <__mulsf3+0x4>

00003bca <__mulsf3_pse>:
    3bca:	95 9f       	mul	r25, r21
    3bcc:	d1 f3       	breq	.-12     	; 0x3bc2 <__mulsf3+0x14>
    3bce:	95 0f       	add	r25, r21
    3bd0:	50 e0       	ldi	r21, 0x00	; 0
    3bd2:	55 1f       	adc	r21, r21
    3bd4:	62 9f       	mul	r22, r18
    3bd6:	f0 01       	movw	r30, r0
    3bd8:	72 9f       	mul	r23, r18
    3bda:	bb 27       	eor	r27, r27
    3bdc:	f0 0d       	add	r31, r0
    3bde:	b1 1d       	adc	r27, r1
    3be0:	63 9f       	mul	r22, r19
    3be2:	aa 27       	eor	r26, r26
    3be4:	f0 0d       	add	r31, r0
    3be6:	b1 1d       	adc	r27, r1
    3be8:	aa 1f       	adc	r26, r26
    3bea:	64 9f       	mul	r22, r20
    3bec:	66 27       	eor	r22, r22
    3bee:	b0 0d       	add	r27, r0
    3bf0:	a1 1d       	adc	r26, r1
    3bf2:	66 1f       	adc	r22, r22
    3bf4:	82 9f       	mul	r24, r18
    3bf6:	22 27       	eor	r18, r18
    3bf8:	b0 0d       	add	r27, r0
    3bfa:	a1 1d       	adc	r26, r1
    3bfc:	62 1f       	adc	r22, r18
    3bfe:	73 9f       	mul	r23, r19
    3c00:	b0 0d       	add	r27, r0
    3c02:	a1 1d       	adc	r26, r1
    3c04:	62 1f       	adc	r22, r18
    3c06:	83 9f       	mul	r24, r19
    3c08:	a0 0d       	add	r26, r0
    3c0a:	61 1d       	adc	r22, r1
    3c0c:	22 1f       	adc	r18, r18
    3c0e:	74 9f       	mul	r23, r20
    3c10:	33 27       	eor	r19, r19
    3c12:	a0 0d       	add	r26, r0
    3c14:	61 1d       	adc	r22, r1
    3c16:	23 1f       	adc	r18, r19
    3c18:	84 9f       	mul	r24, r20
    3c1a:	60 0d       	add	r22, r0
    3c1c:	21 1d       	adc	r18, r1
    3c1e:	82 2f       	mov	r24, r18
    3c20:	76 2f       	mov	r23, r22
    3c22:	6a 2f       	mov	r22, r26
    3c24:	11 24       	eor	r1, r1
    3c26:	9f 57       	subi	r25, 0x7F	; 127
    3c28:	50 40       	sbci	r21, 0x00	; 0
    3c2a:	8a f0       	brmi	.+34     	; 0x3c4e <__mulsf3_pse+0x84>
    3c2c:	e1 f0       	breq	.+56     	; 0x3c66 <__mulsf3_pse+0x9c>
    3c2e:	88 23       	and	r24, r24
    3c30:	4a f0       	brmi	.+18     	; 0x3c44 <__mulsf3_pse+0x7a>
    3c32:	ee 0f       	add	r30, r30
    3c34:	ff 1f       	adc	r31, r31
    3c36:	bb 1f       	adc	r27, r27
    3c38:	66 1f       	adc	r22, r22
    3c3a:	77 1f       	adc	r23, r23
    3c3c:	88 1f       	adc	r24, r24
    3c3e:	91 50       	subi	r25, 0x01	; 1
    3c40:	50 40       	sbci	r21, 0x00	; 0
    3c42:	a9 f7       	brne	.-22     	; 0x3c2e <__mulsf3_pse+0x64>
    3c44:	9e 3f       	cpi	r25, 0xFE	; 254
    3c46:	51 05       	cpc	r21, r1
    3c48:	70 f0       	brcs	.+28     	; 0x3c66 <__mulsf3_pse+0x9c>
    3c4a:	5c cf       	rjmp	.-328    	; 0x3b04 <__fp_inf>
    3c4c:	a6 cf       	rjmp	.-180    	; 0x3b9a <__fp_szero>
    3c4e:	5f 3f       	cpi	r21, 0xFF	; 255
    3c50:	ec f3       	brlt	.-6      	; 0x3c4c <__mulsf3_pse+0x82>
    3c52:	98 3e       	cpi	r25, 0xE8	; 232
    3c54:	dc f3       	brlt	.-10     	; 0x3c4c <__mulsf3_pse+0x82>
    3c56:	86 95       	lsr	r24
    3c58:	77 95       	ror	r23
    3c5a:	67 95       	ror	r22
    3c5c:	b7 95       	ror	r27
    3c5e:	f7 95       	ror	r31
    3c60:	e7 95       	ror	r30
    3c62:	9f 5f       	subi	r25, 0xFF	; 255
    3c64:	c1 f7       	brne	.-16     	; 0x3c56 <__mulsf3_pse+0x8c>
    3c66:	fe 2b       	or	r31, r30
    3c68:	88 0f       	add	r24, r24
    3c6a:	91 1d       	adc	r25, r1
    3c6c:	96 95       	lsr	r25
    3c6e:	87 95       	ror	r24
    3c70:	97 f9       	bld	r25, 7
    3c72:	08 95       	ret

00003c74 <pow>:
    3c74:	fa 01       	movw	r30, r20
    3c76:	ee 0f       	add	r30, r30
    3c78:	ff 1f       	adc	r31, r31
    3c7a:	30 96       	adiw	r30, 0x00	; 0
    3c7c:	21 05       	cpc	r18, r1
    3c7e:	31 05       	cpc	r19, r1
    3c80:	99 f1       	breq	.+102    	; 0x3ce8 <pow+0x74>
    3c82:	61 15       	cp	r22, r1
    3c84:	71 05       	cpc	r23, r1
    3c86:	61 f4       	brne	.+24     	; 0x3ca0 <pow+0x2c>
    3c88:	80 38       	cpi	r24, 0x80	; 128
    3c8a:	bf e3       	ldi	r27, 0x3F	; 63
    3c8c:	9b 07       	cpc	r25, r27
    3c8e:	49 f1       	breq	.+82     	; 0x3ce2 <pow+0x6e>
    3c90:	68 94       	set
    3c92:	90 38       	cpi	r25, 0x80	; 128
    3c94:	81 05       	cpc	r24, r1
    3c96:	61 f0       	breq	.+24     	; 0x3cb0 <pow+0x3c>
    3c98:	80 38       	cpi	r24, 0x80	; 128
    3c9a:	bf ef       	ldi	r27, 0xFF	; 255
    3c9c:	9b 07       	cpc	r25, r27
    3c9e:	41 f0       	breq	.+16     	; 0x3cb0 <pow+0x3c>
    3ca0:	99 23       	and	r25, r25
    3ca2:	42 f5       	brpl	.+80     	; 0x3cf4 <pow+0x80>
    3ca4:	ff 3f       	cpi	r31, 0xFF	; 255
    3ca6:	e1 05       	cpc	r30, r1
    3ca8:	31 05       	cpc	r19, r1
    3caa:	21 05       	cpc	r18, r1
    3cac:	11 f1       	breq	.+68     	; 0x3cf2 <pow+0x7e>
    3cae:	e8 94       	clt
    3cb0:	08 94       	sec
    3cb2:	e7 95       	ror	r30
    3cb4:	d9 01       	movw	r26, r18
    3cb6:	aa 23       	and	r26, r26
    3cb8:	29 f4       	brne	.+10     	; 0x3cc4 <pow+0x50>
    3cba:	ab 2f       	mov	r26, r27
    3cbc:	be 2f       	mov	r27, r30
    3cbe:	f8 5f       	subi	r31, 0xF8	; 248
    3cc0:	d0 f3       	brcs	.-12     	; 0x3cb6 <pow+0x42>
    3cc2:	10 c0       	rjmp	.+32     	; 0x3ce4 <pow+0x70>
    3cc4:	ff 5f       	subi	r31, 0xFF	; 255
    3cc6:	70 f4       	brcc	.+28     	; 0x3ce4 <pow+0x70>
    3cc8:	a6 95       	lsr	r26
    3cca:	e0 f7       	brcc	.-8      	; 0x3cc4 <pow+0x50>
    3ccc:	f7 39       	cpi	r31, 0x97	; 151
    3cce:	50 f0       	brcs	.+20     	; 0x3ce4 <pow+0x70>
    3cd0:	19 f0       	breq	.+6      	; 0x3cd8 <pow+0x64>
    3cd2:	ff 3a       	cpi	r31, 0xAF	; 175
    3cd4:	38 f4       	brcc	.+14     	; 0x3ce4 <pow+0x70>
    3cd6:	9f 77       	andi	r25, 0x7F	; 127
    3cd8:	9f 93       	push	r25
    3cda:	0c d0       	rcall	.+24     	; 0x3cf4 <pow+0x80>
    3cdc:	0f 90       	pop	r0
    3cde:	07 fc       	sbrc	r0, 7
    3ce0:	90 58       	subi	r25, 0x80	; 128
    3ce2:	08 95       	ret
    3ce4:	3e f0       	brts	.+14     	; 0x3cf4 <pow+0x80>
    3ce6:	14 cf       	rjmp	.-472    	; 0x3b10 <__fp_nan>
    3ce8:	60 e0       	ldi	r22, 0x00	; 0
    3cea:	70 e0       	ldi	r23, 0x00	; 0
    3cec:	80 e8       	ldi	r24, 0x80	; 128
    3cee:	9f e3       	ldi	r25, 0x3F	; 63
    3cf0:	08 95       	ret
    3cf2:	4f e7       	ldi	r20, 0x7F	; 127
    3cf4:	9f 77       	andi	r25, 0x7F	; 127
    3cf6:	5f 93       	push	r21
    3cf8:	4f 93       	push	r20
    3cfa:	3f 93       	push	r19
    3cfc:	2f 93       	push	r18
    3cfe:	9e d0       	rcall	.+316    	; 0x3e3c <log>
    3d00:	2f 91       	pop	r18
    3d02:	3f 91       	pop	r19
    3d04:	4f 91       	pop	r20
    3d06:	5f 91       	pop	r21
    3d08:	52 df       	rcall	.-348    	; 0x3bae <__mulsf3>
    3d0a:	05 c0       	rjmp	.+10     	; 0x3d16 <exp>
    3d0c:	19 f4       	brne	.+6      	; 0x3d14 <pow+0xa0>
    3d0e:	0e f0       	brts	.+2      	; 0x3d12 <pow+0x9e>
    3d10:	f9 ce       	rjmp	.-526    	; 0x3b04 <__fp_inf>
    3d12:	42 cf       	rjmp	.-380    	; 0x3b98 <__fp_zero>
    3d14:	fd ce       	rjmp	.-518    	; 0x3b10 <__fp_nan>

00003d16 <exp>:
    3d16:	26 df       	rcall	.-436    	; 0x3b64 <__fp_splitA>
    3d18:	c8 f3       	brcs	.-14     	; 0x3d0c <pow+0x98>
    3d1a:	96 38       	cpi	r25, 0x86	; 134
    3d1c:	c0 f7       	brcc	.-16     	; 0x3d0e <pow+0x9a>
    3d1e:	07 f8       	bld	r0, 7
    3d20:	0f 92       	push	r0
    3d22:	e8 94       	clt
    3d24:	2b e3       	ldi	r18, 0x3B	; 59
    3d26:	3a ea       	ldi	r19, 0xAA	; 170
    3d28:	48 eb       	ldi	r20, 0xB8	; 184
    3d2a:	5f e7       	ldi	r21, 0x7F	; 127
    3d2c:	4e df       	rcall	.-356    	; 0x3bca <__mulsf3_pse>
    3d2e:	0f 92       	push	r0
    3d30:	0f 92       	push	r0
    3d32:	0f 92       	push	r0
    3d34:	4d b7       	in	r20, 0x3d	; 61
    3d36:	5e b7       	in	r21, 0x3e	; 62
    3d38:	0f 92       	push	r0
    3d3a:	c0 d0       	rcall	.+384    	; 0x3ebc <modf>
    3d3c:	e4 e5       	ldi	r30, 0x54	; 84
    3d3e:	f0 e0       	ldi	r31, 0x00	; 0
    3d40:	16 d0       	rcall	.+44     	; 0x3d6e <__fp_powser>
    3d42:	4f 91       	pop	r20
    3d44:	5f 91       	pop	r21
    3d46:	ef 91       	pop	r30
    3d48:	ff 91       	pop	r31
    3d4a:	e5 95       	asr	r30
    3d4c:	ee 1f       	adc	r30, r30
    3d4e:	ff 1f       	adc	r31, r31
    3d50:	49 f0       	breq	.+18     	; 0x3d64 <exp+0x4e>
    3d52:	fe 57       	subi	r31, 0x7E	; 126
    3d54:	e0 68       	ori	r30, 0x80	; 128
    3d56:	44 27       	eor	r20, r20
    3d58:	ee 0f       	add	r30, r30
    3d5a:	44 1f       	adc	r20, r20
    3d5c:	fa 95       	dec	r31
    3d5e:	e1 f7       	brne	.-8      	; 0x3d58 <exp+0x42>
    3d60:	41 95       	neg	r20
    3d62:	55 0b       	sbc	r21, r21
    3d64:	32 d0       	rcall	.+100    	; 0x3dca <ldexp>
    3d66:	0f 90       	pop	r0
    3d68:	07 fe       	sbrs	r0, 7
    3d6a:	26 c0       	rjmp	.+76     	; 0x3db8 <inverse>
    3d6c:	08 95       	ret

00003d6e <__fp_powser>:
    3d6e:	df 93       	push	r29
    3d70:	cf 93       	push	r28
    3d72:	1f 93       	push	r17
    3d74:	0f 93       	push	r16
    3d76:	ff 92       	push	r15
    3d78:	ef 92       	push	r14
    3d7a:	df 92       	push	r13
    3d7c:	7b 01       	movw	r14, r22
    3d7e:	8c 01       	movw	r16, r24
    3d80:	68 94       	set
    3d82:	05 c0       	rjmp	.+10     	; 0x3d8e <__fp_powser+0x20>
    3d84:	da 2e       	mov	r13, r26
    3d86:	ef 01       	movw	r28, r30
    3d88:	1e df       	rcall	.-452    	; 0x3bc6 <__mulsf3x>
    3d8a:	fe 01       	movw	r30, r28
    3d8c:	e8 94       	clt
    3d8e:	a5 91       	lpm	r26, Z+
    3d90:	25 91       	lpm	r18, Z+
    3d92:	35 91       	lpm	r19, Z+
    3d94:	45 91       	lpm	r20, Z+
    3d96:	55 91       	lpm	r21, Z+
    3d98:	ae f3       	brts	.-22     	; 0x3d84 <__fp_powser+0x16>
    3d9a:	ef 01       	movw	r28, r30
    3d9c:	67 dd       	rcall	.-1330   	; 0x386c <__addsf3x>
    3d9e:	fe 01       	movw	r30, r28
    3da0:	97 01       	movw	r18, r14
    3da2:	a8 01       	movw	r20, r16
    3da4:	da 94       	dec	r13
    3da6:	79 f7       	brne	.-34     	; 0x3d86 <__fp_powser+0x18>
    3da8:	df 90       	pop	r13
    3daa:	ef 90       	pop	r14
    3dac:	ff 90       	pop	r15
    3dae:	0f 91       	pop	r16
    3db0:	1f 91       	pop	r17
    3db2:	cf 91       	pop	r28
    3db4:	df 91       	pop	r29
    3db6:	08 95       	ret

00003db8 <inverse>:
    3db8:	9b 01       	movw	r18, r22
    3dba:	ac 01       	movw	r20, r24
    3dbc:	60 e0       	ldi	r22, 0x00	; 0
    3dbe:	70 e0       	ldi	r23, 0x00	; 0
    3dc0:	80 e8       	ldi	r24, 0x80	; 128
    3dc2:	9f e3       	ldi	r25, 0x3F	; 63
    3dc4:	aa cd       	rjmp	.-1196   	; 0x391a <__divsf3>
    3dc6:	9e ce       	rjmp	.-708    	; 0x3b04 <__fp_inf>
    3dc8:	ac c0       	rjmp	.+344    	; 0x3f22 <__fp_mpack>

00003dca <ldexp>:
    3dca:	cc de       	rcall	.-616    	; 0x3b64 <__fp_splitA>
    3dcc:	e8 f3       	brcs	.-6      	; 0x3dc8 <inverse+0x10>
    3dce:	99 23       	and	r25, r25
    3dd0:	d9 f3       	breq	.-10     	; 0x3dc8 <inverse+0x10>
    3dd2:	94 0f       	add	r25, r20
    3dd4:	51 1d       	adc	r21, r1
    3dd6:	bb f3       	brvs	.-18     	; 0x3dc6 <inverse+0xe>
    3dd8:	91 50       	subi	r25, 0x01	; 1
    3dda:	50 40       	sbci	r21, 0x00	; 0
    3ddc:	94 f0       	brlt	.+36     	; 0x3e02 <ldexp+0x38>
    3dde:	59 f0       	breq	.+22     	; 0x3df6 <ldexp+0x2c>
    3de0:	88 23       	and	r24, r24
    3de2:	32 f0       	brmi	.+12     	; 0x3df0 <ldexp+0x26>
    3de4:	66 0f       	add	r22, r22
    3de6:	77 1f       	adc	r23, r23
    3de8:	88 1f       	adc	r24, r24
    3dea:	91 50       	subi	r25, 0x01	; 1
    3dec:	50 40       	sbci	r21, 0x00	; 0
    3dee:	c1 f7       	brne	.-16     	; 0x3de0 <ldexp+0x16>
    3df0:	9e 3f       	cpi	r25, 0xFE	; 254
    3df2:	51 05       	cpc	r21, r1
    3df4:	44 f7       	brge	.-48     	; 0x3dc6 <inverse+0xe>
    3df6:	88 0f       	add	r24, r24
    3df8:	91 1d       	adc	r25, r1
    3dfa:	96 95       	lsr	r25
    3dfc:	87 95       	ror	r24
    3dfe:	97 f9       	bld	r25, 7
    3e00:	08 95       	ret
    3e02:	5f 3f       	cpi	r21, 0xFF	; 255
    3e04:	ac f0       	brlt	.+42     	; 0x3e30 <ldexp+0x66>
    3e06:	98 3e       	cpi	r25, 0xE8	; 232
    3e08:	9c f0       	brlt	.+38     	; 0x3e30 <ldexp+0x66>
    3e0a:	bb 27       	eor	r27, r27
    3e0c:	86 95       	lsr	r24
    3e0e:	77 95       	ror	r23
    3e10:	67 95       	ror	r22
    3e12:	b7 95       	ror	r27
    3e14:	08 f4       	brcc	.+2      	; 0x3e18 <ldexp+0x4e>
    3e16:	b1 60       	ori	r27, 0x01	; 1
    3e18:	93 95       	inc	r25
    3e1a:	c1 f7       	brne	.-16     	; 0x3e0c <ldexp+0x42>
    3e1c:	bb 0f       	add	r27, r27
    3e1e:	58 f7       	brcc	.-42     	; 0x3df6 <ldexp+0x2c>
    3e20:	11 f4       	brne	.+4      	; 0x3e26 <ldexp+0x5c>
    3e22:	60 ff       	sbrs	r22, 0
    3e24:	e8 cf       	rjmp	.-48     	; 0x3df6 <ldexp+0x2c>
    3e26:	6f 5f       	subi	r22, 0xFF	; 255
    3e28:	7f 4f       	sbci	r23, 0xFF	; 255
    3e2a:	8f 4f       	sbci	r24, 0xFF	; 255
    3e2c:	9f 4f       	sbci	r25, 0xFF	; 255
    3e2e:	e3 cf       	rjmp	.-58     	; 0x3df6 <ldexp+0x2c>
    3e30:	b4 ce       	rjmp	.-664    	; 0x3b9a <__fp_szero>
    3e32:	0e f0       	brts	.+2      	; 0x3e36 <ldexp+0x6c>
    3e34:	76 c0       	rjmp	.+236    	; 0x3f22 <__fp_mpack>
    3e36:	6c ce       	rjmp	.-808    	; 0x3b10 <__fp_nan>
    3e38:	68 94       	set
    3e3a:	64 ce       	rjmp	.-824    	; 0x3b04 <__fp_inf>

00003e3c <log>:
    3e3c:	93 de       	rcall	.-730    	; 0x3b64 <__fp_splitA>
    3e3e:	c8 f3       	brcs	.-14     	; 0x3e32 <ldexp+0x68>
    3e40:	99 23       	and	r25, r25
    3e42:	d1 f3       	breq	.-12     	; 0x3e38 <ldexp+0x6e>
    3e44:	c6 f3       	brts	.-16     	; 0x3e36 <ldexp+0x6c>
    3e46:	df 93       	push	r29
    3e48:	cf 93       	push	r28
    3e4a:	1f 93       	push	r17
    3e4c:	0f 93       	push	r16
    3e4e:	ff 92       	push	r15
    3e50:	c9 2f       	mov	r28, r25
    3e52:	dd 27       	eor	r29, r29
    3e54:	88 23       	and	r24, r24
    3e56:	2a f0       	brmi	.+10     	; 0x3e62 <log+0x26>
    3e58:	21 97       	sbiw	r28, 0x01	; 1
    3e5a:	66 0f       	add	r22, r22
    3e5c:	77 1f       	adc	r23, r23
    3e5e:	88 1f       	adc	r24, r24
    3e60:	da f7       	brpl	.-10     	; 0x3e58 <log+0x1c>
    3e62:	20 e0       	ldi	r18, 0x00	; 0
    3e64:	30 e0       	ldi	r19, 0x00	; 0
    3e66:	40 e8       	ldi	r20, 0x80	; 128
    3e68:	5f eb       	ldi	r21, 0xBF	; 191
    3e6a:	9f e3       	ldi	r25, 0x3F	; 63
    3e6c:	88 39       	cpi	r24, 0x98	; 152
    3e6e:	20 f0       	brcs	.+8      	; 0x3e78 <log+0x3c>
    3e70:	80 3e       	cpi	r24, 0xE0	; 224
    3e72:	30 f0       	brcs	.+12     	; 0x3e80 <log+0x44>
    3e74:	21 96       	adiw	r28, 0x01	; 1
    3e76:	8f 77       	andi	r24, 0x7F	; 127
    3e78:	e8 dc       	rcall	.-1584   	; 0x384a <__addsf3>
    3e7a:	ec e7       	ldi	r30, 0x7C	; 124
    3e7c:	f0 e0       	ldi	r31, 0x00	; 0
    3e7e:	03 c0       	rjmp	.+6      	; 0x3e86 <log+0x4a>
    3e80:	e4 dc       	rcall	.-1592   	; 0x384a <__addsf3>
    3e82:	e9 ea       	ldi	r30, 0xA9	; 169
    3e84:	f0 e0       	ldi	r31, 0x00	; 0
    3e86:	73 df       	rcall	.-282    	; 0x3d6e <__fp_powser>
    3e88:	8b 01       	movw	r16, r22
    3e8a:	be 01       	movw	r22, r28
    3e8c:	ec 01       	movw	r28, r24
    3e8e:	fb 2e       	mov	r15, r27
    3e90:	6f 57       	subi	r22, 0x7F	; 127
    3e92:	71 09       	sbc	r23, r1
    3e94:	75 95       	asr	r23
    3e96:	77 1f       	adc	r23, r23
    3e98:	88 0b       	sbc	r24, r24
    3e9a:	99 0b       	sbc	r25, r25
    3e9c:	d4 dd       	rcall	.-1112   	; 0x3a46 <__floatsisf>
    3e9e:	28 e1       	ldi	r18, 0x18	; 24
    3ea0:	32 e7       	ldi	r19, 0x72	; 114
    3ea2:	41 e3       	ldi	r20, 0x31	; 49
    3ea4:	5f e3       	ldi	r21, 0x3F	; 63
    3ea6:	8f de       	rcall	.-738    	; 0x3bc6 <__mulsf3x>
    3ea8:	af 2d       	mov	r26, r15
    3eaa:	98 01       	movw	r18, r16
    3eac:	ae 01       	movw	r20, r28
    3eae:	ff 90       	pop	r15
    3eb0:	0f 91       	pop	r16
    3eb2:	1f 91       	pop	r17
    3eb4:	cf 91       	pop	r28
    3eb6:	df 91       	pop	r29
    3eb8:	d9 dc       	rcall	.-1614   	; 0x386c <__addsf3x>
    3eba:	3b ce       	rjmp	.-906    	; 0x3b32 <__fp_round>

00003ebc <modf>:
    3ebc:	fa 01       	movw	r30, r20
    3ebe:	dc 01       	movw	r26, r24
    3ec0:	aa 0f       	add	r26, r26
    3ec2:	bb 1f       	adc	r27, r27
    3ec4:	9b 01       	movw	r18, r22
    3ec6:	ac 01       	movw	r20, r24
    3ec8:	bf 57       	subi	r27, 0x7F	; 127
    3eca:	28 f4       	brcc	.+10     	; 0x3ed6 <modf+0x1a>
    3ecc:	22 27       	eor	r18, r18
    3ece:	33 27       	eor	r19, r19
    3ed0:	44 27       	eor	r20, r20
    3ed2:	50 78       	andi	r21, 0x80	; 128
    3ed4:	1f c0       	rjmp	.+62     	; 0x3f14 <modf+0x58>
    3ed6:	b7 51       	subi	r27, 0x17	; 23
    3ed8:	88 f4       	brcc	.+34     	; 0x3efc <modf+0x40>
    3eda:	ab 2f       	mov	r26, r27
    3edc:	00 24       	eor	r0, r0
    3ede:	46 95       	lsr	r20
    3ee0:	37 95       	ror	r19
    3ee2:	27 95       	ror	r18
    3ee4:	01 1c       	adc	r0, r1
    3ee6:	a3 95       	inc	r26
    3ee8:	d2 f3       	brmi	.-12     	; 0x3ede <modf+0x22>
    3eea:	00 20       	and	r0, r0
    3eec:	69 f0       	breq	.+26     	; 0x3f08 <modf+0x4c>
    3eee:	22 0f       	add	r18, r18
    3ef0:	33 1f       	adc	r19, r19
    3ef2:	44 1f       	adc	r20, r20
    3ef4:	b3 95       	inc	r27
    3ef6:	da f3       	brmi	.-10     	; 0x3eee <modf+0x32>
    3ef8:	0d d0       	rcall	.+26     	; 0x3f14 <modf+0x58>
    3efa:	a6 cc       	rjmp	.-1716   	; 0x3848 <__subsf3>
    3efc:	61 30       	cpi	r22, 0x01	; 1
    3efe:	71 05       	cpc	r23, r1
    3f00:	a0 e8       	ldi	r26, 0x80	; 128
    3f02:	8a 07       	cpc	r24, r26
    3f04:	b9 46       	sbci	r27, 0x69	; 105
    3f06:	30 f4       	brcc	.+12     	; 0x3f14 <modf+0x58>
    3f08:	9b 01       	movw	r18, r22
    3f0a:	ac 01       	movw	r20, r24
    3f0c:	66 27       	eor	r22, r22
    3f0e:	77 27       	eor	r23, r23
    3f10:	88 27       	eor	r24, r24
    3f12:	90 78       	andi	r25, 0x80	; 128
    3f14:	30 96       	adiw	r30, 0x00	; 0
    3f16:	21 f0       	breq	.+8      	; 0x3f20 <modf+0x64>
    3f18:	20 83       	st	Z, r18
    3f1a:	31 83       	std	Z+1, r19	; 0x01
    3f1c:	42 83       	std	Z+2, r20	; 0x02
    3f1e:	53 83       	std	Z+3, r21	; 0x03
    3f20:	08 95       	ret

00003f22 <__fp_mpack>:
    3f22:	9f 3f       	cpi	r25, 0xFF	; 255
    3f24:	31 f0       	breq	.+12     	; 0x3f32 <__fp_mpack_finite+0xc>

00003f26 <__fp_mpack_finite>:
    3f26:	91 50       	subi	r25, 0x01	; 1
    3f28:	20 f4       	brcc	.+8      	; 0x3f32 <__fp_mpack_finite+0xc>
    3f2a:	87 95       	ror	r24
    3f2c:	77 95       	ror	r23
    3f2e:	67 95       	ror	r22
    3f30:	b7 95       	ror	r27
    3f32:	88 0f       	add	r24, r24
    3f34:	91 1d       	adc	r25, r1
    3f36:	96 95       	lsr	r25
    3f38:	87 95       	ror	r24
    3f3a:	97 f9       	bld	r25, 7
    3f3c:	08 95       	ret

00003f3e <_exit>:
    3f3e:	f8 94       	cli

00003f40 <__stop_program>:
    3f40:	ff cf       	rjmp	.-2      	; 0x3f40 <__stop_program>
