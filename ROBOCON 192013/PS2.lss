
PS2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003d22  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000016  00800200  00800200  00003d96  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  00003d96  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000000d3  00000000  00000000  00003db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000ecf  00000000  00000000  00003e89  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000010f  00000000  00000000  00004d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000125e  00000000  00000000  00004e67  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000060  00000000  00000000  000060c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000150  00000000  00000000  00006128  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e2       	ldi	r30, 0x22	; 34
      fc:	fd e3       	ldi	r31, 0x3D	; 61
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 30       	cpi	r26, 0x00	; 0
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	12 e0       	ldi	r17, 0x02	; 2
     110:	a0 e0       	ldi	r26, 0x00	; 0
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a6 31       	cpi	r26, 0x16	; 22
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 5b 1b 	call	0x36b6	; 0x36b6 <main>
     122:	0c 94 8f 1e 	jmp	0x3d1e	; 0x3d1e <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <delay>:
		__ticks = (uint16_t)__tmp;
	_delay_loop_2(__ticks);
}

void delay(double seconds)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
     132:	64 97       	sbiw	r28, 0x14	; 20
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	f8 94       	cli
     138:	de bf       	out	0x3e, r29	; 62
     13a:	0f be       	out	0x3f, r0	; 63
     13c:	cd bf       	out	0x3d, r28	; 61
     13e:	69 8b       	std	Y+17, r22	; 0x11
     140:	7a 8b       	std	Y+18, r23	; 0x12
     142:	8b 8b       	std	Y+19, r24	; 0x13
     144:	9c 8b       	std	Y+20, r25	; 0x14
     146:	90 c0       	rjmp	.+288    	; 0x268 <delay+0x13e>

	int i;
	for(;seconds;seconds--)
	for(i=0;i<100;i++)
     148:	18 8a       	std	Y+16, r1	; 0x10
     14a:	1f 86       	std	Y+15, r1	; 0x0f
     14c:	77 c0       	rjmp	.+238    	; 0x23c <delay+0x112>
     14e:	80 e0       	ldi	r24, 0x00	; 0
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	a0 e2       	ldi	r26, 0x20	; 32
     154:	b1 e4       	ldi	r27, 0x41	; 65
     156:	8b 87       	std	Y+11, r24	; 0x0b
     158:	9c 87       	std	Y+12, r25	; 0x0c
     15a:	ad 87       	std	Y+13, r26	; 0x0d
     15c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     15e:	6b 85       	ldd	r22, Y+11	; 0x0b
     160:	7c 85       	ldd	r23, Y+12	; 0x0c
     162:	8d 85       	ldd	r24, Y+13	; 0x0d
     164:	9e 85       	ldd	r25, Y+14	; 0x0e
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	4a e7       	ldi	r20, 0x7A	; 122
     16c:	55 e4       	ldi	r21, 0x45	; 69
     16e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     172:	dc 01       	movw	r26, r24
     174:	cb 01       	movw	r24, r22
     176:	8f 83       	std	Y+7, r24	; 0x07
     178:	98 87       	std	Y+8, r25	; 0x08
     17a:	a9 87       	std	Y+9, r26	; 0x09
     17c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     17e:	6f 81       	ldd	r22, Y+7	; 0x07
     180:	78 85       	ldd	r23, Y+8	; 0x08
     182:	89 85       	ldd	r24, Y+9	; 0x09
     184:	9a 85       	ldd	r25, Y+10	; 0x0a
     186:	20 e0       	ldi	r18, 0x00	; 0
     188:	30 e0       	ldi	r19, 0x00	; 0
     18a:	40 e8       	ldi	r20, 0x80	; 128
     18c:	5f e3       	ldi	r21, 0x3F	; 63
     18e:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     192:	88 23       	and	r24, r24
     194:	2c f4       	brge	.+10     	; 0x1a0 <delay+0x76>
		__ticks = 1;
     196:	81 e0       	ldi	r24, 0x01	; 1
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	9e 83       	std	Y+6, r25	; 0x06
     19c:	8d 83       	std	Y+5, r24	; 0x05
     19e:	3f c0       	rjmp	.+126    	; 0x21e <delay+0xf4>
	else if (__tmp > 65535)
     1a0:	6f 81       	ldd	r22, Y+7	; 0x07
     1a2:	78 85       	ldd	r23, Y+8	; 0x08
     1a4:	89 85       	ldd	r24, Y+9	; 0x09
     1a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     1a8:	20 e0       	ldi	r18, 0x00	; 0
     1aa:	3f ef       	ldi	r19, 0xFF	; 255
     1ac:	4f e7       	ldi	r20, 0x7F	; 127
     1ae:	57 e4       	ldi	r21, 0x47	; 71
     1b0:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     1b4:	18 16       	cp	r1, r24
     1b6:	4c f5       	brge	.+82     	; 0x20a <delay+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1b8:	6b 85       	ldd	r22, Y+11	; 0x0b
     1ba:	7c 85       	ldd	r23, Y+12	; 0x0c
     1bc:	8d 85       	ldd	r24, Y+13	; 0x0d
     1be:	9e 85       	ldd	r25, Y+14	; 0x0e
     1c0:	20 e0       	ldi	r18, 0x00	; 0
     1c2:	30 e0       	ldi	r19, 0x00	; 0
     1c4:	40 e2       	ldi	r20, 0x20	; 32
     1c6:	51 e4       	ldi	r21, 0x41	; 65
     1c8:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     1cc:	dc 01       	movw	r26, r24
     1ce:	cb 01       	movw	r24, r22
     1d0:	bc 01       	movw	r22, r24
     1d2:	cd 01       	movw	r24, r26
     1d4:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     1d8:	dc 01       	movw	r26, r24
     1da:	cb 01       	movw	r24, r22
     1dc:	9e 83       	std	Y+6, r25	; 0x06
     1de:	8d 83       	std	Y+5, r24	; 0x05
     1e0:	0f c0       	rjmp	.+30     	; 0x200 <delay+0xd6>
     1e2:	80 e9       	ldi	r24, 0x90	; 144
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	9c 83       	std	Y+4, r25	; 0x04
     1e8:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1ea:	8b 81       	ldd	r24, Y+3	; 0x03
     1ec:	9c 81       	ldd	r25, Y+4	; 0x04
     1ee:	01 97       	sbiw	r24, 0x01	; 1
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <delay+0xc4>
     1f2:	9c 83       	std	Y+4, r25	; 0x04
     1f4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1f6:	8d 81       	ldd	r24, Y+5	; 0x05
     1f8:	9e 81       	ldd	r25, Y+6	; 0x06
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	9e 83       	std	Y+6, r25	; 0x06
     1fe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     200:	8d 81       	ldd	r24, Y+5	; 0x05
     202:	9e 81       	ldd	r25, Y+6	; 0x06
     204:	00 97       	sbiw	r24, 0x00	; 0
     206:	69 f7       	brne	.-38     	; 0x1e2 <delay+0xb8>
     208:	14 c0       	rjmp	.+40     	; 0x232 <delay+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     20a:	6f 81       	ldd	r22, Y+7	; 0x07
     20c:	78 85       	ldd	r23, Y+8	; 0x08
     20e:	89 85       	ldd	r24, Y+9	; 0x09
     210:	9a 85       	ldd	r25, Y+10	; 0x0a
     212:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     216:	dc 01       	movw	r26, r24
     218:	cb 01       	movw	r24, r22
     21a:	9e 83       	std	Y+6, r25	; 0x06
     21c:	8d 83       	std	Y+5, r24	; 0x05
     21e:	8d 81       	ldd	r24, Y+5	; 0x05
     220:	9e 81       	ldd	r25, Y+6	; 0x06
     222:	9a 83       	std	Y+2, r25	; 0x02
     224:	89 83       	std	Y+1, r24	; 0x01
     226:	89 81       	ldd	r24, Y+1	; 0x01
     228:	9a 81       	ldd	r25, Y+2	; 0x02
     22a:	01 97       	sbiw	r24, 0x01	; 1
     22c:	f1 f7       	brne	.-4      	; 0x22a <delay+0x100>
     22e:	9a 83       	std	Y+2, r25	; 0x02
     230:	89 83       	std	Y+1, r24	; 0x01
void delay(double seconds)
{

	int i;
	for(;seconds;seconds--)
	for(i=0;i<100;i++)
     232:	8f 85       	ldd	r24, Y+15	; 0x0f
     234:	98 89       	ldd	r25, Y+16	; 0x10
     236:	01 96       	adiw	r24, 0x01	; 1
     238:	98 8b       	std	Y+16, r25	; 0x10
     23a:	8f 87       	std	Y+15, r24	; 0x0f
     23c:	8f 85       	ldd	r24, Y+15	; 0x0f
     23e:	98 89       	ldd	r25, Y+16	; 0x10
     240:	84 36       	cpi	r24, 0x64	; 100
     242:	91 05       	cpc	r25, r1
     244:	0c f4       	brge	.+2      	; 0x248 <delay+0x11e>
     246:	83 cf       	rjmp	.-250    	; 0x14e <delay+0x24>

void delay(double seconds)
{

	int i;
	for(;seconds;seconds--)
     248:	69 89       	ldd	r22, Y+17	; 0x11
     24a:	7a 89       	ldd	r23, Y+18	; 0x12
     24c:	8b 89       	ldd	r24, Y+19	; 0x13
     24e:	9c 89       	ldd	r25, Y+20	; 0x14
     250:	20 e0       	ldi	r18, 0x00	; 0
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e8       	ldi	r20, 0x80	; 128
     256:	5f e3       	ldi	r21, 0x3F	; 63
     258:	0e 94 b6 1c 	call	0x396c	; 0x396c <__subsf3>
     25c:	dc 01       	movw	r26, r24
     25e:	cb 01       	movw	r24, r22
     260:	89 8b       	std	Y+17, r24	; 0x11
     262:	9a 8b       	std	Y+18, r25	; 0x12
     264:	ab 8b       	std	Y+19, r26	; 0x13
     266:	bc 8b       	std	Y+20, r27	; 0x14
     268:	69 89       	ldd	r22, Y+17	; 0x11
     26a:	7a 89       	ldd	r23, Y+18	; 0x12
     26c:	8b 89       	ldd	r24, Y+19	; 0x13
     26e:	9c 89       	ldd	r25, Y+20	; 0x14
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	30 e0       	ldi	r19, 0x00	; 0
     274:	40 e0       	ldi	r20, 0x00	; 0
     276:	50 e0       	ldi	r21, 0x00	; 0
     278:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     27c:	88 23       	and	r24, r24
     27e:	09 f0       	breq	.+2      	; 0x282 <delay+0x158>
     280:	63 cf       	rjmp	.-314    	; 0x148 <delay+0x1e>
	for(i=0;i<100;i++)
		_delay_ms(10);
}
     282:	64 96       	adiw	r28, 0x14	; 20
     284:	0f b6       	in	r0, 0x3f	; 63
     286:	f8 94       	cli
     288:	de bf       	out	0x3e, r29	; 62
     28a:	0f be       	out	0x3f, r0	; 63
     28c:	cd bf       	out	0x3d, r28	; 61
     28e:	cf 91       	pop	r28
     290:	df 91       	pop	r29
     292:	08 95       	ret

00000294 <delay_10ms>:


void delay_10ms(double seconds)
{
     294:	df 93       	push	r29
     296:	cf 93       	push	r28
     298:	cd b7       	in	r28, 0x3d	; 61
     29a:	de b7       	in	r29, 0x3e	; 62
     29c:	62 97       	sbiw	r28, 0x12	; 18
     29e:	0f b6       	in	r0, 0x3f	; 63
     2a0:	f8 94       	cli
     2a2:	de bf       	out	0x3e, r29	; 62
     2a4:	0f be       	out	0x3f, r0	; 63
     2a6:	cd bf       	out	0x3d, r28	; 61
     2a8:	6f 87       	std	Y+15, r22	; 0x0f
     2aa:	78 8b       	std	Y+16, r23	; 0x10
     2ac:	89 8b       	std	Y+17, r24	; 0x11
     2ae:	9a 8b       	std	Y+18, r25	; 0x12
     2b0:	82 c0       	rjmp	.+260    	; 0x3b6 <delay_10ms+0x122>

	for(;seconds;seconds--)
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	a0 e2       	ldi	r26, 0x20	; 32
     2b8:	b1 e4       	ldi	r27, 0x41	; 65
     2ba:	8b 87       	std	Y+11, r24	; 0x0b
     2bc:	9c 87       	std	Y+12, r25	; 0x0c
     2be:	ad 87       	std	Y+13, r26	; 0x0d
     2c0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2c2:	6b 85       	ldd	r22, Y+11	; 0x0b
     2c4:	7c 85       	ldd	r23, Y+12	; 0x0c
     2c6:	8d 85       	ldd	r24, Y+13	; 0x0d
     2c8:	9e 85       	ldd	r25, Y+14	; 0x0e
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	4a e7       	ldi	r20, 0x7A	; 122
     2d0:	55 e4       	ldi	r21, 0x45	; 69
     2d2:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     2d6:	dc 01       	movw	r26, r24
     2d8:	cb 01       	movw	r24, r22
     2da:	8f 83       	std	Y+7, r24	; 0x07
     2dc:	98 87       	std	Y+8, r25	; 0x08
     2de:	a9 87       	std	Y+9, r26	; 0x09
     2e0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     2e2:	6f 81       	ldd	r22, Y+7	; 0x07
     2e4:	78 85       	ldd	r23, Y+8	; 0x08
     2e6:	89 85       	ldd	r24, Y+9	; 0x09
     2e8:	9a 85       	ldd	r25, Y+10	; 0x0a
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	40 e8       	ldi	r20, 0x80	; 128
     2f0:	5f e3       	ldi	r21, 0x3F	; 63
     2f2:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     2f6:	88 23       	and	r24, r24
     2f8:	2c f4       	brge	.+10     	; 0x304 <delay_10ms+0x70>
		__ticks = 1;
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	9e 83       	std	Y+6, r25	; 0x06
     300:	8d 83       	std	Y+5, r24	; 0x05
     302:	3f c0       	rjmp	.+126    	; 0x382 <delay_10ms+0xee>
	else if (__tmp > 65535)
     304:	6f 81       	ldd	r22, Y+7	; 0x07
     306:	78 85       	ldd	r23, Y+8	; 0x08
     308:	89 85       	ldd	r24, Y+9	; 0x09
     30a:	9a 85       	ldd	r25, Y+10	; 0x0a
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	3f ef       	ldi	r19, 0xFF	; 255
     310:	4f e7       	ldi	r20, 0x7F	; 127
     312:	57 e4       	ldi	r21, 0x47	; 71
     314:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     318:	18 16       	cp	r1, r24
     31a:	4c f5       	brge	.+82     	; 0x36e <delay_10ms+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     31c:	6b 85       	ldd	r22, Y+11	; 0x0b
     31e:	7c 85       	ldd	r23, Y+12	; 0x0c
     320:	8d 85       	ldd	r24, Y+13	; 0x0d
     322:	9e 85       	ldd	r25, Y+14	; 0x0e
     324:	20 e0       	ldi	r18, 0x00	; 0
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	40 e2       	ldi	r20, 0x20	; 32
     32a:	51 e4       	ldi	r21, 0x41	; 65
     32c:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     330:	dc 01       	movw	r26, r24
     332:	cb 01       	movw	r24, r22
     334:	bc 01       	movw	r22, r24
     336:	cd 01       	movw	r24, r26
     338:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     33c:	dc 01       	movw	r26, r24
     33e:	cb 01       	movw	r24, r22
     340:	9e 83       	std	Y+6, r25	; 0x06
     342:	8d 83       	std	Y+5, r24	; 0x05
     344:	0f c0       	rjmp	.+30     	; 0x364 <delay_10ms+0xd0>
     346:	80 e9       	ldi	r24, 0x90	; 144
     348:	91 e0       	ldi	r25, 0x01	; 1
     34a:	9c 83       	std	Y+4, r25	; 0x04
     34c:	8b 83       	std	Y+3, r24	; 0x03
     34e:	8b 81       	ldd	r24, Y+3	; 0x03
     350:	9c 81       	ldd	r25, Y+4	; 0x04
     352:	01 97       	sbiw	r24, 0x01	; 1
     354:	f1 f7       	brne	.-4      	; 0x352 <delay_10ms+0xbe>
     356:	9c 83       	std	Y+4, r25	; 0x04
     358:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     35a:	8d 81       	ldd	r24, Y+5	; 0x05
     35c:	9e 81       	ldd	r25, Y+6	; 0x06
     35e:	01 97       	sbiw	r24, 0x01	; 1
     360:	9e 83       	std	Y+6, r25	; 0x06
     362:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     364:	8d 81       	ldd	r24, Y+5	; 0x05
     366:	9e 81       	ldd	r25, Y+6	; 0x06
     368:	00 97       	sbiw	r24, 0x00	; 0
     36a:	69 f7       	brne	.-38     	; 0x346 <delay_10ms+0xb2>
     36c:	14 c0       	rjmp	.+40     	; 0x396 <delay_10ms+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     36e:	6f 81       	ldd	r22, Y+7	; 0x07
     370:	78 85       	ldd	r23, Y+8	; 0x08
     372:	89 85       	ldd	r24, Y+9	; 0x09
     374:	9a 85       	ldd	r25, Y+10	; 0x0a
     376:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     37a:	dc 01       	movw	r26, r24
     37c:	cb 01       	movw	r24, r22
     37e:	9e 83       	std	Y+6, r25	; 0x06
     380:	8d 83       	std	Y+5, r24	; 0x05
     382:	8d 81       	ldd	r24, Y+5	; 0x05
     384:	9e 81       	ldd	r25, Y+6	; 0x06
     386:	9a 83       	std	Y+2, r25	; 0x02
     388:	89 83       	std	Y+1, r24	; 0x01
     38a:	89 81       	ldd	r24, Y+1	; 0x01
     38c:	9a 81       	ldd	r25, Y+2	; 0x02
     38e:	01 97       	sbiw	r24, 0x01	; 1
     390:	f1 f7       	brne	.-4      	; 0x38e <delay_10ms+0xfa>
     392:	9a 83       	std	Y+2, r25	; 0x02
     394:	89 83       	std	Y+1, r24	; 0x01


void delay_10ms(double seconds)
{

	for(;seconds;seconds--)
     396:	6f 85       	ldd	r22, Y+15	; 0x0f
     398:	78 89       	ldd	r23, Y+16	; 0x10
     39a:	89 89       	ldd	r24, Y+17	; 0x11
     39c:	9a 89       	ldd	r25, Y+18	; 0x12
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	40 e8       	ldi	r20, 0x80	; 128
     3a4:	5f e3       	ldi	r21, 0x3F	; 63
     3a6:	0e 94 b6 1c 	call	0x396c	; 0x396c <__subsf3>
     3aa:	dc 01       	movw	r26, r24
     3ac:	cb 01       	movw	r24, r22
     3ae:	8f 87       	std	Y+15, r24	; 0x0f
     3b0:	98 8b       	std	Y+16, r25	; 0x10
     3b2:	a9 8b       	std	Y+17, r26	; 0x11
     3b4:	ba 8b       	std	Y+18, r27	; 0x12
     3b6:	6f 85       	ldd	r22, Y+15	; 0x0f
     3b8:	78 89       	ldd	r23, Y+16	; 0x10
     3ba:	89 89       	ldd	r24, Y+17	; 0x11
     3bc:	9a 89       	ldd	r25, Y+18	; 0x12
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	40 e0       	ldi	r20, 0x00	; 0
     3c4:	50 e0       	ldi	r21, 0x00	; 0
     3c6:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     3ca:	88 23       	and	r24, r24
     3cc:	09 f0       	breq	.+2      	; 0x3d0 <delay_10ms+0x13c>
     3ce:	71 cf       	rjmp	.-286    	; 0x2b2 <delay_10ms+0x1e>
	_delay_ms(10);
}
     3d0:	62 96       	adiw	r28, 0x12	; 18
     3d2:	0f b6       	in	r0, 0x3f	; 63
     3d4:	f8 94       	cli
     3d6:	de bf       	out	0x3e, r29	; 62
     3d8:	0f be       	out	0x3f, r0	; 63
     3da:	cd bf       	out	0x3d, r28	; 61
     3dc:	cf 91       	pop	r28
     3de:	df 91       	pop	r29
     3e0:	08 95       	ret

000003e2 <delay_10us>:

void delay_10us(int seconds)
{
     3e2:	df 93       	push	r29
     3e4:	cf 93       	push	r28
     3e6:	cd b7       	in	r28, 0x3d	; 61
     3e8:	de b7       	in	r29, 0x3e	; 62
     3ea:	6a 97       	sbiw	r28, 0x1a	; 26
     3ec:	0f b6       	in	r0, 0x3f	; 63
     3ee:	f8 94       	cli
     3f0:	de bf       	out	0x3e, r29	; 62
     3f2:	0f be       	out	0x3f, r0	; 63
     3f4:	cd bf       	out	0x3d, r28	; 61
     3f6:	9a 8f       	std	Y+26, r25	; 0x1a
     3f8:	89 8f       	std	Y+25, r24	; 0x19
     3fa:	c3 c0       	rjmp	.+390    	; 0x582 <delay_10us+0x1a0>

	for(;seconds;seconds--)
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	a0 e2       	ldi	r26, 0x20	; 32
     402:	b1 e4       	ldi	r27, 0x41	; 65
     404:	8d 8b       	std	Y+21, r24	; 0x15
     406:	9e 8b       	std	Y+22, r25	; 0x16
     408:	af 8b       	std	Y+23, r26	; 0x17
     40a:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     40c:	6d 89       	ldd	r22, Y+21	; 0x15
     40e:	7e 89       	ldd	r23, Y+22	; 0x16
     410:	8f 89       	ldd	r24, Y+23	; 0x17
     412:	98 8d       	ldd	r25, Y+24	; 0x18
     414:	2b ea       	ldi	r18, 0xAB	; 171
     416:	3a ea       	ldi	r19, 0xAA	; 170
     418:	4a ea       	ldi	r20, 0xAA	; 170
     41a:	50 e4       	ldi	r21, 0x40	; 64
     41c:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     420:	dc 01       	movw	r26, r24
     422:	cb 01       	movw	r24, r22
     424:	89 8b       	std	Y+17, r24	; 0x11
     426:	9a 8b       	std	Y+18, r25	; 0x12
     428:	ab 8b       	std	Y+19, r26	; 0x13
     42a:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     42c:	69 89       	ldd	r22, Y+17	; 0x11
     42e:	7a 89       	ldd	r23, Y+18	; 0x12
     430:	8b 89       	ldd	r24, Y+19	; 0x13
     432:	9c 89       	ldd	r25, Y+20	; 0x14
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	40 e8       	ldi	r20, 0x80	; 128
     43a:	5f e3       	ldi	r21, 0x3F	; 63
     43c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     440:	88 23       	and	r24, r24
     442:	1c f4       	brge	.+6      	; 0x44a <delay_10us+0x68>
		__ticks = 1;
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	88 8b       	std	Y+16, r24	; 0x10
     448:	91 c0       	rjmp	.+290    	; 0x56c <delay_10us+0x18a>
	else if (__tmp > 255)
     44a:	69 89       	ldd	r22, Y+17	; 0x11
     44c:	7a 89       	ldd	r23, Y+18	; 0x12
     44e:	8b 89       	ldd	r24, Y+19	; 0x13
     450:	9c 89       	ldd	r25, Y+20	; 0x14
     452:	20 e0       	ldi	r18, 0x00	; 0
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	4f e7       	ldi	r20, 0x7F	; 127
     458:	53 e4       	ldi	r21, 0x43	; 67
     45a:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     45e:	18 16       	cp	r1, r24
     460:	0c f0       	brlt	.+2      	; 0x464 <delay_10us+0x82>
     462:	7b c0       	rjmp	.+246    	; 0x55a <delay_10us+0x178>
	{
		_delay_ms(__us / 1000.0);
     464:	6d 89       	ldd	r22, Y+21	; 0x15
     466:	7e 89       	ldd	r23, Y+22	; 0x16
     468:	8f 89       	ldd	r24, Y+23	; 0x17
     46a:	98 8d       	ldd	r25, Y+24	; 0x18
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	4a e7       	ldi	r20, 0x7A	; 122
     472:	54 e4       	ldi	r21, 0x44	; 68
     474:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
     478:	dc 01       	movw	r26, r24
     47a:	cb 01       	movw	r24, r22
     47c:	8c 87       	std	Y+12, r24	; 0x0c
     47e:	9d 87       	std	Y+13, r25	; 0x0d
     480:	ae 87       	std	Y+14, r26	; 0x0e
     482:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     484:	6c 85       	ldd	r22, Y+12	; 0x0c
     486:	7d 85       	ldd	r23, Y+13	; 0x0d
     488:	8e 85       	ldd	r24, Y+14	; 0x0e
     48a:	9f 85       	ldd	r25, Y+15	; 0x0f
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	4a e7       	ldi	r20, 0x7A	; 122
     492:	55 e4       	ldi	r21, 0x45	; 69
     494:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	88 87       	std	Y+8, r24	; 0x08
     49e:	99 87       	std	Y+9, r25	; 0x09
     4a0:	aa 87       	std	Y+10, r26	; 0x0a
     4a2:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     4a4:	68 85       	ldd	r22, Y+8	; 0x08
     4a6:	79 85       	ldd	r23, Y+9	; 0x09
     4a8:	8a 85       	ldd	r24, Y+10	; 0x0a
     4aa:	9b 85       	ldd	r25, Y+11	; 0x0b
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	40 e8       	ldi	r20, 0x80	; 128
     4b2:	5f e3       	ldi	r21, 0x3F	; 63
     4b4:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     4b8:	88 23       	and	r24, r24
     4ba:	2c f4       	brge	.+10     	; 0x4c6 <delay_10us+0xe4>
		__ticks = 1;
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	9f 83       	std	Y+7, r25	; 0x07
     4c2:	8e 83       	std	Y+6, r24	; 0x06
     4c4:	3f c0       	rjmp	.+126    	; 0x544 <delay_10us+0x162>
	else if (__tmp > 65535)
     4c6:	68 85       	ldd	r22, Y+8	; 0x08
     4c8:	79 85       	ldd	r23, Y+9	; 0x09
     4ca:	8a 85       	ldd	r24, Y+10	; 0x0a
     4cc:	9b 85       	ldd	r25, Y+11	; 0x0b
     4ce:	20 e0       	ldi	r18, 0x00	; 0
     4d0:	3f ef       	ldi	r19, 0xFF	; 255
     4d2:	4f e7       	ldi	r20, 0x7F	; 127
     4d4:	57 e4       	ldi	r21, 0x47	; 71
     4d6:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     4da:	18 16       	cp	r1, r24
     4dc:	4c f5       	brge	.+82     	; 0x530 <delay_10us+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4de:	6c 85       	ldd	r22, Y+12	; 0x0c
     4e0:	7d 85       	ldd	r23, Y+13	; 0x0d
     4e2:	8e 85       	ldd	r24, Y+14	; 0x0e
     4e4:	9f 85       	ldd	r25, Y+15	; 0x0f
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	40 e2       	ldi	r20, 0x20	; 32
     4ec:	51 e4       	ldi	r21, 0x41	; 65
     4ee:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     4f2:	dc 01       	movw	r26, r24
     4f4:	cb 01       	movw	r24, r22
     4f6:	bc 01       	movw	r22, r24
     4f8:	cd 01       	movw	r24, r26
     4fa:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     4fe:	dc 01       	movw	r26, r24
     500:	cb 01       	movw	r24, r22
     502:	9f 83       	std	Y+7, r25	; 0x07
     504:	8e 83       	std	Y+6, r24	; 0x06
     506:	0f c0       	rjmp	.+30     	; 0x526 <delay_10us+0x144>
     508:	80 e9       	ldi	r24, 0x90	; 144
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	9d 83       	std	Y+5, r25	; 0x05
     50e:	8c 83       	std	Y+4, r24	; 0x04
     510:	8c 81       	ldd	r24, Y+4	; 0x04
     512:	9d 81       	ldd	r25, Y+5	; 0x05
     514:	01 97       	sbiw	r24, 0x01	; 1
     516:	f1 f7       	brne	.-4      	; 0x514 <delay_10us+0x132>
     518:	9d 83       	std	Y+5, r25	; 0x05
     51a:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     51c:	8e 81       	ldd	r24, Y+6	; 0x06
     51e:	9f 81       	ldd	r25, Y+7	; 0x07
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	9f 83       	std	Y+7, r25	; 0x07
     524:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     526:	8e 81       	ldd	r24, Y+6	; 0x06
     528:	9f 81       	ldd	r25, Y+7	; 0x07
     52a:	00 97       	sbiw	r24, 0x00	; 0
     52c:	69 f7       	brne	.-38     	; 0x508 <delay_10us+0x126>
     52e:	24 c0       	rjmp	.+72     	; 0x578 <delay_10us+0x196>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     530:	68 85       	ldd	r22, Y+8	; 0x08
     532:	79 85       	ldd	r23, Y+9	; 0x09
     534:	8a 85       	ldd	r24, Y+10	; 0x0a
     536:	9b 85       	ldd	r25, Y+11	; 0x0b
     538:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     53c:	dc 01       	movw	r26, r24
     53e:	cb 01       	movw	r24, r22
     540:	9f 83       	std	Y+7, r25	; 0x07
     542:	8e 83       	std	Y+6, r24	; 0x06
     544:	8e 81       	ldd	r24, Y+6	; 0x06
     546:	9f 81       	ldd	r25, Y+7	; 0x07
     548:	9b 83       	std	Y+3, r25	; 0x03
     54a:	8a 83       	std	Y+2, r24	; 0x02
     54c:	8a 81       	ldd	r24, Y+2	; 0x02
     54e:	9b 81       	ldd	r25, Y+3	; 0x03
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	f1 f7       	brne	.-4      	; 0x550 <delay_10us+0x16e>
     554:	9b 83       	std	Y+3, r25	; 0x03
     556:	8a 83       	std	Y+2, r24	; 0x02
     558:	0f c0       	rjmp	.+30     	; 0x578 <delay_10us+0x196>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     55a:	69 89       	ldd	r22, Y+17	; 0x11
     55c:	7a 89       	ldd	r23, Y+18	; 0x12
     55e:	8b 89       	ldd	r24, Y+19	; 0x13
     560:	9c 89       	ldd	r25, Y+20	; 0x14
     562:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     566:	dc 01       	movw	r26, r24
     568:	cb 01       	movw	r24, r22
     56a:	88 8b       	std	Y+16, r24	; 0x10
     56c:	88 89       	ldd	r24, Y+16	; 0x10
     56e:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     570:	89 81       	ldd	r24, Y+1	; 0x01
     572:	8a 95       	dec	r24
     574:	f1 f7       	brne	.-4      	; 0x572 <delay_10us+0x190>
     576:	89 83       	std	Y+1, r24	; 0x01
}

void delay_10us(int seconds)
{

	for(;seconds;seconds--)
     578:	89 8d       	ldd	r24, Y+25	; 0x19
     57a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     57c:	01 97       	sbiw	r24, 0x01	; 1
     57e:	9a 8f       	std	Y+26, r25	; 0x1a
     580:	89 8f       	std	Y+25, r24	; 0x19
     582:	89 8d       	ldd	r24, Y+25	; 0x19
     584:	9a 8d       	ldd	r25, Y+26	; 0x1a
     586:	00 97       	sbiw	r24, 0x00	; 0
     588:	09 f0       	breq	.+2      	; 0x58c <delay_10us+0x1aa>
     58a:	38 cf       	rjmp	.-400    	; 0x3fc <delay_10us+0x1a>
	_delay_us(10);
}
     58c:	6a 96       	adiw	r28, 0x1a	; 26
     58e:	0f b6       	in	r0, 0x3f	; 63
     590:	f8 94       	cli
     592:	de bf       	out	0x3e, r29	; 62
     594:	0f be       	out	0x3f, r0	; 63
     596:	cd bf       	out	0x3d, r28	; 61
     598:	cf 91       	pop	r28
     59a:	df 91       	pop	r29
     59c:	08 95       	ret

0000059e <readgamepad>:
#define ps2dat 1
#define ps2port PORTC
#define ps2in PINC

void readgamepad()
{
     59e:	0f 93       	push	r16
     5a0:	1f 93       	push	r17
     5a2:	df 93       	push	r29
     5a4:	cf 93       	push	r28
     5a6:	cd b7       	in	r28, 0x3d	; 61
     5a8:	de b7       	in	r29, 0x3e	; 62
     5aa:	c8 5c       	subi	r28, 0xC8	; 200
     5ac:	d1 40       	sbci	r29, 0x01	; 1
     5ae:	0f b6       	in	r0, 0x3f	; 63
     5b0:	f8 94       	cli
     5b2:	de bf       	out	0x3e, r29	; 62
     5b4:	0f be       	out	0x3f, r0	; 63
     5b6:	cd bf       	out	0x3d, r28	; 61
	
	sbi(ps2port,ps2cmd);
     5b8:	a8 e2       	ldi	r26, 0x28	; 40
     5ba:	b0 e0       	ldi	r27, 0x00	; 0
     5bc:	e8 e2       	ldi	r30, 0x28	; 40
     5be:	f0 e0       	ldi	r31, 0x00	; 0
     5c0:	80 81       	ld	r24, Z
     5c2:	84 60       	ori	r24, 0x04	; 4
     5c4:	8c 93       	st	X, r24
	sbi(ps2port,ps2clk);
     5c6:	a8 e2       	ldi	r26, 0x28	; 40
     5c8:	b0 e0       	ldi	r27, 0x00	; 0
     5ca:	e8 e2       	ldi	r30, 0x28	; 40
     5cc:	f0 e0       	ldi	r31, 0x00	; 0
     5ce:	80 81       	ld	r24, Z
     5d0:	81 60       	ori	r24, 0x01	; 1
     5d2:	8c 93       	st	X, r24
	cbi(ps2port,ps2att);
     5d4:	a8 e2       	ldi	r26, 0x28	; 40
     5d6:	b0 e0       	ldi	r27, 0x00	; 0
     5d8:	e8 e2       	ldi	r30, 0x28	; 40
     5da:	f0 e0       	ldi	r31, 0x00	; 0
     5dc:	80 81       	ld	r24, Z
     5de:	8f 7e       	andi	r24, 0xEF	; 239
     5e0:	8c 93       	st	X, r24
     5e2:	fe 01       	movw	r30, r28
     5e4:	eb 53       	subi	r30, 0x3B	; 59
     5e6:	fe 4f       	sbci	r31, 0xFE	; 254
     5e8:	80 e0       	ldi	r24, 0x00	; 0
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	a0 ef       	ldi	r26, 0xF0	; 240
     5ee:	b1 e4       	ldi	r27, 0x41	; 65
     5f0:	80 83       	st	Z, r24
     5f2:	91 83       	std	Z+1, r25	; 0x01
     5f4:	a2 83       	std	Z+2, r26	; 0x02
     5f6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     5f8:	8e 01       	movw	r16, r28
     5fa:	0f 53       	subi	r16, 0x3F	; 63
     5fc:	1e 4f       	sbci	r17, 0xFE	; 254
     5fe:	fe 01       	movw	r30, r28
     600:	eb 53       	subi	r30, 0x3B	; 59
     602:	fe 4f       	sbci	r31, 0xFE	; 254
     604:	60 81       	ld	r22, Z
     606:	71 81       	ldd	r23, Z+1	; 0x01
     608:	82 81       	ldd	r24, Z+2	; 0x02
     60a:	93 81       	ldd	r25, Z+3	; 0x03
     60c:	2b ea       	ldi	r18, 0xAB	; 171
     60e:	3a ea       	ldi	r19, 0xAA	; 170
     610:	4a ea       	ldi	r20, 0xAA	; 170
     612:	50 e4       	ldi	r21, 0x40	; 64
     614:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     618:	dc 01       	movw	r26, r24
     61a:	cb 01       	movw	r24, r22
     61c:	f8 01       	movw	r30, r16
     61e:	80 83       	st	Z, r24
     620:	91 83       	std	Z+1, r25	; 0x01
     622:	a2 83       	std	Z+2, r26	; 0x02
     624:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     626:	fe 01       	movw	r30, r28
     628:	ef 53       	subi	r30, 0x3F	; 63
     62a:	fe 4f       	sbci	r31, 0xFE	; 254
     62c:	60 81       	ld	r22, Z
     62e:	71 81       	ldd	r23, Z+1	; 0x01
     630:	82 81       	ldd	r24, Z+2	; 0x02
     632:	93 81       	ldd	r25, Z+3	; 0x03
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	40 e8       	ldi	r20, 0x80	; 128
     63a:	5f e3       	ldi	r21, 0x3F	; 63
     63c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     640:	88 23       	and	r24, r24
     642:	34 f4       	brge	.+12     	; 0x650 <readgamepad+0xb2>
		__ticks = 1;
     644:	fe 01       	movw	r30, r28
     646:	e0 54       	subi	r30, 0x40	; 64
     648:	fe 4f       	sbci	r31, 0xFE	; 254
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	80 83       	st	Z, r24
     64e:	e0 c0       	rjmp	.+448    	; 0x810 <readgamepad+0x272>
	else if (__tmp > 255)
     650:	fe 01       	movw	r30, r28
     652:	ef 53       	subi	r30, 0x3F	; 63
     654:	fe 4f       	sbci	r31, 0xFE	; 254
     656:	60 81       	ld	r22, Z
     658:	71 81       	ldd	r23, Z+1	; 0x01
     65a:	82 81       	ldd	r24, Z+2	; 0x02
     65c:	93 81       	ldd	r25, Z+3	; 0x03
     65e:	20 e0       	ldi	r18, 0x00	; 0
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	4f e7       	ldi	r20, 0x7F	; 127
     664:	53 e4       	ldi	r21, 0x43	; 67
     666:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     66a:	18 16       	cp	r1, r24
     66c:	0c f0       	brlt	.+2      	; 0x670 <readgamepad+0xd2>
     66e:	c0 c0       	rjmp	.+384    	; 0x7f0 <readgamepad+0x252>
	{
		_delay_ms(__us / 1000.0);
     670:	fe 01       	movw	r30, r28
     672:	eb 53       	subi	r30, 0x3B	; 59
     674:	fe 4f       	sbci	r31, 0xFE	; 254
     676:	60 81       	ld	r22, Z
     678:	71 81       	ldd	r23, Z+1	; 0x01
     67a:	82 81       	ldd	r24, Z+2	; 0x02
     67c:	93 81       	ldd	r25, Z+3	; 0x03
     67e:	20 e0       	ldi	r18, 0x00	; 0
     680:	30 e0       	ldi	r19, 0x00	; 0
     682:	4a e7       	ldi	r20, 0x7A	; 122
     684:	54 e4       	ldi	r21, 0x44	; 68
     686:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
     68a:	dc 01       	movw	r26, r24
     68c:	cb 01       	movw	r24, r22
     68e:	fe 01       	movw	r30, r28
     690:	e4 54       	subi	r30, 0x44	; 68
     692:	fe 4f       	sbci	r31, 0xFE	; 254
     694:	80 83       	st	Z, r24
     696:	91 83       	std	Z+1, r25	; 0x01
     698:	a2 83       	std	Z+2, r26	; 0x02
     69a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     69c:	8e 01       	movw	r16, r28
     69e:	08 54       	subi	r16, 0x48	; 72
     6a0:	1e 4f       	sbci	r17, 0xFE	; 254
     6a2:	fe 01       	movw	r30, r28
     6a4:	e4 54       	subi	r30, 0x44	; 68
     6a6:	fe 4f       	sbci	r31, 0xFE	; 254
     6a8:	60 81       	ld	r22, Z
     6aa:	71 81       	ldd	r23, Z+1	; 0x01
     6ac:	82 81       	ldd	r24, Z+2	; 0x02
     6ae:	93 81       	ldd	r25, Z+3	; 0x03
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	4a e7       	ldi	r20, 0x7A	; 122
     6b6:	55 e4       	ldi	r21, 0x45	; 69
     6b8:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     6bc:	dc 01       	movw	r26, r24
     6be:	cb 01       	movw	r24, r22
     6c0:	f8 01       	movw	r30, r16
     6c2:	80 83       	st	Z, r24
     6c4:	91 83       	std	Z+1, r25	; 0x01
     6c6:	a2 83       	std	Z+2, r26	; 0x02
     6c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     6ca:	fe 01       	movw	r30, r28
     6cc:	e8 54       	subi	r30, 0x48	; 72
     6ce:	fe 4f       	sbci	r31, 0xFE	; 254
     6d0:	60 81       	ld	r22, Z
     6d2:	71 81       	ldd	r23, Z+1	; 0x01
     6d4:	82 81       	ldd	r24, Z+2	; 0x02
     6d6:	93 81       	ldd	r25, Z+3	; 0x03
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	40 e8       	ldi	r20, 0x80	; 128
     6de:	5f e3       	ldi	r21, 0x3F	; 63
     6e0:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     6e4:	88 23       	and	r24, r24
     6e6:	44 f4       	brge	.+16     	; 0x6f8 <readgamepad+0x15a>
		__ticks = 1;
     6e8:	fe 01       	movw	r30, r28
     6ea:	ea 54       	subi	r30, 0x4A	; 74
     6ec:	fe 4f       	sbci	r31, 0xFE	; 254
     6ee:	81 e0       	ldi	r24, 0x01	; 1
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	91 83       	std	Z+1, r25	; 0x01
     6f4:	80 83       	st	Z, r24
     6f6:	64 c0       	rjmp	.+200    	; 0x7c0 <readgamepad+0x222>
	else if (__tmp > 65535)
     6f8:	fe 01       	movw	r30, r28
     6fa:	e8 54       	subi	r30, 0x48	; 72
     6fc:	fe 4f       	sbci	r31, 0xFE	; 254
     6fe:	60 81       	ld	r22, Z
     700:	71 81       	ldd	r23, Z+1	; 0x01
     702:	82 81       	ldd	r24, Z+2	; 0x02
     704:	93 81       	ldd	r25, Z+3	; 0x03
     706:	20 e0       	ldi	r18, 0x00	; 0
     708:	3f ef       	ldi	r19, 0xFF	; 255
     70a:	4f e7       	ldi	r20, 0x7F	; 127
     70c:	57 e4       	ldi	r21, 0x47	; 71
     70e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     712:	18 16       	cp	r1, r24
     714:	0c f0       	brlt	.+2      	; 0x718 <readgamepad+0x17a>
     716:	43 c0       	rjmp	.+134    	; 0x79e <readgamepad+0x200>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     718:	fe 01       	movw	r30, r28
     71a:	e4 54       	subi	r30, 0x44	; 68
     71c:	fe 4f       	sbci	r31, 0xFE	; 254
     71e:	60 81       	ld	r22, Z
     720:	71 81       	ldd	r23, Z+1	; 0x01
     722:	82 81       	ldd	r24, Z+2	; 0x02
     724:	93 81       	ldd	r25, Z+3	; 0x03
     726:	20 e0       	ldi	r18, 0x00	; 0
     728:	30 e0       	ldi	r19, 0x00	; 0
     72a:	40 e2       	ldi	r20, 0x20	; 32
     72c:	51 e4       	ldi	r21, 0x41	; 65
     72e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     732:	dc 01       	movw	r26, r24
     734:	cb 01       	movw	r24, r22
     736:	8e 01       	movw	r16, r28
     738:	0a 54       	subi	r16, 0x4A	; 74
     73a:	1e 4f       	sbci	r17, 0xFE	; 254
     73c:	bc 01       	movw	r22, r24
     73e:	cd 01       	movw	r24, r26
     740:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     744:	dc 01       	movw	r26, r24
     746:	cb 01       	movw	r24, r22
     748:	f8 01       	movw	r30, r16
     74a:	91 83       	std	Z+1, r25	; 0x01
     74c:	80 83       	st	Z, r24
     74e:	1f c0       	rjmp	.+62     	; 0x78e <readgamepad+0x1f0>
     750:	fe 01       	movw	r30, r28
     752:	ec 54       	subi	r30, 0x4C	; 76
     754:	fe 4f       	sbci	r31, 0xFE	; 254
     756:	80 e9       	ldi	r24, 0x90	; 144
     758:	91 e0       	ldi	r25, 0x01	; 1
     75a:	91 83       	std	Z+1, r25	; 0x01
     75c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     75e:	fe 01       	movw	r30, r28
     760:	ec 54       	subi	r30, 0x4C	; 76
     762:	fe 4f       	sbci	r31, 0xFE	; 254
     764:	80 81       	ld	r24, Z
     766:	91 81       	ldd	r25, Z+1	; 0x01
     768:	01 97       	sbiw	r24, 0x01	; 1
     76a:	f1 f7       	brne	.-4      	; 0x768 <readgamepad+0x1ca>
     76c:	fe 01       	movw	r30, r28
     76e:	ec 54       	subi	r30, 0x4C	; 76
     770:	fe 4f       	sbci	r31, 0xFE	; 254
     772:	91 83       	std	Z+1, r25	; 0x01
     774:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     776:	de 01       	movw	r26, r28
     778:	aa 54       	subi	r26, 0x4A	; 74
     77a:	be 4f       	sbci	r27, 0xFE	; 254
     77c:	fe 01       	movw	r30, r28
     77e:	ea 54       	subi	r30, 0x4A	; 74
     780:	fe 4f       	sbci	r31, 0xFE	; 254
     782:	80 81       	ld	r24, Z
     784:	91 81       	ldd	r25, Z+1	; 0x01
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	11 96       	adiw	r26, 0x01	; 1
     78a:	9c 93       	st	X, r25
     78c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     78e:	fe 01       	movw	r30, r28
     790:	ea 54       	subi	r30, 0x4A	; 74
     792:	fe 4f       	sbci	r31, 0xFE	; 254
     794:	80 81       	ld	r24, Z
     796:	91 81       	ldd	r25, Z+1	; 0x01
     798:	00 97       	sbiw	r24, 0x00	; 0
     79a:	d1 f6       	brne	.-76     	; 0x750 <readgamepad+0x1b2>
     79c:	4b c0       	rjmp	.+150    	; 0x834 <readgamepad+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     79e:	8e 01       	movw	r16, r28
     7a0:	0a 54       	subi	r16, 0x4A	; 74
     7a2:	1e 4f       	sbci	r17, 0xFE	; 254
     7a4:	fe 01       	movw	r30, r28
     7a6:	e8 54       	subi	r30, 0x48	; 72
     7a8:	fe 4f       	sbci	r31, 0xFE	; 254
     7aa:	60 81       	ld	r22, Z
     7ac:	71 81       	ldd	r23, Z+1	; 0x01
     7ae:	82 81       	ldd	r24, Z+2	; 0x02
     7b0:	93 81       	ldd	r25, Z+3	; 0x03
     7b2:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     7b6:	dc 01       	movw	r26, r24
     7b8:	cb 01       	movw	r24, r22
     7ba:	f8 01       	movw	r30, r16
     7bc:	91 83       	std	Z+1, r25	; 0x01
     7be:	80 83       	st	Z, r24
     7c0:	de 01       	movw	r26, r28
     7c2:	ae 54       	subi	r26, 0x4E	; 78
     7c4:	be 4f       	sbci	r27, 0xFE	; 254
     7c6:	fe 01       	movw	r30, r28
     7c8:	ea 54       	subi	r30, 0x4A	; 74
     7ca:	fe 4f       	sbci	r31, 0xFE	; 254
     7cc:	80 81       	ld	r24, Z
     7ce:	91 81       	ldd	r25, Z+1	; 0x01
     7d0:	11 96       	adiw	r26, 0x01	; 1
     7d2:	9c 93       	st	X, r25
     7d4:	8e 93       	st	-X, r24
     7d6:	fe 01       	movw	r30, r28
     7d8:	ee 54       	subi	r30, 0x4E	; 78
     7da:	fe 4f       	sbci	r31, 0xFE	; 254
     7dc:	80 81       	ld	r24, Z
     7de:	91 81       	ldd	r25, Z+1	; 0x01
     7e0:	01 97       	sbiw	r24, 0x01	; 1
     7e2:	f1 f7       	brne	.-4      	; 0x7e0 <readgamepad+0x242>
     7e4:	fe 01       	movw	r30, r28
     7e6:	ee 54       	subi	r30, 0x4E	; 78
     7e8:	fe 4f       	sbci	r31, 0xFE	; 254
     7ea:	91 83       	std	Z+1, r25	; 0x01
     7ec:	80 83       	st	Z, r24
     7ee:	22 c0       	rjmp	.+68     	; 0x834 <readgamepad+0x296>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     7f0:	8e 01       	movw	r16, r28
     7f2:	00 54       	subi	r16, 0x40	; 64
     7f4:	1e 4f       	sbci	r17, 0xFE	; 254
     7f6:	fe 01       	movw	r30, r28
     7f8:	ef 53       	subi	r30, 0x3F	; 63
     7fa:	fe 4f       	sbci	r31, 0xFE	; 254
     7fc:	60 81       	ld	r22, Z
     7fe:	71 81       	ldd	r23, Z+1	; 0x01
     800:	82 81       	ldd	r24, Z+2	; 0x02
     802:	93 81       	ldd	r25, Z+3	; 0x03
     804:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     808:	dc 01       	movw	r26, r24
     80a:	cb 01       	movw	r24, r22
     80c:	f8 01       	movw	r30, r16
     80e:	80 83       	st	Z, r24
     810:	de 01       	movw	r26, r28
     812:	af 54       	subi	r26, 0x4F	; 79
     814:	be 4f       	sbci	r27, 0xFE	; 254
     816:	fe 01       	movw	r30, r28
     818:	e0 54       	subi	r30, 0x40	; 64
     81a:	fe 4f       	sbci	r31, 0xFE	; 254
     81c:	80 81       	ld	r24, Z
     81e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     820:	fe 01       	movw	r30, r28
     822:	ef 54       	subi	r30, 0x4F	; 79
     824:	fe 4f       	sbci	r31, 0xFE	; 254
     826:	80 81       	ld	r24, Z
     828:	8a 95       	dec	r24
     82a:	f1 f7       	brne	.-4      	; 0x828 <readgamepad+0x28a>
     82c:	fe 01       	movw	r30, r28
     82e:	ef 54       	subi	r30, 0x4F	; 79
     830:	fe 4f       	sbci	r31, 0xFE	; 254
     832:	80 83       	st	Z, r24
	
	_delay_us(30);
	
	ps2byte = 0x01;			//byte1
     834:	81 e0       	ldi	r24, 0x01	; 1
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	90 93 03 02 	sts	0x0203, r25
     83c:	80 93 02 02 	sts	0x0202, r24
	
	for(i=0;i<8;i++)		
     840:	10 92 0d 02 	sts	0x020D, r1
     844:	10 92 0c 02 	sts	0x020C, r1
     848:	8c c2       	rjmp	.+1304   	; 0xd62 <readgamepad+0x7c4>
	{
		if(ps2byte&(_BV(i)))
     84a:	20 91 0c 02 	lds	r18, 0x020C
     84e:	30 91 0d 02 	lds	r19, 0x020D
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	02 c0       	rjmp	.+4      	; 0x85c <readgamepad+0x2be>
     858:	88 0f       	add	r24, r24
     85a:	99 1f       	adc	r25, r25
     85c:	2a 95       	dec	r18
     85e:	e2 f7       	brpl	.-8      	; 0x858 <readgamepad+0x2ba>
     860:	9c 01       	movw	r18, r24
     862:	80 91 02 02 	lds	r24, 0x0202
     866:	90 91 03 02 	lds	r25, 0x0203
     86a:	82 23       	and	r24, r18
     86c:	93 23       	and	r25, r19
     86e:	00 97       	sbiw	r24, 0x00	; 0
     870:	41 f0       	breq	.+16     	; 0x882 <readgamepad+0x2e4>
			sbi(ps2port,ps2cmd);
     872:	a8 e2       	ldi	r26, 0x28	; 40
     874:	b0 e0       	ldi	r27, 0x00	; 0
     876:	e8 e2       	ldi	r30, 0x28	; 40
     878:	f0 e0       	ldi	r31, 0x00	; 0
     87a:	80 81       	ld	r24, Z
     87c:	84 60       	ori	r24, 0x04	; 4
     87e:	8c 93       	st	X, r24
     880:	07 c0       	rjmp	.+14     	; 0x890 <readgamepad+0x2f2>
		else 
			cbi(ps2port,ps2cmd);
     882:	a8 e2       	ldi	r26, 0x28	; 40
     884:	b0 e0       	ldi	r27, 0x00	; 0
     886:	e8 e2       	ldi	r30, 0x28	; 40
     888:	f0 e0       	ldi	r31, 0x00	; 0
     88a:	80 81       	ld	r24, Z
     88c:	8b 7f       	andi	r24, 0xFB	; 251
     88e:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
     890:	a8 e2       	ldi	r26, 0x28	; 40
     892:	b0 e0       	ldi	r27, 0x00	; 0
     894:	e8 e2       	ldi	r30, 0x28	; 40
     896:	f0 e0       	ldi	r31, 0x00	; 0
     898:	80 81       	ld	r24, Z
     89a:	8e 7f       	andi	r24, 0xFE	; 254
     89c:	8c 93       	st	X, r24
     89e:	fe 01       	movw	r30, r28
     8a0:	e3 55       	subi	r30, 0x53	; 83
     8a2:	fe 4f       	sbci	r31, 0xFE	; 254
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	a0 e8       	ldi	r26, 0x80	; 128
     8aa:	bf e3       	ldi	r27, 0x3F	; 63
     8ac:	80 83       	st	Z, r24
     8ae:	91 83       	std	Z+1, r25	; 0x01
     8b0:	a2 83       	std	Z+2, r26	; 0x02
     8b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     8b4:	8e 01       	movw	r16, r28
     8b6:	07 55       	subi	r16, 0x57	; 87
     8b8:	1e 4f       	sbci	r17, 0xFE	; 254
     8ba:	fe 01       	movw	r30, r28
     8bc:	e3 55       	subi	r30, 0x53	; 83
     8be:	fe 4f       	sbci	r31, 0xFE	; 254
     8c0:	60 81       	ld	r22, Z
     8c2:	71 81       	ldd	r23, Z+1	; 0x01
     8c4:	82 81       	ldd	r24, Z+2	; 0x02
     8c6:	93 81       	ldd	r25, Z+3	; 0x03
     8c8:	2b ea       	ldi	r18, 0xAB	; 171
     8ca:	3a ea       	ldi	r19, 0xAA	; 170
     8cc:	4a ea       	ldi	r20, 0xAA	; 170
     8ce:	50 e4       	ldi	r21, 0x40	; 64
     8d0:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     8d4:	dc 01       	movw	r26, r24
     8d6:	cb 01       	movw	r24, r22
     8d8:	f8 01       	movw	r30, r16
     8da:	80 83       	st	Z, r24
     8dc:	91 83       	std	Z+1, r25	; 0x01
     8de:	a2 83       	std	Z+2, r26	; 0x02
     8e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     8e2:	fe 01       	movw	r30, r28
     8e4:	e7 55       	subi	r30, 0x57	; 87
     8e6:	fe 4f       	sbci	r31, 0xFE	; 254
     8e8:	60 81       	ld	r22, Z
     8ea:	71 81       	ldd	r23, Z+1	; 0x01
     8ec:	82 81       	ldd	r24, Z+2	; 0x02
     8ee:	93 81       	ldd	r25, Z+3	; 0x03
     8f0:	20 e0       	ldi	r18, 0x00	; 0
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	40 e8       	ldi	r20, 0x80	; 128
     8f6:	5f e3       	ldi	r21, 0x3F	; 63
     8f8:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     8fc:	88 23       	and	r24, r24
     8fe:	34 f4       	brge	.+12     	; 0x90c <readgamepad+0x36e>
		__ticks = 1;
     900:	fe 01       	movw	r30, r28
     902:	e8 55       	subi	r30, 0x58	; 88
     904:	fe 4f       	sbci	r31, 0xFE	; 254
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	80 83       	st	Z, r24
     90a:	e0 c0       	rjmp	.+448    	; 0xacc <readgamepad+0x52e>
	else if (__tmp > 255)
     90c:	fe 01       	movw	r30, r28
     90e:	e7 55       	subi	r30, 0x57	; 87
     910:	fe 4f       	sbci	r31, 0xFE	; 254
     912:	60 81       	ld	r22, Z
     914:	71 81       	ldd	r23, Z+1	; 0x01
     916:	82 81       	ldd	r24, Z+2	; 0x02
     918:	93 81       	ldd	r25, Z+3	; 0x03
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	4f e7       	ldi	r20, 0x7F	; 127
     920:	53 e4       	ldi	r21, 0x43	; 67
     922:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     926:	18 16       	cp	r1, r24
     928:	0c f0       	brlt	.+2      	; 0x92c <readgamepad+0x38e>
     92a:	c0 c0       	rjmp	.+384    	; 0xaac <readgamepad+0x50e>
	{
		_delay_ms(__us / 1000.0);
     92c:	fe 01       	movw	r30, r28
     92e:	e3 55       	subi	r30, 0x53	; 83
     930:	fe 4f       	sbci	r31, 0xFE	; 254
     932:	60 81       	ld	r22, Z
     934:	71 81       	ldd	r23, Z+1	; 0x01
     936:	82 81       	ldd	r24, Z+2	; 0x02
     938:	93 81       	ldd	r25, Z+3	; 0x03
     93a:	20 e0       	ldi	r18, 0x00	; 0
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	4a e7       	ldi	r20, 0x7A	; 122
     940:	54 e4       	ldi	r21, 0x44	; 68
     942:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
     946:	dc 01       	movw	r26, r24
     948:	cb 01       	movw	r24, r22
     94a:	fe 01       	movw	r30, r28
     94c:	ec 55       	subi	r30, 0x5C	; 92
     94e:	fe 4f       	sbci	r31, 0xFE	; 254
     950:	80 83       	st	Z, r24
     952:	91 83       	std	Z+1, r25	; 0x01
     954:	a2 83       	std	Z+2, r26	; 0x02
     956:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     958:	8e 01       	movw	r16, r28
     95a:	00 56       	subi	r16, 0x60	; 96
     95c:	1e 4f       	sbci	r17, 0xFE	; 254
     95e:	fe 01       	movw	r30, r28
     960:	ec 55       	subi	r30, 0x5C	; 92
     962:	fe 4f       	sbci	r31, 0xFE	; 254
     964:	60 81       	ld	r22, Z
     966:	71 81       	ldd	r23, Z+1	; 0x01
     968:	82 81       	ldd	r24, Z+2	; 0x02
     96a:	93 81       	ldd	r25, Z+3	; 0x03
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	4a e7       	ldi	r20, 0x7A	; 122
     972:	55 e4       	ldi	r21, 0x45	; 69
     974:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     978:	dc 01       	movw	r26, r24
     97a:	cb 01       	movw	r24, r22
     97c:	f8 01       	movw	r30, r16
     97e:	80 83       	st	Z, r24
     980:	91 83       	std	Z+1, r25	; 0x01
     982:	a2 83       	std	Z+2, r26	; 0x02
     984:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     986:	fe 01       	movw	r30, r28
     988:	e0 56       	subi	r30, 0x60	; 96
     98a:	fe 4f       	sbci	r31, 0xFE	; 254
     98c:	60 81       	ld	r22, Z
     98e:	71 81       	ldd	r23, Z+1	; 0x01
     990:	82 81       	ldd	r24, Z+2	; 0x02
     992:	93 81       	ldd	r25, Z+3	; 0x03
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	30 e0       	ldi	r19, 0x00	; 0
     998:	40 e8       	ldi	r20, 0x80	; 128
     99a:	5f e3       	ldi	r21, 0x3F	; 63
     99c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     9a0:	88 23       	and	r24, r24
     9a2:	44 f4       	brge	.+16     	; 0x9b4 <readgamepad+0x416>
		__ticks = 1;
     9a4:	fe 01       	movw	r30, r28
     9a6:	e2 56       	subi	r30, 0x62	; 98
     9a8:	fe 4f       	sbci	r31, 0xFE	; 254
     9aa:	81 e0       	ldi	r24, 0x01	; 1
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	91 83       	std	Z+1, r25	; 0x01
     9b0:	80 83       	st	Z, r24
     9b2:	64 c0       	rjmp	.+200    	; 0xa7c <readgamepad+0x4de>
	else if (__tmp > 65535)
     9b4:	fe 01       	movw	r30, r28
     9b6:	e0 56       	subi	r30, 0x60	; 96
     9b8:	fe 4f       	sbci	r31, 0xFE	; 254
     9ba:	60 81       	ld	r22, Z
     9bc:	71 81       	ldd	r23, Z+1	; 0x01
     9be:	82 81       	ldd	r24, Z+2	; 0x02
     9c0:	93 81       	ldd	r25, Z+3	; 0x03
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	3f ef       	ldi	r19, 0xFF	; 255
     9c6:	4f e7       	ldi	r20, 0x7F	; 127
     9c8:	57 e4       	ldi	r21, 0x47	; 71
     9ca:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     9ce:	18 16       	cp	r1, r24
     9d0:	0c f0       	brlt	.+2      	; 0x9d4 <readgamepad+0x436>
     9d2:	43 c0       	rjmp	.+134    	; 0xa5a <readgamepad+0x4bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9d4:	fe 01       	movw	r30, r28
     9d6:	ec 55       	subi	r30, 0x5C	; 92
     9d8:	fe 4f       	sbci	r31, 0xFE	; 254
     9da:	60 81       	ld	r22, Z
     9dc:	71 81       	ldd	r23, Z+1	; 0x01
     9de:	82 81       	ldd	r24, Z+2	; 0x02
     9e0:	93 81       	ldd	r25, Z+3	; 0x03
     9e2:	20 e0       	ldi	r18, 0x00	; 0
     9e4:	30 e0       	ldi	r19, 0x00	; 0
     9e6:	40 e2       	ldi	r20, 0x20	; 32
     9e8:	51 e4       	ldi	r21, 0x41	; 65
     9ea:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     9ee:	dc 01       	movw	r26, r24
     9f0:	cb 01       	movw	r24, r22
     9f2:	8e 01       	movw	r16, r28
     9f4:	02 56       	subi	r16, 0x62	; 98
     9f6:	1e 4f       	sbci	r17, 0xFE	; 254
     9f8:	bc 01       	movw	r22, r24
     9fa:	cd 01       	movw	r24, r26
     9fc:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     a00:	dc 01       	movw	r26, r24
     a02:	cb 01       	movw	r24, r22
     a04:	f8 01       	movw	r30, r16
     a06:	91 83       	std	Z+1, r25	; 0x01
     a08:	80 83       	st	Z, r24
     a0a:	1f c0       	rjmp	.+62     	; 0xa4a <readgamepad+0x4ac>
     a0c:	fe 01       	movw	r30, r28
     a0e:	e4 56       	subi	r30, 0x64	; 100
     a10:	fe 4f       	sbci	r31, 0xFE	; 254
     a12:	80 e9       	ldi	r24, 0x90	; 144
     a14:	91 e0       	ldi	r25, 0x01	; 1
     a16:	91 83       	std	Z+1, r25	; 0x01
     a18:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     a1a:	fe 01       	movw	r30, r28
     a1c:	e4 56       	subi	r30, 0x64	; 100
     a1e:	fe 4f       	sbci	r31, 0xFE	; 254
     a20:	80 81       	ld	r24, Z
     a22:	91 81       	ldd	r25, Z+1	; 0x01
     a24:	01 97       	sbiw	r24, 0x01	; 1
     a26:	f1 f7       	brne	.-4      	; 0xa24 <readgamepad+0x486>
     a28:	fe 01       	movw	r30, r28
     a2a:	e4 56       	subi	r30, 0x64	; 100
     a2c:	fe 4f       	sbci	r31, 0xFE	; 254
     a2e:	91 83       	std	Z+1, r25	; 0x01
     a30:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a32:	de 01       	movw	r26, r28
     a34:	a2 56       	subi	r26, 0x62	; 98
     a36:	be 4f       	sbci	r27, 0xFE	; 254
     a38:	fe 01       	movw	r30, r28
     a3a:	e2 56       	subi	r30, 0x62	; 98
     a3c:	fe 4f       	sbci	r31, 0xFE	; 254
     a3e:	80 81       	ld	r24, Z
     a40:	91 81       	ldd	r25, Z+1	; 0x01
     a42:	01 97       	sbiw	r24, 0x01	; 1
     a44:	11 96       	adiw	r26, 0x01	; 1
     a46:	9c 93       	st	X, r25
     a48:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a4a:	fe 01       	movw	r30, r28
     a4c:	e2 56       	subi	r30, 0x62	; 98
     a4e:	fe 4f       	sbci	r31, 0xFE	; 254
     a50:	80 81       	ld	r24, Z
     a52:	91 81       	ldd	r25, Z+1	; 0x01
     a54:	00 97       	sbiw	r24, 0x00	; 0
     a56:	d1 f6       	brne	.-76     	; 0xa0c <readgamepad+0x46e>
     a58:	4b c0       	rjmp	.+150    	; 0xaf0 <readgamepad+0x552>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a5a:	8e 01       	movw	r16, r28
     a5c:	02 56       	subi	r16, 0x62	; 98
     a5e:	1e 4f       	sbci	r17, 0xFE	; 254
     a60:	fe 01       	movw	r30, r28
     a62:	e0 56       	subi	r30, 0x60	; 96
     a64:	fe 4f       	sbci	r31, 0xFE	; 254
     a66:	60 81       	ld	r22, Z
     a68:	71 81       	ldd	r23, Z+1	; 0x01
     a6a:	82 81       	ldd	r24, Z+2	; 0x02
     a6c:	93 81       	ldd	r25, Z+3	; 0x03
     a6e:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     a72:	dc 01       	movw	r26, r24
     a74:	cb 01       	movw	r24, r22
     a76:	f8 01       	movw	r30, r16
     a78:	91 83       	std	Z+1, r25	; 0x01
     a7a:	80 83       	st	Z, r24
     a7c:	de 01       	movw	r26, r28
     a7e:	a6 56       	subi	r26, 0x66	; 102
     a80:	be 4f       	sbci	r27, 0xFE	; 254
     a82:	fe 01       	movw	r30, r28
     a84:	e2 56       	subi	r30, 0x62	; 98
     a86:	fe 4f       	sbci	r31, 0xFE	; 254
     a88:	80 81       	ld	r24, Z
     a8a:	91 81       	ldd	r25, Z+1	; 0x01
     a8c:	11 96       	adiw	r26, 0x01	; 1
     a8e:	9c 93       	st	X, r25
     a90:	8e 93       	st	-X, r24
     a92:	fe 01       	movw	r30, r28
     a94:	e6 56       	subi	r30, 0x66	; 102
     a96:	fe 4f       	sbci	r31, 0xFE	; 254
     a98:	80 81       	ld	r24, Z
     a9a:	91 81       	ldd	r25, Z+1	; 0x01
     a9c:	01 97       	sbiw	r24, 0x01	; 1
     a9e:	f1 f7       	brne	.-4      	; 0xa9c <readgamepad+0x4fe>
     aa0:	fe 01       	movw	r30, r28
     aa2:	e6 56       	subi	r30, 0x66	; 102
     aa4:	fe 4f       	sbci	r31, 0xFE	; 254
     aa6:	91 83       	std	Z+1, r25	; 0x01
     aa8:	80 83       	st	Z, r24
     aaa:	22 c0       	rjmp	.+68     	; 0xaf0 <readgamepad+0x552>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     aac:	8e 01       	movw	r16, r28
     aae:	08 55       	subi	r16, 0x58	; 88
     ab0:	1e 4f       	sbci	r17, 0xFE	; 254
     ab2:	fe 01       	movw	r30, r28
     ab4:	e7 55       	subi	r30, 0x57	; 87
     ab6:	fe 4f       	sbci	r31, 0xFE	; 254
     ab8:	60 81       	ld	r22, Z
     aba:	71 81       	ldd	r23, Z+1	; 0x01
     abc:	82 81       	ldd	r24, Z+2	; 0x02
     abe:	93 81       	ldd	r25, Z+3	; 0x03
     ac0:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     ac4:	dc 01       	movw	r26, r24
     ac6:	cb 01       	movw	r24, r22
     ac8:	f8 01       	movw	r30, r16
     aca:	80 83       	st	Z, r24
     acc:	de 01       	movw	r26, r28
     ace:	a7 56       	subi	r26, 0x67	; 103
     ad0:	be 4f       	sbci	r27, 0xFE	; 254
     ad2:	fe 01       	movw	r30, r28
     ad4:	e8 55       	subi	r30, 0x58	; 88
     ad6:	fe 4f       	sbci	r31, 0xFE	; 254
     ad8:	80 81       	ld	r24, Z
     ada:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     adc:	fe 01       	movw	r30, r28
     ade:	e7 56       	subi	r30, 0x67	; 103
     ae0:	fe 4f       	sbci	r31, 0xFE	; 254
     ae2:	80 81       	ld	r24, Z
     ae4:	8a 95       	dec	r24
     ae6:	f1 f7       	brne	.-4      	; 0xae4 <readgamepad+0x546>
     ae8:	fe 01       	movw	r30, r28
     aea:	e7 56       	subi	r30, 0x67	; 103
     aec:	fe 4f       	sbci	r31, 0xFE	; 254
     aee:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
     af0:	a8 e2       	ldi	r26, 0x28	; 40
     af2:	b0 e0       	ldi	r27, 0x00	; 0
     af4:	e8 e2       	ldi	r30, 0x28	; 40
     af6:	f0 e0       	ldi	r31, 0x00	; 0
     af8:	80 81       	ld	r24, Z
     afa:	81 60       	ori	r24, 0x01	; 1
     afc:	8c 93       	st	X, r24
     afe:	fe 01       	movw	r30, r28
     b00:	eb 56       	subi	r30, 0x6B	; 107
     b02:	fe 4f       	sbci	r31, 0xFE	; 254
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	a0 e8       	ldi	r26, 0x80	; 128
     b0a:	bf e3       	ldi	r27, 0x3F	; 63
     b0c:	80 83       	st	Z, r24
     b0e:	91 83       	std	Z+1, r25	; 0x01
     b10:	a2 83       	std	Z+2, r26	; 0x02
     b12:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     b14:	8e 01       	movw	r16, r28
     b16:	0f 56       	subi	r16, 0x6F	; 111
     b18:	1e 4f       	sbci	r17, 0xFE	; 254
     b1a:	fe 01       	movw	r30, r28
     b1c:	eb 56       	subi	r30, 0x6B	; 107
     b1e:	fe 4f       	sbci	r31, 0xFE	; 254
     b20:	60 81       	ld	r22, Z
     b22:	71 81       	ldd	r23, Z+1	; 0x01
     b24:	82 81       	ldd	r24, Z+2	; 0x02
     b26:	93 81       	ldd	r25, Z+3	; 0x03
     b28:	2b ea       	ldi	r18, 0xAB	; 171
     b2a:	3a ea       	ldi	r19, 0xAA	; 170
     b2c:	4a ea       	ldi	r20, 0xAA	; 170
     b2e:	50 e4       	ldi	r21, 0x40	; 64
     b30:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     b34:	dc 01       	movw	r26, r24
     b36:	cb 01       	movw	r24, r22
     b38:	f8 01       	movw	r30, r16
     b3a:	80 83       	st	Z, r24
     b3c:	91 83       	std	Z+1, r25	; 0x01
     b3e:	a2 83       	std	Z+2, r26	; 0x02
     b40:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b42:	fe 01       	movw	r30, r28
     b44:	ef 56       	subi	r30, 0x6F	; 111
     b46:	fe 4f       	sbci	r31, 0xFE	; 254
     b48:	60 81       	ld	r22, Z
     b4a:	71 81       	ldd	r23, Z+1	; 0x01
     b4c:	82 81       	ldd	r24, Z+2	; 0x02
     b4e:	93 81       	ldd	r25, Z+3	; 0x03
     b50:	20 e0       	ldi	r18, 0x00	; 0
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	40 e8       	ldi	r20, 0x80	; 128
     b56:	5f e3       	ldi	r21, 0x3F	; 63
     b58:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     b5c:	88 23       	and	r24, r24
     b5e:	34 f4       	brge	.+12     	; 0xb6c <readgamepad+0x5ce>
		__ticks = 1;
     b60:	fe 01       	movw	r30, r28
     b62:	e0 57       	subi	r30, 0x70	; 112
     b64:	fe 4f       	sbci	r31, 0xFE	; 254
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	80 83       	st	Z, r24
     b6a:	e0 c0       	rjmp	.+448    	; 0xd2c <readgamepad+0x78e>
	else if (__tmp > 255)
     b6c:	fe 01       	movw	r30, r28
     b6e:	ef 56       	subi	r30, 0x6F	; 111
     b70:	fe 4f       	sbci	r31, 0xFE	; 254
     b72:	60 81       	ld	r22, Z
     b74:	71 81       	ldd	r23, Z+1	; 0x01
     b76:	82 81       	ldd	r24, Z+2	; 0x02
     b78:	93 81       	ldd	r25, Z+3	; 0x03
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	4f e7       	ldi	r20, 0x7F	; 127
     b80:	53 e4       	ldi	r21, 0x43	; 67
     b82:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     b86:	18 16       	cp	r1, r24
     b88:	0c f0       	brlt	.+2      	; 0xb8c <readgamepad+0x5ee>
     b8a:	c0 c0       	rjmp	.+384    	; 0xd0c <readgamepad+0x76e>
	{
		_delay_ms(__us / 1000.0);
     b8c:	fe 01       	movw	r30, r28
     b8e:	eb 56       	subi	r30, 0x6B	; 107
     b90:	fe 4f       	sbci	r31, 0xFE	; 254
     b92:	60 81       	ld	r22, Z
     b94:	71 81       	ldd	r23, Z+1	; 0x01
     b96:	82 81       	ldd	r24, Z+2	; 0x02
     b98:	93 81       	ldd	r25, Z+3	; 0x03
     b9a:	20 e0       	ldi	r18, 0x00	; 0
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	4a e7       	ldi	r20, 0x7A	; 122
     ba0:	54 e4       	ldi	r21, 0x44	; 68
     ba2:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
     ba6:	dc 01       	movw	r26, r24
     ba8:	cb 01       	movw	r24, r22
     baa:	fe 01       	movw	r30, r28
     bac:	e4 57       	subi	r30, 0x74	; 116
     bae:	fe 4f       	sbci	r31, 0xFE	; 254
     bb0:	80 83       	st	Z, r24
     bb2:	91 83       	std	Z+1, r25	; 0x01
     bb4:	a2 83       	std	Z+2, r26	; 0x02
     bb6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     bb8:	8e 01       	movw	r16, r28
     bba:	08 57       	subi	r16, 0x78	; 120
     bbc:	1e 4f       	sbci	r17, 0xFE	; 254
     bbe:	fe 01       	movw	r30, r28
     bc0:	e4 57       	subi	r30, 0x74	; 116
     bc2:	fe 4f       	sbci	r31, 0xFE	; 254
     bc4:	60 81       	ld	r22, Z
     bc6:	71 81       	ldd	r23, Z+1	; 0x01
     bc8:	82 81       	ldd	r24, Z+2	; 0x02
     bca:	93 81       	ldd	r25, Z+3	; 0x03
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	4a e7       	ldi	r20, 0x7A	; 122
     bd2:	55 e4       	ldi	r21, 0x45	; 69
     bd4:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     bd8:	dc 01       	movw	r26, r24
     bda:	cb 01       	movw	r24, r22
     bdc:	f8 01       	movw	r30, r16
     bde:	80 83       	st	Z, r24
     be0:	91 83       	std	Z+1, r25	; 0x01
     be2:	a2 83       	std	Z+2, r26	; 0x02
     be4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     be6:	fe 01       	movw	r30, r28
     be8:	e8 57       	subi	r30, 0x78	; 120
     bea:	fe 4f       	sbci	r31, 0xFE	; 254
     bec:	60 81       	ld	r22, Z
     bee:	71 81       	ldd	r23, Z+1	; 0x01
     bf0:	82 81       	ldd	r24, Z+2	; 0x02
     bf2:	93 81       	ldd	r25, Z+3	; 0x03
     bf4:	20 e0       	ldi	r18, 0x00	; 0
     bf6:	30 e0       	ldi	r19, 0x00	; 0
     bf8:	40 e8       	ldi	r20, 0x80	; 128
     bfa:	5f e3       	ldi	r21, 0x3F	; 63
     bfc:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     c00:	88 23       	and	r24, r24
     c02:	44 f4       	brge	.+16     	; 0xc14 <readgamepad+0x676>
		__ticks = 1;
     c04:	fe 01       	movw	r30, r28
     c06:	ea 57       	subi	r30, 0x7A	; 122
     c08:	fe 4f       	sbci	r31, 0xFE	; 254
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	91 83       	std	Z+1, r25	; 0x01
     c10:	80 83       	st	Z, r24
     c12:	64 c0       	rjmp	.+200    	; 0xcdc <readgamepad+0x73e>
	else if (__tmp > 65535)
     c14:	fe 01       	movw	r30, r28
     c16:	e8 57       	subi	r30, 0x78	; 120
     c18:	fe 4f       	sbci	r31, 0xFE	; 254
     c1a:	60 81       	ld	r22, Z
     c1c:	71 81       	ldd	r23, Z+1	; 0x01
     c1e:	82 81       	ldd	r24, Z+2	; 0x02
     c20:	93 81       	ldd	r25, Z+3	; 0x03
     c22:	20 e0       	ldi	r18, 0x00	; 0
     c24:	3f ef       	ldi	r19, 0xFF	; 255
     c26:	4f e7       	ldi	r20, 0x7F	; 127
     c28:	57 e4       	ldi	r21, 0x47	; 71
     c2a:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     c2e:	18 16       	cp	r1, r24
     c30:	0c f0       	brlt	.+2      	; 0xc34 <readgamepad+0x696>
     c32:	43 c0       	rjmp	.+134    	; 0xcba <readgamepad+0x71c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c34:	fe 01       	movw	r30, r28
     c36:	e4 57       	subi	r30, 0x74	; 116
     c38:	fe 4f       	sbci	r31, 0xFE	; 254
     c3a:	60 81       	ld	r22, Z
     c3c:	71 81       	ldd	r23, Z+1	; 0x01
     c3e:	82 81       	ldd	r24, Z+2	; 0x02
     c40:	93 81       	ldd	r25, Z+3	; 0x03
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	40 e2       	ldi	r20, 0x20	; 32
     c48:	51 e4       	ldi	r21, 0x41	; 65
     c4a:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     c4e:	dc 01       	movw	r26, r24
     c50:	cb 01       	movw	r24, r22
     c52:	8e 01       	movw	r16, r28
     c54:	0a 57       	subi	r16, 0x7A	; 122
     c56:	1e 4f       	sbci	r17, 0xFE	; 254
     c58:	bc 01       	movw	r22, r24
     c5a:	cd 01       	movw	r24, r26
     c5c:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     c60:	dc 01       	movw	r26, r24
     c62:	cb 01       	movw	r24, r22
     c64:	f8 01       	movw	r30, r16
     c66:	91 83       	std	Z+1, r25	; 0x01
     c68:	80 83       	st	Z, r24
     c6a:	1f c0       	rjmp	.+62     	; 0xcaa <readgamepad+0x70c>
     c6c:	fe 01       	movw	r30, r28
     c6e:	ec 57       	subi	r30, 0x7C	; 124
     c70:	fe 4f       	sbci	r31, 0xFE	; 254
     c72:	80 e9       	ldi	r24, 0x90	; 144
     c74:	91 e0       	ldi	r25, 0x01	; 1
     c76:	91 83       	std	Z+1, r25	; 0x01
     c78:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c7a:	fe 01       	movw	r30, r28
     c7c:	ec 57       	subi	r30, 0x7C	; 124
     c7e:	fe 4f       	sbci	r31, 0xFE	; 254
     c80:	80 81       	ld	r24, Z
     c82:	91 81       	ldd	r25, Z+1	; 0x01
     c84:	01 97       	sbiw	r24, 0x01	; 1
     c86:	f1 f7       	brne	.-4      	; 0xc84 <readgamepad+0x6e6>
     c88:	fe 01       	movw	r30, r28
     c8a:	ec 57       	subi	r30, 0x7C	; 124
     c8c:	fe 4f       	sbci	r31, 0xFE	; 254
     c8e:	91 83       	std	Z+1, r25	; 0x01
     c90:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c92:	de 01       	movw	r26, r28
     c94:	aa 57       	subi	r26, 0x7A	; 122
     c96:	be 4f       	sbci	r27, 0xFE	; 254
     c98:	fe 01       	movw	r30, r28
     c9a:	ea 57       	subi	r30, 0x7A	; 122
     c9c:	fe 4f       	sbci	r31, 0xFE	; 254
     c9e:	80 81       	ld	r24, Z
     ca0:	91 81       	ldd	r25, Z+1	; 0x01
     ca2:	01 97       	sbiw	r24, 0x01	; 1
     ca4:	11 96       	adiw	r26, 0x01	; 1
     ca6:	9c 93       	st	X, r25
     ca8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     caa:	fe 01       	movw	r30, r28
     cac:	ea 57       	subi	r30, 0x7A	; 122
     cae:	fe 4f       	sbci	r31, 0xFE	; 254
     cb0:	80 81       	ld	r24, Z
     cb2:	91 81       	ldd	r25, Z+1	; 0x01
     cb4:	00 97       	sbiw	r24, 0x00	; 0
     cb6:	d1 f6       	brne	.-76     	; 0xc6c <readgamepad+0x6ce>
     cb8:	4b c0       	rjmp	.+150    	; 0xd50 <readgamepad+0x7b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cba:	8e 01       	movw	r16, r28
     cbc:	0a 57       	subi	r16, 0x7A	; 122
     cbe:	1e 4f       	sbci	r17, 0xFE	; 254
     cc0:	fe 01       	movw	r30, r28
     cc2:	e8 57       	subi	r30, 0x78	; 120
     cc4:	fe 4f       	sbci	r31, 0xFE	; 254
     cc6:	60 81       	ld	r22, Z
     cc8:	71 81       	ldd	r23, Z+1	; 0x01
     cca:	82 81       	ldd	r24, Z+2	; 0x02
     ccc:	93 81       	ldd	r25, Z+3	; 0x03
     cce:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     cd2:	dc 01       	movw	r26, r24
     cd4:	cb 01       	movw	r24, r22
     cd6:	f8 01       	movw	r30, r16
     cd8:	91 83       	std	Z+1, r25	; 0x01
     cda:	80 83       	st	Z, r24
     cdc:	de 01       	movw	r26, r28
     cde:	ae 57       	subi	r26, 0x7E	; 126
     ce0:	be 4f       	sbci	r27, 0xFE	; 254
     ce2:	fe 01       	movw	r30, r28
     ce4:	ea 57       	subi	r30, 0x7A	; 122
     ce6:	fe 4f       	sbci	r31, 0xFE	; 254
     ce8:	80 81       	ld	r24, Z
     cea:	91 81       	ldd	r25, Z+1	; 0x01
     cec:	11 96       	adiw	r26, 0x01	; 1
     cee:	9c 93       	st	X, r25
     cf0:	8e 93       	st	-X, r24
     cf2:	fe 01       	movw	r30, r28
     cf4:	ee 57       	subi	r30, 0x7E	; 126
     cf6:	fe 4f       	sbci	r31, 0xFE	; 254
     cf8:	80 81       	ld	r24, Z
     cfa:	91 81       	ldd	r25, Z+1	; 0x01
     cfc:	01 97       	sbiw	r24, 0x01	; 1
     cfe:	f1 f7       	brne	.-4      	; 0xcfc <readgamepad+0x75e>
     d00:	fe 01       	movw	r30, r28
     d02:	ee 57       	subi	r30, 0x7E	; 126
     d04:	fe 4f       	sbci	r31, 0xFE	; 254
     d06:	91 83       	std	Z+1, r25	; 0x01
     d08:	80 83       	st	Z, r24
     d0a:	22 c0       	rjmp	.+68     	; 0xd50 <readgamepad+0x7b2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     d0c:	8e 01       	movw	r16, r28
     d0e:	00 57       	subi	r16, 0x70	; 112
     d10:	1e 4f       	sbci	r17, 0xFE	; 254
     d12:	fe 01       	movw	r30, r28
     d14:	ef 56       	subi	r30, 0x6F	; 111
     d16:	fe 4f       	sbci	r31, 0xFE	; 254
     d18:	60 81       	ld	r22, Z
     d1a:	71 81       	ldd	r23, Z+1	; 0x01
     d1c:	82 81       	ldd	r24, Z+2	; 0x02
     d1e:	93 81       	ldd	r25, Z+3	; 0x03
     d20:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     d24:	dc 01       	movw	r26, r24
     d26:	cb 01       	movw	r24, r22
     d28:	f8 01       	movw	r30, r16
     d2a:	80 83       	st	Z, r24
     d2c:	de 01       	movw	r26, r28
     d2e:	af 57       	subi	r26, 0x7F	; 127
     d30:	be 4f       	sbci	r27, 0xFE	; 254
     d32:	fe 01       	movw	r30, r28
     d34:	e0 57       	subi	r30, 0x70	; 112
     d36:	fe 4f       	sbci	r31, 0xFE	; 254
     d38:	80 81       	ld	r24, Z
     d3a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     d3c:	fe 01       	movw	r30, r28
     d3e:	ef 57       	subi	r30, 0x7F	; 127
     d40:	fe 4f       	sbci	r31, 0xFE	; 254
     d42:	80 81       	ld	r24, Z
     d44:	8a 95       	dec	r24
     d46:	f1 f7       	brne	.-4      	; 0xd44 <readgamepad+0x7a6>
     d48:	fe 01       	movw	r30, r28
     d4a:	ef 57       	subi	r30, 0x7F	; 127
     d4c:	fe 4f       	sbci	r31, 0xFE	; 254
     d4e:	80 83       	st	Z, r24
	
	_delay_us(30);
	
	ps2byte = 0x01;			//byte1
	
	for(i=0;i<8;i++)		
     d50:	80 91 0c 02 	lds	r24, 0x020C
     d54:	90 91 0d 02 	lds	r25, 0x020D
     d58:	01 96       	adiw	r24, 0x01	; 1
     d5a:	90 93 0d 02 	sts	0x020D, r25
     d5e:	80 93 0c 02 	sts	0x020C, r24
     d62:	80 91 0c 02 	lds	r24, 0x020C
     d66:	90 91 0d 02 	lds	r25, 0x020D
     d6a:	88 30       	cpi	r24, 0x08	; 8
     d6c:	91 05       	cpc	r25, r1
     d6e:	0c f4       	brge	.+2      	; 0xd72 <readgamepad+0x7d4>
     d70:	6c cd       	rjmp	.-1320   	; 0x84a <readgamepad+0x2ac>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
     d72:	a8 e2       	ldi	r26, 0x28	; 40
     d74:	b0 e0       	ldi	r27, 0x00	; 0
     d76:	e8 e2       	ldi	r30, 0x28	; 40
     d78:	f0 e0       	ldi	r31, 0x00	; 0
     d7a:	80 81       	ld	r24, Z
     d7c:	84 60       	ori	r24, 0x04	; 4
     d7e:	8c 93       	st	X, r24


	
	
	ps2byte = 0x42;			//byte2
     d80:	82 e4       	ldi	r24, 0x42	; 66
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	90 93 03 02 	sts	0x0203, r25
     d88:	80 93 02 02 	sts	0x0202, r24
	
	for(i=0;i<8;i++)
     d8c:	10 92 0d 02 	sts	0x020D, r1
     d90:	10 92 0c 02 	sts	0x020C, r1
     d94:	8c c2       	rjmp	.+1304   	; 0x12ae <readgamepad+0xd10>
	{
		if(ps2byte&(_BV(i)))
     d96:	20 91 0c 02 	lds	r18, 0x020C
     d9a:	30 91 0d 02 	lds	r19, 0x020D
     d9e:	81 e0       	ldi	r24, 0x01	; 1
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <readgamepad+0x80a>
     da4:	88 0f       	add	r24, r24
     da6:	99 1f       	adc	r25, r25
     da8:	2a 95       	dec	r18
     daa:	e2 f7       	brpl	.-8      	; 0xda4 <readgamepad+0x806>
     dac:	9c 01       	movw	r18, r24
     dae:	80 91 02 02 	lds	r24, 0x0202
     db2:	90 91 03 02 	lds	r25, 0x0203
     db6:	82 23       	and	r24, r18
     db8:	93 23       	and	r25, r19
     dba:	00 97       	sbiw	r24, 0x00	; 0
     dbc:	41 f0       	breq	.+16     	; 0xdce <readgamepad+0x830>
			sbi(ps2port,ps2cmd);
     dbe:	a8 e2       	ldi	r26, 0x28	; 40
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	e8 e2       	ldi	r30, 0x28	; 40
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	84 60       	ori	r24, 0x04	; 4
     dca:	8c 93       	st	X, r24
     dcc:	07 c0       	rjmp	.+14     	; 0xddc <readgamepad+0x83e>
		else 
			cbi(ps2port,ps2cmd);
     dce:	a8 e2       	ldi	r26, 0x28	; 40
     dd0:	b0 e0       	ldi	r27, 0x00	; 0
     dd2:	e8 e2       	ldi	r30, 0x28	; 40
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	80 81       	ld	r24, Z
     dd8:	8b 7f       	andi	r24, 0xFB	; 251
     dda:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
     ddc:	a8 e2       	ldi	r26, 0x28	; 40
     dde:	b0 e0       	ldi	r27, 0x00	; 0
     de0:	e8 e2       	ldi	r30, 0x28	; 40
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	80 81       	ld	r24, Z
     de6:	8e 7f       	andi	r24, 0xFE	; 254
     de8:	8c 93       	st	X, r24
     dea:	fe 01       	movw	r30, r28
     dec:	e3 58       	subi	r30, 0x83	; 131
     dee:	fe 4f       	sbci	r31, 0xFE	; 254
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	a0 e8       	ldi	r26, 0x80	; 128
     df6:	bf e3       	ldi	r27, 0x3F	; 63
     df8:	80 83       	st	Z, r24
     dfa:	91 83       	std	Z+1, r25	; 0x01
     dfc:	a2 83       	std	Z+2, r26	; 0x02
     dfe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     e00:	8e 01       	movw	r16, r28
     e02:	07 58       	subi	r16, 0x87	; 135
     e04:	1e 4f       	sbci	r17, 0xFE	; 254
     e06:	fe 01       	movw	r30, r28
     e08:	e3 58       	subi	r30, 0x83	; 131
     e0a:	fe 4f       	sbci	r31, 0xFE	; 254
     e0c:	60 81       	ld	r22, Z
     e0e:	71 81       	ldd	r23, Z+1	; 0x01
     e10:	82 81       	ldd	r24, Z+2	; 0x02
     e12:	93 81       	ldd	r25, Z+3	; 0x03
     e14:	2b ea       	ldi	r18, 0xAB	; 171
     e16:	3a ea       	ldi	r19, 0xAA	; 170
     e18:	4a ea       	ldi	r20, 0xAA	; 170
     e1a:	50 e4       	ldi	r21, 0x40	; 64
     e1c:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     e20:	dc 01       	movw	r26, r24
     e22:	cb 01       	movw	r24, r22
     e24:	f8 01       	movw	r30, r16
     e26:	80 83       	st	Z, r24
     e28:	91 83       	std	Z+1, r25	; 0x01
     e2a:	a2 83       	std	Z+2, r26	; 0x02
     e2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e2e:	fe 01       	movw	r30, r28
     e30:	e7 58       	subi	r30, 0x87	; 135
     e32:	fe 4f       	sbci	r31, 0xFE	; 254
     e34:	60 81       	ld	r22, Z
     e36:	71 81       	ldd	r23, Z+1	; 0x01
     e38:	82 81       	ldd	r24, Z+2	; 0x02
     e3a:	93 81       	ldd	r25, Z+3	; 0x03
     e3c:	20 e0       	ldi	r18, 0x00	; 0
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	40 e8       	ldi	r20, 0x80	; 128
     e42:	5f e3       	ldi	r21, 0x3F	; 63
     e44:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     e48:	88 23       	and	r24, r24
     e4a:	34 f4       	brge	.+12     	; 0xe58 <readgamepad+0x8ba>
		__ticks = 1;
     e4c:	fe 01       	movw	r30, r28
     e4e:	e8 58       	subi	r30, 0x88	; 136
     e50:	fe 4f       	sbci	r31, 0xFE	; 254
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	80 83       	st	Z, r24
     e56:	e0 c0       	rjmp	.+448    	; 0x1018 <readgamepad+0xa7a>
	else if (__tmp > 255)
     e58:	fe 01       	movw	r30, r28
     e5a:	e7 58       	subi	r30, 0x87	; 135
     e5c:	fe 4f       	sbci	r31, 0xFE	; 254
     e5e:	60 81       	ld	r22, Z
     e60:	71 81       	ldd	r23, Z+1	; 0x01
     e62:	82 81       	ldd	r24, Z+2	; 0x02
     e64:	93 81       	ldd	r25, Z+3	; 0x03
     e66:	20 e0       	ldi	r18, 0x00	; 0
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	4f e7       	ldi	r20, 0x7F	; 127
     e6c:	53 e4       	ldi	r21, 0x43	; 67
     e6e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     e72:	18 16       	cp	r1, r24
     e74:	0c f0       	brlt	.+2      	; 0xe78 <readgamepad+0x8da>
     e76:	c0 c0       	rjmp	.+384    	; 0xff8 <readgamepad+0xa5a>
	{
		_delay_ms(__us / 1000.0);
     e78:	fe 01       	movw	r30, r28
     e7a:	e3 58       	subi	r30, 0x83	; 131
     e7c:	fe 4f       	sbci	r31, 0xFE	; 254
     e7e:	60 81       	ld	r22, Z
     e80:	71 81       	ldd	r23, Z+1	; 0x01
     e82:	82 81       	ldd	r24, Z+2	; 0x02
     e84:	93 81       	ldd	r25, Z+3	; 0x03
     e86:	20 e0       	ldi	r18, 0x00	; 0
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	4a e7       	ldi	r20, 0x7A	; 122
     e8c:	54 e4       	ldi	r21, 0x44	; 68
     e8e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
     e92:	dc 01       	movw	r26, r24
     e94:	cb 01       	movw	r24, r22
     e96:	fe 01       	movw	r30, r28
     e98:	ec 58       	subi	r30, 0x8C	; 140
     e9a:	fe 4f       	sbci	r31, 0xFE	; 254
     e9c:	80 83       	st	Z, r24
     e9e:	91 83       	std	Z+1, r25	; 0x01
     ea0:	a2 83       	std	Z+2, r26	; 0x02
     ea2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ea4:	8e 01       	movw	r16, r28
     ea6:	00 59       	subi	r16, 0x90	; 144
     ea8:	1e 4f       	sbci	r17, 0xFE	; 254
     eaa:	fe 01       	movw	r30, r28
     eac:	ec 58       	subi	r30, 0x8C	; 140
     eae:	fe 4f       	sbci	r31, 0xFE	; 254
     eb0:	60 81       	ld	r22, Z
     eb2:	71 81       	ldd	r23, Z+1	; 0x01
     eb4:	82 81       	ldd	r24, Z+2	; 0x02
     eb6:	93 81       	ldd	r25, Z+3	; 0x03
     eb8:	20 e0       	ldi	r18, 0x00	; 0
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	4a e7       	ldi	r20, 0x7A	; 122
     ebe:	55 e4       	ldi	r21, 0x45	; 69
     ec0:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     ec4:	dc 01       	movw	r26, r24
     ec6:	cb 01       	movw	r24, r22
     ec8:	f8 01       	movw	r30, r16
     eca:	80 83       	st	Z, r24
     ecc:	91 83       	std	Z+1, r25	; 0x01
     ece:	a2 83       	std	Z+2, r26	; 0x02
     ed0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ed2:	fe 01       	movw	r30, r28
     ed4:	e0 59       	subi	r30, 0x90	; 144
     ed6:	fe 4f       	sbci	r31, 0xFE	; 254
     ed8:	60 81       	ld	r22, Z
     eda:	71 81       	ldd	r23, Z+1	; 0x01
     edc:	82 81       	ldd	r24, Z+2	; 0x02
     ede:	93 81       	ldd	r25, Z+3	; 0x03
     ee0:	20 e0       	ldi	r18, 0x00	; 0
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	40 e8       	ldi	r20, 0x80	; 128
     ee6:	5f e3       	ldi	r21, 0x3F	; 63
     ee8:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
     eec:	88 23       	and	r24, r24
     eee:	44 f4       	brge	.+16     	; 0xf00 <readgamepad+0x962>
		__ticks = 1;
     ef0:	fe 01       	movw	r30, r28
     ef2:	e2 59       	subi	r30, 0x92	; 146
     ef4:	fe 4f       	sbci	r31, 0xFE	; 254
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	91 83       	std	Z+1, r25	; 0x01
     efc:	80 83       	st	Z, r24
     efe:	64 c0       	rjmp	.+200    	; 0xfc8 <readgamepad+0xa2a>
	else if (__tmp > 65535)
     f00:	fe 01       	movw	r30, r28
     f02:	e0 59       	subi	r30, 0x90	; 144
     f04:	fe 4f       	sbci	r31, 0xFE	; 254
     f06:	60 81       	ld	r22, Z
     f08:	71 81       	ldd	r23, Z+1	; 0x01
     f0a:	82 81       	ldd	r24, Z+2	; 0x02
     f0c:	93 81       	ldd	r25, Z+3	; 0x03
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	3f ef       	ldi	r19, 0xFF	; 255
     f12:	4f e7       	ldi	r20, 0x7F	; 127
     f14:	57 e4       	ldi	r21, 0x47	; 71
     f16:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
     f1a:	18 16       	cp	r1, r24
     f1c:	0c f0       	brlt	.+2      	; 0xf20 <readgamepad+0x982>
     f1e:	43 c0       	rjmp	.+134    	; 0xfa6 <readgamepad+0xa08>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f20:	fe 01       	movw	r30, r28
     f22:	ec 58       	subi	r30, 0x8C	; 140
     f24:	fe 4f       	sbci	r31, 0xFE	; 254
     f26:	60 81       	ld	r22, Z
     f28:	71 81       	ldd	r23, Z+1	; 0x01
     f2a:	82 81       	ldd	r24, Z+2	; 0x02
     f2c:	93 81       	ldd	r25, Z+3	; 0x03
     f2e:	20 e0       	ldi	r18, 0x00	; 0
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	40 e2       	ldi	r20, 0x20	; 32
     f34:	51 e4       	ldi	r21, 0x41	; 65
     f36:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	8e 01       	movw	r16, r28
     f40:	02 59       	subi	r16, 0x92	; 146
     f42:	1e 4f       	sbci	r17, 0xFE	; 254
     f44:	bc 01       	movw	r22, r24
     f46:	cd 01       	movw	r24, r26
     f48:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     f4c:	dc 01       	movw	r26, r24
     f4e:	cb 01       	movw	r24, r22
     f50:	f8 01       	movw	r30, r16
     f52:	91 83       	std	Z+1, r25	; 0x01
     f54:	80 83       	st	Z, r24
     f56:	1f c0       	rjmp	.+62     	; 0xf96 <readgamepad+0x9f8>
     f58:	fe 01       	movw	r30, r28
     f5a:	e4 59       	subi	r30, 0x94	; 148
     f5c:	fe 4f       	sbci	r31, 0xFE	; 254
     f5e:	80 e9       	ldi	r24, 0x90	; 144
     f60:	91 e0       	ldi	r25, 0x01	; 1
     f62:	91 83       	std	Z+1, r25	; 0x01
     f64:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f66:	fe 01       	movw	r30, r28
     f68:	e4 59       	subi	r30, 0x94	; 148
     f6a:	fe 4f       	sbci	r31, 0xFE	; 254
     f6c:	80 81       	ld	r24, Z
     f6e:	91 81       	ldd	r25, Z+1	; 0x01
     f70:	01 97       	sbiw	r24, 0x01	; 1
     f72:	f1 f7       	brne	.-4      	; 0xf70 <readgamepad+0x9d2>
     f74:	fe 01       	movw	r30, r28
     f76:	e4 59       	subi	r30, 0x94	; 148
     f78:	fe 4f       	sbci	r31, 0xFE	; 254
     f7a:	91 83       	std	Z+1, r25	; 0x01
     f7c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f7e:	de 01       	movw	r26, r28
     f80:	a2 59       	subi	r26, 0x92	; 146
     f82:	be 4f       	sbci	r27, 0xFE	; 254
     f84:	fe 01       	movw	r30, r28
     f86:	e2 59       	subi	r30, 0x92	; 146
     f88:	fe 4f       	sbci	r31, 0xFE	; 254
     f8a:	80 81       	ld	r24, Z
     f8c:	91 81       	ldd	r25, Z+1	; 0x01
     f8e:	01 97       	sbiw	r24, 0x01	; 1
     f90:	11 96       	adiw	r26, 0x01	; 1
     f92:	9c 93       	st	X, r25
     f94:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f96:	fe 01       	movw	r30, r28
     f98:	e2 59       	subi	r30, 0x92	; 146
     f9a:	fe 4f       	sbci	r31, 0xFE	; 254
     f9c:	80 81       	ld	r24, Z
     f9e:	91 81       	ldd	r25, Z+1	; 0x01
     fa0:	00 97       	sbiw	r24, 0x00	; 0
     fa2:	d1 f6       	brne	.-76     	; 0xf58 <readgamepad+0x9ba>
     fa4:	4b c0       	rjmp	.+150    	; 0x103c <readgamepad+0xa9e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fa6:	8e 01       	movw	r16, r28
     fa8:	02 59       	subi	r16, 0x92	; 146
     faa:	1e 4f       	sbci	r17, 0xFE	; 254
     fac:	fe 01       	movw	r30, r28
     fae:	e0 59       	subi	r30, 0x90	; 144
     fb0:	fe 4f       	sbci	r31, 0xFE	; 254
     fb2:	60 81       	ld	r22, Z
     fb4:	71 81       	ldd	r23, Z+1	; 0x01
     fb6:	82 81       	ldd	r24, Z+2	; 0x02
     fb8:	93 81       	ldd	r25, Z+3	; 0x03
     fba:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
     fbe:	dc 01       	movw	r26, r24
     fc0:	cb 01       	movw	r24, r22
     fc2:	f8 01       	movw	r30, r16
     fc4:	91 83       	std	Z+1, r25	; 0x01
     fc6:	80 83       	st	Z, r24
     fc8:	de 01       	movw	r26, r28
     fca:	a6 59       	subi	r26, 0x96	; 150
     fcc:	be 4f       	sbci	r27, 0xFE	; 254
     fce:	fe 01       	movw	r30, r28
     fd0:	e2 59       	subi	r30, 0x92	; 146
     fd2:	fe 4f       	sbci	r31, 0xFE	; 254
     fd4:	80 81       	ld	r24, Z
     fd6:	91 81       	ldd	r25, Z+1	; 0x01
     fd8:	11 96       	adiw	r26, 0x01	; 1
     fda:	9c 93       	st	X, r25
     fdc:	8e 93       	st	-X, r24
     fde:	fe 01       	movw	r30, r28
     fe0:	e6 59       	subi	r30, 0x96	; 150
     fe2:	fe 4f       	sbci	r31, 0xFE	; 254
     fe4:	80 81       	ld	r24, Z
     fe6:	91 81       	ldd	r25, Z+1	; 0x01
     fe8:	01 97       	sbiw	r24, 0x01	; 1
     fea:	f1 f7       	brne	.-4      	; 0xfe8 <readgamepad+0xa4a>
     fec:	fe 01       	movw	r30, r28
     fee:	e6 59       	subi	r30, 0x96	; 150
     ff0:	fe 4f       	sbci	r31, 0xFE	; 254
     ff2:	91 83       	std	Z+1, r25	; 0x01
     ff4:	80 83       	st	Z, r24
     ff6:	22 c0       	rjmp	.+68     	; 0x103c <readgamepad+0xa9e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     ff8:	8e 01       	movw	r16, r28
     ffa:	08 58       	subi	r16, 0x88	; 136
     ffc:	1e 4f       	sbci	r17, 0xFE	; 254
     ffe:	fe 01       	movw	r30, r28
    1000:	e7 58       	subi	r30, 0x87	; 135
    1002:	fe 4f       	sbci	r31, 0xFE	; 254
    1004:	60 81       	ld	r22, Z
    1006:	71 81       	ldd	r23, Z+1	; 0x01
    1008:	82 81       	ldd	r24, Z+2	; 0x02
    100a:	93 81       	ldd	r25, Z+3	; 0x03
    100c:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1010:	dc 01       	movw	r26, r24
    1012:	cb 01       	movw	r24, r22
    1014:	f8 01       	movw	r30, r16
    1016:	80 83       	st	Z, r24
    1018:	de 01       	movw	r26, r28
    101a:	a7 59       	subi	r26, 0x97	; 151
    101c:	be 4f       	sbci	r27, 0xFE	; 254
    101e:	fe 01       	movw	r30, r28
    1020:	e8 58       	subi	r30, 0x88	; 136
    1022:	fe 4f       	sbci	r31, 0xFE	; 254
    1024:	80 81       	ld	r24, Z
    1026:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1028:	fe 01       	movw	r30, r28
    102a:	e7 59       	subi	r30, 0x97	; 151
    102c:	fe 4f       	sbci	r31, 0xFE	; 254
    102e:	80 81       	ld	r24, Z
    1030:	8a 95       	dec	r24
    1032:	f1 f7       	brne	.-4      	; 0x1030 <readgamepad+0xa92>
    1034:	fe 01       	movw	r30, r28
    1036:	e7 59       	subi	r30, 0x97	; 151
    1038:	fe 4f       	sbci	r31, 0xFE	; 254
    103a:	80 83       	st	Z, r24
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
    103c:	a8 e2       	ldi	r26, 0x28	; 40
    103e:	b0 e0       	ldi	r27, 0x00	; 0
    1040:	e8 e2       	ldi	r30, 0x28	; 40
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	80 81       	ld	r24, Z
    1046:	81 60       	ori	r24, 0x01	; 1
    1048:	8c 93       	st	X, r24
    104a:	fe 01       	movw	r30, r28
    104c:	eb 59       	subi	r30, 0x9B	; 155
    104e:	fe 4f       	sbci	r31, 0xFE	; 254
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	a0 e8       	ldi	r26, 0x80	; 128
    1056:	bf e3       	ldi	r27, 0x3F	; 63
    1058:	80 83       	st	Z, r24
    105a:	91 83       	std	Z+1, r25	; 0x01
    105c:	a2 83       	std	Z+2, r26	; 0x02
    105e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1060:	8e 01       	movw	r16, r28
    1062:	0f 59       	subi	r16, 0x9F	; 159
    1064:	1e 4f       	sbci	r17, 0xFE	; 254
    1066:	fe 01       	movw	r30, r28
    1068:	eb 59       	subi	r30, 0x9B	; 155
    106a:	fe 4f       	sbci	r31, 0xFE	; 254
    106c:	60 81       	ld	r22, Z
    106e:	71 81       	ldd	r23, Z+1	; 0x01
    1070:	82 81       	ldd	r24, Z+2	; 0x02
    1072:	93 81       	ldd	r25, Z+3	; 0x03
    1074:	2b ea       	ldi	r18, 0xAB	; 171
    1076:	3a ea       	ldi	r19, 0xAA	; 170
    1078:	4a ea       	ldi	r20, 0xAA	; 170
    107a:	50 e4       	ldi	r21, 0x40	; 64
    107c:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1080:	dc 01       	movw	r26, r24
    1082:	cb 01       	movw	r24, r22
    1084:	f8 01       	movw	r30, r16
    1086:	80 83       	st	Z, r24
    1088:	91 83       	std	Z+1, r25	; 0x01
    108a:	a2 83       	std	Z+2, r26	; 0x02
    108c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    108e:	fe 01       	movw	r30, r28
    1090:	ef 59       	subi	r30, 0x9F	; 159
    1092:	fe 4f       	sbci	r31, 0xFE	; 254
    1094:	60 81       	ld	r22, Z
    1096:	71 81       	ldd	r23, Z+1	; 0x01
    1098:	82 81       	ldd	r24, Z+2	; 0x02
    109a:	93 81       	ldd	r25, Z+3	; 0x03
    109c:	20 e0       	ldi	r18, 0x00	; 0
    109e:	30 e0       	ldi	r19, 0x00	; 0
    10a0:	40 e8       	ldi	r20, 0x80	; 128
    10a2:	5f e3       	ldi	r21, 0x3F	; 63
    10a4:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    10a8:	88 23       	and	r24, r24
    10aa:	34 f4       	brge	.+12     	; 0x10b8 <readgamepad+0xb1a>
		__ticks = 1;
    10ac:	fe 01       	movw	r30, r28
    10ae:	e0 5a       	subi	r30, 0xA0	; 160
    10b0:	fe 4f       	sbci	r31, 0xFE	; 254
    10b2:	81 e0       	ldi	r24, 0x01	; 1
    10b4:	80 83       	st	Z, r24
    10b6:	e0 c0       	rjmp	.+448    	; 0x1278 <readgamepad+0xcda>
	else if (__tmp > 255)
    10b8:	fe 01       	movw	r30, r28
    10ba:	ef 59       	subi	r30, 0x9F	; 159
    10bc:	fe 4f       	sbci	r31, 0xFE	; 254
    10be:	60 81       	ld	r22, Z
    10c0:	71 81       	ldd	r23, Z+1	; 0x01
    10c2:	82 81       	ldd	r24, Z+2	; 0x02
    10c4:	93 81       	ldd	r25, Z+3	; 0x03
    10c6:	20 e0       	ldi	r18, 0x00	; 0
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	4f e7       	ldi	r20, 0x7F	; 127
    10cc:	53 e4       	ldi	r21, 0x43	; 67
    10ce:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    10d2:	18 16       	cp	r1, r24
    10d4:	0c f0       	brlt	.+2      	; 0x10d8 <readgamepad+0xb3a>
    10d6:	c0 c0       	rjmp	.+384    	; 0x1258 <readgamepad+0xcba>
	{
		_delay_ms(__us / 1000.0);
    10d8:	fe 01       	movw	r30, r28
    10da:	eb 59       	subi	r30, 0x9B	; 155
    10dc:	fe 4f       	sbci	r31, 0xFE	; 254
    10de:	60 81       	ld	r22, Z
    10e0:	71 81       	ldd	r23, Z+1	; 0x01
    10e2:	82 81       	ldd	r24, Z+2	; 0x02
    10e4:	93 81       	ldd	r25, Z+3	; 0x03
    10e6:	20 e0       	ldi	r18, 0x00	; 0
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	4a e7       	ldi	r20, 0x7A	; 122
    10ec:	54 e4       	ldi	r21, 0x44	; 68
    10ee:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    10f2:	dc 01       	movw	r26, r24
    10f4:	cb 01       	movw	r24, r22
    10f6:	fe 01       	movw	r30, r28
    10f8:	e4 5a       	subi	r30, 0xA4	; 164
    10fa:	fe 4f       	sbci	r31, 0xFE	; 254
    10fc:	80 83       	st	Z, r24
    10fe:	91 83       	std	Z+1, r25	; 0x01
    1100:	a2 83       	std	Z+2, r26	; 0x02
    1102:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1104:	8e 01       	movw	r16, r28
    1106:	08 5a       	subi	r16, 0xA8	; 168
    1108:	1e 4f       	sbci	r17, 0xFE	; 254
    110a:	fe 01       	movw	r30, r28
    110c:	e4 5a       	subi	r30, 0xA4	; 164
    110e:	fe 4f       	sbci	r31, 0xFE	; 254
    1110:	60 81       	ld	r22, Z
    1112:	71 81       	ldd	r23, Z+1	; 0x01
    1114:	82 81       	ldd	r24, Z+2	; 0x02
    1116:	93 81       	ldd	r25, Z+3	; 0x03
    1118:	20 e0       	ldi	r18, 0x00	; 0
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	4a e7       	ldi	r20, 0x7A	; 122
    111e:	55 e4       	ldi	r21, 0x45	; 69
    1120:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1124:	dc 01       	movw	r26, r24
    1126:	cb 01       	movw	r24, r22
    1128:	f8 01       	movw	r30, r16
    112a:	80 83       	st	Z, r24
    112c:	91 83       	std	Z+1, r25	; 0x01
    112e:	a2 83       	std	Z+2, r26	; 0x02
    1130:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1132:	fe 01       	movw	r30, r28
    1134:	e8 5a       	subi	r30, 0xA8	; 168
    1136:	fe 4f       	sbci	r31, 0xFE	; 254
    1138:	60 81       	ld	r22, Z
    113a:	71 81       	ldd	r23, Z+1	; 0x01
    113c:	82 81       	ldd	r24, Z+2	; 0x02
    113e:	93 81       	ldd	r25, Z+3	; 0x03
    1140:	20 e0       	ldi	r18, 0x00	; 0
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	40 e8       	ldi	r20, 0x80	; 128
    1146:	5f e3       	ldi	r21, 0x3F	; 63
    1148:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    114c:	88 23       	and	r24, r24
    114e:	44 f4       	brge	.+16     	; 0x1160 <readgamepad+0xbc2>
		__ticks = 1;
    1150:	fe 01       	movw	r30, r28
    1152:	ea 5a       	subi	r30, 0xAA	; 170
    1154:	fe 4f       	sbci	r31, 0xFE	; 254
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	91 83       	std	Z+1, r25	; 0x01
    115c:	80 83       	st	Z, r24
    115e:	64 c0       	rjmp	.+200    	; 0x1228 <readgamepad+0xc8a>
	else if (__tmp > 65535)
    1160:	fe 01       	movw	r30, r28
    1162:	e8 5a       	subi	r30, 0xA8	; 168
    1164:	fe 4f       	sbci	r31, 0xFE	; 254
    1166:	60 81       	ld	r22, Z
    1168:	71 81       	ldd	r23, Z+1	; 0x01
    116a:	82 81       	ldd	r24, Z+2	; 0x02
    116c:	93 81       	ldd	r25, Z+3	; 0x03
    116e:	20 e0       	ldi	r18, 0x00	; 0
    1170:	3f ef       	ldi	r19, 0xFF	; 255
    1172:	4f e7       	ldi	r20, 0x7F	; 127
    1174:	57 e4       	ldi	r21, 0x47	; 71
    1176:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    117a:	18 16       	cp	r1, r24
    117c:	0c f0       	brlt	.+2      	; 0x1180 <readgamepad+0xbe2>
    117e:	43 c0       	rjmp	.+134    	; 0x1206 <readgamepad+0xc68>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1180:	fe 01       	movw	r30, r28
    1182:	e4 5a       	subi	r30, 0xA4	; 164
    1184:	fe 4f       	sbci	r31, 0xFE	; 254
    1186:	60 81       	ld	r22, Z
    1188:	71 81       	ldd	r23, Z+1	; 0x01
    118a:	82 81       	ldd	r24, Z+2	; 0x02
    118c:	93 81       	ldd	r25, Z+3	; 0x03
    118e:	20 e0       	ldi	r18, 0x00	; 0
    1190:	30 e0       	ldi	r19, 0x00	; 0
    1192:	40 e2       	ldi	r20, 0x20	; 32
    1194:	51 e4       	ldi	r21, 0x41	; 65
    1196:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    119a:	dc 01       	movw	r26, r24
    119c:	cb 01       	movw	r24, r22
    119e:	8e 01       	movw	r16, r28
    11a0:	0a 5a       	subi	r16, 0xAA	; 170
    11a2:	1e 4f       	sbci	r17, 0xFE	; 254
    11a4:	bc 01       	movw	r22, r24
    11a6:	cd 01       	movw	r24, r26
    11a8:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    11ac:	dc 01       	movw	r26, r24
    11ae:	cb 01       	movw	r24, r22
    11b0:	f8 01       	movw	r30, r16
    11b2:	91 83       	std	Z+1, r25	; 0x01
    11b4:	80 83       	st	Z, r24
    11b6:	1f c0       	rjmp	.+62     	; 0x11f6 <readgamepad+0xc58>
    11b8:	fe 01       	movw	r30, r28
    11ba:	ec 5a       	subi	r30, 0xAC	; 172
    11bc:	fe 4f       	sbci	r31, 0xFE	; 254
    11be:	80 e9       	ldi	r24, 0x90	; 144
    11c0:	91 e0       	ldi	r25, 0x01	; 1
    11c2:	91 83       	std	Z+1, r25	; 0x01
    11c4:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11c6:	fe 01       	movw	r30, r28
    11c8:	ec 5a       	subi	r30, 0xAC	; 172
    11ca:	fe 4f       	sbci	r31, 0xFE	; 254
    11cc:	80 81       	ld	r24, Z
    11ce:	91 81       	ldd	r25, Z+1	; 0x01
    11d0:	01 97       	sbiw	r24, 0x01	; 1
    11d2:	f1 f7       	brne	.-4      	; 0x11d0 <readgamepad+0xc32>
    11d4:	fe 01       	movw	r30, r28
    11d6:	ec 5a       	subi	r30, 0xAC	; 172
    11d8:	fe 4f       	sbci	r31, 0xFE	; 254
    11da:	91 83       	std	Z+1, r25	; 0x01
    11dc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11de:	de 01       	movw	r26, r28
    11e0:	aa 5a       	subi	r26, 0xAA	; 170
    11e2:	be 4f       	sbci	r27, 0xFE	; 254
    11e4:	fe 01       	movw	r30, r28
    11e6:	ea 5a       	subi	r30, 0xAA	; 170
    11e8:	fe 4f       	sbci	r31, 0xFE	; 254
    11ea:	80 81       	ld	r24, Z
    11ec:	91 81       	ldd	r25, Z+1	; 0x01
    11ee:	01 97       	sbiw	r24, 0x01	; 1
    11f0:	11 96       	adiw	r26, 0x01	; 1
    11f2:	9c 93       	st	X, r25
    11f4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11f6:	fe 01       	movw	r30, r28
    11f8:	ea 5a       	subi	r30, 0xAA	; 170
    11fa:	fe 4f       	sbci	r31, 0xFE	; 254
    11fc:	80 81       	ld	r24, Z
    11fe:	91 81       	ldd	r25, Z+1	; 0x01
    1200:	00 97       	sbiw	r24, 0x00	; 0
    1202:	d1 f6       	brne	.-76     	; 0x11b8 <readgamepad+0xc1a>
    1204:	4b c0       	rjmp	.+150    	; 0x129c <readgamepad+0xcfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1206:	8e 01       	movw	r16, r28
    1208:	0a 5a       	subi	r16, 0xAA	; 170
    120a:	1e 4f       	sbci	r17, 0xFE	; 254
    120c:	fe 01       	movw	r30, r28
    120e:	e8 5a       	subi	r30, 0xA8	; 168
    1210:	fe 4f       	sbci	r31, 0xFE	; 254
    1212:	60 81       	ld	r22, Z
    1214:	71 81       	ldd	r23, Z+1	; 0x01
    1216:	82 81       	ldd	r24, Z+2	; 0x02
    1218:	93 81       	ldd	r25, Z+3	; 0x03
    121a:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	f8 01       	movw	r30, r16
    1224:	91 83       	std	Z+1, r25	; 0x01
    1226:	80 83       	st	Z, r24
    1228:	de 01       	movw	r26, r28
    122a:	ae 5a       	subi	r26, 0xAE	; 174
    122c:	be 4f       	sbci	r27, 0xFE	; 254
    122e:	fe 01       	movw	r30, r28
    1230:	ea 5a       	subi	r30, 0xAA	; 170
    1232:	fe 4f       	sbci	r31, 0xFE	; 254
    1234:	80 81       	ld	r24, Z
    1236:	91 81       	ldd	r25, Z+1	; 0x01
    1238:	11 96       	adiw	r26, 0x01	; 1
    123a:	9c 93       	st	X, r25
    123c:	8e 93       	st	-X, r24
    123e:	fe 01       	movw	r30, r28
    1240:	ee 5a       	subi	r30, 0xAE	; 174
    1242:	fe 4f       	sbci	r31, 0xFE	; 254
    1244:	80 81       	ld	r24, Z
    1246:	91 81       	ldd	r25, Z+1	; 0x01
    1248:	01 97       	sbiw	r24, 0x01	; 1
    124a:	f1 f7       	brne	.-4      	; 0x1248 <readgamepad+0xcaa>
    124c:	fe 01       	movw	r30, r28
    124e:	ee 5a       	subi	r30, 0xAE	; 174
    1250:	fe 4f       	sbci	r31, 0xFE	; 254
    1252:	91 83       	std	Z+1, r25	; 0x01
    1254:	80 83       	st	Z, r24
    1256:	22 c0       	rjmp	.+68     	; 0x129c <readgamepad+0xcfe>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1258:	8e 01       	movw	r16, r28
    125a:	00 5a       	subi	r16, 0xA0	; 160
    125c:	1e 4f       	sbci	r17, 0xFE	; 254
    125e:	fe 01       	movw	r30, r28
    1260:	ef 59       	subi	r30, 0x9F	; 159
    1262:	fe 4f       	sbci	r31, 0xFE	; 254
    1264:	60 81       	ld	r22, Z
    1266:	71 81       	ldd	r23, Z+1	; 0x01
    1268:	82 81       	ldd	r24, Z+2	; 0x02
    126a:	93 81       	ldd	r25, Z+3	; 0x03
    126c:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	f8 01       	movw	r30, r16
    1276:	80 83       	st	Z, r24
    1278:	de 01       	movw	r26, r28
    127a:	af 5a       	subi	r26, 0xAF	; 175
    127c:	be 4f       	sbci	r27, 0xFE	; 254
    127e:	fe 01       	movw	r30, r28
    1280:	e0 5a       	subi	r30, 0xA0	; 160
    1282:	fe 4f       	sbci	r31, 0xFE	; 254
    1284:	80 81       	ld	r24, Z
    1286:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1288:	fe 01       	movw	r30, r28
    128a:	ef 5a       	subi	r30, 0xAF	; 175
    128c:	fe 4f       	sbci	r31, 0xFE	; 254
    128e:	80 81       	ld	r24, Z
    1290:	8a 95       	dec	r24
    1292:	f1 f7       	brne	.-4      	; 0x1290 <readgamepad+0xcf2>
    1294:	fe 01       	movw	r30, r28
    1296:	ef 5a       	subi	r30, 0xAF	; 175
    1298:	fe 4f       	sbci	r31, 0xFE	; 254
    129a:	80 83       	st	Z, r24

	
	
	ps2byte = 0x42;			//byte2
	
	for(i=0;i<8;i++)
    129c:	80 91 0c 02 	lds	r24, 0x020C
    12a0:	90 91 0d 02 	lds	r25, 0x020D
    12a4:	01 96       	adiw	r24, 0x01	; 1
    12a6:	90 93 0d 02 	sts	0x020D, r25
    12aa:	80 93 0c 02 	sts	0x020C, r24
    12ae:	80 91 0c 02 	lds	r24, 0x020C
    12b2:	90 91 0d 02 	lds	r25, 0x020D
    12b6:	88 30       	cpi	r24, 0x08	; 8
    12b8:	91 05       	cpc	r25, r1
    12ba:	0c f4       	brge	.+2      	; 0x12be <readgamepad+0xd20>
    12bc:	6c cd       	rjmp	.-1320   	; 0xd96 <readgamepad+0x7f8>
		cbi(ps2port,ps2clk); 
		_delay_us(1); 			
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    12be:	a8 e2       	ldi	r26, 0x28	; 40
    12c0:	b0 e0       	ldi	r27, 0x00	; 0
    12c2:	e8 e2       	ldi	r30, 0x28	; 40
    12c4:	f0 e0       	ldi	r31, 0x00	; 0
    12c6:	80 81       	ld	r24, Z
    12c8:	84 60       	ori	r24, 0x04	; 4
    12ca:	8c 93       	st	X, r24
	
	
	
		
	for(i=0;i<8;i++)		//byte3
    12cc:	10 92 0d 02 	sts	0x020D, r1
    12d0:	10 92 0c 02 	sts	0x020C, r1
    12d4:	70 c2       	rjmp	.+1248   	; 0x17b6 <readgamepad+0x1218>
	{	
		cbi(ps2port,ps2cmd);
    12d6:	a8 e2       	ldi	r26, 0x28	; 40
    12d8:	b0 e0       	ldi	r27, 0x00	; 0
    12da:	e8 e2       	ldi	r30, 0x28	; 40
    12dc:	f0 e0       	ldi	r31, 0x00	; 0
    12de:	80 81       	ld	r24, Z
    12e0:	8b 7f       	andi	r24, 0xFB	; 251
    12e2:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk);
    12e4:	a8 e2       	ldi	r26, 0x28	; 40
    12e6:	b0 e0       	ldi	r27, 0x00	; 0
    12e8:	e8 e2       	ldi	r30, 0x28	; 40
    12ea:	f0 e0       	ldi	r31, 0x00	; 0
    12ec:	80 81       	ld	r24, Z
    12ee:	8e 7f       	andi	r24, 0xFE	; 254
    12f0:	8c 93       	st	X, r24
    12f2:	fe 01       	movw	r30, r28
    12f4:	e3 5b       	subi	r30, 0xB3	; 179
    12f6:	fe 4f       	sbci	r31, 0xFE	; 254
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	a0 e8       	ldi	r26, 0x80	; 128
    12fe:	bf e3       	ldi	r27, 0x3F	; 63
    1300:	80 83       	st	Z, r24
    1302:	91 83       	std	Z+1, r25	; 0x01
    1304:	a2 83       	std	Z+2, r26	; 0x02
    1306:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1308:	8e 01       	movw	r16, r28
    130a:	07 5b       	subi	r16, 0xB7	; 183
    130c:	1e 4f       	sbci	r17, 0xFE	; 254
    130e:	fe 01       	movw	r30, r28
    1310:	e3 5b       	subi	r30, 0xB3	; 179
    1312:	fe 4f       	sbci	r31, 0xFE	; 254
    1314:	60 81       	ld	r22, Z
    1316:	71 81       	ldd	r23, Z+1	; 0x01
    1318:	82 81       	ldd	r24, Z+2	; 0x02
    131a:	93 81       	ldd	r25, Z+3	; 0x03
    131c:	2b ea       	ldi	r18, 0xAB	; 171
    131e:	3a ea       	ldi	r19, 0xAA	; 170
    1320:	4a ea       	ldi	r20, 0xAA	; 170
    1322:	50 e4       	ldi	r21, 0x40	; 64
    1324:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1328:	dc 01       	movw	r26, r24
    132a:	cb 01       	movw	r24, r22
    132c:	f8 01       	movw	r30, r16
    132e:	80 83       	st	Z, r24
    1330:	91 83       	std	Z+1, r25	; 0x01
    1332:	a2 83       	std	Z+2, r26	; 0x02
    1334:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1336:	fe 01       	movw	r30, r28
    1338:	e7 5b       	subi	r30, 0xB7	; 183
    133a:	fe 4f       	sbci	r31, 0xFE	; 254
    133c:	60 81       	ld	r22, Z
    133e:	71 81       	ldd	r23, Z+1	; 0x01
    1340:	82 81       	ldd	r24, Z+2	; 0x02
    1342:	93 81       	ldd	r25, Z+3	; 0x03
    1344:	20 e0       	ldi	r18, 0x00	; 0
    1346:	30 e0       	ldi	r19, 0x00	; 0
    1348:	40 e8       	ldi	r20, 0x80	; 128
    134a:	5f e3       	ldi	r21, 0x3F	; 63
    134c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    1350:	88 23       	and	r24, r24
    1352:	34 f4       	brge	.+12     	; 0x1360 <readgamepad+0xdc2>
		__ticks = 1;
    1354:	fe 01       	movw	r30, r28
    1356:	e8 5b       	subi	r30, 0xB8	; 184
    1358:	fe 4f       	sbci	r31, 0xFE	; 254
    135a:	81 e0       	ldi	r24, 0x01	; 1
    135c:	80 83       	st	Z, r24
    135e:	e0 c0       	rjmp	.+448    	; 0x1520 <readgamepad+0xf82>
	else if (__tmp > 255)
    1360:	fe 01       	movw	r30, r28
    1362:	e7 5b       	subi	r30, 0xB7	; 183
    1364:	fe 4f       	sbci	r31, 0xFE	; 254
    1366:	60 81       	ld	r22, Z
    1368:	71 81       	ldd	r23, Z+1	; 0x01
    136a:	82 81       	ldd	r24, Z+2	; 0x02
    136c:	93 81       	ldd	r25, Z+3	; 0x03
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	4f e7       	ldi	r20, 0x7F	; 127
    1374:	53 e4       	ldi	r21, 0x43	; 67
    1376:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    137a:	18 16       	cp	r1, r24
    137c:	0c f0       	brlt	.+2      	; 0x1380 <readgamepad+0xde2>
    137e:	c0 c0       	rjmp	.+384    	; 0x1500 <readgamepad+0xf62>
	{
		_delay_ms(__us / 1000.0);
    1380:	fe 01       	movw	r30, r28
    1382:	e3 5b       	subi	r30, 0xB3	; 179
    1384:	fe 4f       	sbci	r31, 0xFE	; 254
    1386:	60 81       	ld	r22, Z
    1388:	71 81       	ldd	r23, Z+1	; 0x01
    138a:	82 81       	ldd	r24, Z+2	; 0x02
    138c:	93 81       	ldd	r25, Z+3	; 0x03
    138e:	20 e0       	ldi	r18, 0x00	; 0
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	4a e7       	ldi	r20, 0x7A	; 122
    1394:	54 e4       	ldi	r21, 0x44	; 68
    1396:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    139a:	dc 01       	movw	r26, r24
    139c:	cb 01       	movw	r24, r22
    139e:	fe 01       	movw	r30, r28
    13a0:	ec 5b       	subi	r30, 0xBC	; 188
    13a2:	fe 4f       	sbci	r31, 0xFE	; 254
    13a4:	80 83       	st	Z, r24
    13a6:	91 83       	std	Z+1, r25	; 0x01
    13a8:	a2 83       	std	Z+2, r26	; 0x02
    13aa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13ac:	8e 01       	movw	r16, r28
    13ae:	00 5c       	subi	r16, 0xC0	; 192
    13b0:	1e 4f       	sbci	r17, 0xFE	; 254
    13b2:	fe 01       	movw	r30, r28
    13b4:	ec 5b       	subi	r30, 0xBC	; 188
    13b6:	fe 4f       	sbci	r31, 0xFE	; 254
    13b8:	60 81       	ld	r22, Z
    13ba:	71 81       	ldd	r23, Z+1	; 0x01
    13bc:	82 81       	ldd	r24, Z+2	; 0x02
    13be:	93 81       	ldd	r25, Z+3	; 0x03
    13c0:	20 e0       	ldi	r18, 0x00	; 0
    13c2:	30 e0       	ldi	r19, 0x00	; 0
    13c4:	4a e7       	ldi	r20, 0x7A	; 122
    13c6:	55 e4       	ldi	r21, 0x45	; 69
    13c8:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    13cc:	dc 01       	movw	r26, r24
    13ce:	cb 01       	movw	r24, r22
    13d0:	f8 01       	movw	r30, r16
    13d2:	80 83       	st	Z, r24
    13d4:	91 83       	std	Z+1, r25	; 0x01
    13d6:	a2 83       	std	Z+2, r26	; 0x02
    13d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13da:	fe 01       	movw	r30, r28
    13dc:	e0 5c       	subi	r30, 0xC0	; 192
    13de:	fe 4f       	sbci	r31, 0xFE	; 254
    13e0:	60 81       	ld	r22, Z
    13e2:	71 81       	ldd	r23, Z+1	; 0x01
    13e4:	82 81       	ldd	r24, Z+2	; 0x02
    13e6:	93 81       	ldd	r25, Z+3	; 0x03
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	40 e8       	ldi	r20, 0x80	; 128
    13ee:	5f e3       	ldi	r21, 0x3F	; 63
    13f0:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    13f4:	88 23       	and	r24, r24
    13f6:	44 f4       	brge	.+16     	; 0x1408 <readgamepad+0xe6a>
		__ticks = 1;
    13f8:	fe 01       	movw	r30, r28
    13fa:	e2 5c       	subi	r30, 0xC2	; 194
    13fc:	fe 4f       	sbci	r31, 0xFE	; 254
    13fe:	81 e0       	ldi	r24, 0x01	; 1
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	91 83       	std	Z+1, r25	; 0x01
    1404:	80 83       	st	Z, r24
    1406:	64 c0       	rjmp	.+200    	; 0x14d0 <readgamepad+0xf32>
	else if (__tmp > 65535)
    1408:	fe 01       	movw	r30, r28
    140a:	e0 5c       	subi	r30, 0xC0	; 192
    140c:	fe 4f       	sbci	r31, 0xFE	; 254
    140e:	60 81       	ld	r22, Z
    1410:	71 81       	ldd	r23, Z+1	; 0x01
    1412:	82 81       	ldd	r24, Z+2	; 0x02
    1414:	93 81       	ldd	r25, Z+3	; 0x03
    1416:	20 e0       	ldi	r18, 0x00	; 0
    1418:	3f ef       	ldi	r19, 0xFF	; 255
    141a:	4f e7       	ldi	r20, 0x7F	; 127
    141c:	57 e4       	ldi	r21, 0x47	; 71
    141e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    1422:	18 16       	cp	r1, r24
    1424:	0c f0       	brlt	.+2      	; 0x1428 <readgamepad+0xe8a>
    1426:	43 c0       	rjmp	.+134    	; 0x14ae <readgamepad+0xf10>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1428:	fe 01       	movw	r30, r28
    142a:	ec 5b       	subi	r30, 0xBC	; 188
    142c:	fe 4f       	sbci	r31, 0xFE	; 254
    142e:	60 81       	ld	r22, Z
    1430:	71 81       	ldd	r23, Z+1	; 0x01
    1432:	82 81       	ldd	r24, Z+2	; 0x02
    1434:	93 81       	ldd	r25, Z+3	; 0x03
    1436:	20 e0       	ldi	r18, 0x00	; 0
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	40 e2       	ldi	r20, 0x20	; 32
    143c:	51 e4       	ldi	r21, 0x41	; 65
    143e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1442:	dc 01       	movw	r26, r24
    1444:	cb 01       	movw	r24, r22
    1446:	8e 01       	movw	r16, r28
    1448:	02 5c       	subi	r16, 0xC2	; 194
    144a:	1e 4f       	sbci	r17, 0xFE	; 254
    144c:	bc 01       	movw	r22, r24
    144e:	cd 01       	movw	r24, r26
    1450:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1454:	dc 01       	movw	r26, r24
    1456:	cb 01       	movw	r24, r22
    1458:	f8 01       	movw	r30, r16
    145a:	91 83       	std	Z+1, r25	; 0x01
    145c:	80 83       	st	Z, r24
    145e:	1f c0       	rjmp	.+62     	; 0x149e <readgamepad+0xf00>
    1460:	fe 01       	movw	r30, r28
    1462:	e4 5c       	subi	r30, 0xC4	; 196
    1464:	fe 4f       	sbci	r31, 0xFE	; 254
    1466:	80 e9       	ldi	r24, 0x90	; 144
    1468:	91 e0       	ldi	r25, 0x01	; 1
    146a:	91 83       	std	Z+1, r25	; 0x01
    146c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    146e:	fe 01       	movw	r30, r28
    1470:	e4 5c       	subi	r30, 0xC4	; 196
    1472:	fe 4f       	sbci	r31, 0xFE	; 254
    1474:	80 81       	ld	r24, Z
    1476:	91 81       	ldd	r25, Z+1	; 0x01
    1478:	01 97       	sbiw	r24, 0x01	; 1
    147a:	f1 f7       	brne	.-4      	; 0x1478 <readgamepad+0xeda>
    147c:	fe 01       	movw	r30, r28
    147e:	e4 5c       	subi	r30, 0xC4	; 196
    1480:	fe 4f       	sbci	r31, 0xFE	; 254
    1482:	91 83       	std	Z+1, r25	; 0x01
    1484:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1486:	de 01       	movw	r26, r28
    1488:	a2 5c       	subi	r26, 0xC2	; 194
    148a:	be 4f       	sbci	r27, 0xFE	; 254
    148c:	fe 01       	movw	r30, r28
    148e:	e2 5c       	subi	r30, 0xC2	; 194
    1490:	fe 4f       	sbci	r31, 0xFE	; 254
    1492:	80 81       	ld	r24, Z
    1494:	91 81       	ldd	r25, Z+1	; 0x01
    1496:	01 97       	sbiw	r24, 0x01	; 1
    1498:	11 96       	adiw	r26, 0x01	; 1
    149a:	9c 93       	st	X, r25
    149c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    149e:	fe 01       	movw	r30, r28
    14a0:	e2 5c       	subi	r30, 0xC2	; 194
    14a2:	fe 4f       	sbci	r31, 0xFE	; 254
    14a4:	80 81       	ld	r24, Z
    14a6:	91 81       	ldd	r25, Z+1	; 0x01
    14a8:	00 97       	sbiw	r24, 0x00	; 0
    14aa:	d1 f6       	brne	.-76     	; 0x1460 <readgamepad+0xec2>
    14ac:	4b c0       	rjmp	.+150    	; 0x1544 <readgamepad+0xfa6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14ae:	8e 01       	movw	r16, r28
    14b0:	02 5c       	subi	r16, 0xC2	; 194
    14b2:	1e 4f       	sbci	r17, 0xFE	; 254
    14b4:	fe 01       	movw	r30, r28
    14b6:	e0 5c       	subi	r30, 0xC0	; 192
    14b8:	fe 4f       	sbci	r31, 0xFE	; 254
    14ba:	60 81       	ld	r22, Z
    14bc:	71 81       	ldd	r23, Z+1	; 0x01
    14be:	82 81       	ldd	r24, Z+2	; 0x02
    14c0:	93 81       	ldd	r25, Z+3	; 0x03
    14c2:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    14c6:	dc 01       	movw	r26, r24
    14c8:	cb 01       	movw	r24, r22
    14ca:	f8 01       	movw	r30, r16
    14cc:	91 83       	std	Z+1, r25	; 0x01
    14ce:	80 83       	st	Z, r24
    14d0:	de 01       	movw	r26, r28
    14d2:	a6 5c       	subi	r26, 0xC6	; 198
    14d4:	be 4f       	sbci	r27, 0xFE	; 254
    14d6:	fe 01       	movw	r30, r28
    14d8:	e2 5c       	subi	r30, 0xC2	; 194
    14da:	fe 4f       	sbci	r31, 0xFE	; 254
    14dc:	80 81       	ld	r24, Z
    14de:	91 81       	ldd	r25, Z+1	; 0x01
    14e0:	11 96       	adiw	r26, 0x01	; 1
    14e2:	9c 93       	st	X, r25
    14e4:	8e 93       	st	-X, r24
    14e6:	fe 01       	movw	r30, r28
    14e8:	e6 5c       	subi	r30, 0xC6	; 198
    14ea:	fe 4f       	sbci	r31, 0xFE	; 254
    14ec:	80 81       	ld	r24, Z
    14ee:	91 81       	ldd	r25, Z+1	; 0x01
    14f0:	01 97       	sbiw	r24, 0x01	; 1
    14f2:	f1 f7       	brne	.-4      	; 0x14f0 <readgamepad+0xf52>
    14f4:	fe 01       	movw	r30, r28
    14f6:	e6 5c       	subi	r30, 0xC6	; 198
    14f8:	fe 4f       	sbci	r31, 0xFE	; 254
    14fa:	91 83       	std	Z+1, r25	; 0x01
    14fc:	80 83       	st	Z, r24
    14fe:	22 c0       	rjmp	.+68     	; 0x1544 <readgamepad+0xfa6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1500:	8e 01       	movw	r16, r28
    1502:	08 5b       	subi	r16, 0xB8	; 184
    1504:	1e 4f       	sbci	r17, 0xFE	; 254
    1506:	fe 01       	movw	r30, r28
    1508:	e7 5b       	subi	r30, 0xB7	; 183
    150a:	fe 4f       	sbci	r31, 0xFE	; 254
    150c:	60 81       	ld	r22, Z
    150e:	71 81       	ldd	r23, Z+1	; 0x01
    1510:	82 81       	ldd	r24, Z+2	; 0x02
    1512:	93 81       	ldd	r25, Z+3	; 0x03
    1514:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1518:	dc 01       	movw	r26, r24
    151a:	cb 01       	movw	r24, r22
    151c:	f8 01       	movw	r30, r16
    151e:	80 83       	st	Z, r24
    1520:	de 01       	movw	r26, r28
    1522:	a7 5c       	subi	r26, 0xC7	; 199
    1524:	be 4f       	sbci	r27, 0xFE	; 254
    1526:	fe 01       	movw	r30, r28
    1528:	e8 5b       	subi	r30, 0xB8	; 184
    152a:	fe 4f       	sbci	r31, 0xFE	; 254
    152c:	80 81       	ld	r24, Z
    152e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1530:	fe 01       	movw	r30, r28
    1532:	e7 5c       	subi	r30, 0xC7	; 199
    1534:	fe 4f       	sbci	r31, 0xFE	; 254
    1536:	80 81       	ld	r24, Z
    1538:	8a 95       	dec	r24
    153a:	f1 f7       	brne	.-4      	; 0x1538 <readgamepad+0xf9a>
    153c:	fe 01       	movw	r30, r28
    153e:	e7 5c       	subi	r30, 0xC7	; 199
    1540:	fe 4f       	sbci	r31, 0xFE	; 254
    1542:	80 83       	st	Z, r24
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
    1544:	a8 e2       	ldi	r26, 0x28	; 40
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	e8 e2       	ldi	r30, 0x28	; 40
    154a:	f0 e0       	ldi	r31, 0x00	; 0
    154c:	80 81       	ld	r24, Z
    154e:	81 60       	ori	r24, 0x01	; 1
    1550:	8c 93       	st	X, r24
    1552:	fe 01       	movw	r30, r28
    1554:	eb 5c       	subi	r30, 0xCB	; 203
    1556:	fe 4f       	sbci	r31, 0xFE	; 254
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	a0 e8       	ldi	r26, 0x80	; 128
    155e:	bf e3       	ldi	r27, 0x3F	; 63
    1560:	80 83       	st	Z, r24
    1562:	91 83       	std	Z+1, r25	; 0x01
    1564:	a2 83       	std	Z+2, r26	; 0x02
    1566:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1568:	8e 01       	movw	r16, r28
    156a:	0f 5c       	subi	r16, 0xCF	; 207
    156c:	1e 4f       	sbci	r17, 0xFE	; 254
    156e:	fe 01       	movw	r30, r28
    1570:	eb 5c       	subi	r30, 0xCB	; 203
    1572:	fe 4f       	sbci	r31, 0xFE	; 254
    1574:	60 81       	ld	r22, Z
    1576:	71 81       	ldd	r23, Z+1	; 0x01
    1578:	82 81       	ldd	r24, Z+2	; 0x02
    157a:	93 81       	ldd	r25, Z+3	; 0x03
    157c:	2b ea       	ldi	r18, 0xAB	; 171
    157e:	3a ea       	ldi	r19, 0xAA	; 170
    1580:	4a ea       	ldi	r20, 0xAA	; 170
    1582:	50 e4       	ldi	r21, 0x40	; 64
    1584:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1588:	dc 01       	movw	r26, r24
    158a:	cb 01       	movw	r24, r22
    158c:	f8 01       	movw	r30, r16
    158e:	80 83       	st	Z, r24
    1590:	91 83       	std	Z+1, r25	; 0x01
    1592:	a2 83       	std	Z+2, r26	; 0x02
    1594:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1596:	fe 01       	movw	r30, r28
    1598:	ef 5c       	subi	r30, 0xCF	; 207
    159a:	fe 4f       	sbci	r31, 0xFE	; 254
    159c:	60 81       	ld	r22, Z
    159e:	71 81       	ldd	r23, Z+1	; 0x01
    15a0:	82 81       	ldd	r24, Z+2	; 0x02
    15a2:	93 81       	ldd	r25, Z+3	; 0x03
    15a4:	20 e0       	ldi	r18, 0x00	; 0
    15a6:	30 e0       	ldi	r19, 0x00	; 0
    15a8:	40 e8       	ldi	r20, 0x80	; 128
    15aa:	5f e3       	ldi	r21, 0x3F	; 63
    15ac:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    15b0:	88 23       	and	r24, r24
    15b2:	34 f4       	brge	.+12     	; 0x15c0 <readgamepad+0x1022>
		__ticks = 1;
    15b4:	fe 01       	movw	r30, r28
    15b6:	e0 5d       	subi	r30, 0xD0	; 208
    15b8:	fe 4f       	sbci	r31, 0xFE	; 254
    15ba:	81 e0       	ldi	r24, 0x01	; 1
    15bc:	80 83       	st	Z, r24
    15be:	e0 c0       	rjmp	.+448    	; 0x1780 <readgamepad+0x11e2>
	else if (__tmp > 255)
    15c0:	fe 01       	movw	r30, r28
    15c2:	ef 5c       	subi	r30, 0xCF	; 207
    15c4:	fe 4f       	sbci	r31, 0xFE	; 254
    15c6:	60 81       	ld	r22, Z
    15c8:	71 81       	ldd	r23, Z+1	; 0x01
    15ca:	82 81       	ldd	r24, Z+2	; 0x02
    15cc:	93 81       	ldd	r25, Z+3	; 0x03
    15ce:	20 e0       	ldi	r18, 0x00	; 0
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	4f e7       	ldi	r20, 0x7F	; 127
    15d4:	53 e4       	ldi	r21, 0x43	; 67
    15d6:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    15da:	18 16       	cp	r1, r24
    15dc:	0c f0       	brlt	.+2      	; 0x15e0 <readgamepad+0x1042>
    15de:	c0 c0       	rjmp	.+384    	; 0x1760 <readgamepad+0x11c2>
	{
		_delay_ms(__us / 1000.0);
    15e0:	fe 01       	movw	r30, r28
    15e2:	eb 5c       	subi	r30, 0xCB	; 203
    15e4:	fe 4f       	sbci	r31, 0xFE	; 254
    15e6:	60 81       	ld	r22, Z
    15e8:	71 81       	ldd	r23, Z+1	; 0x01
    15ea:	82 81       	ldd	r24, Z+2	; 0x02
    15ec:	93 81       	ldd	r25, Z+3	; 0x03
    15ee:	20 e0       	ldi	r18, 0x00	; 0
    15f0:	30 e0       	ldi	r19, 0x00	; 0
    15f2:	4a e7       	ldi	r20, 0x7A	; 122
    15f4:	54 e4       	ldi	r21, 0x44	; 68
    15f6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    15fa:	dc 01       	movw	r26, r24
    15fc:	cb 01       	movw	r24, r22
    15fe:	fe 01       	movw	r30, r28
    1600:	e4 5d       	subi	r30, 0xD4	; 212
    1602:	fe 4f       	sbci	r31, 0xFE	; 254
    1604:	80 83       	st	Z, r24
    1606:	91 83       	std	Z+1, r25	; 0x01
    1608:	a2 83       	std	Z+2, r26	; 0x02
    160a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    160c:	8e 01       	movw	r16, r28
    160e:	08 5d       	subi	r16, 0xD8	; 216
    1610:	1e 4f       	sbci	r17, 0xFE	; 254
    1612:	fe 01       	movw	r30, r28
    1614:	e4 5d       	subi	r30, 0xD4	; 212
    1616:	fe 4f       	sbci	r31, 0xFE	; 254
    1618:	60 81       	ld	r22, Z
    161a:	71 81       	ldd	r23, Z+1	; 0x01
    161c:	82 81       	ldd	r24, Z+2	; 0x02
    161e:	93 81       	ldd	r25, Z+3	; 0x03
    1620:	20 e0       	ldi	r18, 0x00	; 0
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	4a e7       	ldi	r20, 0x7A	; 122
    1626:	55 e4       	ldi	r21, 0x45	; 69
    1628:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    162c:	dc 01       	movw	r26, r24
    162e:	cb 01       	movw	r24, r22
    1630:	f8 01       	movw	r30, r16
    1632:	80 83       	st	Z, r24
    1634:	91 83       	std	Z+1, r25	; 0x01
    1636:	a2 83       	std	Z+2, r26	; 0x02
    1638:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    163a:	fe 01       	movw	r30, r28
    163c:	e8 5d       	subi	r30, 0xD8	; 216
    163e:	fe 4f       	sbci	r31, 0xFE	; 254
    1640:	60 81       	ld	r22, Z
    1642:	71 81       	ldd	r23, Z+1	; 0x01
    1644:	82 81       	ldd	r24, Z+2	; 0x02
    1646:	93 81       	ldd	r25, Z+3	; 0x03
    1648:	20 e0       	ldi	r18, 0x00	; 0
    164a:	30 e0       	ldi	r19, 0x00	; 0
    164c:	40 e8       	ldi	r20, 0x80	; 128
    164e:	5f e3       	ldi	r21, 0x3F	; 63
    1650:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    1654:	88 23       	and	r24, r24
    1656:	44 f4       	brge	.+16     	; 0x1668 <readgamepad+0x10ca>
		__ticks = 1;
    1658:	fe 01       	movw	r30, r28
    165a:	ea 5d       	subi	r30, 0xDA	; 218
    165c:	fe 4f       	sbci	r31, 0xFE	; 254
    165e:	81 e0       	ldi	r24, 0x01	; 1
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	91 83       	std	Z+1, r25	; 0x01
    1664:	80 83       	st	Z, r24
    1666:	64 c0       	rjmp	.+200    	; 0x1730 <readgamepad+0x1192>
	else if (__tmp > 65535)
    1668:	fe 01       	movw	r30, r28
    166a:	e8 5d       	subi	r30, 0xD8	; 216
    166c:	fe 4f       	sbci	r31, 0xFE	; 254
    166e:	60 81       	ld	r22, Z
    1670:	71 81       	ldd	r23, Z+1	; 0x01
    1672:	82 81       	ldd	r24, Z+2	; 0x02
    1674:	93 81       	ldd	r25, Z+3	; 0x03
    1676:	20 e0       	ldi	r18, 0x00	; 0
    1678:	3f ef       	ldi	r19, 0xFF	; 255
    167a:	4f e7       	ldi	r20, 0x7F	; 127
    167c:	57 e4       	ldi	r21, 0x47	; 71
    167e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    1682:	18 16       	cp	r1, r24
    1684:	0c f0       	brlt	.+2      	; 0x1688 <readgamepad+0x10ea>
    1686:	43 c0       	rjmp	.+134    	; 0x170e <readgamepad+0x1170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1688:	fe 01       	movw	r30, r28
    168a:	e4 5d       	subi	r30, 0xD4	; 212
    168c:	fe 4f       	sbci	r31, 0xFE	; 254
    168e:	60 81       	ld	r22, Z
    1690:	71 81       	ldd	r23, Z+1	; 0x01
    1692:	82 81       	ldd	r24, Z+2	; 0x02
    1694:	93 81       	ldd	r25, Z+3	; 0x03
    1696:	20 e0       	ldi	r18, 0x00	; 0
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	40 e2       	ldi	r20, 0x20	; 32
    169c:	51 e4       	ldi	r21, 0x41	; 65
    169e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    16a2:	dc 01       	movw	r26, r24
    16a4:	cb 01       	movw	r24, r22
    16a6:	8e 01       	movw	r16, r28
    16a8:	0a 5d       	subi	r16, 0xDA	; 218
    16aa:	1e 4f       	sbci	r17, 0xFE	; 254
    16ac:	bc 01       	movw	r22, r24
    16ae:	cd 01       	movw	r24, r26
    16b0:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    16b4:	dc 01       	movw	r26, r24
    16b6:	cb 01       	movw	r24, r22
    16b8:	f8 01       	movw	r30, r16
    16ba:	91 83       	std	Z+1, r25	; 0x01
    16bc:	80 83       	st	Z, r24
    16be:	1f c0       	rjmp	.+62     	; 0x16fe <readgamepad+0x1160>
    16c0:	fe 01       	movw	r30, r28
    16c2:	ec 5d       	subi	r30, 0xDC	; 220
    16c4:	fe 4f       	sbci	r31, 0xFE	; 254
    16c6:	80 e9       	ldi	r24, 0x90	; 144
    16c8:	91 e0       	ldi	r25, 0x01	; 1
    16ca:	91 83       	std	Z+1, r25	; 0x01
    16cc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    16ce:	fe 01       	movw	r30, r28
    16d0:	ec 5d       	subi	r30, 0xDC	; 220
    16d2:	fe 4f       	sbci	r31, 0xFE	; 254
    16d4:	80 81       	ld	r24, Z
    16d6:	91 81       	ldd	r25, Z+1	; 0x01
    16d8:	01 97       	sbiw	r24, 0x01	; 1
    16da:	f1 f7       	brne	.-4      	; 0x16d8 <readgamepad+0x113a>
    16dc:	fe 01       	movw	r30, r28
    16de:	ec 5d       	subi	r30, 0xDC	; 220
    16e0:	fe 4f       	sbci	r31, 0xFE	; 254
    16e2:	91 83       	std	Z+1, r25	; 0x01
    16e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16e6:	de 01       	movw	r26, r28
    16e8:	aa 5d       	subi	r26, 0xDA	; 218
    16ea:	be 4f       	sbci	r27, 0xFE	; 254
    16ec:	fe 01       	movw	r30, r28
    16ee:	ea 5d       	subi	r30, 0xDA	; 218
    16f0:	fe 4f       	sbci	r31, 0xFE	; 254
    16f2:	80 81       	ld	r24, Z
    16f4:	91 81       	ldd	r25, Z+1	; 0x01
    16f6:	01 97       	sbiw	r24, 0x01	; 1
    16f8:	11 96       	adiw	r26, 0x01	; 1
    16fa:	9c 93       	st	X, r25
    16fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16fe:	fe 01       	movw	r30, r28
    1700:	ea 5d       	subi	r30, 0xDA	; 218
    1702:	fe 4f       	sbci	r31, 0xFE	; 254
    1704:	80 81       	ld	r24, Z
    1706:	91 81       	ldd	r25, Z+1	; 0x01
    1708:	00 97       	sbiw	r24, 0x00	; 0
    170a:	d1 f6       	brne	.-76     	; 0x16c0 <readgamepad+0x1122>
    170c:	4b c0       	rjmp	.+150    	; 0x17a4 <readgamepad+0x1206>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    170e:	8e 01       	movw	r16, r28
    1710:	0a 5d       	subi	r16, 0xDA	; 218
    1712:	1e 4f       	sbci	r17, 0xFE	; 254
    1714:	fe 01       	movw	r30, r28
    1716:	e8 5d       	subi	r30, 0xD8	; 216
    1718:	fe 4f       	sbci	r31, 0xFE	; 254
    171a:	60 81       	ld	r22, Z
    171c:	71 81       	ldd	r23, Z+1	; 0x01
    171e:	82 81       	ldd	r24, Z+2	; 0x02
    1720:	93 81       	ldd	r25, Z+3	; 0x03
    1722:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1726:	dc 01       	movw	r26, r24
    1728:	cb 01       	movw	r24, r22
    172a:	f8 01       	movw	r30, r16
    172c:	91 83       	std	Z+1, r25	; 0x01
    172e:	80 83       	st	Z, r24
    1730:	de 01       	movw	r26, r28
    1732:	ae 5d       	subi	r26, 0xDE	; 222
    1734:	be 4f       	sbci	r27, 0xFE	; 254
    1736:	fe 01       	movw	r30, r28
    1738:	ea 5d       	subi	r30, 0xDA	; 218
    173a:	fe 4f       	sbci	r31, 0xFE	; 254
    173c:	80 81       	ld	r24, Z
    173e:	91 81       	ldd	r25, Z+1	; 0x01
    1740:	11 96       	adiw	r26, 0x01	; 1
    1742:	9c 93       	st	X, r25
    1744:	8e 93       	st	-X, r24
    1746:	fe 01       	movw	r30, r28
    1748:	ee 5d       	subi	r30, 0xDE	; 222
    174a:	fe 4f       	sbci	r31, 0xFE	; 254
    174c:	80 81       	ld	r24, Z
    174e:	91 81       	ldd	r25, Z+1	; 0x01
    1750:	01 97       	sbiw	r24, 0x01	; 1
    1752:	f1 f7       	brne	.-4      	; 0x1750 <readgamepad+0x11b2>
    1754:	fe 01       	movw	r30, r28
    1756:	ee 5d       	subi	r30, 0xDE	; 222
    1758:	fe 4f       	sbci	r31, 0xFE	; 254
    175a:	91 83       	std	Z+1, r25	; 0x01
    175c:	80 83       	st	Z, r24
    175e:	22 c0       	rjmp	.+68     	; 0x17a4 <readgamepad+0x1206>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1760:	8e 01       	movw	r16, r28
    1762:	00 5d       	subi	r16, 0xD0	; 208
    1764:	1e 4f       	sbci	r17, 0xFE	; 254
    1766:	fe 01       	movw	r30, r28
    1768:	ef 5c       	subi	r30, 0xCF	; 207
    176a:	fe 4f       	sbci	r31, 0xFE	; 254
    176c:	60 81       	ld	r22, Z
    176e:	71 81       	ldd	r23, Z+1	; 0x01
    1770:	82 81       	ldd	r24, Z+2	; 0x02
    1772:	93 81       	ldd	r25, Z+3	; 0x03
    1774:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1778:	dc 01       	movw	r26, r24
    177a:	cb 01       	movw	r24, r22
    177c:	f8 01       	movw	r30, r16
    177e:	80 83       	st	Z, r24
    1780:	de 01       	movw	r26, r28
    1782:	af 5d       	subi	r26, 0xDF	; 223
    1784:	be 4f       	sbci	r27, 0xFE	; 254
    1786:	fe 01       	movw	r30, r28
    1788:	e0 5d       	subi	r30, 0xD0	; 208
    178a:	fe 4f       	sbci	r31, 0xFE	; 254
    178c:	80 81       	ld	r24, Z
    178e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1790:	fe 01       	movw	r30, r28
    1792:	ef 5d       	subi	r30, 0xDF	; 223
    1794:	fe 4f       	sbci	r31, 0xFE	; 254
    1796:	80 81       	ld	r24, Z
    1798:	8a 95       	dec	r24
    179a:	f1 f7       	brne	.-4      	; 0x1798 <readgamepad+0x11fa>
    179c:	fe 01       	movw	r30, r28
    179e:	ef 5d       	subi	r30, 0xDF	; 223
    17a0:	fe 4f       	sbci	r31, 0xFE	; 254
    17a2:	80 83       	st	Z, r24
	sbi(ps2port,ps2cmd); 
	
	
	
		
	for(i=0;i<8;i++)		//byte3
    17a4:	80 91 0c 02 	lds	r24, 0x020C
    17a8:	90 91 0d 02 	lds	r25, 0x020D
    17ac:	01 96       	adiw	r24, 0x01	; 1
    17ae:	90 93 0d 02 	sts	0x020D, r25
    17b2:	80 93 0c 02 	sts	0x020C, r24
    17b6:	80 91 0c 02 	lds	r24, 0x020C
    17ba:	90 91 0d 02 	lds	r25, 0x020D
    17be:	88 30       	cpi	r24, 0x08	; 8
    17c0:	91 05       	cpc	r25, r1
    17c2:	0c f4       	brge	.+2      	; 0x17c6 <readgamepad+0x1228>
    17c4:	88 cd       	rjmp	.-1264   	; 0x12d6 <readgamepad+0xd38>
		_delay_us(1); 	 
		sbi(ps2port,ps2clk); 
		_delay_us(1); 	
		
	}
	sbi(ps2port,ps2cmd); 
    17c6:	a8 e2       	ldi	r26, 0x28	; 40
    17c8:	b0 e0       	ldi	r27, 0x00	; 0
    17ca:	e8 e2       	ldi	r30, 0x28	; 40
    17cc:	f0 e0       	ldi	r31, 0x00	; 0
    17ce:	80 81       	ld	r24, Z
    17d0:	84 60       	ori	r24, 0x04	; 4
    17d2:	8c 93       	st	X, r24
	
	
	ps2data4=0;
    17d4:	10 92 0b 02 	sts	0x020B, r1
    17d8:	10 92 0a 02 	sts	0x020A, r1
	for(i=0;i<8;i++)  // 4 byte
    17dc:	10 92 0d 02 	sts	0x020D, r1
    17e0:	10 92 0c 02 	sts	0x020C, r1
    17e4:	a8 c2       	rjmp	.+1360   	; 0x1d36 <readgamepad+0x1798>
	{
		cbi(ps2port,ps2cmd);
    17e6:	a8 e2       	ldi	r26, 0x28	; 40
    17e8:	b0 e0       	ldi	r27, 0x00	; 0
    17ea:	e8 e2       	ldi	r30, 0x28	; 40
    17ec:	f0 e0       	ldi	r31, 0x00	; 0
    17ee:	80 81       	ld	r24, Z
    17f0:	8b 7f       	andi	r24, 0xFB	; 251
    17f2:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk);
    17f4:	a8 e2       	ldi	r26, 0x28	; 40
    17f6:	b0 e0       	ldi	r27, 0x00	; 0
    17f8:	e8 e2       	ldi	r30, 0x28	; 40
    17fa:	f0 e0       	ldi	r31, 0x00	; 0
    17fc:	80 81       	ld	r24, Z
    17fe:	8e 7f       	andi	r24, 0xFE	; 254
    1800:	8c 93       	st	X, r24
    1802:	fe 01       	movw	r30, r28
    1804:	e3 5e       	subi	r30, 0xE3	; 227
    1806:	fe 4f       	sbci	r31, 0xFE	; 254
    1808:	80 e0       	ldi	r24, 0x00	; 0
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	a0 e8       	ldi	r26, 0x80	; 128
    180e:	bf e3       	ldi	r27, 0x3F	; 63
    1810:	80 83       	st	Z, r24
    1812:	91 83       	std	Z+1, r25	; 0x01
    1814:	a2 83       	std	Z+2, r26	; 0x02
    1816:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1818:	8e 01       	movw	r16, r28
    181a:	07 5e       	subi	r16, 0xE7	; 231
    181c:	1e 4f       	sbci	r17, 0xFE	; 254
    181e:	fe 01       	movw	r30, r28
    1820:	e3 5e       	subi	r30, 0xE3	; 227
    1822:	fe 4f       	sbci	r31, 0xFE	; 254
    1824:	60 81       	ld	r22, Z
    1826:	71 81       	ldd	r23, Z+1	; 0x01
    1828:	82 81       	ldd	r24, Z+2	; 0x02
    182a:	93 81       	ldd	r25, Z+3	; 0x03
    182c:	2b ea       	ldi	r18, 0xAB	; 171
    182e:	3a ea       	ldi	r19, 0xAA	; 170
    1830:	4a ea       	ldi	r20, 0xAA	; 170
    1832:	50 e4       	ldi	r21, 0x40	; 64
    1834:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1838:	dc 01       	movw	r26, r24
    183a:	cb 01       	movw	r24, r22
    183c:	f8 01       	movw	r30, r16
    183e:	80 83       	st	Z, r24
    1840:	91 83       	std	Z+1, r25	; 0x01
    1842:	a2 83       	std	Z+2, r26	; 0x02
    1844:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1846:	fe 01       	movw	r30, r28
    1848:	e7 5e       	subi	r30, 0xE7	; 231
    184a:	fe 4f       	sbci	r31, 0xFE	; 254
    184c:	60 81       	ld	r22, Z
    184e:	71 81       	ldd	r23, Z+1	; 0x01
    1850:	82 81       	ldd	r24, Z+2	; 0x02
    1852:	93 81       	ldd	r25, Z+3	; 0x03
    1854:	20 e0       	ldi	r18, 0x00	; 0
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	40 e8       	ldi	r20, 0x80	; 128
    185a:	5f e3       	ldi	r21, 0x3F	; 63
    185c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    1860:	88 23       	and	r24, r24
    1862:	34 f4       	brge	.+12     	; 0x1870 <readgamepad+0x12d2>
		__ticks = 1;
    1864:	fe 01       	movw	r30, r28
    1866:	e8 5e       	subi	r30, 0xE8	; 232
    1868:	fe 4f       	sbci	r31, 0xFE	; 254
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	80 83       	st	Z, r24
    186e:	e0 c0       	rjmp	.+448    	; 0x1a30 <readgamepad+0x1492>
	else if (__tmp > 255)
    1870:	fe 01       	movw	r30, r28
    1872:	e7 5e       	subi	r30, 0xE7	; 231
    1874:	fe 4f       	sbci	r31, 0xFE	; 254
    1876:	60 81       	ld	r22, Z
    1878:	71 81       	ldd	r23, Z+1	; 0x01
    187a:	82 81       	ldd	r24, Z+2	; 0x02
    187c:	93 81       	ldd	r25, Z+3	; 0x03
    187e:	20 e0       	ldi	r18, 0x00	; 0
    1880:	30 e0       	ldi	r19, 0x00	; 0
    1882:	4f e7       	ldi	r20, 0x7F	; 127
    1884:	53 e4       	ldi	r21, 0x43	; 67
    1886:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    188a:	18 16       	cp	r1, r24
    188c:	0c f0       	brlt	.+2      	; 0x1890 <readgamepad+0x12f2>
    188e:	c0 c0       	rjmp	.+384    	; 0x1a10 <readgamepad+0x1472>
	{
		_delay_ms(__us / 1000.0);
    1890:	fe 01       	movw	r30, r28
    1892:	e3 5e       	subi	r30, 0xE3	; 227
    1894:	fe 4f       	sbci	r31, 0xFE	; 254
    1896:	60 81       	ld	r22, Z
    1898:	71 81       	ldd	r23, Z+1	; 0x01
    189a:	82 81       	ldd	r24, Z+2	; 0x02
    189c:	93 81       	ldd	r25, Z+3	; 0x03
    189e:	20 e0       	ldi	r18, 0x00	; 0
    18a0:	30 e0       	ldi	r19, 0x00	; 0
    18a2:	4a e7       	ldi	r20, 0x7A	; 122
    18a4:	54 e4       	ldi	r21, 0x44	; 68
    18a6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    18aa:	dc 01       	movw	r26, r24
    18ac:	cb 01       	movw	r24, r22
    18ae:	fe 01       	movw	r30, r28
    18b0:	ec 5e       	subi	r30, 0xEC	; 236
    18b2:	fe 4f       	sbci	r31, 0xFE	; 254
    18b4:	80 83       	st	Z, r24
    18b6:	91 83       	std	Z+1, r25	; 0x01
    18b8:	a2 83       	std	Z+2, r26	; 0x02
    18ba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18bc:	8e 01       	movw	r16, r28
    18be:	00 5f       	subi	r16, 0xF0	; 240
    18c0:	1e 4f       	sbci	r17, 0xFE	; 254
    18c2:	fe 01       	movw	r30, r28
    18c4:	ec 5e       	subi	r30, 0xEC	; 236
    18c6:	fe 4f       	sbci	r31, 0xFE	; 254
    18c8:	60 81       	ld	r22, Z
    18ca:	71 81       	ldd	r23, Z+1	; 0x01
    18cc:	82 81       	ldd	r24, Z+2	; 0x02
    18ce:	93 81       	ldd	r25, Z+3	; 0x03
    18d0:	20 e0       	ldi	r18, 0x00	; 0
    18d2:	30 e0       	ldi	r19, 0x00	; 0
    18d4:	4a e7       	ldi	r20, 0x7A	; 122
    18d6:	55 e4       	ldi	r21, 0x45	; 69
    18d8:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    18dc:	dc 01       	movw	r26, r24
    18de:	cb 01       	movw	r24, r22
    18e0:	f8 01       	movw	r30, r16
    18e2:	80 83       	st	Z, r24
    18e4:	91 83       	std	Z+1, r25	; 0x01
    18e6:	a2 83       	std	Z+2, r26	; 0x02
    18e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18ea:	fe 01       	movw	r30, r28
    18ec:	e0 5f       	subi	r30, 0xF0	; 240
    18ee:	fe 4f       	sbci	r31, 0xFE	; 254
    18f0:	60 81       	ld	r22, Z
    18f2:	71 81       	ldd	r23, Z+1	; 0x01
    18f4:	82 81       	ldd	r24, Z+2	; 0x02
    18f6:	93 81       	ldd	r25, Z+3	; 0x03
    18f8:	20 e0       	ldi	r18, 0x00	; 0
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	40 e8       	ldi	r20, 0x80	; 128
    18fe:	5f e3       	ldi	r21, 0x3F	; 63
    1900:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    1904:	88 23       	and	r24, r24
    1906:	44 f4       	brge	.+16     	; 0x1918 <readgamepad+0x137a>
		__ticks = 1;
    1908:	fe 01       	movw	r30, r28
    190a:	e2 5f       	subi	r30, 0xF2	; 242
    190c:	fe 4f       	sbci	r31, 0xFE	; 254
    190e:	81 e0       	ldi	r24, 0x01	; 1
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	91 83       	std	Z+1, r25	; 0x01
    1914:	80 83       	st	Z, r24
    1916:	64 c0       	rjmp	.+200    	; 0x19e0 <readgamepad+0x1442>
	else if (__tmp > 65535)
    1918:	fe 01       	movw	r30, r28
    191a:	e0 5f       	subi	r30, 0xF0	; 240
    191c:	fe 4f       	sbci	r31, 0xFE	; 254
    191e:	60 81       	ld	r22, Z
    1920:	71 81       	ldd	r23, Z+1	; 0x01
    1922:	82 81       	ldd	r24, Z+2	; 0x02
    1924:	93 81       	ldd	r25, Z+3	; 0x03
    1926:	20 e0       	ldi	r18, 0x00	; 0
    1928:	3f ef       	ldi	r19, 0xFF	; 255
    192a:	4f e7       	ldi	r20, 0x7F	; 127
    192c:	57 e4       	ldi	r21, 0x47	; 71
    192e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    1932:	18 16       	cp	r1, r24
    1934:	0c f0       	brlt	.+2      	; 0x1938 <readgamepad+0x139a>
    1936:	43 c0       	rjmp	.+134    	; 0x19be <readgamepad+0x1420>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1938:	fe 01       	movw	r30, r28
    193a:	ec 5e       	subi	r30, 0xEC	; 236
    193c:	fe 4f       	sbci	r31, 0xFE	; 254
    193e:	60 81       	ld	r22, Z
    1940:	71 81       	ldd	r23, Z+1	; 0x01
    1942:	82 81       	ldd	r24, Z+2	; 0x02
    1944:	93 81       	ldd	r25, Z+3	; 0x03
    1946:	20 e0       	ldi	r18, 0x00	; 0
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	40 e2       	ldi	r20, 0x20	; 32
    194c:	51 e4       	ldi	r21, 0x41	; 65
    194e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1952:	dc 01       	movw	r26, r24
    1954:	cb 01       	movw	r24, r22
    1956:	8e 01       	movw	r16, r28
    1958:	02 5f       	subi	r16, 0xF2	; 242
    195a:	1e 4f       	sbci	r17, 0xFE	; 254
    195c:	bc 01       	movw	r22, r24
    195e:	cd 01       	movw	r24, r26
    1960:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1964:	dc 01       	movw	r26, r24
    1966:	cb 01       	movw	r24, r22
    1968:	f8 01       	movw	r30, r16
    196a:	91 83       	std	Z+1, r25	; 0x01
    196c:	80 83       	st	Z, r24
    196e:	1f c0       	rjmp	.+62     	; 0x19ae <readgamepad+0x1410>
    1970:	fe 01       	movw	r30, r28
    1972:	e4 5f       	subi	r30, 0xF4	; 244
    1974:	fe 4f       	sbci	r31, 0xFE	; 254
    1976:	80 e9       	ldi	r24, 0x90	; 144
    1978:	91 e0       	ldi	r25, 0x01	; 1
    197a:	91 83       	std	Z+1, r25	; 0x01
    197c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    197e:	fe 01       	movw	r30, r28
    1980:	e4 5f       	subi	r30, 0xF4	; 244
    1982:	fe 4f       	sbci	r31, 0xFE	; 254
    1984:	80 81       	ld	r24, Z
    1986:	91 81       	ldd	r25, Z+1	; 0x01
    1988:	01 97       	sbiw	r24, 0x01	; 1
    198a:	f1 f7       	brne	.-4      	; 0x1988 <readgamepad+0x13ea>
    198c:	fe 01       	movw	r30, r28
    198e:	e4 5f       	subi	r30, 0xF4	; 244
    1990:	fe 4f       	sbci	r31, 0xFE	; 254
    1992:	91 83       	std	Z+1, r25	; 0x01
    1994:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1996:	de 01       	movw	r26, r28
    1998:	a2 5f       	subi	r26, 0xF2	; 242
    199a:	be 4f       	sbci	r27, 0xFE	; 254
    199c:	fe 01       	movw	r30, r28
    199e:	e2 5f       	subi	r30, 0xF2	; 242
    19a0:	fe 4f       	sbci	r31, 0xFE	; 254
    19a2:	80 81       	ld	r24, Z
    19a4:	91 81       	ldd	r25, Z+1	; 0x01
    19a6:	01 97       	sbiw	r24, 0x01	; 1
    19a8:	11 96       	adiw	r26, 0x01	; 1
    19aa:	9c 93       	st	X, r25
    19ac:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19ae:	fe 01       	movw	r30, r28
    19b0:	e2 5f       	subi	r30, 0xF2	; 242
    19b2:	fe 4f       	sbci	r31, 0xFE	; 254
    19b4:	80 81       	ld	r24, Z
    19b6:	91 81       	ldd	r25, Z+1	; 0x01
    19b8:	00 97       	sbiw	r24, 0x00	; 0
    19ba:	d1 f6       	brne	.-76     	; 0x1970 <readgamepad+0x13d2>
    19bc:	4b c0       	rjmp	.+150    	; 0x1a54 <readgamepad+0x14b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19be:	8e 01       	movw	r16, r28
    19c0:	02 5f       	subi	r16, 0xF2	; 242
    19c2:	1e 4f       	sbci	r17, 0xFE	; 254
    19c4:	fe 01       	movw	r30, r28
    19c6:	e0 5f       	subi	r30, 0xF0	; 240
    19c8:	fe 4f       	sbci	r31, 0xFE	; 254
    19ca:	60 81       	ld	r22, Z
    19cc:	71 81       	ldd	r23, Z+1	; 0x01
    19ce:	82 81       	ldd	r24, Z+2	; 0x02
    19d0:	93 81       	ldd	r25, Z+3	; 0x03
    19d2:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    19d6:	dc 01       	movw	r26, r24
    19d8:	cb 01       	movw	r24, r22
    19da:	f8 01       	movw	r30, r16
    19dc:	91 83       	std	Z+1, r25	; 0x01
    19de:	80 83       	st	Z, r24
    19e0:	de 01       	movw	r26, r28
    19e2:	a6 5f       	subi	r26, 0xF6	; 246
    19e4:	be 4f       	sbci	r27, 0xFE	; 254
    19e6:	fe 01       	movw	r30, r28
    19e8:	e2 5f       	subi	r30, 0xF2	; 242
    19ea:	fe 4f       	sbci	r31, 0xFE	; 254
    19ec:	80 81       	ld	r24, Z
    19ee:	91 81       	ldd	r25, Z+1	; 0x01
    19f0:	11 96       	adiw	r26, 0x01	; 1
    19f2:	9c 93       	st	X, r25
    19f4:	8e 93       	st	-X, r24
    19f6:	fe 01       	movw	r30, r28
    19f8:	e6 5f       	subi	r30, 0xF6	; 246
    19fa:	fe 4f       	sbci	r31, 0xFE	; 254
    19fc:	80 81       	ld	r24, Z
    19fe:	91 81       	ldd	r25, Z+1	; 0x01
    1a00:	01 97       	sbiw	r24, 0x01	; 1
    1a02:	f1 f7       	brne	.-4      	; 0x1a00 <readgamepad+0x1462>
    1a04:	fe 01       	movw	r30, r28
    1a06:	e6 5f       	subi	r30, 0xF6	; 246
    1a08:	fe 4f       	sbci	r31, 0xFE	; 254
    1a0a:	91 83       	std	Z+1, r25	; 0x01
    1a0c:	80 83       	st	Z, r24
    1a0e:	22 c0       	rjmp	.+68     	; 0x1a54 <readgamepad+0x14b6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1a10:	8e 01       	movw	r16, r28
    1a12:	08 5e       	subi	r16, 0xE8	; 232
    1a14:	1e 4f       	sbci	r17, 0xFE	; 254
    1a16:	fe 01       	movw	r30, r28
    1a18:	e7 5e       	subi	r30, 0xE7	; 231
    1a1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a1c:	60 81       	ld	r22, Z
    1a1e:	71 81       	ldd	r23, Z+1	; 0x01
    1a20:	82 81       	ldd	r24, Z+2	; 0x02
    1a22:	93 81       	ldd	r25, Z+3	; 0x03
    1a24:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1a28:	dc 01       	movw	r26, r24
    1a2a:	cb 01       	movw	r24, r22
    1a2c:	f8 01       	movw	r30, r16
    1a2e:	80 83       	st	Z, r24
    1a30:	de 01       	movw	r26, r28
    1a32:	a7 5f       	subi	r26, 0xF7	; 247
    1a34:	be 4f       	sbci	r27, 0xFE	; 254
    1a36:	fe 01       	movw	r30, r28
    1a38:	e8 5e       	subi	r30, 0xE8	; 232
    1a3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a3c:	80 81       	ld	r24, Z
    1a3e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1a40:	fe 01       	movw	r30, r28
    1a42:	e7 5f       	subi	r30, 0xF7	; 247
    1a44:	fe 4f       	sbci	r31, 0xFE	; 254
    1a46:	80 81       	ld	r24, Z
    1a48:	8a 95       	dec	r24
    1a4a:	f1 f7       	brne	.-4      	; 0x1a48 <readgamepad+0x14aa>
    1a4c:	fe 01       	movw	r30, r28
    1a4e:	e7 5f       	subi	r30, 0xF7	; 247
    1a50:	fe 4f       	sbci	r31, 0xFE	; 254
    1a52:	80 83       	st	Z, r24
		_delay_us(1);
		if((ps2in&(0x02))==0x00)
    1a54:	e6 e2       	ldi	r30, 0x26	; 38
    1a56:	f0 e0       	ldi	r31, 0x00	; 0
    1a58:	80 81       	ld	r24, Z
    1a5a:	88 2f       	mov	r24, r24
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	82 70       	andi	r24, 0x02	; 2
    1a60:	90 70       	andi	r25, 0x00	; 0
    1a62:	00 97       	sbiw	r24, 0x00	; 0
    1a64:	c9 f4       	brne	.+50     	; 0x1a98 <readgamepad+0x14fa>
			cbi(ps2data4,i); 
    1a66:	20 91 0c 02 	lds	r18, 0x020C
    1a6a:	30 91 0d 02 	lds	r19, 0x020D
    1a6e:	81 e0       	ldi	r24, 0x01	; 1
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	02 c0       	rjmp	.+4      	; 0x1a78 <readgamepad+0x14da>
    1a74:	88 0f       	add	r24, r24
    1a76:	99 1f       	adc	r25, r25
    1a78:	2a 95       	dec	r18
    1a7a:	e2 f7       	brpl	.-8      	; 0x1a74 <readgamepad+0x14d6>
    1a7c:	80 95       	com	r24
    1a7e:	90 95       	com	r25
    1a80:	9c 01       	movw	r18, r24
    1a82:	80 91 0a 02 	lds	r24, 0x020A
    1a86:	90 91 0b 02 	lds	r25, 0x020B
    1a8a:	82 23       	and	r24, r18
    1a8c:	93 23       	and	r25, r19
    1a8e:	90 93 0b 02 	sts	0x020B, r25
    1a92:	80 93 0a 02 	sts	0x020A, r24
    1a96:	16 c0       	rjmp	.+44     	; 0x1ac4 <readgamepad+0x1526>
		else
			sbi(ps2data4,i); 
    1a98:	20 91 0c 02 	lds	r18, 0x020C
    1a9c:	30 91 0d 02 	lds	r19, 0x020D
    1aa0:	81 e0       	ldi	r24, 0x01	; 1
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	02 c0       	rjmp	.+4      	; 0x1aaa <readgamepad+0x150c>
    1aa6:	88 0f       	add	r24, r24
    1aa8:	99 1f       	adc	r25, r25
    1aaa:	2a 95       	dec	r18
    1aac:	e2 f7       	brpl	.-8      	; 0x1aa6 <readgamepad+0x1508>
    1aae:	9c 01       	movw	r18, r24
    1ab0:	80 91 0a 02 	lds	r24, 0x020A
    1ab4:	90 91 0b 02 	lds	r25, 0x020B
    1ab8:	82 2b       	or	r24, r18
    1aba:	93 2b       	or	r25, r19
    1abc:	90 93 0b 02 	sts	0x020B, r25
    1ac0:	80 93 0a 02 	sts	0x020A, r24
		sbi(ps2port,ps2clk);
    1ac4:	a8 e2       	ldi	r26, 0x28	; 40
    1ac6:	b0 e0       	ldi	r27, 0x00	; 0
    1ac8:	e8 e2       	ldi	r30, 0x28	; 40
    1aca:	f0 e0       	ldi	r31, 0x00	; 0
    1acc:	80 81       	ld	r24, Z
    1ace:	81 60       	ori	r24, 0x01	; 1
    1ad0:	8c 93       	st	X, r24
    1ad2:	fe 01       	movw	r30, r28
    1ad4:	eb 5f       	subi	r30, 0xFB	; 251
    1ad6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ad8:	80 e0       	ldi	r24, 0x00	; 0
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	a0 e8       	ldi	r26, 0x80	; 128
    1ade:	bf e3       	ldi	r27, 0x3F	; 63
    1ae0:	80 83       	st	Z, r24
    1ae2:	91 83       	std	Z+1, r25	; 0x01
    1ae4:	a2 83       	std	Z+2, r26	; 0x02
    1ae6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1ae8:	8e 01       	movw	r16, r28
    1aea:	0f 5f       	subi	r16, 0xFF	; 255
    1aec:	1e 4f       	sbci	r17, 0xFE	; 254
    1aee:	fe 01       	movw	r30, r28
    1af0:	eb 5f       	subi	r30, 0xFB	; 251
    1af2:	fe 4f       	sbci	r31, 0xFE	; 254
    1af4:	60 81       	ld	r22, Z
    1af6:	71 81       	ldd	r23, Z+1	; 0x01
    1af8:	82 81       	ldd	r24, Z+2	; 0x02
    1afa:	93 81       	ldd	r25, Z+3	; 0x03
    1afc:	2b ea       	ldi	r18, 0xAB	; 171
    1afe:	3a ea       	ldi	r19, 0xAA	; 170
    1b00:	4a ea       	ldi	r20, 0xAA	; 170
    1b02:	50 e4       	ldi	r21, 0x40	; 64
    1b04:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1b08:	dc 01       	movw	r26, r24
    1b0a:	cb 01       	movw	r24, r22
    1b0c:	f8 01       	movw	r30, r16
    1b0e:	80 83       	st	Z, r24
    1b10:	91 83       	std	Z+1, r25	; 0x01
    1b12:	a2 83       	std	Z+2, r26	; 0x02
    1b14:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b16:	fe 01       	movw	r30, r28
    1b18:	ef 5f       	subi	r30, 0xFF	; 255
    1b1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b1c:	60 81       	ld	r22, Z
    1b1e:	71 81       	ldd	r23, Z+1	; 0x01
    1b20:	82 81       	ldd	r24, Z+2	; 0x02
    1b22:	93 81       	ldd	r25, Z+3	; 0x03
    1b24:	20 e0       	ldi	r18, 0x00	; 0
    1b26:	30 e0       	ldi	r19, 0x00	; 0
    1b28:	40 e8       	ldi	r20, 0x80	; 128
    1b2a:	5f e3       	ldi	r21, 0x3F	; 63
    1b2c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    1b30:	88 23       	and	r24, r24
    1b32:	34 f4       	brge	.+12     	; 0x1b40 <readgamepad+0x15a2>
		__ticks = 1;
    1b34:	fe 01       	movw	r30, r28
    1b36:	e0 50       	subi	r30, 0x00	; 0
    1b38:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3a:	81 e0       	ldi	r24, 0x01	; 1
    1b3c:	80 83       	st	Z, r24
    1b3e:	e0 c0       	rjmp	.+448    	; 0x1d00 <readgamepad+0x1762>
	else if (__tmp > 255)
    1b40:	fe 01       	movw	r30, r28
    1b42:	ef 5f       	subi	r30, 0xFF	; 255
    1b44:	fe 4f       	sbci	r31, 0xFE	; 254
    1b46:	60 81       	ld	r22, Z
    1b48:	71 81       	ldd	r23, Z+1	; 0x01
    1b4a:	82 81       	ldd	r24, Z+2	; 0x02
    1b4c:	93 81       	ldd	r25, Z+3	; 0x03
    1b4e:	20 e0       	ldi	r18, 0x00	; 0
    1b50:	30 e0       	ldi	r19, 0x00	; 0
    1b52:	4f e7       	ldi	r20, 0x7F	; 127
    1b54:	53 e4       	ldi	r21, 0x43	; 67
    1b56:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    1b5a:	18 16       	cp	r1, r24
    1b5c:	0c f0       	brlt	.+2      	; 0x1b60 <readgamepad+0x15c2>
    1b5e:	c0 c0       	rjmp	.+384    	; 0x1ce0 <readgamepad+0x1742>
	{
		_delay_ms(__us / 1000.0);
    1b60:	fe 01       	movw	r30, r28
    1b62:	eb 5f       	subi	r30, 0xFB	; 251
    1b64:	fe 4f       	sbci	r31, 0xFE	; 254
    1b66:	60 81       	ld	r22, Z
    1b68:	71 81       	ldd	r23, Z+1	; 0x01
    1b6a:	82 81       	ldd	r24, Z+2	; 0x02
    1b6c:	93 81       	ldd	r25, Z+3	; 0x03
    1b6e:	20 e0       	ldi	r18, 0x00	; 0
    1b70:	30 e0       	ldi	r19, 0x00	; 0
    1b72:	4a e7       	ldi	r20, 0x7A	; 122
    1b74:	54 e4       	ldi	r21, 0x44	; 68
    1b76:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    1b7a:	dc 01       	movw	r26, r24
    1b7c:	cb 01       	movw	r24, r22
    1b7e:	fe 01       	movw	r30, r28
    1b80:	e4 50       	subi	r30, 0x04	; 4
    1b82:	ff 4f       	sbci	r31, 0xFF	; 255
    1b84:	80 83       	st	Z, r24
    1b86:	91 83       	std	Z+1, r25	; 0x01
    1b88:	a2 83       	std	Z+2, r26	; 0x02
    1b8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b8c:	8e 01       	movw	r16, r28
    1b8e:	08 50       	subi	r16, 0x08	; 8
    1b90:	1f 4f       	sbci	r17, 0xFF	; 255
    1b92:	fe 01       	movw	r30, r28
    1b94:	e4 50       	subi	r30, 0x04	; 4
    1b96:	ff 4f       	sbci	r31, 0xFF	; 255
    1b98:	60 81       	ld	r22, Z
    1b9a:	71 81       	ldd	r23, Z+1	; 0x01
    1b9c:	82 81       	ldd	r24, Z+2	; 0x02
    1b9e:	93 81       	ldd	r25, Z+3	; 0x03
    1ba0:	20 e0       	ldi	r18, 0x00	; 0
    1ba2:	30 e0       	ldi	r19, 0x00	; 0
    1ba4:	4a e7       	ldi	r20, 0x7A	; 122
    1ba6:	55 e4       	ldi	r21, 0x45	; 69
    1ba8:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1bac:	dc 01       	movw	r26, r24
    1bae:	cb 01       	movw	r24, r22
    1bb0:	f8 01       	movw	r30, r16
    1bb2:	80 83       	st	Z, r24
    1bb4:	91 83       	std	Z+1, r25	; 0x01
    1bb6:	a2 83       	std	Z+2, r26	; 0x02
    1bb8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bba:	fe 01       	movw	r30, r28
    1bbc:	e8 50       	subi	r30, 0x08	; 8
    1bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc0:	60 81       	ld	r22, Z
    1bc2:	71 81       	ldd	r23, Z+1	; 0x01
    1bc4:	82 81       	ldd	r24, Z+2	; 0x02
    1bc6:	93 81       	ldd	r25, Z+3	; 0x03
    1bc8:	20 e0       	ldi	r18, 0x00	; 0
    1bca:	30 e0       	ldi	r19, 0x00	; 0
    1bcc:	40 e8       	ldi	r20, 0x80	; 128
    1bce:	5f e3       	ldi	r21, 0x3F	; 63
    1bd0:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    1bd4:	88 23       	and	r24, r24
    1bd6:	44 f4       	brge	.+16     	; 0x1be8 <readgamepad+0x164a>
		__ticks = 1;
    1bd8:	fe 01       	movw	r30, r28
    1bda:	ea 50       	subi	r30, 0x0A	; 10
    1bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bde:	81 e0       	ldi	r24, 0x01	; 1
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	91 83       	std	Z+1, r25	; 0x01
    1be4:	80 83       	st	Z, r24
    1be6:	64 c0       	rjmp	.+200    	; 0x1cb0 <readgamepad+0x1712>
	else if (__tmp > 65535)
    1be8:	fe 01       	movw	r30, r28
    1bea:	e8 50       	subi	r30, 0x08	; 8
    1bec:	ff 4f       	sbci	r31, 0xFF	; 255
    1bee:	60 81       	ld	r22, Z
    1bf0:	71 81       	ldd	r23, Z+1	; 0x01
    1bf2:	82 81       	ldd	r24, Z+2	; 0x02
    1bf4:	93 81       	ldd	r25, Z+3	; 0x03
    1bf6:	20 e0       	ldi	r18, 0x00	; 0
    1bf8:	3f ef       	ldi	r19, 0xFF	; 255
    1bfa:	4f e7       	ldi	r20, 0x7F	; 127
    1bfc:	57 e4       	ldi	r21, 0x47	; 71
    1bfe:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    1c02:	18 16       	cp	r1, r24
    1c04:	0c f0       	brlt	.+2      	; 0x1c08 <readgamepad+0x166a>
    1c06:	43 c0       	rjmp	.+134    	; 0x1c8e <readgamepad+0x16f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c08:	fe 01       	movw	r30, r28
    1c0a:	e4 50       	subi	r30, 0x04	; 4
    1c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0e:	60 81       	ld	r22, Z
    1c10:	71 81       	ldd	r23, Z+1	; 0x01
    1c12:	82 81       	ldd	r24, Z+2	; 0x02
    1c14:	93 81       	ldd	r25, Z+3	; 0x03
    1c16:	20 e0       	ldi	r18, 0x00	; 0
    1c18:	30 e0       	ldi	r19, 0x00	; 0
    1c1a:	40 e2       	ldi	r20, 0x20	; 32
    1c1c:	51 e4       	ldi	r21, 0x41	; 65
    1c1e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1c22:	dc 01       	movw	r26, r24
    1c24:	cb 01       	movw	r24, r22
    1c26:	8e 01       	movw	r16, r28
    1c28:	0a 50       	subi	r16, 0x0A	; 10
    1c2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c2c:	bc 01       	movw	r22, r24
    1c2e:	cd 01       	movw	r24, r26
    1c30:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1c34:	dc 01       	movw	r26, r24
    1c36:	cb 01       	movw	r24, r22
    1c38:	f8 01       	movw	r30, r16
    1c3a:	91 83       	std	Z+1, r25	; 0x01
    1c3c:	80 83       	st	Z, r24
    1c3e:	1f c0       	rjmp	.+62     	; 0x1c7e <readgamepad+0x16e0>
    1c40:	fe 01       	movw	r30, r28
    1c42:	ec 50       	subi	r30, 0x0C	; 12
    1c44:	ff 4f       	sbci	r31, 0xFF	; 255
    1c46:	80 e9       	ldi	r24, 0x90	; 144
    1c48:	91 e0       	ldi	r25, 0x01	; 1
    1c4a:	91 83       	std	Z+1, r25	; 0x01
    1c4c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1c4e:	fe 01       	movw	r30, r28
    1c50:	ec 50       	subi	r30, 0x0C	; 12
    1c52:	ff 4f       	sbci	r31, 0xFF	; 255
    1c54:	80 81       	ld	r24, Z
    1c56:	91 81       	ldd	r25, Z+1	; 0x01
    1c58:	01 97       	sbiw	r24, 0x01	; 1
    1c5a:	f1 f7       	brne	.-4      	; 0x1c58 <readgamepad+0x16ba>
    1c5c:	fe 01       	movw	r30, r28
    1c5e:	ec 50       	subi	r30, 0x0C	; 12
    1c60:	ff 4f       	sbci	r31, 0xFF	; 255
    1c62:	91 83       	std	Z+1, r25	; 0x01
    1c64:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c66:	de 01       	movw	r26, r28
    1c68:	aa 50       	subi	r26, 0x0A	; 10
    1c6a:	bf 4f       	sbci	r27, 0xFF	; 255
    1c6c:	fe 01       	movw	r30, r28
    1c6e:	ea 50       	subi	r30, 0x0A	; 10
    1c70:	ff 4f       	sbci	r31, 0xFF	; 255
    1c72:	80 81       	ld	r24, Z
    1c74:	91 81       	ldd	r25, Z+1	; 0x01
    1c76:	01 97       	sbiw	r24, 0x01	; 1
    1c78:	11 96       	adiw	r26, 0x01	; 1
    1c7a:	9c 93       	st	X, r25
    1c7c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c7e:	fe 01       	movw	r30, r28
    1c80:	ea 50       	subi	r30, 0x0A	; 10
    1c82:	ff 4f       	sbci	r31, 0xFF	; 255
    1c84:	80 81       	ld	r24, Z
    1c86:	91 81       	ldd	r25, Z+1	; 0x01
    1c88:	00 97       	sbiw	r24, 0x00	; 0
    1c8a:	d1 f6       	brne	.-76     	; 0x1c40 <readgamepad+0x16a2>
    1c8c:	4b c0       	rjmp	.+150    	; 0x1d24 <readgamepad+0x1786>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c8e:	8e 01       	movw	r16, r28
    1c90:	0a 50       	subi	r16, 0x0A	; 10
    1c92:	1f 4f       	sbci	r17, 0xFF	; 255
    1c94:	fe 01       	movw	r30, r28
    1c96:	e8 50       	subi	r30, 0x08	; 8
    1c98:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9a:	60 81       	ld	r22, Z
    1c9c:	71 81       	ldd	r23, Z+1	; 0x01
    1c9e:	82 81       	ldd	r24, Z+2	; 0x02
    1ca0:	93 81       	ldd	r25, Z+3	; 0x03
    1ca2:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1ca6:	dc 01       	movw	r26, r24
    1ca8:	cb 01       	movw	r24, r22
    1caa:	f8 01       	movw	r30, r16
    1cac:	91 83       	std	Z+1, r25	; 0x01
    1cae:	80 83       	st	Z, r24
    1cb0:	de 01       	movw	r26, r28
    1cb2:	ae 50       	subi	r26, 0x0E	; 14
    1cb4:	bf 4f       	sbci	r27, 0xFF	; 255
    1cb6:	fe 01       	movw	r30, r28
    1cb8:	ea 50       	subi	r30, 0x0A	; 10
    1cba:	ff 4f       	sbci	r31, 0xFF	; 255
    1cbc:	80 81       	ld	r24, Z
    1cbe:	91 81       	ldd	r25, Z+1	; 0x01
    1cc0:	11 96       	adiw	r26, 0x01	; 1
    1cc2:	9c 93       	st	X, r25
    1cc4:	8e 93       	st	-X, r24
    1cc6:	fe 01       	movw	r30, r28
    1cc8:	ee 50       	subi	r30, 0x0E	; 14
    1cca:	ff 4f       	sbci	r31, 0xFF	; 255
    1ccc:	80 81       	ld	r24, Z
    1cce:	91 81       	ldd	r25, Z+1	; 0x01
    1cd0:	01 97       	sbiw	r24, 0x01	; 1
    1cd2:	f1 f7       	brne	.-4      	; 0x1cd0 <readgamepad+0x1732>
    1cd4:	fe 01       	movw	r30, r28
    1cd6:	ee 50       	subi	r30, 0x0E	; 14
    1cd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cda:	91 83       	std	Z+1, r25	; 0x01
    1cdc:	80 83       	st	Z, r24
    1cde:	22 c0       	rjmp	.+68     	; 0x1d24 <readgamepad+0x1786>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1ce0:	8e 01       	movw	r16, r28
    1ce2:	00 50       	subi	r16, 0x00	; 0
    1ce4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ce6:	fe 01       	movw	r30, r28
    1ce8:	ef 5f       	subi	r30, 0xFF	; 255
    1cea:	fe 4f       	sbci	r31, 0xFE	; 254
    1cec:	60 81       	ld	r22, Z
    1cee:	71 81       	ldd	r23, Z+1	; 0x01
    1cf0:	82 81       	ldd	r24, Z+2	; 0x02
    1cf2:	93 81       	ldd	r25, Z+3	; 0x03
    1cf4:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1cf8:	dc 01       	movw	r26, r24
    1cfa:	cb 01       	movw	r24, r22
    1cfc:	f8 01       	movw	r30, r16
    1cfe:	80 83       	st	Z, r24
    1d00:	de 01       	movw	r26, r28
    1d02:	af 50       	subi	r26, 0x0F	; 15
    1d04:	bf 4f       	sbci	r27, 0xFF	; 255
    1d06:	fe 01       	movw	r30, r28
    1d08:	e0 50       	subi	r30, 0x00	; 0
    1d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0c:	80 81       	ld	r24, Z
    1d0e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1d10:	fe 01       	movw	r30, r28
    1d12:	ef 50       	subi	r30, 0x0F	; 15
    1d14:	ff 4f       	sbci	r31, 0xFF	; 255
    1d16:	80 81       	ld	r24, Z
    1d18:	8a 95       	dec	r24
    1d1a:	f1 f7       	brne	.-4      	; 0x1d18 <readgamepad+0x177a>
    1d1c:	fe 01       	movw	r30, r28
    1d1e:	ef 50       	subi	r30, 0x0F	; 15
    1d20:	ff 4f       	sbci	r31, 0xFF	; 255
    1d22:	80 83       	st	Z, r24
	}
	sbi(ps2port,ps2cmd); 
	
	
	ps2data4=0;
	for(i=0;i<8;i++)  // 4 byte
    1d24:	80 91 0c 02 	lds	r24, 0x020C
    1d28:	90 91 0d 02 	lds	r25, 0x020D
    1d2c:	01 96       	adiw	r24, 0x01	; 1
    1d2e:	90 93 0d 02 	sts	0x020D, r25
    1d32:	80 93 0c 02 	sts	0x020C, r24
    1d36:	80 91 0c 02 	lds	r24, 0x020C
    1d3a:	90 91 0d 02 	lds	r25, 0x020D
    1d3e:	88 30       	cpi	r24, 0x08	; 8
    1d40:	91 05       	cpc	r25, r1
    1d42:	0c f4       	brge	.+2      	; 0x1d46 <readgamepad+0x17a8>
    1d44:	50 cd       	rjmp	.-1376   	; 0x17e6 <readgamepad+0x1248>
		else
			sbi(ps2data4,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    1d46:	a8 e2       	ldi	r26, 0x28	; 40
    1d48:	b0 e0       	ldi	r27, 0x00	; 0
    1d4a:	e8 e2       	ldi	r30, 0x28	; 40
    1d4c:	f0 e0       	ldi	r31, 0x00	; 0
    1d4e:	80 81       	ld	r24, Z
    1d50:	84 60       	ori	r24, 0x04	; 4
    1d52:	8c 93       	st	X, r24
	
	
	
   
	ps2data5=0;
    1d54:	10 92 15 02 	sts	0x0215, r1
    1d58:	10 92 14 02 	sts	0x0214, r1
	for(i=0;i<8;i++) // 5 byte
    1d5c:	10 92 0d 02 	sts	0x020D, r1
    1d60:	10 92 0c 02 	sts	0x020C, r1
    1d64:	a8 c2       	rjmp	.+1360   	; 0x22b6 <__stack+0xb7>
	{
		cbi(ps2port,ps2cmd);
    1d66:	a8 e2       	ldi	r26, 0x28	; 40
    1d68:	b0 e0       	ldi	r27, 0x00	; 0
    1d6a:	e8 e2       	ldi	r30, 0x28	; 40
    1d6c:	f0 e0       	ldi	r31, 0x00	; 0
    1d6e:	80 81       	ld	r24, Z
    1d70:	8b 7f       	andi	r24, 0xFB	; 251
    1d72:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    1d74:	a8 e2       	ldi	r26, 0x28	; 40
    1d76:	b0 e0       	ldi	r27, 0x00	; 0
    1d78:	e8 e2       	ldi	r30, 0x28	; 40
    1d7a:	f0 e0       	ldi	r31, 0x00	; 0
    1d7c:	80 81       	ld	r24, Z
    1d7e:	8e 7f       	andi	r24, 0xFE	; 254
    1d80:	8c 93       	st	X, r24
    1d82:	fe 01       	movw	r30, r28
    1d84:	e3 51       	subi	r30, 0x13	; 19
    1d86:	ff 4f       	sbci	r31, 0xFF	; 255
    1d88:	80 e0       	ldi	r24, 0x00	; 0
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	a0 e8       	ldi	r26, 0x80	; 128
    1d8e:	bf e3       	ldi	r27, 0x3F	; 63
    1d90:	80 83       	st	Z, r24
    1d92:	91 83       	std	Z+1, r25	; 0x01
    1d94:	a2 83       	std	Z+2, r26	; 0x02
    1d96:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1d98:	8e 01       	movw	r16, r28
    1d9a:	07 51       	subi	r16, 0x17	; 23
    1d9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9e:	fe 01       	movw	r30, r28
    1da0:	e3 51       	subi	r30, 0x13	; 19
    1da2:	ff 4f       	sbci	r31, 0xFF	; 255
    1da4:	60 81       	ld	r22, Z
    1da6:	71 81       	ldd	r23, Z+1	; 0x01
    1da8:	82 81       	ldd	r24, Z+2	; 0x02
    1daa:	93 81       	ldd	r25, Z+3	; 0x03
    1dac:	2b ea       	ldi	r18, 0xAB	; 171
    1dae:	3a ea       	ldi	r19, 0xAA	; 170
    1db0:	4a ea       	ldi	r20, 0xAA	; 170
    1db2:	50 e4       	ldi	r21, 0x40	; 64
    1db4:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1db8:	dc 01       	movw	r26, r24
    1dba:	cb 01       	movw	r24, r22
    1dbc:	f8 01       	movw	r30, r16
    1dbe:	80 83       	st	Z, r24
    1dc0:	91 83       	std	Z+1, r25	; 0x01
    1dc2:	a2 83       	std	Z+2, r26	; 0x02
    1dc4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dc6:	fe 01       	movw	r30, r28
    1dc8:	e7 51       	subi	r30, 0x17	; 23
    1dca:	ff 4f       	sbci	r31, 0xFF	; 255
    1dcc:	60 81       	ld	r22, Z
    1dce:	71 81       	ldd	r23, Z+1	; 0x01
    1dd0:	82 81       	ldd	r24, Z+2	; 0x02
    1dd2:	93 81       	ldd	r25, Z+3	; 0x03
    1dd4:	20 e0       	ldi	r18, 0x00	; 0
    1dd6:	30 e0       	ldi	r19, 0x00	; 0
    1dd8:	40 e8       	ldi	r20, 0x80	; 128
    1dda:	5f e3       	ldi	r21, 0x3F	; 63
    1ddc:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    1de0:	88 23       	and	r24, r24
    1de2:	34 f4       	brge	.+12     	; 0x1df0 <readgamepad+0x1852>
		__ticks = 1;
    1de4:	fe 01       	movw	r30, r28
    1de6:	e8 51       	subi	r30, 0x18	; 24
    1de8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dea:	81 e0       	ldi	r24, 0x01	; 1
    1dec:	80 83       	st	Z, r24
    1dee:	e0 c0       	rjmp	.+448    	; 0x1fb0 <readgamepad+0x1a12>
	else if (__tmp > 255)
    1df0:	fe 01       	movw	r30, r28
    1df2:	e7 51       	subi	r30, 0x17	; 23
    1df4:	ff 4f       	sbci	r31, 0xFF	; 255
    1df6:	60 81       	ld	r22, Z
    1df8:	71 81       	ldd	r23, Z+1	; 0x01
    1dfa:	82 81       	ldd	r24, Z+2	; 0x02
    1dfc:	93 81       	ldd	r25, Z+3	; 0x03
    1dfe:	20 e0       	ldi	r18, 0x00	; 0
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	4f e7       	ldi	r20, 0x7F	; 127
    1e04:	53 e4       	ldi	r21, 0x43	; 67
    1e06:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    1e0a:	18 16       	cp	r1, r24
    1e0c:	0c f0       	brlt	.+2      	; 0x1e10 <readgamepad+0x1872>
    1e0e:	c0 c0       	rjmp	.+384    	; 0x1f90 <readgamepad+0x19f2>
	{
		_delay_ms(__us / 1000.0);
    1e10:	fe 01       	movw	r30, r28
    1e12:	e3 51       	subi	r30, 0x13	; 19
    1e14:	ff 4f       	sbci	r31, 0xFF	; 255
    1e16:	60 81       	ld	r22, Z
    1e18:	71 81       	ldd	r23, Z+1	; 0x01
    1e1a:	82 81       	ldd	r24, Z+2	; 0x02
    1e1c:	93 81       	ldd	r25, Z+3	; 0x03
    1e1e:	20 e0       	ldi	r18, 0x00	; 0
    1e20:	30 e0       	ldi	r19, 0x00	; 0
    1e22:	4a e7       	ldi	r20, 0x7A	; 122
    1e24:	54 e4       	ldi	r21, 0x44	; 68
    1e26:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    1e2a:	dc 01       	movw	r26, r24
    1e2c:	cb 01       	movw	r24, r22
    1e2e:	fe 01       	movw	r30, r28
    1e30:	ec 51       	subi	r30, 0x1C	; 28
    1e32:	ff 4f       	sbci	r31, 0xFF	; 255
    1e34:	80 83       	st	Z, r24
    1e36:	91 83       	std	Z+1, r25	; 0x01
    1e38:	a2 83       	std	Z+2, r26	; 0x02
    1e3a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e3c:	8e 01       	movw	r16, r28
    1e3e:	00 52       	subi	r16, 0x20	; 32
    1e40:	1f 4f       	sbci	r17, 0xFF	; 255
    1e42:	fe 01       	movw	r30, r28
    1e44:	ec 51       	subi	r30, 0x1C	; 28
    1e46:	ff 4f       	sbci	r31, 0xFF	; 255
    1e48:	60 81       	ld	r22, Z
    1e4a:	71 81       	ldd	r23, Z+1	; 0x01
    1e4c:	82 81       	ldd	r24, Z+2	; 0x02
    1e4e:	93 81       	ldd	r25, Z+3	; 0x03
    1e50:	20 e0       	ldi	r18, 0x00	; 0
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	4a e7       	ldi	r20, 0x7A	; 122
    1e56:	55 e4       	ldi	r21, 0x45	; 69
    1e58:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	cb 01       	movw	r24, r22
    1e60:	f8 01       	movw	r30, r16
    1e62:	80 83       	st	Z, r24
    1e64:	91 83       	std	Z+1, r25	; 0x01
    1e66:	a2 83       	std	Z+2, r26	; 0x02
    1e68:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e6a:	fe 01       	movw	r30, r28
    1e6c:	e0 52       	subi	r30, 0x20	; 32
    1e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e70:	60 81       	ld	r22, Z
    1e72:	71 81       	ldd	r23, Z+1	; 0x01
    1e74:	82 81       	ldd	r24, Z+2	; 0x02
    1e76:	93 81       	ldd	r25, Z+3	; 0x03
    1e78:	20 e0       	ldi	r18, 0x00	; 0
    1e7a:	30 e0       	ldi	r19, 0x00	; 0
    1e7c:	40 e8       	ldi	r20, 0x80	; 128
    1e7e:	5f e3       	ldi	r21, 0x3F	; 63
    1e80:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    1e84:	88 23       	and	r24, r24
    1e86:	44 f4       	brge	.+16     	; 0x1e98 <readgamepad+0x18fa>
		__ticks = 1;
    1e88:	fe 01       	movw	r30, r28
    1e8a:	e2 52       	subi	r30, 0x22	; 34
    1e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8e:	81 e0       	ldi	r24, 0x01	; 1
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	91 83       	std	Z+1, r25	; 0x01
    1e94:	80 83       	st	Z, r24
    1e96:	64 c0       	rjmp	.+200    	; 0x1f60 <readgamepad+0x19c2>
	else if (__tmp > 65535)
    1e98:	fe 01       	movw	r30, r28
    1e9a:	e0 52       	subi	r30, 0x20	; 32
    1e9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9e:	60 81       	ld	r22, Z
    1ea0:	71 81       	ldd	r23, Z+1	; 0x01
    1ea2:	82 81       	ldd	r24, Z+2	; 0x02
    1ea4:	93 81       	ldd	r25, Z+3	; 0x03
    1ea6:	20 e0       	ldi	r18, 0x00	; 0
    1ea8:	3f ef       	ldi	r19, 0xFF	; 255
    1eaa:	4f e7       	ldi	r20, 0x7F	; 127
    1eac:	57 e4       	ldi	r21, 0x47	; 71
    1eae:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    1eb2:	18 16       	cp	r1, r24
    1eb4:	0c f0       	brlt	.+2      	; 0x1eb8 <readgamepad+0x191a>
    1eb6:	43 c0       	rjmp	.+134    	; 0x1f3e <readgamepad+0x19a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1eb8:	fe 01       	movw	r30, r28
    1eba:	ec 51       	subi	r30, 0x1C	; 28
    1ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebe:	60 81       	ld	r22, Z
    1ec0:	71 81       	ldd	r23, Z+1	; 0x01
    1ec2:	82 81       	ldd	r24, Z+2	; 0x02
    1ec4:	93 81       	ldd	r25, Z+3	; 0x03
    1ec6:	20 e0       	ldi	r18, 0x00	; 0
    1ec8:	30 e0       	ldi	r19, 0x00	; 0
    1eca:	40 e2       	ldi	r20, 0x20	; 32
    1ecc:	51 e4       	ldi	r21, 0x41	; 65
    1ece:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    1ed2:	dc 01       	movw	r26, r24
    1ed4:	cb 01       	movw	r24, r22
    1ed6:	8e 01       	movw	r16, r28
    1ed8:	02 52       	subi	r16, 0x22	; 34
    1eda:	1f 4f       	sbci	r17, 0xFF	; 255
    1edc:	bc 01       	movw	r22, r24
    1ede:	cd 01       	movw	r24, r26
    1ee0:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1ee4:	dc 01       	movw	r26, r24
    1ee6:	cb 01       	movw	r24, r22
    1ee8:	f8 01       	movw	r30, r16
    1eea:	91 83       	std	Z+1, r25	; 0x01
    1eec:	80 83       	st	Z, r24
    1eee:	1f c0       	rjmp	.+62     	; 0x1f2e <readgamepad+0x1990>
    1ef0:	fe 01       	movw	r30, r28
    1ef2:	e4 52       	subi	r30, 0x24	; 36
    1ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef6:	80 e9       	ldi	r24, 0x90	; 144
    1ef8:	91 e0       	ldi	r25, 0x01	; 1
    1efa:	91 83       	std	Z+1, r25	; 0x01
    1efc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1efe:	fe 01       	movw	r30, r28
    1f00:	e4 52       	subi	r30, 0x24	; 36
    1f02:	ff 4f       	sbci	r31, 0xFF	; 255
    1f04:	80 81       	ld	r24, Z
    1f06:	91 81       	ldd	r25, Z+1	; 0x01
    1f08:	01 97       	sbiw	r24, 0x01	; 1
    1f0a:	f1 f7       	brne	.-4      	; 0x1f08 <readgamepad+0x196a>
    1f0c:	fe 01       	movw	r30, r28
    1f0e:	e4 52       	subi	r30, 0x24	; 36
    1f10:	ff 4f       	sbci	r31, 0xFF	; 255
    1f12:	91 83       	std	Z+1, r25	; 0x01
    1f14:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f16:	de 01       	movw	r26, r28
    1f18:	a2 52       	subi	r26, 0x22	; 34
    1f1a:	bf 4f       	sbci	r27, 0xFF	; 255
    1f1c:	fe 01       	movw	r30, r28
    1f1e:	e2 52       	subi	r30, 0x22	; 34
    1f20:	ff 4f       	sbci	r31, 0xFF	; 255
    1f22:	80 81       	ld	r24, Z
    1f24:	91 81       	ldd	r25, Z+1	; 0x01
    1f26:	01 97       	sbiw	r24, 0x01	; 1
    1f28:	11 96       	adiw	r26, 0x01	; 1
    1f2a:	9c 93       	st	X, r25
    1f2c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f2e:	fe 01       	movw	r30, r28
    1f30:	e2 52       	subi	r30, 0x22	; 34
    1f32:	ff 4f       	sbci	r31, 0xFF	; 255
    1f34:	80 81       	ld	r24, Z
    1f36:	91 81       	ldd	r25, Z+1	; 0x01
    1f38:	00 97       	sbiw	r24, 0x00	; 0
    1f3a:	d1 f6       	brne	.-76     	; 0x1ef0 <readgamepad+0x1952>
    1f3c:	4b c0       	rjmp	.+150    	; 0x1fd4 <readgamepad+0x1a36>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f3e:	8e 01       	movw	r16, r28
    1f40:	02 52       	subi	r16, 0x22	; 34
    1f42:	1f 4f       	sbci	r17, 0xFF	; 255
    1f44:	fe 01       	movw	r30, r28
    1f46:	e0 52       	subi	r30, 0x20	; 32
    1f48:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4a:	60 81       	ld	r22, Z
    1f4c:	71 81       	ldd	r23, Z+1	; 0x01
    1f4e:	82 81       	ldd	r24, Z+2	; 0x02
    1f50:	93 81       	ldd	r25, Z+3	; 0x03
    1f52:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1f56:	dc 01       	movw	r26, r24
    1f58:	cb 01       	movw	r24, r22
    1f5a:	f8 01       	movw	r30, r16
    1f5c:	91 83       	std	Z+1, r25	; 0x01
    1f5e:	80 83       	st	Z, r24
    1f60:	de 01       	movw	r26, r28
    1f62:	a6 52       	subi	r26, 0x26	; 38
    1f64:	bf 4f       	sbci	r27, 0xFF	; 255
    1f66:	fe 01       	movw	r30, r28
    1f68:	e2 52       	subi	r30, 0x22	; 34
    1f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6c:	80 81       	ld	r24, Z
    1f6e:	91 81       	ldd	r25, Z+1	; 0x01
    1f70:	11 96       	adiw	r26, 0x01	; 1
    1f72:	9c 93       	st	X, r25
    1f74:	8e 93       	st	-X, r24
    1f76:	fe 01       	movw	r30, r28
    1f78:	e6 52       	subi	r30, 0x26	; 38
    1f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7c:	80 81       	ld	r24, Z
    1f7e:	91 81       	ldd	r25, Z+1	; 0x01
    1f80:	01 97       	sbiw	r24, 0x01	; 1
    1f82:	f1 f7       	brne	.-4      	; 0x1f80 <readgamepad+0x19e2>
    1f84:	fe 01       	movw	r30, r28
    1f86:	e6 52       	subi	r30, 0x26	; 38
    1f88:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8a:	91 83       	std	Z+1, r25	; 0x01
    1f8c:	80 83       	st	Z, r24
    1f8e:	22 c0       	rjmp	.+68     	; 0x1fd4 <readgamepad+0x1a36>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1f90:	8e 01       	movw	r16, r28
    1f92:	08 51       	subi	r16, 0x18	; 24
    1f94:	1f 4f       	sbci	r17, 0xFF	; 255
    1f96:	fe 01       	movw	r30, r28
    1f98:	e7 51       	subi	r30, 0x17	; 23
    1f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9c:	60 81       	ld	r22, Z
    1f9e:	71 81       	ldd	r23, Z+1	; 0x01
    1fa0:	82 81       	ldd	r24, Z+2	; 0x02
    1fa2:	93 81       	ldd	r25, Z+3	; 0x03
    1fa4:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    1fa8:	dc 01       	movw	r26, r24
    1faa:	cb 01       	movw	r24, r22
    1fac:	f8 01       	movw	r30, r16
    1fae:	80 83       	st	Z, r24
    1fb0:	de 01       	movw	r26, r28
    1fb2:	a7 52       	subi	r26, 0x27	; 39
    1fb4:	bf 4f       	sbci	r27, 0xFF	; 255
    1fb6:	fe 01       	movw	r30, r28
    1fb8:	e8 51       	subi	r30, 0x18	; 24
    1fba:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbc:	80 81       	ld	r24, Z
    1fbe:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	e7 52       	subi	r30, 0x27	; 39
    1fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc6:	80 81       	ld	r24, Z
    1fc8:	8a 95       	dec	r24
    1fca:	f1 f7       	brne	.-4      	; 0x1fc8 <readgamepad+0x1a2a>
    1fcc:	fe 01       	movw	r30, r28
    1fce:	e7 52       	subi	r30, 0x27	; 39
    1fd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd2:	80 83       	st	Z, r24
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    1fd4:	e6 e2       	ldi	r30, 0x26	; 38
    1fd6:	f0 e0       	ldi	r31, 0x00	; 0
    1fd8:	80 81       	ld	r24, Z
    1fda:	88 2f       	mov	r24, r24
    1fdc:	90 e0       	ldi	r25, 0x00	; 0
    1fde:	82 70       	andi	r24, 0x02	; 2
    1fe0:	90 70       	andi	r25, 0x00	; 0
    1fe2:	00 97       	sbiw	r24, 0x00	; 0
    1fe4:	c9 f4       	brne	.+50     	; 0x2018 <readgamepad+0x1a7a>
			cbi(ps2data5,i); 
    1fe6:	20 91 0c 02 	lds	r18, 0x020C
    1fea:	30 91 0d 02 	lds	r19, 0x020D
    1fee:	81 e0       	ldi	r24, 0x01	; 1
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	02 c0       	rjmp	.+4      	; 0x1ff8 <readgamepad+0x1a5a>
    1ff4:	88 0f       	add	r24, r24
    1ff6:	99 1f       	adc	r25, r25
    1ff8:	2a 95       	dec	r18
    1ffa:	e2 f7       	brpl	.-8      	; 0x1ff4 <readgamepad+0x1a56>
    1ffc:	80 95       	com	r24
    1ffe:	90 95       	com	r25
    2000:	9c 01       	movw	r18, r24
    2002:	80 91 14 02 	lds	r24, 0x0214
    2006:	90 91 15 02 	lds	r25, 0x0215
    200a:	82 23       	and	r24, r18
    200c:	93 23       	and	r25, r19
    200e:	90 93 15 02 	sts	0x0215, r25
    2012:	80 93 14 02 	sts	0x0214, r24
    2016:	16 c0       	rjmp	.+44     	; 0x2044 <readgamepad+0x1aa6>
		else
			sbi(ps2data5,i); 
    2018:	20 91 0c 02 	lds	r18, 0x020C
    201c:	30 91 0d 02 	lds	r19, 0x020D
    2020:	81 e0       	ldi	r24, 0x01	; 1
    2022:	90 e0       	ldi	r25, 0x00	; 0
    2024:	02 c0       	rjmp	.+4      	; 0x202a <readgamepad+0x1a8c>
    2026:	88 0f       	add	r24, r24
    2028:	99 1f       	adc	r25, r25
    202a:	2a 95       	dec	r18
    202c:	e2 f7       	brpl	.-8      	; 0x2026 <readgamepad+0x1a88>
    202e:	9c 01       	movw	r18, r24
    2030:	80 91 14 02 	lds	r24, 0x0214
    2034:	90 91 15 02 	lds	r25, 0x0215
    2038:	82 2b       	or	r24, r18
    203a:	93 2b       	or	r25, r19
    203c:	90 93 15 02 	sts	0x0215, r25
    2040:	80 93 14 02 	sts	0x0214, r24
		sbi(ps2port,ps2clk);
    2044:	a8 e2       	ldi	r26, 0x28	; 40
    2046:	b0 e0       	ldi	r27, 0x00	; 0
    2048:	e8 e2       	ldi	r30, 0x28	; 40
    204a:	f0 e0       	ldi	r31, 0x00	; 0
    204c:	80 81       	ld	r24, Z
    204e:	81 60       	ori	r24, 0x01	; 1
    2050:	8c 93       	st	X, r24
    2052:	fe 01       	movw	r30, r28
    2054:	eb 52       	subi	r30, 0x2B	; 43
    2056:	ff 4f       	sbci	r31, 0xFF	; 255
    2058:	80 e0       	ldi	r24, 0x00	; 0
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	a0 e8       	ldi	r26, 0x80	; 128
    205e:	bf e3       	ldi	r27, 0x3F	; 63
    2060:	80 83       	st	Z, r24
    2062:	91 83       	std	Z+1, r25	; 0x01
    2064:	a2 83       	std	Z+2, r26	; 0x02
    2066:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2068:	8e 01       	movw	r16, r28
    206a:	0f 52       	subi	r16, 0x2F	; 47
    206c:	1f 4f       	sbci	r17, 0xFF	; 255
    206e:	fe 01       	movw	r30, r28
    2070:	eb 52       	subi	r30, 0x2B	; 43
    2072:	ff 4f       	sbci	r31, 0xFF	; 255
    2074:	60 81       	ld	r22, Z
    2076:	71 81       	ldd	r23, Z+1	; 0x01
    2078:	82 81       	ldd	r24, Z+2	; 0x02
    207a:	93 81       	ldd	r25, Z+3	; 0x03
    207c:	2b ea       	ldi	r18, 0xAB	; 171
    207e:	3a ea       	ldi	r19, 0xAA	; 170
    2080:	4a ea       	ldi	r20, 0xAA	; 170
    2082:	50 e4       	ldi	r21, 0x40	; 64
    2084:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2088:	dc 01       	movw	r26, r24
    208a:	cb 01       	movw	r24, r22
    208c:	f8 01       	movw	r30, r16
    208e:	80 83       	st	Z, r24
    2090:	91 83       	std	Z+1, r25	; 0x01
    2092:	a2 83       	std	Z+2, r26	; 0x02
    2094:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2096:	fe 01       	movw	r30, r28
    2098:	ef 52       	subi	r30, 0x2F	; 47
    209a:	ff 4f       	sbci	r31, 0xFF	; 255
    209c:	60 81       	ld	r22, Z
    209e:	71 81       	ldd	r23, Z+1	; 0x01
    20a0:	82 81       	ldd	r24, Z+2	; 0x02
    20a2:	93 81       	ldd	r25, Z+3	; 0x03
    20a4:	20 e0       	ldi	r18, 0x00	; 0
    20a6:	30 e0       	ldi	r19, 0x00	; 0
    20a8:	40 e8       	ldi	r20, 0x80	; 128
    20aa:	5f e3       	ldi	r21, 0x3F	; 63
    20ac:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    20b0:	88 23       	and	r24, r24
    20b2:	34 f4       	brge	.+12     	; 0x20c0 <readgamepad+0x1b22>
		__ticks = 1;
    20b4:	fe 01       	movw	r30, r28
    20b6:	e0 53       	subi	r30, 0x30	; 48
    20b8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ba:	81 e0       	ldi	r24, 0x01	; 1
    20bc:	80 83       	st	Z, r24
    20be:	e0 c0       	rjmp	.+448    	; 0x2280 <__stack+0x81>
	else if (__tmp > 255)
    20c0:	fe 01       	movw	r30, r28
    20c2:	ef 52       	subi	r30, 0x2F	; 47
    20c4:	ff 4f       	sbci	r31, 0xFF	; 255
    20c6:	60 81       	ld	r22, Z
    20c8:	71 81       	ldd	r23, Z+1	; 0x01
    20ca:	82 81       	ldd	r24, Z+2	; 0x02
    20cc:	93 81       	ldd	r25, Z+3	; 0x03
    20ce:	20 e0       	ldi	r18, 0x00	; 0
    20d0:	30 e0       	ldi	r19, 0x00	; 0
    20d2:	4f e7       	ldi	r20, 0x7F	; 127
    20d4:	53 e4       	ldi	r21, 0x43	; 67
    20d6:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    20da:	18 16       	cp	r1, r24
    20dc:	0c f0       	brlt	.+2      	; 0x20e0 <readgamepad+0x1b42>
    20de:	c0 c0       	rjmp	.+384    	; 0x2260 <__stack+0x61>
	{
		_delay_ms(__us / 1000.0);
    20e0:	fe 01       	movw	r30, r28
    20e2:	eb 52       	subi	r30, 0x2B	; 43
    20e4:	ff 4f       	sbci	r31, 0xFF	; 255
    20e6:	60 81       	ld	r22, Z
    20e8:	71 81       	ldd	r23, Z+1	; 0x01
    20ea:	82 81       	ldd	r24, Z+2	; 0x02
    20ec:	93 81       	ldd	r25, Z+3	; 0x03
    20ee:	20 e0       	ldi	r18, 0x00	; 0
    20f0:	30 e0       	ldi	r19, 0x00	; 0
    20f2:	4a e7       	ldi	r20, 0x7A	; 122
    20f4:	54 e4       	ldi	r21, 0x44	; 68
    20f6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    20fa:	dc 01       	movw	r26, r24
    20fc:	cb 01       	movw	r24, r22
    20fe:	fe 01       	movw	r30, r28
    2100:	e4 53       	subi	r30, 0x34	; 52
    2102:	ff 4f       	sbci	r31, 0xFF	; 255
    2104:	80 83       	st	Z, r24
    2106:	91 83       	std	Z+1, r25	; 0x01
    2108:	a2 83       	std	Z+2, r26	; 0x02
    210a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    210c:	8e 01       	movw	r16, r28
    210e:	08 53       	subi	r16, 0x38	; 56
    2110:	1f 4f       	sbci	r17, 0xFF	; 255
    2112:	fe 01       	movw	r30, r28
    2114:	e4 53       	subi	r30, 0x34	; 52
    2116:	ff 4f       	sbci	r31, 0xFF	; 255
    2118:	60 81       	ld	r22, Z
    211a:	71 81       	ldd	r23, Z+1	; 0x01
    211c:	82 81       	ldd	r24, Z+2	; 0x02
    211e:	93 81       	ldd	r25, Z+3	; 0x03
    2120:	20 e0       	ldi	r18, 0x00	; 0
    2122:	30 e0       	ldi	r19, 0x00	; 0
    2124:	4a e7       	ldi	r20, 0x7A	; 122
    2126:	55 e4       	ldi	r21, 0x45	; 69
    2128:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    212c:	dc 01       	movw	r26, r24
    212e:	cb 01       	movw	r24, r22
    2130:	f8 01       	movw	r30, r16
    2132:	80 83       	st	Z, r24
    2134:	91 83       	std	Z+1, r25	; 0x01
    2136:	a2 83       	std	Z+2, r26	; 0x02
    2138:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    213a:	fe 01       	movw	r30, r28
    213c:	e8 53       	subi	r30, 0x38	; 56
    213e:	ff 4f       	sbci	r31, 0xFF	; 255
    2140:	60 81       	ld	r22, Z
    2142:	71 81       	ldd	r23, Z+1	; 0x01
    2144:	82 81       	ldd	r24, Z+2	; 0x02
    2146:	93 81       	ldd	r25, Z+3	; 0x03
    2148:	20 e0       	ldi	r18, 0x00	; 0
    214a:	30 e0       	ldi	r19, 0x00	; 0
    214c:	40 e8       	ldi	r20, 0x80	; 128
    214e:	5f e3       	ldi	r21, 0x3F	; 63
    2150:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2154:	88 23       	and	r24, r24
    2156:	44 f4       	brge	.+16     	; 0x2168 <readgamepad+0x1bca>
		__ticks = 1;
    2158:	fe 01       	movw	r30, r28
    215a:	ea 53       	subi	r30, 0x3A	; 58
    215c:	ff 4f       	sbci	r31, 0xFF	; 255
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	91 83       	std	Z+1, r25	; 0x01
    2164:	80 83       	st	Z, r24
    2166:	64 c0       	rjmp	.+200    	; 0x2230 <__stack+0x31>
	else if (__tmp > 65535)
    2168:	fe 01       	movw	r30, r28
    216a:	e8 53       	subi	r30, 0x38	; 56
    216c:	ff 4f       	sbci	r31, 0xFF	; 255
    216e:	60 81       	ld	r22, Z
    2170:	71 81       	ldd	r23, Z+1	; 0x01
    2172:	82 81       	ldd	r24, Z+2	; 0x02
    2174:	93 81       	ldd	r25, Z+3	; 0x03
    2176:	20 e0       	ldi	r18, 0x00	; 0
    2178:	3f ef       	ldi	r19, 0xFF	; 255
    217a:	4f e7       	ldi	r20, 0x7F	; 127
    217c:	57 e4       	ldi	r21, 0x47	; 71
    217e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    2182:	18 16       	cp	r1, r24
    2184:	0c f0       	brlt	.+2      	; 0x2188 <readgamepad+0x1bea>
    2186:	43 c0       	rjmp	.+134    	; 0x220e <__stack+0xf>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2188:	fe 01       	movw	r30, r28
    218a:	e4 53       	subi	r30, 0x34	; 52
    218c:	ff 4f       	sbci	r31, 0xFF	; 255
    218e:	60 81       	ld	r22, Z
    2190:	71 81       	ldd	r23, Z+1	; 0x01
    2192:	82 81       	ldd	r24, Z+2	; 0x02
    2194:	93 81       	ldd	r25, Z+3	; 0x03
    2196:	20 e0       	ldi	r18, 0x00	; 0
    2198:	30 e0       	ldi	r19, 0x00	; 0
    219a:	40 e2       	ldi	r20, 0x20	; 32
    219c:	51 e4       	ldi	r21, 0x41	; 65
    219e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    21a2:	dc 01       	movw	r26, r24
    21a4:	cb 01       	movw	r24, r22
    21a6:	8e 01       	movw	r16, r28
    21a8:	0a 53       	subi	r16, 0x3A	; 58
    21aa:	1f 4f       	sbci	r17, 0xFF	; 255
    21ac:	bc 01       	movw	r22, r24
    21ae:	cd 01       	movw	r24, r26
    21b0:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    21b4:	dc 01       	movw	r26, r24
    21b6:	cb 01       	movw	r24, r22
    21b8:	f8 01       	movw	r30, r16
    21ba:	91 83       	std	Z+1, r25	; 0x01
    21bc:	80 83       	st	Z, r24
    21be:	1f c0       	rjmp	.+62     	; 0x21fe <readgamepad+0x1c60>
    21c0:	fe 01       	movw	r30, r28
    21c2:	ec 53       	subi	r30, 0x3C	; 60
    21c4:	ff 4f       	sbci	r31, 0xFF	; 255
    21c6:	80 e9       	ldi	r24, 0x90	; 144
    21c8:	91 e0       	ldi	r25, 0x01	; 1
    21ca:	91 83       	std	Z+1, r25	; 0x01
    21cc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    21ce:	fe 01       	movw	r30, r28
    21d0:	ec 53       	subi	r30, 0x3C	; 60
    21d2:	ff 4f       	sbci	r31, 0xFF	; 255
    21d4:	80 81       	ld	r24, Z
    21d6:	91 81       	ldd	r25, Z+1	; 0x01
    21d8:	01 97       	sbiw	r24, 0x01	; 1
    21da:	f1 f7       	brne	.-4      	; 0x21d8 <readgamepad+0x1c3a>
    21dc:	fe 01       	movw	r30, r28
    21de:	ec 53       	subi	r30, 0x3C	; 60
    21e0:	ff 4f       	sbci	r31, 0xFF	; 255
    21e2:	91 83       	std	Z+1, r25	; 0x01
    21e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21e6:	de 01       	movw	r26, r28
    21e8:	aa 53       	subi	r26, 0x3A	; 58
    21ea:	bf 4f       	sbci	r27, 0xFF	; 255
    21ec:	fe 01       	movw	r30, r28
    21ee:	ea 53       	subi	r30, 0x3A	; 58
    21f0:	ff 4f       	sbci	r31, 0xFF	; 255
    21f2:	80 81       	ld	r24, Z
    21f4:	91 81       	ldd	r25, Z+1	; 0x01
    21f6:	01 97       	sbiw	r24, 0x01	; 1
    21f8:	11 96       	adiw	r26, 0x01	; 1
    21fa:	9c 93       	st	X, r25
    21fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21fe:	fe 01       	movw	r30, r28
    2200:	ea 53       	subi	r30, 0x3A	; 58
    2202:	ff 4f       	sbci	r31, 0xFF	; 255
    2204:	80 81       	ld	r24, Z
    2206:	91 81       	ldd	r25, Z+1	; 0x01
    2208:	00 97       	sbiw	r24, 0x00	; 0
    220a:	d1 f6       	brne	.-76     	; 0x21c0 <readgamepad+0x1c22>
    220c:	4b c0       	rjmp	.+150    	; 0x22a4 <__stack+0xa5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    220e:	8e 01       	movw	r16, r28
    2210:	0a 53       	subi	r16, 0x3A	; 58
    2212:	1f 4f       	sbci	r17, 0xFF	; 255
    2214:	fe 01       	movw	r30, r28
    2216:	e8 53       	subi	r30, 0x38	; 56
    2218:	ff 4f       	sbci	r31, 0xFF	; 255
    221a:	60 81       	ld	r22, Z
    221c:	71 81       	ldd	r23, Z+1	; 0x01
    221e:	82 81       	ldd	r24, Z+2	; 0x02
    2220:	93 81       	ldd	r25, Z+3	; 0x03
    2222:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2226:	dc 01       	movw	r26, r24
    2228:	cb 01       	movw	r24, r22
    222a:	f8 01       	movw	r30, r16
    222c:	91 83       	std	Z+1, r25	; 0x01
    222e:	80 83       	st	Z, r24
    2230:	de 01       	movw	r26, r28
    2232:	ae 53       	subi	r26, 0x3E	; 62
    2234:	bf 4f       	sbci	r27, 0xFF	; 255
    2236:	fe 01       	movw	r30, r28
    2238:	ea 53       	subi	r30, 0x3A	; 58
    223a:	ff 4f       	sbci	r31, 0xFF	; 255
    223c:	80 81       	ld	r24, Z
    223e:	91 81       	ldd	r25, Z+1	; 0x01
    2240:	11 96       	adiw	r26, 0x01	; 1
    2242:	9c 93       	st	X, r25
    2244:	8e 93       	st	-X, r24
    2246:	fe 01       	movw	r30, r28
    2248:	ee 53       	subi	r30, 0x3E	; 62
    224a:	ff 4f       	sbci	r31, 0xFF	; 255
    224c:	80 81       	ld	r24, Z
    224e:	91 81       	ldd	r25, Z+1	; 0x01
    2250:	01 97       	sbiw	r24, 0x01	; 1
    2252:	f1 f7       	brne	.-4      	; 0x2250 <__stack+0x51>
    2254:	fe 01       	movw	r30, r28
    2256:	ee 53       	subi	r30, 0x3E	; 62
    2258:	ff 4f       	sbci	r31, 0xFF	; 255
    225a:	91 83       	std	Z+1, r25	; 0x01
    225c:	80 83       	st	Z, r24
    225e:	22 c0       	rjmp	.+68     	; 0x22a4 <__stack+0xa5>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2260:	8e 01       	movw	r16, r28
    2262:	00 53       	subi	r16, 0x30	; 48
    2264:	1f 4f       	sbci	r17, 0xFF	; 255
    2266:	fe 01       	movw	r30, r28
    2268:	ef 52       	subi	r30, 0x2F	; 47
    226a:	ff 4f       	sbci	r31, 0xFF	; 255
    226c:	60 81       	ld	r22, Z
    226e:	71 81       	ldd	r23, Z+1	; 0x01
    2270:	82 81       	ldd	r24, Z+2	; 0x02
    2272:	93 81       	ldd	r25, Z+3	; 0x03
    2274:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2278:	dc 01       	movw	r26, r24
    227a:	cb 01       	movw	r24, r22
    227c:	f8 01       	movw	r30, r16
    227e:	80 83       	st	Z, r24
    2280:	de 01       	movw	r26, r28
    2282:	af 53       	subi	r26, 0x3F	; 63
    2284:	bf 4f       	sbci	r27, 0xFF	; 255
    2286:	fe 01       	movw	r30, r28
    2288:	e0 53       	subi	r30, 0x30	; 48
    228a:	ff 4f       	sbci	r31, 0xFF	; 255
    228c:	80 81       	ld	r24, Z
    228e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2290:	fe 01       	movw	r30, r28
    2292:	ef 53       	subi	r30, 0x3F	; 63
    2294:	ff 4f       	sbci	r31, 0xFF	; 255
    2296:	80 81       	ld	r24, Z
    2298:	8a 95       	dec	r24
    229a:	f1 f7       	brne	.-4      	; 0x2298 <__stack+0x99>
    229c:	fe 01       	movw	r30, r28
    229e:	ef 53       	subi	r30, 0x3F	; 63
    22a0:	ff 4f       	sbci	r31, 0xFF	; 255
    22a2:	80 83       	st	Z, r24
	
	
	
   
	ps2data5=0;
	for(i=0;i<8;i++) // 5 byte
    22a4:	80 91 0c 02 	lds	r24, 0x020C
    22a8:	90 91 0d 02 	lds	r25, 0x020D
    22ac:	01 96       	adiw	r24, 0x01	; 1
    22ae:	90 93 0d 02 	sts	0x020D, r25
    22b2:	80 93 0c 02 	sts	0x020C, r24
    22b6:	80 91 0c 02 	lds	r24, 0x020C
    22ba:	90 91 0d 02 	lds	r25, 0x020D
    22be:	88 30       	cpi	r24, 0x08	; 8
    22c0:	91 05       	cpc	r25, r1
    22c2:	0c f4       	brge	.+2      	; 0x22c6 <__stack+0xc7>
    22c4:	50 cd       	rjmp	.-1376   	; 0x1d66 <readgamepad+0x17c8>
		else
			sbi(ps2data5,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    22c6:	a8 e2       	ldi	r26, 0x28	; 40
    22c8:	b0 e0       	ldi	r27, 0x00	; 0
    22ca:	e8 e2       	ldi	r30, 0x28	; 40
    22cc:	f0 e0       	ldi	r31, 0x00	; 0
    22ce:	80 81       	ld	r24, Z
    22d0:	84 60       	ori	r24, 0x04	; 4
    22d2:	8c 93       	st	X, r24
	
	
	
	
	ps2data6=0;
    22d4:	10 92 0f 02 	sts	0x020F, r1
    22d8:	10 92 0e 02 	sts	0x020E, r1
	for(i=0;i<8;i++) // 6byte
    22dc:	10 92 0d 02 	sts	0x020D, r1
    22e0:	10 92 0c 02 	sts	0x020C, r1
    22e4:	a8 c2       	rjmp	.+1360   	; 0x2836 <__stack+0x637>
	{
		cbi(ps2port,ps2cmd);
    22e6:	a8 e2       	ldi	r26, 0x28	; 40
    22e8:	b0 e0       	ldi	r27, 0x00	; 0
    22ea:	e8 e2       	ldi	r30, 0x28	; 40
    22ec:	f0 e0       	ldi	r31, 0x00	; 0
    22ee:	80 81       	ld	r24, Z
    22f0:	8b 7f       	andi	r24, 0xFB	; 251
    22f2:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    22f4:	a8 e2       	ldi	r26, 0x28	; 40
    22f6:	b0 e0       	ldi	r27, 0x00	; 0
    22f8:	e8 e2       	ldi	r30, 0x28	; 40
    22fa:	f0 e0       	ldi	r31, 0x00	; 0
    22fc:	80 81       	ld	r24, Z
    22fe:	8e 7f       	andi	r24, 0xFE	; 254
    2300:	8c 93       	st	X, r24
    2302:	fe 01       	movw	r30, r28
    2304:	e3 54       	subi	r30, 0x43	; 67
    2306:	ff 4f       	sbci	r31, 0xFF	; 255
    2308:	80 e0       	ldi	r24, 0x00	; 0
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	a0 e8       	ldi	r26, 0x80	; 128
    230e:	bf e3       	ldi	r27, 0x3F	; 63
    2310:	80 83       	st	Z, r24
    2312:	91 83       	std	Z+1, r25	; 0x01
    2314:	a2 83       	std	Z+2, r26	; 0x02
    2316:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2318:	8e 01       	movw	r16, r28
    231a:	07 54       	subi	r16, 0x47	; 71
    231c:	1f 4f       	sbci	r17, 0xFF	; 255
    231e:	fe 01       	movw	r30, r28
    2320:	e3 54       	subi	r30, 0x43	; 67
    2322:	ff 4f       	sbci	r31, 0xFF	; 255
    2324:	60 81       	ld	r22, Z
    2326:	71 81       	ldd	r23, Z+1	; 0x01
    2328:	82 81       	ldd	r24, Z+2	; 0x02
    232a:	93 81       	ldd	r25, Z+3	; 0x03
    232c:	2b ea       	ldi	r18, 0xAB	; 171
    232e:	3a ea       	ldi	r19, 0xAA	; 170
    2330:	4a ea       	ldi	r20, 0xAA	; 170
    2332:	50 e4       	ldi	r21, 0x40	; 64
    2334:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2338:	dc 01       	movw	r26, r24
    233a:	cb 01       	movw	r24, r22
    233c:	f8 01       	movw	r30, r16
    233e:	80 83       	st	Z, r24
    2340:	91 83       	std	Z+1, r25	; 0x01
    2342:	a2 83       	std	Z+2, r26	; 0x02
    2344:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2346:	fe 01       	movw	r30, r28
    2348:	e7 54       	subi	r30, 0x47	; 71
    234a:	ff 4f       	sbci	r31, 0xFF	; 255
    234c:	60 81       	ld	r22, Z
    234e:	71 81       	ldd	r23, Z+1	; 0x01
    2350:	82 81       	ldd	r24, Z+2	; 0x02
    2352:	93 81       	ldd	r25, Z+3	; 0x03
    2354:	20 e0       	ldi	r18, 0x00	; 0
    2356:	30 e0       	ldi	r19, 0x00	; 0
    2358:	40 e8       	ldi	r20, 0x80	; 128
    235a:	5f e3       	ldi	r21, 0x3F	; 63
    235c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2360:	88 23       	and	r24, r24
    2362:	34 f4       	brge	.+12     	; 0x2370 <__stack+0x171>
		__ticks = 1;
    2364:	fe 01       	movw	r30, r28
    2366:	e8 54       	subi	r30, 0x48	; 72
    2368:	ff 4f       	sbci	r31, 0xFF	; 255
    236a:	81 e0       	ldi	r24, 0x01	; 1
    236c:	80 83       	st	Z, r24
    236e:	e0 c0       	rjmp	.+448    	; 0x2530 <__stack+0x331>
	else if (__tmp > 255)
    2370:	fe 01       	movw	r30, r28
    2372:	e7 54       	subi	r30, 0x47	; 71
    2374:	ff 4f       	sbci	r31, 0xFF	; 255
    2376:	60 81       	ld	r22, Z
    2378:	71 81       	ldd	r23, Z+1	; 0x01
    237a:	82 81       	ldd	r24, Z+2	; 0x02
    237c:	93 81       	ldd	r25, Z+3	; 0x03
    237e:	20 e0       	ldi	r18, 0x00	; 0
    2380:	30 e0       	ldi	r19, 0x00	; 0
    2382:	4f e7       	ldi	r20, 0x7F	; 127
    2384:	53 e4       	ldi	r21, 0x43	; 67
    2386:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    238a:	18 16       	cp	r1, r24
    238c:	0c f0       	brlt	.+2      	; 0x2390 <__stack+0x191>
    238e:	c0 c0       	rjmp	.+384    	; 0x2510 <__stack+0x311>
	{
		_delay_ms(__us / 1000.0);
    2390:	fe 01       	movw	r30, r28
    2392:	e3 54       	subi	r30, 0x43	; 67
    2394:	ff 4f       	sbci	r31, 0xFF	; 255
    2396:	60 81       	ld	r22, Z
    2398:	71 81       	ldd	r23, Z+1	; 0x01
    239a:	82 81       	ldd	r24, Z+2	; 0x02
    239c:	93 81       	ldd	r25, Z+3	; 0x03
    239e:	20 e0       	ldi	r18, 0x00	; 0
    23a0:	30 e0       	ldi	r19, 0x00	; 0
    23a2:	4a e7       	ldi	r20, 0x7A	; 122
    23a4:	54 e4       	ldi	r21, 0x44	; 68
    23a6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    23aa:	dc 01       	movw	r26, r24
    23ac:	cb 01       	movw	r24, r22
    23ae:	fe 01       	movw	r30, r28
    23b0:	ec 54       	subi	r30, 0x4C	; 76
    23b2:	ff 4f       	sbci	r31, 0xFF	; 255
    23b4:	80 83       	st	Z, r24
    23b6:	91 83       	std	Z+1, r25	; 0x01
    23b8:	a2 83       	std	Z+2, r26	; 0x02
    23ba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23bc:	8e 01       	movw	r16, r28
    23be:	00 55       	subi	r16, 0x50	; 80
    23c0:	1f 4f       	sbci	r17, 0xFF	; 255
    23c2:	fe 01       	movw	r30, r28
    23c4:	ec 54       	subi	r30, 0x4C	; 76
    23c6:	ff 4f       	sbci	r31, 0xFF	; 255
    23c8:	60 81       	ld	r22, Z
    23ca:	71 81       	ldd	r23, Z+1	; 0x01
    23cc:	82 81       	ldd	r24, Z+2	; 0x02
    23ce:	93 81       	ldd	r25, Z+3	; 0x03
    23d0:	20 e0       	ldi	r18, 0x00	; 0
    23d2:	30 e0       	ldi	r19, 0x00	; 0
    23d4:	4a e7       	ldi	r20, 0x7A	; 122
    23d6:	55 e4       	ldi	r21, 0x45	; 69
    23d8:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    23dc:	dc 01       	movw	r26, r24
    23de:	cb 01       	movw	r24, r22
    23e0:	f8 01       	movw	r30, r16
    23e2:	80 83       	st	Z, r24
    23e4:	91 83       	std	Z+1, r25	; 0x01
    23e6:	a2 83       	std	Z+2, r26	; 0x02
    23e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23ea:	fe 01       	movw	r30, r28
    23ec:	e0 55       	subi	r30, 0x50	; 80
    23ee:	ff 4f       	sbci	r31, 0xFF	; 255
    23f0:	60 81       	ld	r22, Z
    23f2:	71 81       	ldd	r23, Z+1	; 0x01
    23f4:	82 81       	ldd	r24, Z+2	; 0x02
    23f6:	93 81       	ldd	r25, Z+3	; 0x03
    23f8:	20 e0       	ldi	r18, 0x00	; 0
    23fa:	30 e0       	ldi	r19, 0x00	; 0
    23fc:	40 e8       	ldi	r20, 0x80	; 128
    23fe:	5f e3       	ldi	r21, 0x3F	; 63
    2400:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2404:	88 23       	and	r24, r24
    2406:	44 f4       	brge	.+16     	; 0x2418 <__stack+0x219>
		__ticks = 1;
    2408:	fe 01       	movw	r30, r28
    240a:	e2 55       	subi	r30, 0x52	; 82
    240c:	ff 4f       	sbci	r31, 0xFF	; 255
    240e:	81 e0       	ldi	r24, 0x01	; 1
    2410:	90 e0       	ldi	r25, 0x00	; 0
    2412:	91 83       	std	Z+1, r25	; 0x01
    2414:	80 83       	st	Z, r24
    2416:	64 c0       	rjmp	.+200    	; 0x24e0 <__stack+0x2e1>
	else if (__tmp > 65535)
    2418:	fe 01       	movw	r30, r28
    241a:	e0 55       	subi	r30, 0x50	; 80
    241c:	ff 4f       	sbci	r31, 0xFF	; 255
    241e:	60 81       	ld	r22, Z
    2420:	71 81       	ldd	r23, Z+1	; 0x01
    2422:	82 81       	ldd	r24, Z+2	; 0x02
    2424:	93 81       	ldd	r25, Z+3	; 0x03
    2426:	20 e0       	ldi	r18, 0x00	; 0
    2428:	3f ef       	ldi	r19, 0xFF	; 255
    242a:	4f e7       	ldi	r20, 0x7F	; 127
    242c:	57 e4       	ldi	r21, 0x47	; 71
    242e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    2432:	18 16       	cp	r1, r24
    2434:	0c f0       	brlt	.+2      	; 0x2438 <__stack+0x239>
    2436:	43 c0       	rjmp	.+134    	; 0x24be <__stack+0x2bf>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2438:	fe 01       	movw	r30, r28
    243a:	ec 54       	subi	r30, 0x4C	; 76
    243c:	ff 4f       	sbci	r31, 0xFF	; 255
    243e:	60 81       	ld	r22, Z
    2440:	71 81       	ldd	r23, Z+1	; 0x01
    2442:	82 81       	ldd	r24, Z+2	; 0x02
    2444:	93 81       	ldd	r25, Z+3	; 0x03
    2446:	20 e0       	ldi	r18, 0x00	; 0
    2448:	30 e0       	ldi	r19, 0x00	; 0
    244a:	40 e2       	ldi	r20, 0x20	; 32
    244c:	51 e4       	ldi	r21, 0x41	; 65
    244e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2452:	dc 01       	movw	r26, r24
    2454:	cb 01       	movw	r24, r22
    2456:	8e 01       	movw	r16, r28
    2458:	02 55       	subi	r16, 0x52	; 82
    245a:	1f 4f       	sbci	r17, 0xFF	; 255
    245c:	bc 01       	movw	r22, r24
    245e:	cd 01       	movw	r24, r26
    2460:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2464:	dc 01       	movw	r26, r24
    2466:	cb 01       	movw	r24, r22
    2468:	f8 01       	movw	r30, r16
    246a:	91 83       	std	Z+1, r25	; 0x01
    246c:	80 83       	st	Z, r24
    246e:	1f c0       	rjmp	.+62     	; 0x24ae <__stack+0x2af>
    2470:	fe 01       	movw	r30, r28
    2472:	e4 55       	subi	r30, 0x54	; 84
    2474:	ff 4f       	sbci	r31, 0xFF	; 255
    2476:	80 e9       	ldi	r24, 0x90	; 144
    2478:	91 e0       	ldi	r25, 0x01	; 1
    247a:	91 83       	std	Z+1, r25	; 0x01
    247c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    247e:	fe 01       	movw	r30, r28
    2480:	e4 55       	subi	r30, 0x54	; 84
    2482:	ff 4f       	sbci	r31, 0xFF	; 255
    2484:	80 81       	ld	r24, Z
    2486:	91 81       	ldd	r25, Z+1	; 0x01
    2488:	01 97       	sbiw	r24, 0x01	; 1
    248a:	f1 f7       	brne	.-4      	; 0x2488 <__stack+0x289>
    248c:	fe 01       	movw	r30, r28
    248e:	e4 55       	subi	r30, 0x54	; 84
    2490:	ff 4f       	sbci	r31, 0xFF	; 255
    2492:	91 83       	std	Z+1, r25	; 0x01
    2494:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2496:	de 01       	movw	r26, r28
    2498:	a2 55       	subi	r26, 0x52	; 82
    249a:	bf 4f       	sbci	r27, 0xFF	; 255
    249c:	fe 01       	movw	r30, r28
    249e:	e2 55       	subi	r30, 0x52	; 82
    24a0:	ff 4f       	sbci	r31, 0xFF	; 255
    24a2:	80 81       	ld	r24, Z
    24a4:	91 81       	ldd	r25, Z+1	; 0x01
    24a6:	01 97       	sbiw	r24, 0x01	; 1
    24a8:	11 96       	adiw	r26, 0x01	; 1
    24aa:	9c 93       	st	X, r25
    24ac:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24ae:	fe 01       	movw	r30, r28
    24b0:	e2 55       	subi	r30, 0x52	; 82
    24b2:	ff 4f       	sbci	r31, 0xFF	; 255
    24b4:	80 81       	ld	r24, Z
    24b6:	91 81       	ldd	r25, Z+1	; 0x01
    24b8:	00 97       	sbiw	r24, 0x00	; 0
    24ba:	d1 f6       	brne	.-76     	; 0x2470 <__stack+0x271>
    24bc:	4b c0       	rjmp	.+150    	; 0x2554 <__stack+0x355>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24be:	8e 01       	movw	r16, r28
    24c0:	02 55       	subi	r16, 0x52	; 82
    24c2:	1f 4f       	sbci	r17, 0xFF	; 255
    24c4:	fe 01       	movw	r30, r28
    24c6:	e0 55       	subi	r30, 0x50	; 80
    24c8:	ff 4f       	sbci	r31, 0xFF	; 255
    24ca:	60 81       	ld	r22, Z
    24cc:	71 81       	ldd	r23, Z+1	; 0x01
    24ce:	82 81       	ldd	r24, Z+2	; 0x02
    24d0:	93 81       	ldd	r25, Z+3	; 0x03
    24d2:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    24d6:	dc 01       	movw	r26, r24
    24d8:	cb 01       	movw	r24, r22
    24da:	f8 01       	movw	r30, r16
    24dc:	91 83       	std	Z+1, r25	; 0x01
    24de:	80 83       	st	Z, r24
    24e0:	de 01       	movw	r26, r28
    24e2:	a6 55       	subi	r26, 0x56	; 86
    24e4:	bf 4f       	sbci	r27, 0xFF	; 255
    24e6:	fe 01       	movw	r30, r28
    24e8:	e2 55       	subi	r30, 0x52	; 82
    24ea:	ff 4f       	sbci	r31, 0xFF	; 255
    24ec:	80 81       	ld	r24, Z
    24ee:	91 81       	ldd	r25, Z+1	; 0x01
    24f0:	11 96       	adiw	r26, 0x01	; 1
    24f2:	9c 93       	st	X, r25
    24f4:	8e 93       	st	-X, r24
    24f6:	fe 01       	movw	r30, r28
    24f8:	e6 55       	subi	r30, 0x56	; 86
    24fa:	ff 4f       	sbci	r31, 0xFF	; 255
    24fc:	80 81       	ld	r24, Z
    24fe:	91 81       	ldd	r25, Z+1	; 0x01
    2500:	01 97       	sbiw	r24, 0x01	; 1
    2502:	f1 f7       	brne	.-4      	; 0x2500 <__stack+0x301>
    2504:	fe 01       	movw	r30, r28
    2506:	e6 55       	subi	r30, 0x56	; 86
    2508:	ff 4f       	sbci	r31, 0xFF	; 255
    250a:	91 83       	std	Z+1, r25	; 0x01
    250c:	80 83       	st	Z, r24
    250e:	22 c0       	rjmp	.+68     	; 0x2554 <__stack+0x355>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2510:	8e 01       	movw	r16, r28
    2512:	08 54       	subi	r16, 0x48	; 72
    2514:	1f 4f       	sbci	r17, 0xFF	; 255
    2516:	fe 01       	movw	r30, r28
    2518:	e7 54       	subi	r30, 0x47	; 71
    251a:	ff 4f       	sbci	r31, 0xFF	; 255
    251c:	60 81       	ld	r22, Z
    251e:	71 81       	ldd	r23, Z+1	; 0x01
    2520:	82 81       	ldd	r24, Z+2	; 0x02
    2522:	93 81       	ldd	r25, Z+3	; 0x03
    2524:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2528:	dc 01       	movw	r26, r24
    252a:	cb 01       	movw	r24, r22
    252c:	f8 01       	movw	r30, r16
    252e:	80 83       	st	Z, r24
    2530:	de 01       	movw	r26, r28
    2532:	a7 55       	subi	r26, 0x57	; 87
    2534:	bf 4f       	sbci	r27, 0xFF	; 255
    2536:	fe 01       	movw	r30, r28
    2538:	e8 54       	subi	r30, 0x48	; 72
    253a:	ff 4f       	sbci	r31, 0xFF	; 255
    253c:	80 81       	ld	r24, Z
    253e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2540:	fe 01       	movw	r30, r28
    2542:	e7 55       	subi	r30, 0x57	; 87
    2544:	ff 4f       	sbci	r31, 0xFF	; 255
    2546:	80 81       	ld	r24, Z
    2548:	8a 95       	dec	r24
    254a:	f1 f7       	brne	.-4      	; 0x2548 <__stack+0x349>
    254c:	fe 01       	movw	r30, r28
    254e:	e7 55       	subi	r30, 0x57	; 87
    2550:	ff 4f       	sbci	r31, 0xFF	; 255
    2552:	80 83       	st	Z, r24
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    2554:	e6 e2       	ldi	r30, 0x26	; 38
    2556:	f0 e0       	ldi	r31, 0x00	; 0
    2558:	80 81       	ld	r24, Z
    255a:	88 2f       	mov	r24, r24
    255c:	90 e0       	ldi	r25, 0x00	; 0
    255e:	82 70       	andi	r24, 0x02	; 2
    2560:	90 70       	andi	r25, 0x00	; 0
    2562:	00 97       	sbiw	r24, 0x00	; 0
    2564:	c9 f4       	brne	.+50     	; 0x2598 <__stack+0x399>
			cbi(ps2data6,i); 
    2566:	20 91 0c 02 	lds	r18, 0x020C
    256a:	30 91 0d 02 	lds	r19, 0x020D
    256e:	81 e0       	ldi	r24, 0x01	; 1
    2570:	90 e0       	ldi	r25, 0x00	; 0
    2572:	02 c0       	rjmp	.+4      	; 0x2578 <__stack+0x379>
    2574:	88 0f       	add	r24, r24
    2576:	99 1f       	adc	r25, r25
    2578:	2a 95       	dec	r18
    257a:	e2 f7       	brpl	.-8      	; 0x2574 <__stack+0x375>
    257c:	80 95       	com	r24
    257e:	90 95       	com	r25
    2580:	9c 01       	movw	r18, r24
    2582:	80 91 0e 02 	lds	r24, 0x020E
    2586:	90 91 0f 02 	lds	r25, 0x020F
    258a:	82 23       	and	r24, r18
    258c:	93 23       	and	r25, r19
    258e:	90 93 0f 02 	sts	0x020F, r25
    2592:	80 93 0e 02 	sts	0x020E, r24
    2596:	16 c0       	rjmp	.+44     	; 0x25c4 <__stack+0x3c5>
		else
			sbi(ps2data6,i); 
    2598:	20 91 0c 02 	lds	r18, 0x020C
    259c:	30 91 0d 02 	lds	r19, 0x020D
    25a0:	81 e0       	ldi	r24, 0x01	; 1
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	02 c0       	rjmp	.+4      	; 0x25aa <__stack+0x3ab>
    25a6:	88 0f       	add	r24, r24
    25a8:	99 1f       	adc	r25, r25
    25aa:	2a 95       	dec	r18
    25ac:	e2 f7       	brpl	.-8      	; 0x25a6 <__stack+0x3a7>
    25ae:	9c 01       	movw	r18, r24
    25b0:	80 91 0e 02 	lds	r24, 0x020E
    25b4:	90 91 0f 02 	lds	r25, 0x020F
    25b8:	82 2b       	or	r24, r18
    25ba:	93 2b       	or	r25, r19
    25bc:	90 93 0f 02 	sts	0x020F, r25
    25c0:	80 93 0e 02 	sts	0x020E, r24
		sbi(ps2port,ps2clk);
    25c4:	a8 e2       	ldi	r26, 0x28	; 40
    25c6:	b0 e0       	ldi	r27, 0x00	; 0
    25c8:	e8 e2       	ldi	r30, 0x28	; 40
    25ca:	f0 e0       	ldi	r31, 0x00	; 0
    25cc:	80 81       	ld	r24, Z
    25ce:	81 60       	ori	r24, 0x01	; 1
    25d0:	8c 93       	st	X, r24
    25d2:	fe 01       	movw	r30, r28
    25d4:	eb 55       	subi	r30, 0x5B	; 91
    25d6:	ff 4f       	sbci	r31, 0xFF	; 255
    25d8:	80 e0       	ldi	r24, 0x00	; 0
    25da:	90 e0       	ldi	r25, 0x00	; 0
    25dc:	a0 e8       	ldi	r26, 0x80	; 128
    25de:	bf e3       	ldi	r27, 0x3F	; 63
    25e0:	80 83       	st	Z, r24
    25e2:	91 83       	std	Z+1, r25	; 0x01
    25e4:	a2 83       	std	Z+2, r26	; 0x02
    25e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    25e8:	8e 01       	movw	r16, r28
    25ea:	0f 55       	subi	r16, 0x5F	; 95
    25ec:	1f 4f       	sbci	r17, 0xFF	; 255
    25ee:	fe 01       	movw	r30, r28
    25f0:	eb 55       	subi	r30, 0x5B	; 91
    25f2:	ff 4f       	sbci	r31, 0xFF	; 255
    25f4:	60 81       	ld	r22, Z
    25f6:	71 81       	ldd	r23, Z+1	; 0x01
    25f8:	82 81       	ldd	r24, Z+2	; 0x02
    25fa:	93 81       	ldd	r25, Z+3	; 0x03
    25fc:	2b ea       	ldi	r18, 0xAB	; 171
    25fe:	3a ea       	ldi	r19, 0xAA	; 170
    2600:	4a ea       	ldi	r20, 0xAA	; 170
    2602:	50 e4       	ldi	r21, 0x40	; 64
    2604:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2608:	dc 01       	movw	r26, r24
    260a:	cb 01       	movw	r24, r22
    260c:	f8 01       	movw	r30, r16
    260e:	80 83       	st	Z, r24
    2610:	91 83       	std	Z+1, r25	; 0x01
    2612:	a2 83       	std	Z+2, r26	; 0x02
    2614:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2616:	fe 01       	movw	r30, r28
    2618:	ef 55       	subi	r30, 0x5F	; 95
    261a:	ff 4f       	sbci	r31, 0xFF	; 255
    261c:	60 81       	ld	r22, Z
    261e:	71 81       	ldd	r23, Z+1	; 0x01
    2620:	82 81       	ldd	r24, Z+2	; 0x02
    2622:	93 81       	ldd	r25, Z+3	; 0x03
    2624:	20 e0       	ldi	r18, 0x00	; 0
    2626:	30 e0       	ldi	r19, 0x00	; 0
    2628:	40 e8       	ldi	r20, 0x80	; 128
    262a:	5f e3       	ldi	r21, 0x3F	; 63
    262c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2630:	88 23       	and	r24, r24
    2632:	34 f4       	brge	.+12     	; 0x2640 <__stack+0x441>
		__ticks = 1;
    2634:	fe 01       	movw	r30, r28
    2636:	e0 56       	subi	r30, 0x60	; 96
    2638:	ff 4f       	sbci	r31, 0xFF	; 255
    263a:	81 e0       	ldi	r24, 0x01	; 1
    263c:	80 83       	st	Z, r24
    263e:	e0 c0       	rjmp	.+448    	; 0x2800 <__stack+0x601>
	else if (__tmp > 255)
    2640:	fe 01       	movw	r30, r28
    2642:	ef 55       	subi	r30, 0x5F	; 95
    2644:	ff 4f       	sbci	r31, 0xFF	; 255
    2646:	60 81       	ld	r22, Z
    2648:	71 81       	ldd	r23, Z+1	; 0x01
    264a:	82 81       	ldd	r24, Z+2	; 0x02
    264c:	93 81       	ldd	r25, Z+3	; 0x03
    264e:	20 e0       	ldi	r18, 0x00	; 0
    2650:	30 e0       	ldi	r19, 0x00	; 0
    2652:	4f e7       	ldi	r20, 0x7F	; 127
    2654:	53 e4       	ldi	r21, 0x43	; 67
    2656:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    265a:	18 16       	cp	r1, r24
    265c:	0c f0       	brlt	.+2      	; 0x2660 <__stack+0x461>
    265e:	c0 c0       	rjmp	.+384    	; 0x27e0 <__stack+0x5e1>
	{
		_delay_ms(__us / 1000.0);
    2660:	fe 01       	movw	r30, r28
    2662:	eb 55       	subi	r30, 0x5B	; 91
    2664:	ff 4f       	sbci	r31, 0xFF	; 255
    2666:	60 81       	ld	r22, Z
    2668:	71 81       	ldd	r23, Z+1	; 0x01
    266a:	82 81       	ldd	r24, Z+2	; 0x02
    266c:	93 81       	ldd	r25, Z+3	; 0x03
    266e:	20 e0       	ldi	r18, 0x00	; 0
    2670:	30 e0       	ldi	r19, 0x00	; 0
    2672:	4a e7       	ldi	r20, 0x7A	; 122
    2674:	54 e4       	ldi	r21, 0x44	; 68
    2676:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    267a:	dc 01       	movw	r26, r24
    267c:	cb 01       	movw	r24, r22
    267e:	fe 01       	movw	r30, r28
    2680:	e4 56       	subi	r30, 0x64	; 100
    2682:	ff 4f       	sbci	r31, 0xFF	; 255
    2684:	80 83       	st	Z, r24
    2686:	91 83       	std	Z+1, r25	; 0x01
    2688:	a2 83       	std	Z+2, r26	; 0x02
    268a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    268c:	8e 01       	movw	r16, r28
    268e:	08 56       	subi	r16, 0x68	; 104
    2690:	1f 4f       	sbci	r17, 0xFF	; 255
    2692:	fe 01       	movw	r30, r28
    2694:	e4 56       	subi	r30, 0x64	; 100
    2696:	ff 4f       	sbci	r31, 0xFF	; 255
    2698:	60 81       	ld	r22, Z
    269a:	71 81       	ldd	r23, Z+1	; 0x01
    269c:	82 81       	ldd	r24, Z+2	; 0x02
    269e:	93 81       	ldd	r25, Z+3	; 0x03
    26a0:	20 e0       	ldi	r18, 0x00	; 0
    26a2:	30 e0       	ldi	r19, 0x00	; 0
    26a4:	4a e7       	ldi	r20, 0x7A	; 122
    26a6:	55 e4       	ldi	r21, 0x45	; 69
    26a8:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    26ac:	dc 01       	movw	r26, r24
    26ae:	cb 01       	movw	r24, r22
    26b0:	f8 01       	movw	r30, r16
    26b2:	80 83       	st	Z, r24
    26b4:	91 83       	std	Z+1, r25	; 0x01
    26b6:	a2 83       	std	Z+2, r26	; 0x02
    26b8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26ba:	fe 01       	movw	r30, r28
    26bc:	e8 56       	subi	r30, 0x68	; 104
    26be:	ff 4f       	sbci	r31, 0xFF	; 255
    26c0:	60 81       	ld	r22, Z
    26c2:	71 81       	ldd	r23, Z+1	; 0x01
    26c4:	82 81       	ldd	r24, Z+2	; 0x02
    26c6:	93 81       	ldd	r25, Z+3	; 0x03
    26c8:	20 e0       	ldi	r18, 0x00	; 0
    26ca:	30 e0       	ldi	r19, 0x00	; 0
    26cc:	40 e8       	ldi	r20, 0x80	; 128
    26ce:	5f e3       	ldi	r21, 0x3F	; 63
    26d0:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    26d4:	88 23       	and	r24, r24
    26d6:	44 f4       	brge	.+16     	; 0x26e8 <__stack+0x4e9>
		__ticks = 1;
    26d8:	fe 01       	movw	r30, r28
    26da:	ea 56       	subi	r30, 0x6A	; 106
    26dc:	ff 4f       	sbci	r31, 0xFF	; 255
    26de:	81 e0       	ldi	r24, 0x01	; 1
    26e0:	90 e0       	ldi	r25, 0x00	; 0
    26e2:	91 83       	std	Z+1, r25	; 0x01
    26e4:	80 83       	st	Z, r24
    26e6:	64 c0       	rjmp	.+200    	; 0x27b0 <__stack+0x5b1>
	else if (__tmp > 65535)
    26e8:	fe 01       	movw	r30, r28
    26ea:	e8 56       	subi	r30, 0x68	; 104
    26ec:	ff 4f       	sbci	r31, 0xFF	; 255
    26ee:	60 81       	ld	r22, Z
    26f0:	71 81       	ldd	r23, Z+1	; 0x01
    26f2:	82 81       	ldd	r24, Z+2	; 0x02
    26f4:	93 81       	ldd	r25, Z+3	; 0x03
    26f6:	20 e0       	ldi	r18, 0x00	; 0
    26f8:	3f ef       	ldi	r19, 0xFF	; 255
    26fa:	4f e7       	ldi	r20, 0x7F	; 127
    26fc:	57 e4       	ldi	r21, 0x47	; 71
    26fe:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    2702:	18 16       	cp	r1, r24
    2704:	0c f0       	brlt	.+2      	; 0x2708 <__stack+0x509>
    2706:	43 c0       	rjmp	.+134    	; 0x278e <__stack+0x58f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2708:	fe 01       	movw	r30, r28
    270a:	e4 56       	subi	r30, 0x64	; 100
    270c:	ff 4f       	sbci	r31, 0xFF	; 255
    270e:	60 81       	ld	r22, Z
    2710:	71 81       	ldd	r23, Z+1	; 0x01
    2712:	82 81       	ldd	r24, Z+2	; 0x02
    2714:	93 81       	ldd	r25, Z+3	; 0x03
    2716:	20 e0       	ldi	r18, 0x00	; 0
    2718:	30 e0       	ldi	r19, 0x00	; 0
    271a:	40 e2       	ldi	r20, 0x20	; 32
    271c:	51 e4       	ldi	r21, 0x41	; 65
    271e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2722:	dc 01       	movw	r26, r24
    2724:	cb 01       	movw	r24, r22
    2726:	8e 01       	movw	r16, r28
    2728:	0a 56       	subi	r16, 0x6A	; 106
    272a:	1f 4f       	sbci	r17, 0xFF	; 255
    272c:	bc 01       	movw	r22, r24
    272e:	cd 01       	movw	r24, r26
    2730:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2734:	dc 01       	movw	r26, r24
    2736:	cb 01       	movw	r24, r22
    2738:	f8 01       	movw	r30, r16
    273a:	91 83       	std	Z+1, r25	; 0x01
    273c:	80 83       	st	Z, r24
    273e:	1f c0       	rjmp	.+62     	; 0x277e <__stack+0x57f>
    2740:	fe 01       	movw	r30, r28
    2742:	ec 56       	subi	r30, 0x6C	; 108
    2744:	ff 4f       	sbci	r31, 0xFF	; 255
    2746:	80 e9       	ldi	r24, 0x90	; 144
    2748:	91 e0       	ldi	r25, 0x01	; 1
    274a:	91 83       	std	Z+1, r25	; 0x01
    274c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    274e:	fe 01       	movw	r30, r28
    2750:	ec 56       	subi	r30, 0x6C	; 108
    2752:	ff 4f       	sbci	r31, 0xFF	; 255
    2754:	80 81       	ld	r24, Z
    2756:	91 81       	ldd	r25, Z+1	; 0x01
    2758:	01 97       	sbiw	r24, 0x01	; 1
    275a:	f1 f7       	brne	.-4      	; 0x2758 <__stack+0x559>
    275c:	fe 01       	movw	r30, r28
    275e:	ec 56       	subi	r30, 0x6C	; 108
    2760:	ff 4f       	sbci	r31, 0xFF	; 255
    2762:	91 83       	std	Z+1, r25	; 0x01
    2764:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2766:	de 01       	movw	r26, r28
    2768:	aa 56       	subi	r26, 0x6A	; 106
    276a:	bf 4f       	sbci	r27, 0xFF	; 255
    276c:	fe 01       	movw	r30, r28
    276e:	ea 56       	subi	r30, 0x6A	; 106
    2770:	ff 4f       	sbci	r31, 0xFF	; 255
    2772:	80 81       	ld	r24, Z
    2774:	91 81       	ldd	r25, Z+1	; 0x01
    2776:	01 97       	sbiw	r24, 0x01	; 1
    2778:	11 96       	adiw	r26, 0x01	; 1
    277a:	9c 93       	st	X, r25
    277c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    277e:	fe 01       	movw	r30, r28
    2780:	ea 56       	subi	r30, 0x6A	; 106
    2782:	ff 4f       	sbci	r31, 0xFF	; 255
    2784:	80 81       	ld	r24, Z
    2786:	91 81       	ldd	r25, Z+1	; 0x01
    2788:	00 97       	sbiw	r24, 0x00	; 0
    278a:	d1 f6       	brne	.-76     	; 0x2740 <__stack+0x541>
    278c:	4b c0       	rjmp	.+150    	; 0x2824 <__stack+0x625>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    278e:	8e 01       	movw	r16, r28
    2790:	0a 56       	subi	r16, 0x6A	; 106
    2792:	1f 4f       	sbci	r17, 0xFF	; 255
    2794:	fe 01       	movw	r30, r28
    2796:	e8 56       	subi	r30, 0x68	; 104
    2798:	ff 4f       	sbci	r31, 0xFF	; 255
    279a:	60 81       	ld	r22, Z
    279c:	71 81       	ldd	r23, Z+1	; 0x01
    279e:	82 81       	ldd	r24, Z+2	; 0x02
    27a0:	93 81       	ldd	r25, Z+3	; 0x03
    27a2:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    27a6:	dc 01       	movw	r26, r24
    27a8:	cb 01       	movw	r24, r22
    27aa:	f8 01       	movw	r30, r16
    27ac:	91 83       	std	Z+1, r25	; 0x01
    27ae:	80 83       	st	Z, r24
    27b0:	de 01       	movw	r26, r28
    27b2:	ae 56       	subi	r26, 0x6E	; 110
    27b4:	bf 4f       	sbci	r27, 0xFF	; 255
    27b6:	fe 01       	movw	r30, r28
    27b8:	ea 56       	subi	r30, 0x6A	; 106
    27ba:	ff 4f       	sbci	r31, 0xFF	; 255
    27bc:	80 81       	ld	r24, Z
    27be:	91 81       	ldd	r25, Z+1	; 0x01
    27c0:	11 96       	adiw	r26, 0x01	; 1
    27c2:	9c 93       	st	X, r25
    27c4:	8e 93       	st	-X, r24
    27c6:	fe 01       	movw	r30, r28
    27c8:	ee 56       	subi	r30, 0x6E	; 110
    27ca:	ff 4f       	sbci	r31, 0xFF	; 255
    27cc:	80 81       	ld	r24, Z
    27ce:	91 81       	ldd	r25, Z+1	; 0x01
    27d0:	01 97       	sbiw	r24, 0x01	; 1
    27d2:	f1 f7       	brne	.-4      	; 0x27d0 <__stack+0x5d1>
    27d4:	fe 01       	movw	r30, r28
    27d6:	ee 56       	subi	r30, 0x6E	; 110
    27d8:	ff 4f       	sbci	r31, 0xFF	; 255
    27da:	91 83       	std	Z+1, r25	; 0x01
    27dc:	80 83       	st	Z, r24
    27de:	22 c0       	rjmp	.+68     	; 0x2824 <__stack+0x625>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    27e0:	8e 01       	movw	r16, r28
    27e2:	00 56       	subi	r16, 0x60	; 96
    27e4:	1f 4f       	sbci	r17, 0xFF	; 255
    27e6:	fe 01       	movw	r30, r28
    27e8:	ef 55       	subi	r30, 0x5F	; 95
    27ea:	ff 4f       	sbci	r31, 0xFF	; 255
    27ec:	60 81       	ld	r22, Z
    27ee:	71 81       	ldd	r23, Z+1	; 0x01
    27f0:	82 81       	ldd	r24, Z+2	; 0x02
    27f2:	93 81       	ldd	r25, Z+3	; 0x03
    27f4:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    27f8:	dc 01       	movw	r26, r24
    27fa:	cb 01       	movw	r24, r22
    27fc:	f8 01       	movw	r30, r16
    27fe:	80 83       	st	Z, r24
    2800:	de 01       	movw	r26, r28
    2802:	af 56       	subi	r26, 0x6F	; 111
    2804:	bf 4f       	sbci	r27, 0xFF	; 255
    2806:	fe 01       	movw	r30, r28
    2808:	e0 56       	subi	r30, 0x60	; 96
    280a:	ff 4f       	sbci	r31, 0xFF	; 255
    280c:	80 81       	ld	r24, Z
    280e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2810:	fe 01       	movw	r30, r28
    2812:	ef 56       	subi	r30, 0x6F	; 111
    2814:	ff 4f       	sbci	r31, 0xFF	; 255
    2816:	80 81       	ld	r24, Z
    2818:	8a 95       	dec	r24
    281a:	f1 f7       	brne	.-4      	; 0x2818 <__stack+0x619>
    281c:	fe 01       	movw	r30, r28
    281e:	ef 56       	subi	r30, 0x6F	; 111
    2820:	ff 4f       	sbci	r31, 0xFF	; 255
    2822:	80 83       	st	Z, r24
	
	
	
	
	ps2data6=0;
	for(i=0;i<8;i++) // 6byte
    2824:	80 91 0c 02 	lds	r24, 0x020C
    2828:	90 91 0d 02 	lds	r25, 0x020D
    282c:	01 96       	adiw	r24, 0x01	; 1
    282e:	90 93 0d 02 	sts	0x020D, r25
    2832:	80 93 0c 02 	sts	0x020C, r24
    2836:	80 91 0c 02 	lds	r24, 0x020C
    283a:	90 91 0d 02 	lds	r25, 0x020D
    283e:	88 30       	cpi	r24, 0x08	; 8
    2840:	91 05       	cpc	r25, r1
    2842:	0c f4       	brge	.+2      	; 0x2846 <__stack+0x647>
    2844:	50 cd       	rjmp	.-1376   	; 0x22e6 <__stack+0xe7>
		else
			sbi(ps2data6,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    2846:	a8 e2       	ldi	r26, 0x28	; 40
    2848:	b0 e0       	ldi	r27, 0x00	; 0
    284a:	e8 e2       	ldi	r30, 0x28	; 40
    284c:	f0 e0       	ldi	r31, 0x00	; 0
    284e:	80 81       	ld	r24, Z
    2850:	84 60       	ori	r24, 0x04	; 4
    2852:	8c 93       	st	X, r24
	
	
	
	
	ps2data7=0;
    2854:	10 92 05 02 	sts	0x0205, r1
    2858:	10 92 04 02 	sts	0x0204, r1
	for(i=0;i<8;i++) // 7 byte
    285c:	10 92 0d 02 	sts	0x020D, r1
    2860:	10 92 0c 02 	sts	0x020C, r1
    2864:	a8 c2       	rjmp	.+1360   	; 0x2db6 <__stack+0xbb7>
	{
		cbi(ps2port,ps2cmd);
    2866:	a8 e2       	ldi	r26, 0x28	; 40
    2868:	b0 e0       	ldi	r27, 0x00	; 0
    286a:	e8 e2       	ldi	r30, 0x28	; 40
    286c:	f0 e0       	ldi	r31, 0x00	; 0
    286e:	80 81       	ld	r24, Z
    2870:	8b 7f       	andi	r24, 0xFB	; 251
    2872:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    2874:	a8 e2       	ldi	r26, 0x28	; 40
    2876:	b0 e0       	ldi	r27, 0x00	; 0
    2878:	e8 e2       	ldi	r30, 0x28	; 40
    287a:	f0 e0       	ldi	r31, 0x00	; 0
    287c:	80 81       	ld	r24, Z
    287e:	8e 7f       	andi	r24, 0xFE	; 254
    2880:	8c 93       	st	X, r24
    2882:	fe 01       	movw	r30, r28
    2884:	e3 57       	subi	r30, 0x73	; 115
    2886:	ff 4f       	sbci	r31, 0xFF	; 255
    2888:	80 e0       	ldi	r24, 0x00	; 0
    288a:	90 e0       	ldi	r25, 0x00	; 0
    288c:	a0 e8       	ldi	r26, 0x80	; 128
    288e:	bf e3       	ldi	r27, 0x3F	; 63
    2890:	80 83       	st	Z, r24
    2892:	91 83       	std	Z+1, r25	; 0x01
    2894:	a2 83       	std	Z+2, r26	; 0x02
    2896:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2898:	8e 01       	movw	r16, r28
    289a:	07 57       	subi	r16, 0x77	; 119
    289c:	1f 4f       	sbci	r17, 0xFF	; 255
    289e:	fe 01       	movw	r30, r28
    28a0:	e3 57       	subi	r30, 0x73	; 115
    28a2:	ff 4f       	sbci	r31, 0xFF	; 255
    28a4:	60 81       	ld	r22, Z
    28a6:	71 81       	ldd	r23, Z+1	; 0x01
    28a8:	82 81       	ldd	r24, Z+2	; 0x02
    28aa:	93 81       	ldd	r25, Z+3	; 0x03
    28ac:	2b ea       	ldi	r18, 0xAB	; 171
    28ae:	3a ea       	ldi	r19, 0xAA	; 170
    28b0:	4a ea       	ldi	r20, 0xAA	; 170
    28b2:	50 e4       	ldi	r21, 0x40	; 64
    28b4:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    28b8:	dc 01       	movw	r26, r24
    28ba:	cb 01       	movw	r24, r22
    28bc:	f8 01       	movw	r30, r16
    28be:	80 83       	st	Z, r24
    28c0:	91 83       	std	Z+1, r25	; 0x01
    28c2:	a2 83       	std	Z+2, r26	; 0x02
    28c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28c6:	fe 01       	movw	r30, r28
    28c8:	e7 57       	subi	r30, 0x77	; 119
    28ca:	ff 4f       	sbci	r31, 0xFF	; 255
    28cc:	60 81       	ld	r22, Z
    28ce:	71 81       	ldd	r23, Z+1	; 0x01
    28d0:	82 81       	ldd	r24, Z+2	; 0x02
    28d2:	93 81       	ldd	r25, Z+3	; 0x03
    28d4:	20 e0       	ldi	r18, 0x00	; 0
    28d6:	30 e0       	ldi	r19, 0x00	; 0
    28d8:	40 e8       	ldi	r20, 0x80	; 128
    28da:	5f e3       	ldi	r21, 0x3F	; 63
    28dc:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    28e0:	88 23       	and	r24, r24
    28e2:	34 f4       	brge	.+12     	; 0x28f0 <__stack+0x6f1>
		__ticks = 1;
    28e4:	fe 01       	movw	r30, r28
    28e6:	e8 57       	subi	r30, 0x78	; 120
    28e8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ea:	81 e0       	ldi	r24, 0x01	; 1
    28ec:	80 83       	st	Z, r24
    28ee:	e0 c0       	rjmp	.+448    	; 0x2ab0 <__stack+0x8b1>
	else if (__tmp > 255)
    28f0:	fe 01       	movw	r30, r28
    28f2:	e7 57       	subi	r30, 0x77	; 119
    28f4:	ff 4f       	sbci	r31, 0xFF	; 255
    28f6:	60 81       	ld	r22, Z
    28f8:	71 81       	ldd	r23, Z+1	; 0x01
    28fa:	82 81       	ldd	r24, Z+2	; 0x02
    28fc:	93 81       	ldd	r25, Z+3	; 0x03
    28fe:	20 e0       	ldi	r18, 0x00	; 0
    2900:	30 e0       	ldi	r19, 0x00	; 0
    2902:	4f e7       	ldi	r20, 0x7F	; 127
    2904:	53 e4       	ldi	r21, 0x43	; 67
    2906:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    290a:	18 16       	cp	r1, r24
    290c:	0c f0       	brlt	.+2      	; 0x2910 <__stack+0x711>
    290e:	c0 c0       	rjmp	.+384    	; 0x2a90 <__stack+0x891>
	{
		_delay_ms(__us / 1000.0);
    2910:	fe 01       	movw	r30, r28
    2912:	e3 57       	subi	r30, 0x73	; 115
    2914:	ff 4f       	sbci	r31, 0xFF	; 255
    2916:	60 81       	ld	r22, Z
    2918:	71 81       	ldd	r23, Z+1	; 0x01
    291a:	82 81       	ldd	r24, Z+2	; 0x02
    291c:	93 81       	ldd	r25, Z+3	; 0x03
    291e:	20 e0       	ldi	r18, 0x00	; 0
    2920:	30 e0       	ldi	r19, 0x00	; 0
    2922:	4a e7       	ldi	r20, 0x7A	; 122
    2924:	54 e4       	ldi	r21, 0x44	; 68
    2926:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    292a:	dc 01       	movw	r26, r24
    292c:	cb 01       	movw	r24, r22
    292e:	fe 01       	movw	r30, r28
    2930:	ec 57       	subi	r30, 0x7C	; 124
    2932:	ff 4f       	sbci	r31, 0xFF	; 255
    2934:	80 83       	st	Z, r24
    2936:	91 83       	std	Z+1, r25	; 0x01
    2938:	a2 83       	std	Z+2, r26	; 0x02
    293a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    293c:	8e 01       	movw	r16, r28
    293e:	00 58       	subi	r16, 0x80	; 128
    2940:	1f 4f       	sbci	r17, 0xFF	; 255
    2942:	fe 01       	movw	r30, r28
    2944:	ec 57       	subi	r30, 0x7C	; 124
    2946:	ff 4f       	sbci	r31, 0xFF	; 255
    2948:	60 81       	ld	r22, Z
    294a:	71 81       	ldd	r23, Z+1	; 0x01
    294c:	82 81       	ldd	r24, Z+2	; 0x02
    294e:	93 81       	ldd	r25, Z+3	; 0x03
    2950:	20 e0       	ldi	r18, 0x00	; 0
    2952:	30 e0       	ldi	r19, 0x00	; 0
    2954:	4a e7       	ldi	r20, 0x7A	; 122
    2956:	55 e4       	ldi	r21, 0x45	; 69
    2958:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    295c:	dc 01       	movw	r26, r24
    295e:	cb 01       	movw	r24, r22
    2960:	f8 01       	movw	r30, r16
    2962:	80 83       	st	Z, r24
    2964:	91 83       	std	Z+1, r25	; 0x01
    2966:	a2 83       	std	Z+2, r26	; 0x02
    2968:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    296a:	fe 01       	movw	r30, r28
    296c:	e0 58       	subi	r30, 0x80	; 128
    296e:	ff 4f       	sbci	r31, 0xFF	; 255
    2970:	60 81       	ld	r22, Z
    2972:	71 81       	ldd	r23, Z+1	; 0x01
    2974:	82 81       	ldd	r24, Z+2	; 0x02
    2976:	93 81       	ldd	r25, Z+3	; 0x03
    2978:	20 e0       	ldi	r18, 0x00	; 0
    297a:	30 e0       	ldi	r19, 0x00	; 0
    297c:	40 e8       	ldi	r20, 0x80	; 128
    297e:	5f e3       	ldi	r21, 0x3F	; 63
    2980:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2984:	88 23       	and	r24, r24
    2986:	44 f4       	brge	.+16     	; 0x2998 <__stack+0x799>
		__ticks = 1;
    2988:	fe 01       	movw	r30, r28
    298a:	e2 58       	subi	r30, 0x82	; 130
    298c:	ff 4f       	sbci	r31, 0xFF	; 255
    298e:	81 e0       	ldi	r24, 0x01	; 1
    2990:	90 e0       	ldi	r25, 0x00	; 0
    2992:	91 83       	std	Z+1, r25	; 0x01
    2994:	80 83       	st	Z, r24
    2996:	64 c0       	rjmp	.+200    	; 0x2a60 <__stack+0x861>
	else if (__tmp > 65535)
    2998:	fe 01       	movw	r30, r28
    299a:	e0 58       	subi	r30, 0x80	; 128
    299c:	ff 4f       	sbci	r31, 0xFF	; 255
    299e:	60 81       	ld	r22, Z
    29a0:	71 81       	ldd	r23, Z+1	; 0x01
    29a2:	82 81       	ldd	r24, Z+2	; 0x02
    29a4:	93 81       	ldd	r25, Z+3	; 0x03
    29a6:	20 e0       	ldi	r18, 0x00	; 0
    29a8:	3f ef       	ldi	r19, 0xFF	; 255
    29aa:	4f e7       	ldi	r20, 0x7F	; 127
    29ac:	57 e4       	ldi	r21, 0x47	; 71
    29ae:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    29b2:	18 16       	cp	r1, r24
    29b4:	0c f0       	brlt	.+2      	; 0x29b8 <__stack+0x7b9>
    29b6:	43 c0       	rjmp	.+134    	; 0x2a3e <__stack+0x83f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29b8:	fe 01       	movw	r30, r28
    29ba:	ec 57       	subi	r30, 0x7C	; 124
    29bc:	ff 4f       	sbci	r31, 0xFF	; 255
    29be:	60 81       	ld	r22, Z
    29c0:	71 81       	ldd	r23, Z+1	; 0x01
    29c2:	82 81       	ldd	r24, Z+2	; 0x02
    29c4:	93 81       	ldd	r25, Z+3	; 0x03
    29c6:	20 e0       	ldi	r18, 0x00	; 0
    29c8:	30 e0       	ldi	r19, 0x00	; 0
    29ca:	40 e2       	ldi	r20, 0x20	; 32
    29cc:	51 e4       	ldi	r21, 0x41	; 65
    29ce:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    29d2:	dc 01       	movw	r26, r24
    29d4:	cb 01       	movw	r24, r22
    29d6:	8e 01       	movw	r16, r28
    29d8:	02 58       	subi	r16, 0x82	; 130
    29da:	1f 4f       	sbci	r17, 0xFF	; 255
    29dc:	bc 01       	movw	r22, r24
    29de:	cd 01       	movw	r24, r26
    29e0:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    29e4:	dc 01       	movw	r26, r24
    29e6:	cb 01       	movw	r24, r22
    29e8:	f8 01       	movw	r30, r16
    29ea:	91 83       	std	Z+1, r25	; 0x01
    29ec:	80 83       	st	Z, r24
    29ee:	1f c0       	rjmp	.+62     	; 0x2a2e <__stack+0x82f>
    29f0:	fe 01       	movw	r30, r28
    29f2:	e4 58       	subi	r30, 0x84	; 132
    29f4:	ff 4f       	sbci	r31, 0xFF	; 255
    29f6:	80 e9       	ldi	r24, 0x90	; 144
    29f8:	91 e0       	ldi	r25, 0x01	; 1
    29fa:	91 83       	std	Z+1, r25	; 0x01
    29fc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    29fe:	fe 01       	movw	r30, r28
    2a00:	e4 58       	subi	r30, 0x84	; 132
    2a02:	ff 4f       	sbci	r31, 0xFF	; 255
    2a04:	80 81       	ld	r24, Z
    2a06:	91 81       	ldd	r25, Z+1	; 0x01
    2a08:	01 97       	sbiw	r24, 0x01	; 1
    2a0a:	f1 f7       	brne	.-4      	; 0x2a08 <__stack+0x809>
    2a0c:	fe 01       	movw	r30, r28
    2a0e:	e4 58       	subi	r30, 0x84	; 132
    2a10:	ff 4f       	sbci	r31, 0xFF	; 255
    2a12:	91 83       	std	Z+1, r25	; 0x01
    2a14:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a16:	de 01       	movw	r26, r28
    2a18:	a2 58       	subi	r26, 0x82	; 130
    2a1a:	bf 4f       	sbci	r27, 0xFF	; 255
    2a1c:	fe 01       	movw	r30, r28
    2a1e:	e2 58       	subi	r30, 0x82	; 130
    2a20:	ff 4f       	sbci	r31, 0xFF	; 255
    2a22:	80 81       	ld	r24, Z
    2a24:	91 81       	ldd	r25, Z+1	; 0x01
    2a26:	01 97       	sbiw	r24, 0x01	; 1
    2a28:	11 96       	adiw	r26, 0x01	; 1
    2a2a:	9c 93       	st	X, r25
    2a2c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a2e:	fe 01       	movw	r30, r28
    2a30:	e2 58       	subi	r30, 0x82	; 130
    2a32:	ff 4f       	sbci	r31, 0xFF	; 255
    2a34:	80 81       	ld	r24, Z
    2a36:	91 81       	ldd	r25, Z+1	; 0x01
    2a38:	00 97       	sbiw	r24, 0x00	; 0
    2a3a:	d1 f6       	brne	.-76     	; 0x29f0 <__stack+0x7f1>
    2a3c:	4b c0       	rjmp	.+150    	; 0x2ad4 <__stack+0x8d5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a3e:	8e 01       	movw	r16, r28
    2a40:	02 58       	subi	r16, 0x82	; 130
    2a42:	1f 4f       	sbci	r17, 0xFF	; 255
    2a44:	fe 01       	movw	r30, r28
    2a46:	e0 58       	subi	r30, 0x80	; 128
    2a48:	ff 4f       	sbci	r31, 0xFF	; 255
    2a4a:	60 81       	ld	r22, Z
    2a4c:	71 81       	ldd	r23, Z+1	; 0x01
    2a4e:	82 81       	ldd	r24, Z+2	; 0x02
    2a50:	93 81       	ldd	r25, Z+3	; 0x03
    2a52:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2a56:	dc 01       	movw	r26, r24
    2a58:	cb 01       	movw	r24, r22
    2a5a:	f8 01       	movw	r30, r16
    2a5c:	91 83       	std	Z+1, r25	; 0x01
    2a5e:	80 83       	st	Z, r24
    2a60:	de 01       	movw	r26, r28
    2a62:	a6 58       	subi	r26, 0x86	; 134
    2a64:	bf 4f       	sbci	r27, 0xFF	; 255
    2a66:	fe 01       	movw	r30, r28
    2a68:	e2 58       	subi	r30, 0x82	; 130
    2a6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6c:	80 81       	ld	r24, Z
    2a6e:	91 81       	ldd	r25, Z+1	; 0x01
    2a70:	11 96       	adiw	r26, 0x01	; 1
    2a72:	9c 93       	st	X, r25
    2a74:	8e 93       	st	-X, r24
    2a76:	fe 01       	movw	r30, r28
    2a78:	e6 58       	subi	r30, 0x86	; 134
    2a7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7c:	80 81       	ld	r24, Z
    2a7e:	91 81       	ldd	r25, Z+1	; 0x01
    2a80:	01 97       	sbiw	r24, 0x01	; 1
    2a82:	f1 f7       	brne	.-4      	; 0x2a80 <__stack+0x881>
    2a84:	fe 01       	movw	r30, r28
    2a86:	e6 58       	subi	r30, 0x86	; 134
    2a88:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8a:	91 83       	std	Z+1, r25	; 0x01
    2a8c:	80 83       	st	Z, r24
    2a8e:	22 c0       	rjmp	.+68     	; 0x2ad4 <__stack+0x8d5>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2a90:	8e 01       	movw	r16, r28
    2a92:	08 57       	subi	r16, 0x78	; 120
    2a94:	1f 4f       	sbci	r17, 0xFF	; 255
    2a96:	fe 01       	movw	r30, r28
    2a98:	e7 57       	subi	r30, 0x77	; 119
    2a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9c:	60 81       	ld	r22, Z
    2a9e:	71 81       	ldd	r23, Z+1	; 0x01
    2aa0:	82 81       	ldd	r24, Z+2	; 0x02
    2aa2:	93 81       	ldd	r25, Z+3	; 0x03
    2aa4:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2aa8:	dc 01       	movw	r26, r24
    2aaa:	cb 01       	movw	r24, r22
    2aac:	f8 01       	movw	r30, r16
    2aae:	80 83       	st	Z, r24
    2ab0:	de 01       	movw	r26, r28
    2ab2:	a7 58       	subi	r26, 0x87	; 135
    2ab4:	bf 4f       	sbci	r27, 0xFF	; 255
    2ab6:	fe 01       	movw	r30, r28
    2ab8:	e8 57       	subi	r30, 0x78	; 120
    2aba:	ff 4f       	sbci	r31, 0xFF	; 255
    2abc:	80 81       	ld	r24, Z
    2abe:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2ac0:	fe 01       	movw	r30, r28
    2ac2:	e7 58       	subi	r30, 0x87	; 135
    2ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac6:	80 81       	ld	r24, Z
    2ac8:	8a 95       	dec	r24
    2aca:	f1 f7       	brne	.-4      	; 0x2ac8 <__stack+0x8c9>
    2acc:	fe 01       	movw	r30, r28
    2ace:	e7 58       	subi	r30, 0x87	; 135
    2ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad2:	80 83       	st	Z, r24
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    2ad4:	e6 e2       	ldi	r30, 0x26	; 38
    2ad6:	f0 e0       	ldi	r31, 0x00	; 0
    2ad8:	80 81       	ld	r24, Z
    2ada:	88 2f       	mov	r24, r24
    2adc:	90 e0       	ldi	r25, 0x00	; 0
    2ade:	82 70       	andi	r24, 0x02	; 2
    2ae0:	90 70       	andi	r25, 0x00	; 0
    2ae2:	00 97       	sbiw	r24, 0x00	; 0
    2ae4:	c9 f4       	brne	.+50     	; 0x2b18 <__stack+0x919>
			cbi(ps2data7,i); 
    2ae6:	20 91 0c 02 	lds	r18, 0x020C
    2aea:	30 91 0d 02 	lds	r19, 0x020D
    2aee:	81 e0       	ldi	r24, 0x01	; 1
    2af0:	90 e0       	ldi	r25, 0x00	; 0
    2af2:	02 c0       	rjmp	.+4      	; 0x2af8 <__stack+0x8f9>
    2af4:	88 0f       	add	r24, r24
    2af6:	99 1f       	adc	r25, r25
    2af8:	2a 95       	dec	r18
    2afa:	e2 f7       	brpl	.-8      	; 0x2af4 <__stack+0x8f5>
    2afc:	80 95       	com	r24
    2afe:	90 95       	com	r25
    2b00:	9c 01       	movw	r18, r24
    2b02:	80 91 04 02 	lds	r24, 0x0204
    2b06:	90 91 05 02 	lds	r25, 0x0205
    2b0a:	82 23       	and	r24, r18
    2b0c:	93 23       	and	r25, r19
    2b0e:	90 93 05 02 	sts	0x0205, r25
    2b12:	80 93 04 02 	sts	0x0204, r24
    2b16:	16 c0       	rjmp	.+44     	; 0x2b44 <__stack+0x945>
		else
			sbi(ps2data7,i); 
    2b18:	20 91 0c 02 	lds	r18, 0x020C
    2b1c:	30 91 0d 02 	lds	r19, 0x020D
    2b20:	81 e0       	ldi	r24, 0x01	; 1
    2b22:	90 e0       	ldi	r25, 0x00	; 0
    2b24:	02 c0       	rjmp	.+4      	; 0x2b2a <__stack+0x92b>
    2b26:	88 0f       	add	r24, r24
    2b28:	99 1f       	adc	r25, r25
    2b2a:	2a 95       	dec	r18
    2b2c:	e2 f7       	brpl	.-8      	; 0x2b26 <__stack+0x927>
    2b2e:	9c 01       	movw	r18, r24
    2b30:	80 91 04 02 	lds	r24, 0x0204
    2b34:	90 91 05 02 	lds	r25, 0x0205
    2b38:	82 2b       	or	r24, r18
    2b3a:	93 2b       	or	r25, r19
    2b3c:	90 93 05 02 	sts	0x0205, r25
    2b40:	80 93 04 02 	sts	0x0204, r24
		sbi(ps2port,ps2clk);
    2b44:	a8 e2       	ldi	r26, 0x28	; 40
    2b46:	b0 e0       	ldi	r27, 0x00	; 0
    2b48:	e8 e2       	ldi	r30, 0x28	; 40
    2b4a:	f0 e0       	ldi	r31, 0x00	; 0
    2b4c:	80 81       	ld	r24, Z
    2b4e:	81 60       	ori	r24, 0x01	; 1
    2b50:	8c 93       	st	X, r24
    2b52:	fe 01       	movw	r30, r28
    2b54:	eb 58       	subi	r30, 0x8B	; 139
    2b56:	ff 4f       	sbci	r31, 0xFF	; 255
    2b58:	80 e0       	ldi	r24, 0x00	; 0
    2b5a:	90 e0       	ldi	r25, 0x00	; 0
    2b5c:	a0 e8       	ldi	r26, 0x80	; 128
    2b5e:	bf e3       	ldi	r27, 0x3F	; 63
    2b60:	80 83       	st	Z, r24
    2b62:	91 83       	std	Z+1, r25	; 0x01
    2b64:	a2 83       	std	Z+2, r26	; 0x02
    2b66:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2b68:	8e 01       	movw	r16, r28
    2b6a:	0f 58       	subi	r16, 0x8F	; 143
    2b6c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b6e:	fe 01       	movw	r30, r28
    2b70:	eb 58       	subi	r30, 0x8B	; 139
    2b72:	ff 4f       	sbci	r31, 0xFF	; 255
    2b74:	60 81       	ld	r22, Z
    2b76:	71 81       	ldd	r23, Z+1	; 0x01
    2b78:	82 81       	ldd	r24, Z+2	; 0x02
    2b7a:	93 81       	ldd	r25, Z+3	; 0x03
    2b7c:	2b ea       	ldi	r18, 0xAB	; 171
    2b7e:	3a ea       	ldi	r19, 0xAA	; 170
    2b80:	4a ea       	ldi	r20, 0xAA	; 170
    2b82:	50 e4       	ldi	r21, 0x40	; 64
    2b84:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2b88:	dc 01       	movw	r26, r24
    2b8a:	cb 01       	movw	r24, r22
    2b8c:	f8 01       	movw	r30, r16
    2b8e:	80 83       	st	Z, r24
    2b90:	91 83       	std	Z+1, r25	; 0x01
    2b92:	a2 83       	std	Z+2, r26	; 0x02
    2b94:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b96:	fe 01       	movw	r30, r28
    2b98:	ef 58       	subi	r30, 0x8F	; 143
    2b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9c:	60 81       	ld	r22, Z
    2b9e:	71 81       	ldd	r23, Z+1	; 0x01
    2ba0:	82 81       	ldd	r24, Z+2	; 0x02
    2ba2:	93 81       	ldd	r25, Z+3	; 0x03
    2ba4:	20 e0       	ldi	r18, 0x00	; 0
    2ba6:	30 e0       	ldi	r19, 0x00	; 0
    2ba8:	40 e8       	ldi	r20, 0x80	; 128
    2baa:	5f e3       	ldi	r21, 0x3F	; 63
    2bac:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2bb0:	88 23       	and	r24, r24
    2bb2:	34 f4       	brge	.+12     	; 0x2bc0 <__stack+0x9c1>
		__ticks = 1;
    2bb4:	fe 01       	movw	r30, r28
    2bb6:	e0 59       	subi	r30, 0x90	; 144
    2bb8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bba:	81 e0       	ldi	r24, 0x01	; 1
    2bbc:	80 83       	st	Z, r24
    2bbe:	e0 c0       	rjmp	.+448    	; 0x2d80 <__stack+0xb81>
	else if (__tmp > 255)
    2bc0:	fe 01       	movw	r30, r28
    2bc2:	ef 58       	subi	r30, 0x8F	; 143
    2bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc6:	60 81       	ld	r22, Z
    2bc8:	71 81       	ldd	r23, Z+1	; 0x01
    2bca:	82 81       	ldd	r24, Z+2	; 0x02
    2bcc:	93 81       	ldd	r25, Z+3	; 0x03
    2bce:	20 e0       	ldi	r18, 0x00	; 0
    2bd0:	30 e0       	ldi	r19, 0x00	; 0
    2bd2:	4f e7       	ldi	r20, 0x7F	; 127
    2bd4:	53 e4       	ldi	r21, 0x43	; 67
    2bd6:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    2bda:	18 16       	cp	r1, r24
    2bdc:	0c f0       	brlt	.+2      	; 0x2be0 <__stack+0x9e1>
    2bde:	c0 c0       	rjmp	.+384    	; 0x2d60 <__stack+0xb61>
	{
		_delay_ms(__us / 1000.0);
    2be0:	fe 01       	movw	r30, r28
    2be2:	eb 58       	subi	r30, 0x8B	; 139
    2be4:	ff 4f       	sbci	r31, 0xFF	; 255
    2be6:	60 81       	ld	r22, Z
    2be8:	71 81       	ldd	r23, Z+1	; 0x01
    2bea:	82 81       	ldd	r24, Z+2	; 0x02
    2bec:	93 81       	ldd	r25, Z+3	; 0x03
    2bee:	20 e0       	ldi	r18, 0x00	; 0
    2bf0:	30 e0       	ldi	r19, 0x00	; 0
    2bf2:	4a e7       	ldi	r20, 0x7A	; 122
    2bf4:	54 e4       	ldi	r21, 0x44	; 68
    2bf6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    2bfa:	dc 01       	movw	r26, r24
    2bfc:	cb 01       	movw	r24, r22
    2bfe:	fe 01       	movw	r30, r28
    2c00:	e4 59       	subi	r30, 0x94	; 148
    2c02:	ff 4f       	sbci	r31, 0xFF	; 255
    2c04:	80 83       	st	Z, r24
    2c06:	91 83       	std	Z+1, r25	; 0x01
    2c08:	a2 83       	std	Z+2, r26	; 0x02
    2c0a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c0c:	8e 01       	movw	r16, r28
    2c0e:	08 59       	subi	r16, 0x98	; 152
    2c10:	1f 4f       	sbci	r17, 0xFF	; 255
    2c12:	fe 01       	movw	r30, r28
    2c14:	e4 59       	subi	r30, 0x94	; 148
    2c16:	ff 4f       	sbci	r31, 0xFF	; 255
    2c18:	60 81       	ld	r22, Z
    2c1a:	71 81       	ldd	r23, Z+1	; 0x01
    2c1c:	82 81       	ldd	r24, Z+2	; 0x02
    2c1e:	93 81       	ldd	r25, Z+3	; 0x03
    2c20:	20 e0       	ldi	r18, 0x00	; 0
    2c22:	30 e0       	ldi	r19, 0x00	; 0
    2c24:	4a e7       	ldi	r20, 0x7A	; 122
    2c26:	55 e4       	ldi	r21, 0x45	; 69
    2c28:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2c2c:	dc 01       	movw	r26, r24
    2c2e:	cb 01       	movw	r24, r22
    2c30:	f8 01       	movw	r30, r16
    2c32:	80 83       	st	Z, r24
    2c34:	91 83       	std	Z+1, r25	; 0x01
    2c36:	a2 83       	std	Z+2, r26	; 0x02
    2c38:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c3a:	fe 01       	movw	r30, r28
    2c3c:	e8 59       	subi	r30, 0x98	; 152
    2c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c40:	60 81       	ld	r22, Z
    2c42:	71 81       	ldd	r23, Z+1	; 0x01
    2c44:	82 81       	ldd	r24, Z+2	; 0x02
    2c46:	93 81       	ldd	r25, Z+3	; 0x03
    2c48:	20 e0       	ldi	r18, 0x00	; 0
    2c4a:	30 e0       	ldi	r19, 0x00	; 0
    2c4c:	40 e8       	ldi	r20, 0x80	; 128
    2c4e:	5f e3       	ldi	r21, 0x3F	; 63
    2c50:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2c54:	88 23       	and	r24, r24
    2c56:	44 f4       	brge	.+16     	; 0x2c68 <__stack+0xa69>
		__ticks = 1;
    2c58:	fe 01       	movw	r30, r28
    2c5a:	ea 59       	subi	r30, 0x9A	; 154
    2c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c5e:	81 e0       	ldi	r24, 0x01	; 1
    2c60:	90 e0       	ldi	r25, 0x00	; 0
    2c62:	91 83       	std	Z+1, r25	; 0x01
    2c64:	80 83       	st	Z, r24
    2c66:	64 c0       	rjmp	.+200    	; 0x2d30 <__stack+0xb31>
	else if (__tmp > 65535)
    2c68:	fe 01       	movw	r30, r28
    2c6a:	e8 59       	subi	r30, 0x98	; 152
    2c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6e:	60 81       	ld	r22, Z
    2c70:	71 81       	ldd	r23, Z+1	; 0x01
    2c72:	82 81       	ldd	r24, Z+2	; 0x02
    2c74:	93 81       	ldd	r25, Z+3	; 0x03
    2c76:	20 e0       	ldi	r18, 0x00	; 0
    2c78:	3f ef       	ldi	r19, 0xFF	; 255
    2c7a:	4f e7       	ldi	r20, 0x7F	; 127
    2c7c:	57 e4       	ldi	r21, 0x47	; 71
    2c7e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    2c82:	18 16       	cp	r1, r24
    2c84:	0c f0       	brlt	.+2      	; 0x2c88 <__stack+0xa89>
    2c86:	43 c0       	rjmp	.+134    	; 0x2d0e <__stack+0xb0f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c88:	fe 01       	movw	r30, r28
    2c8a:	e4 59       	subi	r30, 0x94	; 148
    2c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8e:	60 81       	ld	r22, Z
    2c90:	71 81       	ldd	r23, Z+1	; 0x01
    2c92:	82 81       	ldd	r24, Z+2	; 0x02
    2c94:	93 81       	ldd	r25, Z+3	; 0x03
    2c96:	20 e0       	ldi	r18, 0x00	; 0
    2c98:	30 e0       	ldi	r19, 0x00	; 0
    2c9a:	40 e2       	ldi	r20, 0x20	; 32
    2c9c:	51 e4       	ldi	r21, 0x41	; 65
    2c9e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2ca2:	dc 01       	movw	r26, r24
    2ca4:	cb 01       	movw	r24, r22
    2ca6:	8e 01       	movw	r16, r28
    2ca8:	0a 59       	subi	r16, 0x9A	; 154
    2caa:	1f 4f       	sbci	r17, 0xFF	; 255
    2cac:	bc 01       	movw	r22, r24
    2cae:	cd 01       	movw	r24, r26
    2cb0:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2cb4:	dc 01       	movw	r26, r24
    2cb6:	cb 01       	movw	r24, r22
    2cb8:	f8 01       	movw	r30, r16
    2cba:	91 83       	std	Z+1, r25	; 0x01
    2cbc:	80 83       	st	Z, r24
    2cbe:	1f c0       	rjmp	.+62     	; 0x2cfe <__stack+0xaff>
    2cc0:	fe 01       	movw	r30, r28
    2cc2:	ec 59       	subi	r30, 0x9C	; 156
    2cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc6:	80 e9       	ldi	r24, 0x90	; 144
    2cc8:	91 e0       	ldi	r25, 0x01	; 1
    2cca:	91 83       	std	Z+1, r25	; 0x01
    2ccc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2cce:	fe 01       	movw	r30, r28
    2cd0:	ec 59       	subi	r30, 0x9C	; 156
    2cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd4:	80 81       	ld	r24, Z
    2cd6:	91 81       	ldd	r25, Z+1	; 0x01
    2cd8:	01 97       	sbiw	r24, 0x01	; 1
    2cda:	f1 f7       	brne	.-4      	; 0x2cd8 <__stack+0xad9>
    2cdc:	fe 01       	movw	r30, r28
    2cde:	ec 59       	subi	r30, 0x9C	; 156
    2ce0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ce2:	91 83       	std	Z+1, r25	; 0x01
    2ce4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ce6:	de 01       	movw	r26, r28
    2ce8:	aa 59       	subi	r26, 0x9A	; 154
    2cea:	bf 4f       	sbci	r27, 0xFF	; 255
    2cec:	fe 01       	movw	r30, r28
    2cee:	ea 59       	subi	r30, 0x9A	; 154
    2cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf2:	80 81       	ld	r24, Z
    2cf4:	91 81       	ldd	r25, Z+1	; 0x01
    2cf6:	01 97       	sbiw	r24, 0x01	; 1
    2cf8:	11 96       	adiw	r26, 0x01	; 1
    2cfa:	9c 93       	st	X, r25
    2cfc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cfe:	fe 01       	movw	r30, r28
    2d00:	ea 59       	subi	r30, 0x9A	; 154
    2d02:	ff 4f       	sbci	r31, 0xFF	; 255
    2d04:	80 81       	ld	r24, Z
    2d06:	91 81       	ldd	r25, Z+1	; 0x01
    2d08:	00 97       	sbiw	r24, 0x00	; 0
    2d0a:	d1 f6       	brne	.-76     	; 0x2cc0 <__stack+0xac1>
    2d0c:	4b c0       	rjmp	.+150    	; 0x2da4 <__stack+0xba5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d0e:	8e 01       	movw	r16, r28
    2d10:	0a 59       	subi	r16, 0x9A	; 154
    2d12:	1f 4f       	sbci	r17, 0xFF	; 255
    2d14:	fe 01       	movw	r30, r28
    2d16:	e8 59       	subi	r30, 0x98	; 152
    2d18:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1a:	60 81       	ld	r22, Z
    2d1c:	71 81       	ldd	r23, Z+1	; 0x01
    2d1e:	82 81       	ldd	r24, Z+2	; 0x02
    2d20:	93 81       	ldd	r25, Z+3	; 0x03
    2d22:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2d26:	dc 01       	movw	r26, r24
    2d28:	cb 01       	movw	r24, r22
    2d2a:	f8 01       	movw	r30, r16
    2d2c:	91 83       	std	Z+1, r25	; 0x01
    2d2e:	80 83       	st	Z, r24
    2d30:	de 01       	movw	r26, r28
    2d32:	ae 59       	subi	r26, 0x9E	; 158
    2d34:	bf 4f       	sbci	r27, 0xFF	; 255
    2d36:	fe 01       	movw	r30, r28
    2d38:	ea 59       	subi	r30, 0x9A	; 154
    2d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d3c:	80 81       	ld	r24, Z
    2d3e:	91 81       	ldd	r25, Z+1	; 0x01
    2d40:	11 96       	adiw	r26, 0x01	; 1
    2d42:	9c 93       	st	X, r25
    2d44:	8e 93       	st	-X, r24
    2d46:	fe 01       	movw	r30, r28
    2d48:	ee 59       	subi	r30, 0x9E	; 158
    2d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d4c:	80 81       	ld	r24, Z
    2d4e:	91 81       	ldd	r25, Z+1	; 0x01
    2d50:	01 97       	sbiw	r24, 0x01	; 1
    2d52:	f1 f7       	brne	.-4      	; 0x2d50 <__stack+0xb51>
    2d54:	fe 01       	movw	r30, r28
    2d56:	ee 59       	subi	r30, 0x9E	; 158
    2d58:	ff 4f       	sbci	r31, 0xFF	; 255
    2d5a:	91 83       	std	Z+1, r25	; 0x01
    2d5c:	80 83       	st	Z, r24
    2d5e:	22 c0       	rjmp	.+68     	; 0x2da4 <__stack+0xba5>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2d60:	8e 01       	movw	r16, r28
    2d62:	00 59       	subi	r16, 0x90	; 144
    2d64:	1f 4f       	sbci	r17, 0xFF	; 255
    2d66:	fe 01       	movw	r30, r28
    2d68:	ef 58       	subi	r30, 0x8F	; 143
    2d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d6c:	60 81       	ld	r22, Z
    2d6e:	71 81       	ldd	r23, Z+1	; 0x01
    2d70:	82 81       	ldd	r24, Z+2	; 0x02
    2d72:	93 81       	ldd	r25, Z+3	; 0x03
    2d74:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2d78:	dc 01       	movw	r26, r24
    2d7a:	cb 01       	movw	r24, r22
    2d7c:	f8 01       	movw	r30, r16
    2d7e:	80 83       	st	Z, r24
    2d80:	de 01       	movw	r26, r28
    2d82:	af 59       	subi	r26, 0x9F	; 159
    2d84:	bf 4f       	sbci	r27, 0xFF	; 255
    2d86:	fe 01       	movw	r30, r28
    2d88:	e0 59       	subi	r30, 0x90	; 144
    2d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d8c:	80 81       	ld	r24, Z
    2d8e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2d90:	fe 01       	movw	r30, r28
    2d92:	ef 59       	subi	r30, 0x9F	; 159
    2d94:	ff 4f       	sbci	r31, 0xFF	; 255
    2d96:	80 81       	ld	r24, Z
    2d98:	8a 95       	dec	r24
    2d9a:	f1 f7       	brne	.-4      	; 0x2d98 <__stack+0xb99>
    2d9c:	fe 01       	movw	r30, r28
    2d9e:	ef 59       	subi	r30, 0x9F	; 159
    2da0:	ff 4f       	sbci	r31, 0xFF	; 255
    2da2:	80 83       	st	Z, r24
	
	
	
	
	ps2data7=0;
	for(i=0;i<8;i++) // 7 byte
    2da4:	80 91 0c 02 	lds	r24, 0x020C
    2da8:	90 91 0d 02 	lds	r25, 0x020D
    2dac:	01 96       	adiw	r24, 0x01	; 1
    2dae:	90 93 0d 02 	sts	0x020D, r25
    2db2:	80 93 0c 02 	sts	0x020C, r24
    2db6:	80 91 0c 02 	lds	r24, 0x020C
    2dba:	90 91 0d 02 	lds	r25, 0x020D
    2dbe:	88 30       	cpi	r24, 0x08	; 8
    2dc0:	91 05       	cpc	r25, r1
    2dc2:	0c f4       	brge	.+2      	; 0x2dc6 <__stack+0xbc7>
    2dc4:	50 cd       	rjmp	.-1376   	; 0x2866 <__stack+0x667>
		else
			sbi(ps2data7,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    2dc6:	a8 e2       	ldi	r26, 0x28	; 40
    2dc8:	b0 e0       	ldi	r27, 0x00	; 0
    2dca:	e8 e2       	ldi	r30, 0x28	; 40
    2dcc:	f0 e0       	ldi	r31, 0x00	; 0
    2dce:	80 81       	ld	r24, Z
    2dd0:	84 60       	ori	r24, 0x04	; 4
    2dd2:	8c 93       	st	X, r24
	

	
	
	ps2data5=0;
    2dd4:	10 92 15 02 	sts	0x0215, r1
    2dd8:	10 92 14 02 	sts	0x0214, r1
	for(i=0;i<8;i++) // 8 byte
    2ddc:	10 92 0d 02 	sts	0x020D, r1
    2de0:	10 92 0c 02 	sts	0x020C, r1
    2de4:	5c c2       	rjmp	.+1208   	; 0x329e <__stack+0x109f>
	{
		cbi(ps2port,ps2cmd);
    2de6:	a8 e2       	ldi	r26, 0x28	; 40
    2de8:	b0 e0       	ldi	r27, 0x00	; 0
    2dea:	e8 e2       	ldi	r30, 0x28	; 40
    2dec:	f0 e0       	ldi	r31, 0x00	; 0
    2dee:	80 81       	ld	r24, Z
    2df0:	8b 7f       	andi	r24, 0xFB	; 251
    2df2:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    2df4:	a8 e2       	ldi	r26, 0x28	; 40
    2df6:	b0 e0       	ldi	r27, 0x00	; 0
    2df8:	e8 e2       	ldi	r30, 0x28	; 40
    2dfa:	f0 e0       	ldi	r31, 0x00	; 0
    2dfc:	80 81       	ld	r24, Z
    2dfe:	8e 7f       	andi	r24, 0xFE	; 254
    2e00:	8c 93       	st	X, r24
    2e02:	fe 01       	movw	r30, r28
    2e04:	e3 5a       	subi	r30, 0xA3	; 163
    2e06:	ff 4f       	sbci	r31, 0xFF	; 255
    2e08:	80 e0       	ldi	r24, 0x00	; 0
    2e0a:	90 e0       	ldi	r25, 0x00	; 0
    2e0c:	a0 e8       	ldi	r26, 0x80	; 128
    2e0e:	bf e3       	ldi	r27, 0x3F	; 63
    2e10:	80 83       	st	Z, r24
    2e12:	91 83       	std	Z+1, r25	; 0x01
    2e14:	a2 83       	std	Z+2, r26	; 0x02
    2e16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2e18:	8e 01       	movw	r16, r28
    2e1a:	07 5a       	subi	r16, 0xA7	; 167
    2e1c:	1f 4f       	sbci	r17, 0xFF	; 255
    2e1e:	fe 01       	movw	r30, r28
    2e20:	e3 5a       	subi	r30, 0xA3	; 163
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	60 81       	ld	r22, Z
    2e26:	71 81       	ldd	r23, Z+1	; 0x01
    2e28:	82 81       	ldd	r24, Z+2	; 0x02
    2e2a:	93 81       	ldd	r25, Z+3	; 0x03
    2e2c:	2b ea       	ldi	r18, 0xAB	; 171
    2e2e:	3a ea       	ldi	r19, 0xAA	; 170
    2e30:	4a ea       	ldi	r20, 0xAA	; 170
    2e32:	50 e4       	ldi	r21, 0x40	; 64
    2e34:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2e38:	dc 01       	movw	r26, r24
    2e3a:	cb 01       	movw	r24, r22
    2e3c:	f8 01       	movw	r30, r16
    2e3e:	80 83       	st	Z, r24
    2e40:	91 83       	std	Z+1, r25	; 0x01
    2e42:	a2 83       	std	Z+2, r26	; 0x02
    2e44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e46:	fe 01       	movw	r30, r28
    2e48:	e7 5a       	subi	r30, 0xA7	; 167
    2e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4c:	60 81       	ld	r22, Z
    2e4e:	71 81       	ldd	r23, Z+1	; 0x01
    2e50:	82 81       	ldd	r24, Z+2	; 0x02
    2e52:	93 81       	ldd	r25, Z+3	; 0x03
    2e54:	20 e0       	ldi	r18, 0x00	; 0
    2e56:	30 e0       	ldi	r19, 0x00	; 0
    2e58:	40 e8       	ldi	r20, 0x80	; 128
    2e5a:	5f e3       	ldi	r21, 0x3F	; 63
    2e5c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2e60:	88 23       	and	r24, r24
    2e62:	34 f4       	brge	.+12     	; 0x2e70 <__stack+0xc71>
		__ticks = 1;
    2e64:	fe 01       	movw	r30, r28
    2e66:	e8 5a       	subi	r30, 0xA8	; 168
    2e68:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6a:	81 e0       	ldi	r24, 0x01	; 1
    2e6c:	80 83       	st	Z, r24
    2e6e:	e0 c0       	rjmp	.+448    	; 0x3030 <__stack+0xe31>
	else if (__tmp > 255)
    2e70:	fe 01       	movw	r30, r28
    2e72:	e7 5a       	subi	r30, 0xA7	; 167
    2e74:	ff 4f       	sbci	r31, 0xFF	; 255
    2e76:	60 81       	ld	r22, Z
    2e78:	71 81       	ldd	r23, Z+1	; 0x01
    2e7a:	82 81       	ldd	r24, Z+2	; 0x02
    2e7c:	93 81       	ldd	r25, Z+3	; 0x03
    2e7e:	20 e0       	ldi	r18, 0x00	; 0
    2e80:	30 e0       	ldi	r19, 0x00	; 0
    2e82:	4f e7       	ldi	r20, 0x7F	; 127
    2e84:	53 e4       	ldi	r21, 0x43	; 67
    2e86:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    2e8a:	18 16       	cp	r1, r24
    2e8c:	0c f0       	brlt	.+2      	; 0x2e90 <__stack+0xc91>
    2e8e:	c0 c0       	rjmp	.+384    	; 0x3010 <__stack+0xe11>
	{
		_delay_ms(__us / 1000.0);
    2e90:	fe 01       	movw	r30, r28
    2e92:	e3 5a       	subi	r30, 0xA3	; 163
    2e94:	ff 4f       	sbci	r31, 0xFF	; 255
    2e96:	60 81       	ld	r22, Z
    2e98:	71 81       	ldd	r23, Z+1	; 0x01
    2e9a:	82 81       	ldd	r24, Z+2	; 0x02
    2e9c:	93 81       	ldd	r25, Z+3	; 0x03
    2e9e:	20 e0       	ldi	r18, 0x00	; 0
    2ea0:	30 e0       	ldi	r19, 0x00	; 0
    2ea2:	4a e7       	ldi	r20, 0x7A	; 122
    2ea4:	54 e4       	ldi	r21, 0x44	; 68
    2ea6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    2eaa:	dc 01       	movw	r26, r24
    2eac:	cb 01       	movw	r24, r22
    2eae:	fe 01       	movw	r30, r28
    2eb0:	ec 5a       	subi	r30, 0xAC	; 172
    2eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb4:	80 83       	st	Z, r24
    2eb6:	91 83       	std	Z+1, r25	; 0x01
    2eb8:	a2 83       	std	Z+2, r26	; 0x02
    2eba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ebc:	8e 01       	movw	r16, r28
    2ebe:	00 5b       	subi	r16, 0xB0	; 176
    2ec0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ec2:	fe 01       	movw	r30, r28
    2ec4:	ec 5a       	subi	r30, 0xAC	; 172
    2ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec8:	60 81       	ld	r22, Z
    2eca:	71 81       	ldd	r23, Z+1	; 0x01
    2ecc:	82 81       	ldd	r24, Z+2	; 0x02
    2ece:	93 81       	ldd	r25, Z+3	; 0x03
    2ed0:	20 e0       	ldi	r18, 0x00	; 0
    2ed2:	30 e0       	ldi	r19, 0x00	; 0
    2ed4:	4a e7       	ldi	r20, 0x7A	; 122
    2ed6:	55 e4       	ldi	r21, 0x45	; 69
    2ed8:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2edc:	dc 01       	movw	r26, r24
    2ede:	cb 01       	movw	r24, r22
    2ee0:	f8 01       	movw	r30, r16
    2ee2:	80 83       	st	Z, r24
    2ee4:	91 83       	std	Z+1, r25	; 0x01
    2ee6:	a2 83       	std	Z+2, r26	; 0x02
    2ee8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2eea:	fe 01       	movw	r30, r28
    2eec:	e0 5b       	subi	r30, 0xB0	; 176
    2eee:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef0:	60 81       	ld	r22, Z
    2ef2:	71 81       	ldd	r23, Z+1	; 0x01
    2ef4:	82 81       	ldd	r24, Z+2	; 0x02
    2ef6:	93 81       	ldd	r25, Z+3	; 0x03
    2ef8:	20 e0       	ldi	r18, 0x00	; 0
    2efa:	30 e0       	ldi	r19, 0x00	; 0
    2efc:	40 e8       	ldi	r20, 0x80	; 128
    2efe:	5f e3       	ldi	r21, 0x3F	; 63
    2f00:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    2f04:	88 23       	and	r24, r24
    2f06:	44 f4       	brge	.+16     	; 0x2f18 <__stack+0xd19>
		__ticks = 1;
    2f08:	fe 01       	movw	r30, r28
    2f0a:	e2 5b       	subi	r30, 0xB2	; 178
    2f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0e:	81 e0       	ldi	r24, 0x01	; 1
    2f10:	90 e0       	ldi	r25, 0x00	; 0
    2f12:	91 83       	std	Z+1, r25	; 0x01
    2f14:	80 83       	st	Z, r24
    2f16:	64 c0       	rjmp	.+200    	; 0x2fe0 <__stack+0xde1>
	else if (__tmp > 65535)
    2f18:	fe 01       	movw	r30, r28
    2f1a:	e0 5b       	subi	r30, 0xB0	; 176
    2f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f1e:	60 81       	ld	r22, Z
    2f20:	71 81       	ldd	r23, Z+1	; 0x01
    2f22:	82 81       	ldd	r24, Z+2	; 0x02
    2f24:	93 81       	ldd	r25, Z+3	; 0x03
    2f26:	20 e0       	ldi	r18, 0x00	; 0
    2f28:	3f ef       	ldi	r19, 0xFF	; 255
    2f2a:	4f e7       	ldi	r20, 0x7F	; 127
    2f2c:	57 e4       	ldi	r21, 0x47	; 71
    2f2e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    2f32:	18 16       	cp	r1, r24
    2f34:	0c f0       	brlt	.+2      	; 0x2f38 <__stack+0xd39>
    2f36:	43 c0       	rjmp	.+134    	; 0x2fbe <__stack+0xdbf>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f38:	fe 01       	movw	r30, r28
    2f3a:	ec 5a       	subi	r30, 0xAC	; 172
    2f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f3e:	60 81       	ld	r22, Z
    2f40:	71 81       	ldd	r23, Z+1	; 0x01
    2f42:	82 81       	ldd	r24, Z+2	; 0x02
    2f44:	93 81       	ldd	r25, Z+3	; 0x03
    2f46:	20 e0       	ldi	r18, 0x00	; 0
    2f48:	30 e0       	ldi	r19, 0x00	; 0
    2f4a:	40 e2       	ldi	r20, 0x20	; 32
    2f4c:	51 e4       	ldi	r21, 0x41	; 65
    2f4e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    2f52:	dc 01       	movw	r26, r24
    2f54:	cb 01       	movw	r24, r22
    2f56:	8e 01       	movw	r16, r28
    2f58:	02 5b       	subi	r16, 0xB2	; 178
    2f5a:	1f 4f       	sbci	r17, 0xFF	; 255
    2f5c:	bc 01       	movw	r22, r24
    2f5e:	cd 01       	movw	r24, r26
    2f60:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2f64:	dc 01       	movw	r26, r24
    2f66:	cb 01       	movw	r24, r22
    2f68:	f8 01       	movw	r30, r16
    2f6a:	91 83       	std	Z+1, r25	; 0x01
    2f6c:	80 83       	st	Z, r24
    2f6e:	1f c0       	rjmp	.+62     	; 0x2fae <__stack+0xdaf>
    2f70:	fe 01       	movw	r30, r28
    2f72:	e4 5b       	subi	r30, 0xB4	; 180
    2f74:	ff 4f       	sbci	r31, 0xFF	; 255
    2f76:	80 e9       	ldi	r24, 0x90	; 144
    2f78:	91 e0       	ldi	r25, 0x01	; 1
    2f7a:	91 83       	std	Z+1, r25	; 0x01
    2f7c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2f7e:	fe 01       	movw	r30, r28
    2f80:	e4 5b       	subi	r30, 0xB4	; 180
    2f82:	ff 4f       	sbci	r31, 0xFF	; 255
    2f84:	80 81       	ld	r24, Z
    2f86:	91 81       	ldd	r25, Z+1	; 0x01
    2f88:	01 97       	sbiw	r24, 0x01	; 1
    2f8a:	f1 f7       	brne	.-4      	; 0x2f88 <__stack+0xd89>
    2f8c:	fe 01       	movw	r30, r28
    2f8e:	e4 5b       	subi	r30, 0xB4	; 180
    2f90:	ff 4f       	sbci	r31, 0xFF	; 255
    2f92:	91 83       	std	Z+1, r25	; 0x01
    2f94:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f96:	de 01       	movw	r26, r28
    2f98:	a2 5b       	subi	r26, 0xB2	; 178
    2f9a:	bf 4f       	sbci	r27, 0xFF	; 255
    2f9c:	fe 01       	movw	r30, r28
    2f9e:	e2 5b       	subi	r30, 0xB2	; 178
    2fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    2fa2:	80 81       	ld	r24, Z
    2fa4:	91 81       	ldd	r25, Z+1	; 0x01
    2fa6:	01 97       	sbiw	r24, 0x01	; 1
    2fa8:	11 96       	adiw	r26, 0x01	; 1
    2faa:	9c 93       	st	X, r25
    2fac:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fae:	fe 01       	movw	r30, r28
    2fb0:	e2 5b       	subi	r30, 0xB2	; 178
    2fb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fb4:	80 81       	ld	r24, Z
    2fb6:	91 81       	ldd	r25, Z+1	; 0x01
    2fb8:	00 97       	sbiw	r24, 0x00	; 0
    2fba:	d1 f6       	brne	.-76     	; 0x2f70 <__stack+0xd71>
    2fbc:	4b c0       	rjmp	.+150    	; 0x3054 <__stack+0xe55>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fbe:	8e 01       	movw	r16, r28
    2fc0:	02 5b       	subi	r16, 0xB2	; 178
    2fc2:	1f 4f       	sbci	r17, 0xFF	; 255
    2fc4:	fe 01       	movw	r30, r28
    2fc6:	e0 5b       	subi	r30, 0xB0	; 176
    2fc8:	ff 4f       	sbci	r31, 0xFF	; 255
    2fca:	60 81       	ld	r22, Z
    2fcc:	71 81       	ldd	r23, Z+1	; 0x01
    2fce:	82 81       	ldd	r24, Z+2	; 0x02
    2fd0:	93 81       	ldd	r25, Z+3	; 0x03
    2fd2:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    2fd6:	dc 01       	movw	r26, r24
    2fd8:	cb 01       	movw	r24, r22
    2fda:	f8 01       	movw	r30, r16
    2fdc:	91 83       	std	Z+1, r25	; 0x01
    2fde:	80 83       	st	Z, r24
    2fe0:	de 01       	movw	r26, r28
    2fe2:	a6 5b       	subi	r26, 0xB6	; 182
    2fe4:	bf 4f       	sbci	r27, 0xFF	; 255
    2fe6:	fe 01       	movw	r30, r28
    2fe8:	e2 5b       	subi	r30, 0xB2	; 178
    2fea:	ff 4f       	sbci	r31, 0xFF	; 255
    2fec:	80 81       	ld	r24, Z
    2fee:	91 81       	ldd	r25, Z+1	; 0x01
    2ff0:	11 96       	adiw	r26, 0x01	; 1
    2ff2:	9c 93       	st	X, r25
    2ff4:	8e 93       	st	-X, r24
    2ff6:	fe 01       	movw	r30, r28
    2ff8:	e6 5b       	subi	r30, 0xB6	; 182
    2ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    2ffc:	80 81       	ld	r24, Z
    2ffe:	91 81       	ldd	r25, Z+1	; 0x01
    3000:	01 97       	sbiw	r24, 0x01	; 1
    3002:	f1 f7       	brne	.-4      	; 0x3000 <__stack+0xe01>
    3004:	fe 01       	movw	r30, r28
    3006:	e6 5b       	subi	r30, 0xB6	; 182
    3008:	ff 4f       	sbci	r31, 0xFF	; 255
    300a:	91 83       	std	Z+1, r25	; 0x01
    300c:	80 83       	st	Z, r24
    300e:	22 c0       	rjmp	.+68     	; 0x3054 <__stack+0xe55>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3010:	8e 01       	movw	r16, r28
    3012:	08 5a       	subi	r16, 0xA8	; 168
    3014:	1f 4f       	sbci	r17, 0xFF	; 255
    3016:	fe 01       	movw	r30, r28
    3018:	e7 5a       	subi	r30, 0xA7	; 167
    301a:	ff 4f       	sbci	r31, 0xFF	; 255
    301c:	60 81       	ld	r22, Z
    301e:	71 81       	ldd	r23, Z+1	; 0x01
    3020:	82 81       	ldd	r24, Z+2	; 0x02
    3022:	93 81       	ldd	r25, Z+3	; 0x03
    3024:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    3028:	dc 01       	movw	r26, r24
    302a:	cb 01       	movw	r24, r22
    302c:	f8 01       	movw	r30, r16
    302e:	80 83       	st	Z, r24
    3030:	de 01       	movw	r26, r28
    3032:	a7 5b       	subi	r26, 0xB7	; 183
    3034:	bf 4f       	sbci	r27, 0xFF	; 255
    3036:	fe 01       	movw	r30, r28
    3038:	e8 5a       	subi	r30, 0xA8	; 168
    303a:	ff 4f       	sbci	r31, 0xFF	; 255
    303c:	80 81       	ld	r24, Z
    303e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3040:	fe 01       	movw	r30, r28
    3042:	e7 5b       	subi	r30, 0xB7	; 183
    3044:	ff 4f       	sbci	r31, 0xFF	; 255
    3046:	80 81       	ld	r24, Z
    3048:	8a 95       	dec	r24
    304a:	f1 f7       	brne	.-4      	; 0x3048 <__stack+0xe49>
    304c:	fe 01       	movw	r30, r28
    304e:	e7 5b       	subi	r30, 0xB7	; 183
    3050:	ff 4f       	sbci	r31, 0xFF	; 255
    3052:	80 83       	st	Z, r24
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    3054:	e6 e2       	ldi	r30, 0x26	; 38
    3056:	f0 e0       	ldi	r31, 0x00	; 0
    3058:	80 81       	ld	r24, Z
    305a:	88 2f       	mov	r24, r24
    305c:	90 e0       	ldi	r25, 0x00	; 0
    305e:	82 70       	andi	r24, 0x02	; 2
    3060:	90 70       	andi	r25, 0x00	; 0
    3062:	00 97       	sbiw	r24, 0x00	; 0
    3064:	c9 f4       	brne	.+50     	; 0x3098 <__stack+0xe99>
			cbi(ps2data8,i); 
    3066:	20 91 0c 02 	lds	r18, 0x020C
    306a:	30 91 0d 02 	lds	r19, 0x020D
    306e:	81 e0       	ldi	r24, 0x01	; 1
    3070:	90 e0       	ldi	r25, 0x00	; 0
    3072:	02 c0       	rjmp	.+4      	; 0x3078 <__stack+0xe79>
    3074:	88 0f       	add	r24, r24
    3076:	99 1f       	adc	r25, r25
    3078:	2a 95       	dec	r18
    307a:	e2 f7       	brpl	.-8      	; 0x3074 <__stack+0xe75>
    307c:	80 95       	com	r24
    307e:	90 95       	com	r25
    3080:	9c 01       	movw	r18, r24
    3082:	80 91 10 02 	lds	r24, 0x0210
    3086:	90 91 11 02 	lds	r25, 0x0211
    308a:	82 23       	and	r24, r18
    308c:	93 23       	and	r25, r19
    308e:	90 93 11 02 	sts	0x0211, r25
    3092:	80 93 10 02 	sts	0x0210, r24
    3096:	16 c0       	rjmp	.+44     	; 0x30c4 <__stack+0xec5>
		else
			sbi(ps2data8,i); 
    3098:	20 91 0c 02 	lds	r18, 0x020C
    309c:	30 91 0d 02 	lds	r19, 0x020D
    30a0:	81 e0       	ldi	r24, 0x01	; 1
    30a2:	90 e0       	ldi	r25, 0x00	; 0
    30a4:	02 c0       	rjmp	.+4      	; 0x30aa <__stack+0xeab>
    30a6:	88 0f       	add	r24, r24
    30a8:	99 1f       	adc	r25, r25
    30aa:	2a 95       	dec	r18
    30ac:	e2 f7       	brpl	.-8      	; 0x30a6 <__stack+0xea7>
    30ae:	9c 01       	movw	r18, r24
    30b0:	80 91 10 02 	lds	r24, 0x0210
    30b4:	90 91 11 02 	lds	r25, 0x0211
    30b8:	82 2b       	or	r24, r18
    30ba:	93 2b       	or	r25, r19
    30bc:	90 93 11 02 	sts	0x0211, r25
    30c0:	80 93 10 02 	sts	0x0210, r24
		sbi(ps2port,ps2clk);
    30c4:	a8 e2       	ldi	r26, 0x28	; 40
    30c6:	b0 e0       	ldi	r27, 0x00	; 0
    30c8:	e8 e2       	ldi	r30, 0x28	; 40
    30ca:	f0 e0       	ldi	r31, 0x00	; 0
    30cc:	80 81       	ld	r24, Z
    30ce:	81 60       	ori	r24, 0x01	; 1
    30d0:	8c 93       	st	X, r24
    30d2:	fe 01       	movw	r30, r28
    30d4:	eb 5b       	subi	r30, 0xBB	; 187
    30d6:	ff 4f       	sbci	r31, 0xFF	; 255
    30d8:	80 e0       	ldi	r24, 0x00	; 0
    30da:	90 e0       	ldi	r25, 0x00	; 0
    30dc:	a0 e8       	ldi	r26, 0x80	; 128
    30de:	bf e3       	ldi	r27, 0x3F	; 63
    30e0:	80 83       	st	Z, r24
    30e2:	91 83       	std	Z+1, r25	; 0x01
    30e4:	a2 83       	std	Z+2, r26	; 0x02
    30e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    30e8:	8e 01       	movw	r16, r28
    30ea:	0f 5b       	subi	r16, 0xBF	; 191
    30ec:	1f 4f       	sbci	r17, 0xFF	; 255
    30ee:	fe 01       	movw	r30, r28
    30f0:	eb 5b       	subi	r30, 0xBB	; 187
    30f2:	ff 4f       	sbci	r31, 0xFF	; 255
    30f4:	60 81       	ld	r22, Z
    30f6:	71 81       	ldd	r23, Z+1	; 0x01
    30f8:	82 81       	ldd	r24, Z+2	; 0x02
    30fa:	93 81       	ldd	r25, Z+3	; 0x03
    30fc:	2b ea       	ldi	r18, 0xAB	; 171
    30fe:	3a ea       	ldi	r19, 0xAA	; 170
    3100:	4a ea       	ldi	r20, 0xAA	; 170
    3102:	50 e4       	ldi	r21, 0x40	; 64
    3104:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    3108:	dc 01       	movw	r26, r24
    310a:	cb 01       	movw	r24, r22
    310c:	f8 01       	movw	r30, r16
    310e:	80 83       	st	Z, r24
    3110:	91 83       	std	Z+1, r25	; 0x01
    3112:	a2 83       	std	Z+2, r26	; 0x02
    3114:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3116:	fe 01       	movw	r30, r28
    3118:	ef 5b       	subi	r30, 0xBF	; 191
    311a:	ff 4f       	sbci	r31, 0xFF	; 255
    311c:	60 81       	ld	r22, Z
    311e:	71 81       	ldd	r23, Z+1	; 0x01
    3120:	82 81       	ldd	r24, Z+2	; 0x02
    3122:	93 81       	ldd	r25, Z+3	; 0x03
    3124:	20 e0       	ldi	r18, 0x00	; 0
    3126:	30 e0       	ldi	r19, 0x00	; 0
    3128:	40 e8       	ldi	r20, 0x80	; 128
    312a:	5f e3       	ldi	r21, 0x3F	; 63
    312c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    3130:	88 23       	and	r24, r24
    3132:	34 f4       	brge	.+12     	; 0x3140 <__stack+0xf41>
		__ticks = 1;
    3134:	81 e0       	ldi	r24, 0x01	; 1
    3136:	fe 01       	movw	r30, r28
    3138:	e0 5c       	subi	r30, 0xC0	; 192
    313a:	ff 4f       	sbci	r31, 0xFF	; 255
    313c:	80 83       	st	Z, r24
    313e:	9d c0       	rjmp	.+314    	; 0x327a <__stack+0x107b>
	else if (__tmp > 255)
    3140:	fe 01       	movw	r30, r28
    3142:	ef 5b       	subi	r30, 0xBF	; 191
    3144:	ff 4f       	sbci	r31, 0xFF	; 255
    3146:	60 81       	ld	r22, Z
    3148:	71 81       	ldd	r23, Z+1	; 0x01
    314a:	82 81       	ldd	r24, Z+2	; 0x02
    314c:	93 81       	ldd	r25, Z+3	; 0x03
    314e:	20 e0       	ldi	r18, 0x00	; 0
    3150:	30 e0       	ldi	r19, 0x00	; 0
    3152:	4f e7       	ldi	r20, 0x7F	; 127
    3154:	53 e4       	ldi	r21, 0x43	; 67
    3156:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    315a:	18 16       	cp	r1, r24
    315c:	0c f0       	brlt	.+2      	; 0x3160 <__stack+0xf61>
    315e:	7e c0       	rjmp	.+252    	; 0x325c <__stack+0x105d>
	{
		_delay_ms(__us / 1000.0);
    3160:	fe 01       	movw	r30, r28
    3162:	eb 5b       	subi	r30, 0xBB	; 187
    3164:	ff 4f       	sbci	r31, 0xFF	; 255
    3166:	60 81       	ld	r22, Z
    3168:	71 81       	ldd	r23, Z+1	; 0x01
    316a:	82 81       	ldd	r24, Z+2	; 0x02
    316c:	93 81       	ldd	r25, Z+3	; 0x03
    316e:	20 e0       	ldi	r18, 0x00	; 0
    3170:	30 e0       	ldi	r19, 0x00	; 0
    3172:	4a e7       	ldi	r20, 0x7A	; 122
    3174:	54 e4       	ldi	r21, 0x44	; 68
    3176:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    317a:	dc 01       	movw	r26, r24
    317c:	cb 01       	movw	r24, r22
    317e:	8c af       	std	Y+60, r24	; 0x3c
    3180:	9d af       	std	Y+61, r25	; 0x3d
    3182:	ae af       	std	Y+62, r26	; 0x3e
    3184:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3186:	6c ad       	ldd	r22, Y+60	; 0x3c
    3188:	7d ad       	ldd	r23, Y+61	; 0x3d
    318a:	8e ad       	ldd	r24, Y+62	; 0x3e
    318c:	9f ad       	ldd	r25, Y+63	; 0x3f
    318e:	20 e0       	ldi	r18, 0x00	; 0
    3190:	30 e0       	ldi	r19, 0x00	; 0
    3192:	4a e7       	ldi	r20, 0x7A	; 122
    3194:	55 e4       	ldi	r21, 0x45	; 69
    3196:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    319a:	dc 01       	movw	r26, r24
    319c:	cb 01       	movw	r24, r22
    319e:	88 af       	std	Y+56, r24	; 0x38
    31a0:	99 af       	std	Y+57, r25	; 0x39
    31a2:	aa af       	std	Y+58, r26	; 0x3a
    31a4:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    31a6:	68 ad       	ldd	r22, Y+56	; 0x38
    31a8:	79 ad       	ldd	r23, Y+57	; 0x39
    31aa:	8a ad       	ldd	r24, Y+58	; 0x3a
    31ac:	9b ad       	ldd	r25, Y+59	; 0x3b
    31ae:	20 e0       	ldi	r18, 0x00	; 0
    31b0:	30 e0       	ldi	r19, 0x00	; 0
    31b2:	40 e8       	ldi	r20, 0x80	; 128
    31b4:	5f e3       	ldi	r21, 0x3F	; 63
    31b6:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    31ba:	88 23       	and	r24, r24
    31bc:	2c f4       	brge	.+10     	; 0x31c8 <__stack+0xfc9>
		__ticks = 1;
    31be:	81 e0       	ldi	r24, 0x01	; 1
    31c0:	90 e0       	ldi	r25, 0x00	; 0
    31c2:	9f ab       	std	Y+55, r25	; 0x37
    31c4:	8e ab       	std	Y+54, r24	; 0x36
    31c6:	3f c0       	rjmp	.+126    	; 0x3246 <__stack+0x1047>
	else if (__tmp > 65535)
    31c8:	68 ad       	ldd	r22, Y+56	; 0x38
    31ca:	79 ad       	ldd	r23, Y+57	; 0x39
    31cc:	8a ad       	ldd	r24, Y+58	; 0x3a
    31ce:	9b ad       	ldd	r25, Y+59	; 0x3b
    31d0:	20 e0       	ldi	r18, 0x00	; 0
    31d2:	3f ef       	ldi	r19, 0xFF	; 255
    31d4:	4f e7       	ldi	r20, 0x7F	; 127
    31d6:	57 e4       	ldi	r21, 0x47	; 71
    31d8:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    31dc:	18 16       	cp	r1, r24
    31de:	4c f5       	brge	.+82     	; 0x3232 <__stack+0x1033>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31e0:	6c ad       	ldd	r22, Y+60	; 0x3c
    31e2:	7d ad       	ldd	r23, Y+61	; 0x3d
    31e4:	8e ad       	ldd	r24, Y+62	; 0x3e
    31e6:	9f ad       	ldd	r25, Y+63	; 0x3f
    31e8:	20 e0       	ldi	r18, 0x00	; 0
    31ea:	30 e0       	ldi	r19, 0x00	; 0
    31ec:	40 e2       	ldi	r20, 0x20	; 32
    31ee:	51 e4       	ldi	r21, 0x41	; 65
    31f0:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    31f4:	dc 01       	movw	r26, r24
    31f6:	cb 01       	movw	r24, r22
    31f8:	bc 01       	movw	r22, r24
    31fa:	cd 01       	movw	r24, r26
    31fc:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    3200:	dc 01       	movw	r26, r24
    3202:	cb 01       	movw	r24, r22
    3204:	9f ab       	std	Y+55, r25	; 0x37
    3206:	8e ab       	std	Y+54, r24	; 0x36
    3208:	0f c0       	rjmp	.+30     	; 0x3228 <__stack+0x1029>
    320a:	80 e9       	ldi	r24, 0x90	; 144
    320c:	91 e0       	ldi	r25, 0x01	; 1
    320e:	9d ab       	std	Y+53, r25	; 0x35
    3210:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3212:	8c a9       	ldd	r24, Y+52	; 0x34
    3214:	9d a9       	ldd	r25, Y+53	; 0x35
    3216:	01 97       	sbiw	r24, 0x01	; 1
    3218:	f1 f7       	brne	.-4      	; 0x3216 <__stack+0x1017>
    321a:	9d ab       	std	Y+53, r25	; 0x35
    321c:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    321e:	8e a9       	ldd	r24, Y+54	; 0x36
    3220:	9f a9       	ldd	r25, Y+55	; 0x37
    3222:	01 97       	sbiw	r24, 0x01	; 1
    3224:	9f ab       	std	Y+55, r25	; 0x37
    3226:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3228:	8e a9       	ldd	r24, Y+54	; 0x36
    322a:	9f a9       	ldd	r25, Y+55	; 0x37
    322c:	00 97       	sbiw	r24, 0x00	; 0
    322e:	69 f7       	brne	.-38     	; 0x320a <__stack+0x100b>
    3230:	2d c0       	rjmp	.+90     	; 0x328c <__stack+0x108d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3232:	68 ad       	ldd	r22, Y+56	; 0x38
    3234:	79 ad       	ldd	r23, Y+57	; 0x39
    3236:	8a ad       	ldd	r24, Y+58	; 0x3a
    3238:	9b ad       	ldd	r25, Y+59	; 0x3b
    323a:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    323e:	dc 01       	movw	r26, r24
    3240:	cb 01       	movw	r24, r22
    3242:	9f ab       	std	Y+55, r25	; 0x37
    3244:	8e ab       	std	Y+54, r24	; 0x36
    3246:	8e a9       	ldd	r24, Y+54	; 0x36
    3248:	9f a9       	ldd	r25, Y+55	; 0x37
    324a:	9b ab       	std	Y+51, r25	; 0x33
    324c:	8a ab       	std	Y+50, r24	; 0x32
    324e:	8a a9       	ldd	r24, Y+50	; 0x32
    3250:	9b a9       	ldd	r25, Y+51	; 0x33
    3252:	01 97       	sbiw	r24, 0x01	; 1
    3254:	f1 f7       	brne	.-4      	; 0x3252 <__stack+0x1053>
    3256:	9b ab       	std	Y+51, r25	; 0x33
    3258:	8a ab       	std	Y+50, r24	; 0x32
    325a:	18 c0       	rjmp	.+48     	; 0x328c <__stack+0x108d>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    325c:	fe 01       	movw	r30, r28
    325e:	ef 5b       	subi	r30, 0xBF	; 191
    3260:	ff 4f       	sbci	r31, 0xFF	; 255
    3262:	60 81       	ld	r22, Z
    3264:	71 81       	ldd	r23, Z+1	; 0x01
    3266:	82 81       	ldd	r24, Z+2	; 0x02
    3268:	93 81       	ldd	r25, Z+3	; 0x03
    326a:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    326e:	dc 01       	movw	r26, r24
    3270:	cb 01       	movw	r24, r22
    3272:	fe 01       	movw	r30, r28
    3274:	e0 5c       	subi	r30, 0xC0	; 192
    3276:	ff 4f       	sbci	r31, 0xFF	; 255
    3278:	80 83       	st	Z, r24
    327a:	fe 01       	movw	r30, r28
    327c:	e0 5c       	subi	r30, 0xC0	; 192
    327e:	ff 4f       	sbci	r31, 0xFF	; 255
    3280:	80 81       	ld	r24, Z
    3282:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3284:	89 a9       	ldd	r24, Y+49	; 0x31
    3286:	8a 95       	dec	r24
    3288:	f1 f7       	brne	.-4      	; 0x3286 <__stack+0x1087>
    328a:	89 ab       	std	Y+49, r24	; 0x31
	

	
	
	ps2data5=0;
	for(i=0;i<8;i++) // 8 byte
    328c:	80 91 0c 02 	lds	r24, 0x020C
    3290:	90 91 0d 02 	lds	r25, 0x020D
    3294:	01 96       	adiw	r24, 0x01	; 1
    3296:	90 93 0d 02 	sts	0x020D, r25
    329a:	80 93 0c 02 	sts	0x020C, r24
    329e:	80 91 0c 02 	lds	r24, 0x020C
    32a2:	90 91 0d 02 	lds	r25, 0x020D
    32a6:	88 30       	cpi	r24, 0x08	; 8
    32a8:	91 05       	cpc	r25, r1
    32aa:	0c f4       	brge	.+2      	; 0x32ae <__stack+0x10af>
    32ac:	9c cd       	rjmp	.-1224   	; 0x2de6 <__stack+0xbe7>
		else
			sbi(ps2data8,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    32ae:	a8 e2       	ldi	r26, 0x28	; 40
    32b0:	b0 e0       	ldi	r27, 0x00	; 0
    32b2:	e8 e2       	ldi	r30, 0x28	; 40
    32b4:	f0 e0       	ldi	r31, 0x00	; 0
    32b6:	80 81       	ld	r24, Z
    32b8:	84 60       	ori	r24, 0x04	; 4
    32ba:	8c 93       	st	X, r24
	

	
	
	ps2data5=0;
    32bc:	10 92 15 02 	sts	0x0215, r1
    32c0:	10 92 14 02 	sts	0x0214, r1
	for(i=0;i<8;i++) // 9 byte
    32c4:	10 92 0d 02 	sts	0x020D, r1
    32c8:	10 92 0c 02 	sts	0x020C, r1
    32cc:	d2 c1       	rjmp	.+932    	; 0x3672 <__stack+0x1473>
	{
		cbi(ps2port,ps2cmd);
    32ce:	a8 e2       	ldi	r26, 0x28	; 40
    32d0:	b0 e0       	ldi	r27, 0x00	; 0
    32d2:	e8 e2       	ldi	r30, 0x28	; 40
    32d4:	f0 e0       	ldi	r31, 0x00	; 0
    32d6:	80 81       	ld	r24, Z
    32d8:	8b 7f       	andi	r24, 0xFB	; 251
    32da:	8c 93       	st	X, r24
		cbi(ps2port,ps2clk); 
    32dc:	a8 e2       	ldi	r26, 0x28	; 40
    32de:	b0 e0       	ldi	r27, 0x00	; 0
    32e0:	e8 e2       	ldi	r30, 0x28	; 40
    32e2:	f0 e0       	ldi	r31, 0x00	; 0
    32e4:	80 81       	ld	r24, Z
    32e6:	8e 7f       	andi	r24, 0xFE	; 254
    32e8:	8c 93       	st	X, r24
    32ea:	80 e0       	ldi	r24, 0x00	; 0
    32ec:	90 e0       	ldi	r25, 0x00	; 0
    32ee:	a0 e8       	ldi	r26, 0x80	; 128
    32f0:	bf e3       	ldi	r27, 0x3F	; 63
    32f2:	8d a7       	std	Y+45, r24	; 0x2d
    32f4:	9e a7       	std	Y+46, r25	; 0x2e
    32f6:	af a7       	std	Y+47, r26	; 0x2f
    32f8:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    32fa:	6d a5       	ldd	r22, Y+45	; 0x2d
    32fc:	7e a5       	ldd	r23, Y+46	; 0x2e
    32fe:	8f a5       	ldd	r24, Y+47	; 0x2f
    3300:	98 a9       	ldd	r25, Y+48	; 0x30
    3302:	2b ea       	ldi	r18, 0xAB	; 171
    3304:	3a ea       	ldi	r19, 0xAA	; 170
    3306:	4a ea       	ldi	r20, 0xAA	; 170
    3308:	50 e4       	ldi	r21, 0x40	; 64
    330a:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    330e:	dc 01       	movw	r26, r24
    3310:	cb 01       	movw	r24, r22
    3312:	89 a7       	std	Y+41, r24	; 0x29
    3314:	9a a7       	std	Y+42, r25	; 0x2a
    3316:	ab a7       	std	Y+43, r26	; 0x2b
    3318:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    331a:	69 a5       	ldd	r22, Y+41	; 0x29
    331c:	7a a5       	ldd	r23, Y+42	; 0x2a
    331e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3320:	9c a5       	ldd	r25, Y+44	; 0x2c
    3322:	20 e0       	ldi	r18, 0x00	; 0
    3324:	30 e0       	ldi	r19, 0x00	; 0
    3326:	40 e8       	ldi	r20, 0x80	; 128
    3328:	5f e3       	ldi	r21, 0x3F	; 63
    332a:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    332e:	88 23       	and	r24, r24
    3330:	1c f4       	brge	.+6      	; 0x3338 <__stack+0x1139>
		__ticks = 1;
    3332:	81 e0       	ldi	r24, 0x01	; 1
    3334:	88 a7       	std	Y+40, r24	; 0x28
    3336:	91 c0       	rjmp	.+290    	; 0x345a <__stack+0x125b>
	else if (__tmp > 255)
    3338:	69 a5       	ldd	r22, Y+41	; 0x29
    333a:	7a a5       	ldd	r23, Y+42	; 0x2a
    333c:	8b a5       	ldd	r24, Y+43	; 0x2b
    333e:	9c a5       	ldd	r25, Y+44	; 0x2c
    3340:	20 e0       	ldi	r18, 0x00	; 0
    3342:	30 e0       	ldi	r19, 0x00	; 0
    3344:	4f e7       	ldi	r20, 0x7F	; 127
    3346:	53 e4       	ldi	r21, 0x43	; 67
    3348:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    334c:	18 16       	cp	r1, r24
    334e:	0c f0       	brlt	.+2      	; 0x3352 <__stack+0x1153>
    3350:	7b c0       	rjmp	.+246    	; 0x3448 <__stack+0x1249>
	{
		_delay_ms(__us / 1000.0);
    3352:	6d a5       	ldd	r22, Y+45	; 0x2d
    3354:	7e a5       	ldd	r23, Y+46	; 0x2e
    3356:	8f a5       	ldd	r24, Y+47	; 0x2f
    3358:	98 a9       	ldd	r25, Y+48	; 0x30
    335a:	20 e0       	ldi	r18, 0x00	; 0
    335c:	30 e0       	ldi	r19, 0x00	; 0
    335e:	4a e7       	ldi	r20, 0x7A	; 122
    3360:	54 e4       	ldi	r21, 0x44	; 68
    3362:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    3366:	dc 01       	movw	r26, r24
    3368:	cb 01       	movw	r24, r22
    336a:	8c a3       	std	Y+36, r24	; 0x24
    336c:	9d a3       	std	Y+37, r25	; 0x25
    336e:	ae a3       	std	Y+38, r26	; 0x26
    3370:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3372:	6c a1       	ldd	r22, Y+36	; 0x24
    3374:	7d a1       	ldd	r23, Y+37	; 0x25
    3376:	8e a1       	ldd	r24, Y+38	; 0x26
    3378:	9f a1       	ldd	r25, Y+39	; 0x27
    337a:	20 e0       	ldi	r18, 0x00	; 0
    337c:	30 e0       	ldi	r19, 0x00	; 0
    337e:	4a e7       	ldi	r20, 0x7A	; 122
    3380:	55 e4       	ldi	r21, 0x45	; 69
    3382:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    3386:	dc 01       	movw	r26, r24
    3388:	cb 01       	movw	r24, r22
    338a:	88 a3       	std	Y+32, r24	; 0x20
    338c:	99 a3       	std	Y+33, r25	; 0x21
    338e:	aa a3       	std	Y+34, r26	; 0x22
    3390:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    3392:	68 a1       	ldd	r22, Y+32	; 0x20
    3394:	79 a1       	ldd	r23, Y+33	; 0x21
    3396:	8a a1       	ldd	r24, Y+34	; 0x22
    3398:	9b a1       	ldd	r25, Y+35	; 0x23
    339a:	20 e0       	ldi	r18, 0x00	; 0
    339c:	30 e0       	ldi	r19, 0x00	; 0
    339e:	40 e8       	ldi	r20, 0x80	; 128
    33a0:	5f e3       	ldi	r21, 0x3F	; 63
    33a2:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    33a6:	88 23       	and	r24, r24
    33a8:	2c f4       	brge	.+10     	; 0x33b4 <__stack+0x11b5>
		__ticks = 1;
    33aa:	81 e0       	ldi	r24, 0x01	; 1
    33ac:	90 e0       	ldi	r25, 0x00	; 0
    33ae:	9f 8f       	std	Y+31, r25	; 0x1f
    33b0:	8e 8f       	std	Y+30, r24	; 0x1e
    33b2:	3f c0       	rjmp	.+126    	; 0x3432 <__stack+0x1233>
	else if (__tmp > 65535)
    33b4:	68 a1       	ldd	r22, Y+32	; 0x20
    33b6:	79 a1       	ldd	r23, Y+33	; 0x21
    33b8:	8a a1       	ldd	r24, Y+34	; 0x22
    33ba:	9b a1       	ldd	r25, Y+35	; 0x23
    33bc:	20 e0       	ldi	r18, 0x00	; 0
    33be:	3f ef       	ldi	r19, 0xFF	; 255
    33c0:	4f e7       	ldi	r20, 0x7F	; 127
    33c2:	57 e4       	ldi	r21, 0x47	; 71
    33c4:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    33c8:	18 16       	cp	r1, r24
    33ca:	4c f5       	brge	.+82     	; 0x341e <__stack+0x121f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33cc:	6c a1       	ldd	r22, Y+36	; 0x24
    33ce:	7d a1       	ldd	r23, Y+37	; 0x25
    33d0:	8e a1       	ldd	r24, Y+38	; 0x26
    33d2:	9f a1       	ldd	r25, Y+39	; 0x27
    33d4:	20 e0       	ldi	r18, 0x00	; 0
    33d6:	30 e0       	ldi	r19, 0x00	; 0
    33d8:	40 e2       	ldi	r20, 0x20	; 32
    33da:	51 e4       	ldi	r21, 0x41	; 65
    33dc:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    33e0:	dc 01       	movw	r26, r24
    33e2:	cb 01       	movw	r24, r22
    33e4:	bc 01       	movw	r22, r24
    33e6:	cd 01       	movw	r24, r26
    33e8:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    33ec:	dc 01       	movw	r26, r24
    33ee:	cb 01       	movw	r24, r22
    33f0:	9f 8f       	std	Y+31, r25	; 0x1f
    33f2:	8e 8f       	std	Y+30, r24	; 0x1e
    33f4:	0f c0       	rjmp	.+30     	; 0x3414 <__stack+0x1215>
    33f6:	80 e9       	ldi	r24, 0x90	; 144
    33f8:	91 e0       	ldi	r25, 0x01	; 1
    33fa:	9d 8f       	std	Y+29, r25	; 0x1d
    33fc:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    33fe:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3400:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3402:	01 97       	sbiw	r24, 0x01	; 1
    3404:	f1 f7       	brne	.-4      	; 0x3402 <__stack+0x1203>
    3406:	9d 8f       	std	Y+29, r25	; 0x1d
    3408:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    340a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    340c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    340e:	01 97       	sbiw	r24, 0x01	; 1
    3410:	9f 8f       	std	Y+31, r25	; 0x1f
    3412:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3414:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3416:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3418:	00 97       	sbiw	r24, 0x00	; 0
    341a:	69 f7       	brne	.-38     	; 0x33f6 <__stack+0x11f7>
    341c:	24 c0       	rjmp	.+72     	; 0x3466 <__stack+0x1267>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    341e:	68 a1       	ldd	r22, Y+32	; 0x20
    3420:	79 a1       	ldd	r23, Y+33	; 0x21
    3422:	8a a1       	ldd	r24, Y+34	; 0x22
    3424:	9b a1       	ldd	r25, Y+35	; 0x23
    3426:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    342a:	dc 01       	movw	r26, r24
    342c:	cb 01       	movw	r24, r22
    342e:	9f 8f       	std	Y+31, r25	; 0x1f
    3430:	8e 8f       	std	Y+30, r24	; 0x1e
    3432:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3434:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3436:	9b 8f       	std	Y+27, r25	; 0x1b
    3438:	8a 8f       	std	Y+26, r24	; 0x1a
    343a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    343c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    343e:	01 97       	sbiw	r24, 0x01	; 1
    3440:	f1 f7       	brne	.-4      	; 0x343e <__stack+0x123f>
    3442:	9b 8f       	std	Y+27, r25	; 0x1b
    3444:	8a 8f       	std	Y+26, r24	; 0x1a
    3446:	0f c0       	rjmp	.+30     	; 0x3466 <__stack+0x1267>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3448:	69 a5       	ldd	r22, Y+41	; 0x29
    344a:	7a a5       	ldd	r23, Y+42	; 0x2a
    344c:	8b a5       	ldd	r24, Y+43	; 0x2b
    344e:	9c a5       	ldd	r25, Y+44	; 0x2c
    3450:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    3454:	dc 01       	movw	r26, r24
    3456:	cb 01       	movw	r24, r22
    3458:	88 a7       	std	Y+40, r24	; 0x28
    345a:	88 a5       	ldd	r24, Y+40	; 0x28
    345c:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    345e:	89 8d       	ldd	r24, Y+25	; 0x19
    3460:	8a 95       	dec	r24
    3462:	f1 f7       	brne	.-4      	; 0x3460 <__stack+0x1261>
    3464:	89 8f       	std	Y+25, r24	; 0x19
		_delay_us(1);  
			
		if((ps2in&(0x02))==0x00)
    3466:	e6 e2       	ldi	r30, 0x26	; 38
    3468:	f0 e0       	ldi	r31, 0x00	; 0
    346a:	80 81       	ld	r24, Z
    346c:	88 2f       	mov	r24, r24
    346e:	90 e0       	ldi	r25, 0x00	; 0
    3470:	82 70       	andi	r24, 0x02	; 2
    3472:	90 70       	andi	r25, 0x00	; 0
    3474:	00 97       	sbiw	r24, 0x00	; 0
    3476:	c9 f4       	brne	.+50     	; 0x34aa <__stack+0x12ab>
			cbi(ps2data9,i); 
    3478:	20 91 0c 02 	lds	r18, 0x020C
    347c:	30 91 0d 02 	lds	r19, 0x020D
    3480:	81 e0       	ldi	r24, 0x01	; 1
    3482:	90 e0       	ldi	r25, 0x00	; 0
    3484:	02 c0       	rjmp	.+4      	; 0x348a <__stack+0x128b>
    3486:	88 0f       	add	r24, r24
    3488:	99 1f       	adc	r25, r25
    348a:	2a 95       	dec	r18
    348c:	e2 f7       	brpl	.-8      	; 0x3486 <__stack+0x1287>
    348e:	80 95       	com	r24
    3490:	90 95       	com	r25
    3492:	9c 01       	movw	r18, r24
    3494:	80 91 00 02 	lds	r24, 0x0200
    3498:	90 91 01 02 	lds	r25, 0x0201
    349c:	82 23       	and	r24, r18
    349e:	93 23       	and	r25, r19
    34a0:	90 93 01 02 	sts	0x0201, r25
    34a4:	80 93 00 02 	sts	0x0200, r24
    34a8:	16 c0       	rjmp	.+44     	; 0x34d6 <__stack+0x12d7>
		else
			sbi(ps2data9,i); 
    34aa:	20 91 0c 02 	lds	r18, 0x020C
    34ae:	30 91 0d 02 	lds	r19, 0x020D
    34b2:	81 e0       	ldi	r24, 0x01	; 1
    34b4:	90 e0       	ldi	r25, 0x00	; 0
    34b6:	02 c0       	rjmp	.+4      	; 0x34bc <__stack+0x12bd>
    34b8:	88 0f       	add	r24, r24
    34ba:	99 1f       	adc	r25, r25
    34bc:	2a 95       	dec	r18
    34be:	e2 f7       	brpl	.-8      	; 0x34b8 <__stack+0x12b9>
    34c0:	9c 01       	movw	r18, r24
    34c2:	80 91 00 02 	lds	r24, 0x0200
    34c6:	90 91 01 02 	lds	r25, 0x0201
    34ca:	82 2b       	or	r24, r18
    34cc:	93 2b       	or	r25, r19
    34ce:	90 93 01 02 	sts	0x0201, r25
    34d2:	80 93 00 02 	sts	0x0200, r24
		sbi(ps2port,ps2clk);
    34d6:	a8 e2       	ldi	r26, 0x28	; 40
    34d8:	b0 e0       	ldi	r27, 0x00	; 0
    34da:	e8 e2       	ldi	r30, 0x28	; 40
    34dc:	f0 e0       	ldi	r31, 0x00	; 0
    34de:	80 81       	ld	r24, Z
    34e0:	81 60       	ori	r24, 0x01	; 1
    34e2:	8c 93       	st	X, r24
    34e4:	80 e0       	ldi	r24, 0x00	; 0
    34e6:	90 e0       	ldi	r25, 0x00	; 0
    34e8:	a0 e8       	ldi	r26, 0x80	; 128
    34ea:	bf e3       	ldi	r27, 0x3F	; 63
    34ec:	8d 8b       	std	Y+21, r24	; 0x15
    34ee:	9e 8b       	std	Y+22, r25	; 0x16
    34f0:	af 8b       	std	Y+23, r26	; 0x17
    34f2:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    34f4:	6d 89       	ldd	r22, Y+21	; 0x15
    34f6:	7e 89       	ldd	r23, Y+22	; 0x16
    34f8:	8f 89       	ldd	r24, Y+23	; 0x17
    34fa:	98 8d       	ldd	r25, Y+24	; 0x18
    34fc:	2b ea       	ldi	r18, 0xAB	; 171
    34fe:	3a ea       	ldi	r19, 0xAA	; 170
    3500:	4a ea       	ldi	r20, 0xAA	; 170
    3502:	50 e4       	ldi	r21, 0x40	; 64
    3504:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    3508:	dc 01       	movw	r26, r24
    350a:	cb 01       	movw	r24, r22
    350c:	89 8b       	std	Y+17, r24	; 0x11
    350e:	9a 8b       	std	Y+18, r25	; 0x12
    3510:	ab 8b       	std	Y+19, r26	; 0x13
    3512:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    3514:	69 89       	ldd	r22, Y+17	; 0x11
    3516:	7a 89       	ldd	r23, Y+18	; 0x12
    3518:	8b 89       	ldd	r24, Y+19	; 0x13
    351a:	9c 89       	ldd	r25, Y+20	; 0x14
    351c:	20 e0       	ldi	r18, 0x00	; 0
    351e:	30 e0       	ldi	r19, 0x00	; 0
    3520:	40 e8       	ldi	r20, 0x80	; 128
    3522:	5f e3       	ldi	r21, 0x3F	; 63
    3524:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    3528:	88 23       	and	r24, r24
    352a:	1c f4       	brge	.+6      	; 0x3532 <__stack+0x1333>
		__ticks = 1;
    352c:	81 e0       	ldi	r24, 0x01	; 1
    352e:	88 8b       	std	Y+16, r24	; 0x10
    3530:	91 c0       	rjmp	.+290    	; 0x3654 <__stack+0x1455>
	else if (__tmp > 255)
    3532:	69 89       	ldd	r22, Y+17	; 0x11
    3534:	7a 89       	ldd	r23, Y+18	; 0x12
    3536:	8b 89       	ldd	r24, Y+19	; 0x13
    3538:	9c 89       	ldd	r25, Y+20	; 0x14
    353a:	20 e0       	ldi	r18, 0x00	; 0
    353c:	30 e0       	ldi	r19, 0x00	; 0
    353e:	4f e7       	ldi	r20, 0x7F	; 127
    3540:	53 e4       	ldi	r21, 0x43	; 67
    3542:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    3546:	18 16       	cp	r1, r24
    3548:	0c f0       	brlt	.+2      	; 0x354c <__stack+0x134d>
    354a:	7b c0       	rjmp	.+246    	; 0x3642 <__stack+0x1443>
	{
		_delay_ms(__us / 1000.0);
    354c:	6d 89       	ldd	r22, Y+21	; 0x15
    354e:	7e 89       	ldd	r23, Y+22	; 0x16
    3550:	8f 89       	ldd	r24, Y+23	; 0x17
    3552:	98 8d       	ldd	r25, Y+24	; 0x18
    3554:	20 e0       	ldi	r18, 0x00	; 0
    3556:	30 e0       	ldi	r19, 0x00	; 0
    3558:	4a e7       	ldi	r20, 0x7A	; 122
    355a:	54 e4       	ldi	r21, 0x44	; 68
    355c:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    3560:	dc 01       	movw	r26, r24
    3562:	cb 01       	movw	r24, r22
    3564:	8c 87       	std	Y+12, r24	; 0x0c
    3566:	9d 87       	std	Y+13, r25	; 0x0d
    3568:	ae 87       	std	Y+14, r26	; 0x0e
    356a:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    356c:	6c 85       	ldd	r22, Y+12	; 0x0c
    356e:	7d 85       	ldd	r23, Y+13	; 0x0d
    3570:	8e 85       	ldd	r24, Y+14	; 0x0e
    3572:	9f 85       	ldd	r25, Y+15	; 0x0f
    3574:	20 e0       	ldi	r18, 0x00	; 0
    3576:	30 e0       	ldi	r19, 0x00	; 0
    3578:	4a e7       	ldi	r20, 0x7A	; 122
    357a:	55 e4       	ldi	r21, 0x45	; 69
    357c:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    3580:	dc 01       	movw	r26, r24
    3582:	cb 01       	movw	r24, r22
    3584:	88 87       	std	Y+8, r24	; 0x08
    3586:	99 87       	std	Y+9, r25	; 0x09
    3588:	aa 87       	std	Y+10, r26	; 0x0a
    358a:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    358c:	68 85       	ldd	r22, Y+8	; 0x08
    358e:	79 85       	ldd	r23, Y+9	; 0x09
    3590:	8a 85       	ldd	r24, Y+10	; 0x0a
    3592:	9b 85       	ldd	r25, Y+11	; 0x0b
    3594:	20 e0       	ldi	r18, 0x00	; 0
    3596:	30 e0       	ldi	r19, 0x00	; 0
    3598:	40 e8       	ldi	r20, 0x80	; 128
    359a:	5f e3       	ldi	r21, 0x3F	; 63
    359c:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    35a0:	88 23       	and	r24, r24
    35a2:	2c f4       	brge	.+10     	; 0x35ae <__stack+0x13af>
		__ticks = 1;
    35a4:	81 e0       	ldi	r24, 0x01	; 1
    35a6:	90 e0       	ldi	r25, 0x00	; 0
    35a8:	9f 83       	std	Y+7, r25	; 0x07
    35aa:	8e 83       	std	Y+6, r24	; 0x06
    35ac:	3f c0       	rjmp	.+126    	; 0x362c <__stack+0x142d>
	else if (__tmp > 65535)
    35ae:	68 85       	ldd	r22, Y+8	; 0x08
    35b0:	79 85       	ldd	r23, Y+9	; 0x09
    35b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    35b4:	9b 85       	ldd	r25, Y+11	; 0x0b
    35b6:	20 e0       	ldi	r18, 0x00	; 0
    35b8:	3f ef       	ldi	r19, 0xFF	; 255
    35ba:	4f e7       	ldi	r20, 0x7F	; 127
    35bc:	57 e4       	ldi	r21, 0x47	; 71
    35be:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    35c2:	18 16       	cp	r1, r24
    35c4:	4c f5       	brge	.+82     	; 0x3618 <__stack+0x1419>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35c6:	6c 85       	ldd	r22, Y+12	; 0x0c
    35c8:	7d 85       	ldd	r23, Y+13	; 0x0d
    35ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    35cc:	9f 85       	ldd	r25, Y+15	; 0x0f
    35ce:	20 e0       	ldi	r18, 0x00	; 0
    35d0:	30 e0       	ldi	r19, 0x00	; 0
    35d2:	40 e2       	ldi	r20, 0x20	; 32
    35d4:	51 e4       	ldi	r21, 0x41	; 65
    35d6:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    35da:	dc 01       	movw	r26, r24
    35dc:	cb 01       	movw	r24, r22
    35de:	bc 01       	movw	r22, r24
    35e0:	cd 01       	movw	r24, r26
    35e2:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    35e6:	dc 01       	movw	r26, r24
    35e8:	cb 01       	movw	r24, r22
    35ea:	9f 83       	std	Y+7, r25	; 0x07
    35ec:	8e 83       	std	Y+6, r24	; 0x06
    35ee:	0f c0       	rjmp	.+30     	; 0x360e <__stack+0x140f>
    35f0:	80 e9       	ldi	r24, 0x90	; 144
    35f2:	91 e0       	ldi	r25, 0x01	; 1
    35f4:	9d 83       	std	Y+5, r25	; 0x05
    35f6:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    35f8:	8c 81       	ldd	r24, Y+4	; 0x04
    35fa:	9d 81       	ldd	r25, Y+5	; 0x05
    35fc:	01 97       	sbiw	r24, 0x01	; 1
    35fe:	f1 f7       	brne	.-4      	; 0x35fc <__stack+0x13fd>
    3600:	9d 83       	std	Y+5, r25	; 0x05
    3602:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3604:	8e 81       	ldd	r24, Y+6	; 0x06
    3606:	9f 81       	ldd	r25, Y+7	; 0x07
    3608:	01 97       	sbiw	r24, 0x01	; 1
    360a:	9f 83       	std	Y+7, r25	; 0x07
    360c:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    360e:	8e 81       	ldd	r24, Y+6	; 0x06
    3610:	9f 81       	ldd	r25, Y+7	; 0x07
    3612:	00 97       	sbiw	r24, 0x00	; 0
    3614:	69 f7       	brne	.-38     	; 0x35f0 <__stack+0x13f1>
    3616:	24 c0       	rjmp	.+72     	; 0x3660 <__stack+0x1461>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3618:	68 85       	ldd	r22, Y+8	; 0x08
    361a:	79 85       	ldd	r23, Y+9	; 0x09
    361c:	8a 85       	ldd	r24, Y+10	; 0x0a
    361e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3620:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    3624:	dc 01       	movw	r26, r24
    3626:	cb 01       	movw	r24, r22
    3628:	9f 83       	std	Y+7, r25	; 0x07
    362a:	8e 83       	std	Y+6, r24	; 0x06
    362c:	8e 81       	ldd	r24, Y+6	; 0x06
    362e:	9f 81       	ldd	r25, Y+7	; 0x07
    3630:	9b 83       	std	Y+3, r25	; 0x03
    3632:	8a 83       	std	Y+2, r24	; 0x02
    3634:	8a 81       	ldd	r24, Y+2	; 0x02
    3636:	9b 81       	ldd	r25, Y+3	; 0x03
    3638:	01 97       	sbiw	r24, 0x01	; 1
    363a:	f1 f7       	brne	.-4      	; 0x3638 <__stack+0x1439>
    363c:	9b 83       	std	Y+3, r25	; 0x03
    363e:	8a 83       	std	Y+2, r24	; 0x02
    3640:	0f c0       	rjmp	.+30     	; 0x3660 <__stack+0x1461>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3642:	69 89       	ldd	r22, Y+17	; 0x11
    3644:	7a 89       	ldd	r23, Y+18	; 0x12
    3646:	8b 89       	ldd	r24, Y+19	; 0x13
    3648:	9c 89       	ldd	r25, Y+20	; 0x14
    364a:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    364e:	dc 01       	movw	r26, r24
    3650:	cb 01       	movw	r24, r22
    3652:	88 8b       	std	Y+16, r24	; 0x10
    3654:	88 89       	ldd	r24, Y+16	; 0x10
    3656:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3658:	89 81       	ldd	r24, Y+1	; 0x01
    365a:	8a 95       	dec	r24
    365c:	f1 f7       	brne	.-4      	; 0x365a <__stack+0x145b>
    365e:	89 83       	std	Y+1, r24	; 0x01
	

	
	
	ps2data5=0;
	for(i=0;i<8;i++) // 9 byte
    3660:	80 91 0c 02 	lds	r24, 0x020C
    3664:	90 91 0d 02 	lds	r25, 0x020D
    3668:	01 96       	adiw	r24, 0x01	; 1
    366a:	90 93 0d 02 	sts	0x020D, r25
    366e:	80 93 0c 02 	sts	0x020C, r24
    3672:	80 91 0c 02 	lds	r24, 0x020C
    3676:	90 91 0d 02 	lds	r25, 0x020D
    367a:	88 30       	cpi	r24, 0x08	; 8
    367c:	91 05       	cpc	r25, r1
    367e:	0c f4       	brge	.+2      	; 0x3682 <__stack+0x1483>
    3680:	26 ce       	rjmp	.-948    	; 0x32ce <__stack+0x10cf>
		else
			sbi(ps2data9,i); 
		sbi(ps2port,ps2clk);
		_delay_us(1); 	
	}
	sbi(ps2port,ps2cmd); 
    3682:	a8 e2       	ldi	r26, 0x28	; 40
    3684:	b0 e0       	ldi	r27, 0x00	; 0
    3686:	e8 e2       	ldi	r30, 0x28	; 40
    3688:	f0 e0       	ldi	r31, 0x00	; 0
    368a:	80 81       	ld	r24, Z
    368c:	84 60       	ori	r24, 0x04	; 4
    368e:	8c 93       	st	X, r24
	
	
	
	sbi(ps2port,ps2att);
    3690:	a8 e2       	ldi	r26, 0x28	; 40
    3692:	b0 e0       	ldi	r27, 0x00	; 0
    3694:	e8 e2       	ldi	r30, 0x28	; 40
    3696:	f0 e0       	ldi	r31, 0x00	; 0
    3698:	80 81       	ld	r24, Z
    369a:	80 61       	ori	r24, 0x10	; 16
    369c:	8c 93       	st	X, r24
}
    369e:	c8 53       	subi	r28, 0x38	; 56
    36a0:	de 4f       	sbci	r29, 0xFE	; 254
    36a2:	0f b6       	in	r0, 0x3f	; 63
    36a4:	f8 94       	cli
    36a6:	de bf       	out	0x3e, r29	; 62
    36a8:	0f be       	out	0x3f, r0	; 63
    36aa:	cd bf       	out	0x3d, r28	; 61
    36ac:	cf 91       	pop	r28
    36ae:	df 91       	pop	r29
    36b0:	1f 91       	pop	r17
    36b2:	0f 91       	pop	r16
    36b4:	08 95       	ret

000036b6 <main>:

void main()
{
    36b6:	df 93       	push	r29
    36b8:	cf 93       	push	r28
    36ba:	cd b7       	in	r28, 0x3d	; 61
    36bc:	de b7       	in	r29, 0x3e	; 62
    36be:	a6 97       	sbiw	r28, 0x26	; 38
    36c0:	0f b6       	in	r0, 0x3f	; 63
    36c2:	f8 94       	cli
    36c4:	de bf       	out	0x3e, r29	; 62
    36c6:	0f be       	out	0x3f, r0	; 63
    36c8:	cd bf       	out	0x3d, r28	; 61
	DDRC = 0xFD;
    36ca:	e7 e2       	ldi	r30, 0x27	; 39
    36cc:	f0 e0       	ldi	r31, 0x00	; 0
    36ce:	8d ef       	ldi	r24, 0xFD	; 253
    36d0:	80 83       	st	Z, r24
	PORTC = 0xFF;
    36d2:	e8 e2       	ldi	r30, 0x28	; 40
    36d4:	f0 e0       	ldi	r31, 0x00	; 0
    36d6:	8f ef       	ldi	r24, 0xFF	; 255
    36d8:	80 83       	st	Z, r24
	DDRA = 0xFF;
    36da:	e1 e2       	ldi	r30, 0x21	; 33
    36dc:	f0 e0       	ldi	r31, 0x00	; 0
    36de:	8f ef       	ldi	r24, 0xFF	; 255
    36e0:	80 83       	st	Z, r24
	DDRB = 0xFF;
    36e2:	e4 e2       	ldi	r30, 0x24	; 36
    36e4:	f0 e0       	ldi	r31, 0x00	; 0
    36e6:	8f ef       	ldi	r24, 0xFF	; 255
    36e8:	80 83       	st	Z, r24
	
	

	while(1)
	{
	readgamepad();
    36ea:	0e 94 cf 02 	call	0x59e	; 0x59e <readgamepad>
    36ee:	80 e0       	ldi	r24, 0x00	; 0
    36f0:	90 e0       	ldi	r25, 0x00	; 0
    36f2:	a0 e2       	ldi	r26, 0x20	; 32
    36f4:	b1 e4       	ldi	r27, 0x41	; 65
    36f6:	8b a3       	std	Y+35, r24	; 0x23
    36f8:	9c a3       	std	Y+36, r25	; 0x24
    36fa:	ad a3       	std	Y+37, r26	; 0x25
    36fc:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    36fe:	6b a1       	ldd	r22, Y+35	; 0x23
    3700:	7c a1       	ldd	r23, Y+36	; 0x24
    3702:	8d a1       	ldd	r24, Y+37	; 0x25
    3704:	9e a1       	ldd	r25, Y+38	; 0x26
    3706:	2b ea       	ldi	r18, 0xAB	; 171
    3708:	3a ea       	ldi	r19, 0xAA	; 170
    370a:	4a ea       	ldi	r20, 0xAA	; 170
    370c:	50 e4       	ldi	r21, 0x40	; 64
    370e:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    3712:	dc 01       	movw	r26, r24
    3714:	cb 01       	movw	r24, r22
    3716:	8f 8f       	std	Y+31, r24	; 0x1f
    3718:	98 a3       	std	Y+32, r25	; 0x20
    371a:	a9 a3       	std	Y+33, r26	; 0x21
    371c:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    371e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3720:	78 a1       	ldd	r23, Y+32	; 0x20
    3722:	89 a1       	ldd	r24, Y+33	; 0x21
    3724:	9a a1       	ldd	r25, Y+34	; 0x22
    3726:	20 e0       	ldi	r18, 0x00	; 0
    3728:	30 e0       	ldi	r19, 0x00	; 0
    372a:	40 e8       	ldi	r20, 0x80	; 128
    372c:	5f e3       	ldi	r21, 0x3F	; 63
    372e:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    3732:	88 23       	and	r24, r24
    3734:	1c f4       	brge	.+6      	; 0x373c <main+0x86>
		__ticks = 1;
    3736:	81 e0       	ldi	r24, 0x01	; 1
    3738:	8e 8f       	std	Y+30, r24	; 0x1e
    373a:	91 c0       	rjmp	.+290    	; 0x385e <main+0x1a8>
	else if (__tmp > 255)
    373c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    373e:	78 a1       	ldd	r23, Y+32	; 0x20
    3740:	89 a1       	ldd	r24, Y+33	; 0x21
    3742:	9a a1       	ldd	r25, Y+34	; 0x22
    3744:	20 e0       	ldi	r18, 0x00	; 0
    3746:	30 e0       	ldi	r19, 0x00	; 0
    3748:	4f e7       	ldi	r20, 0x7F	; 127
    374a:	53 e4       	ldi	r21, 0x43	; 67
    374c:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    3750:	18 16       	cp	r1, r24
    3752:	0c f0       	brlt	.+2      	; 0x3756 <main+0xa0>
    3754:	7b c0       	rjmp	.+246    	; 0x384c <main+0x196>
	{
		_delay_ms(__us / 1000.0);
    3756:	6b a1       	ldd	r22, Y+35	; 0x23
    3758:	7c a1       	ldd	r23, Y+36	; 0x24
    375a:	8d a1       	ldd	r24, Y+37	; 0x25
    375c:	9e a1       	ldd	r25, Y+38	; 0x26
    375e:	20 e0       	ldi	r18, 0x00	; 0
    3760:	30 e0       	ldi	r19, 0x00	; 0
    3762:	4a e7       	ldi	r20, 0x7A	; 122
    3764:	54 e4       	ldi	r21, 0x44	; 68
    3766:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__divsf3>
    376a:	dc 01       	movw	r26, r24
    376c:	cb 01       	movw	r24, r22
    376e:	8a 8f       	std	Y+26, r24	; 0x1a
    3770:	9b 8f       	std	Y+27, r25	; 0x1b
    3772:	ac 8f       	std	Y+28, r26	; 0x1c
    3774:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3776:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3778:	7b 8d       	ldd	r23, Y+27	; 0x1b
    377a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    377c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    377e:	20 e0       	ldi	r18, 0x00	; 0
    3780:	30 e0       	ldi	r19, 0x00	; 0
    3782:	4a e7       	ldi	r20, 0x7A	; 122
    3784:	55 e4       	ldi	r21, 0x45	; 69
    3786:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    378a:	dc 01       	movw	r26, r24
    378c:	cb 01       	movw	r24, r22
    378e:	8e 8b       	std	Y+22, r24	; 0x16
    3790:	9f 8b       	std	Y+23, r25	; 0x17
    3792:	a8 8f       	std	Y+24, r26	; 0x18
    3794:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    3796:	6e 89       	ldd	r22, Y+22	; 0x16
    3798:	7f 89       	ldd	r23, Y+23	; 0x17
    379a:	88 8d       	ldd	r24, Y+24	; 0x18
    379c:	99 8d       	ldd	r25, Y+25	; 0x19
    379e:	20 e0       	ldi	r18, 0x00	; 0
    37a0:	30 e0       	ldi	r19, 0x00	; 0
    37a2:	40 e8       	ldi	r20, 0x80	; 128
    37a4:	5f e3       	ldi	r21, 0x3F	; 63
    37a6:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    37aa:	88 23       	and	r24, r24
    37ac:	2c f4       	brge	.+10     	; 0x37b8 <main+0x102>
		__ticks = 1;
    37ae:	81 e0       	ldi	r24, 0x01	; 1
    37b0:	90 e0       	ldi	r25, 0x00	; 0
    37b2:	9d 8b       	std	Y+21, r25	; 0x15
    37b4:	8c 8b       	std	Y+20, r24	; 0x14
    37b6:	3f c0       	rjmp	.+126    	; 0x3836 <main+0x180>
	else if (__tmp > 65535)
    37b8:	6e 89       	ldd	r22, Y+22	; 0x16
    37ba:	7f 89       	ldd	r23, Y+23	; 0x17
    37bc:	88 8d       	ldd	r24, Y+24	; 0x18
    37be:	99 8d       	ldd	r25, Y+25	; 0x19
    37c0:	20 e0       	ldi	r18, 0x00	; 0
    37c2:	3f ef       	ldi	r19, 0xFF	; 255
    37c4:	4f e7       	ldi	r20, 0x7F	; 127
    37c6:	57 e4       	ldi	r21, 0x47	; 71
    37c8:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    37cc:	18 16       	cp	r1, r24
    37ce:	4c f5       	brge	.+82     	; 0x3822 <main+0x16c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37d0:	6a 8d       	ldd	r22, Y+26	; 0x1a
    37d2:	7b 8d       	ldd	r23, Y+27	; 0x1b
    37d4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    37d6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    37d8:	20 e0       	ldi	r18, 0x00	; 0
    37da:	30 e0       	ldi	r19, 0x00	; 0
    37dc:	40 e2       	ldi	r20, 0x20	; 32
    37de:	51 e4       	ldi	r21, 0x41	; 65
    37e0:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    37e4:	dc 01       	movw	r26, r24
    37e6:	cb 01       	movw	r24, r22
    37e8:	bc 01       	movw	r22, r24
    37ea:	cd 01       	movw	r24, r26
    37ec:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    37f0:	dc 01       	movw	r26, r24
    37f2:	cb 01       	movw	r24, r22
    37f4:	9d 8b       	std	Y+21, r25	; 0x15
    37f6:	8c 8b       	std	Y+20, r24	; 0x14
    37f8:	0f c0       	rjmp	.+30     	; 0x3818 <main+0x162>
    37fa:	80 e9       	ldi	r24, 0x90	; 144
    37fc:	91 e0       	ldi	r25, 0x01	; 1
    37fe:	9b 8b       	std	Y+19, r25	; 0x13
    3800:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3802:	8a 89       	ldd	r24, Y+18	; 0x12
    3804:	9b 89       	ldd	r25, Y+19	; 0x13
    3806:	01 97       	sbiw	r24, 0x01	; 1
    3808:	f1 f7       	brne	.-4      	; 0x3806 <main+0x150>
    380a:	9b 8b       	std	Y+19, r25	; 0x13
    380c:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    380e:	8c 89       	ldd	r24, Y+20	; 0x14
    3810:	9d 89       	ldd	r25, Y+21	; 0x15
    3812:	01 97       	sbiw	r24, 0x01	; 1
    3814:	9d 8b       	std	Y+21, r25	; 0x15
    3816:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3818:	8c 89       	ldd	r24, Y+20	; 0x14
    381a:	9d 89       	ldd	r25, Y+21	; 0x15
    381c:	00 97       	sbiw	r24, 0x00	; 0
    381e:	69 f7       	brne	.-38     	; 0x37fa <main+0x144>
    3820:	24 c0       	rjmp	.+72     	; 0x386a <main+0x1b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3822:	6e 89       	ldd	r22, Y+22	; 0x16
    3824:	7f 89       	ldd	r23, Y+23	; 0x17
    3826:	88 8d       	ldd	r24, Y+24	; 0x18
    3828:	99 8d       	ldd	r25, Y+25	; 0x19
    382a:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    382e:	dc 01       	movw	r26, r24
    3830:	cb 01       	movw	r24, r22
    3832:	9d 8b       	std	Y+21, r25	; 0x15
    3834:	8c 8b       	std	Y+20, r24	; 0x14
    3836:	8c 89       	ldd	r24, Y+20	; 0x14
    3838:	9d 89       	ldd	r25, Y+21	; 0x15
    383a:	99 8b       	std	Y+17, r25	; 0x11
    383c:	88 8b       	std	Y+16, r24	; 0x10
    383e:	88 89       	ldd	r24, Y+16	; 0x10
    3840:	99 89       	ldd	r25, Y+17	; 0x11
    3842:	01 97       	sbiw	r24, 0x01	; 1
    3844:	f1 f7       	brne	.-4      	; 0x3842 <main+0x18c>
    3846:	99 8b       	std	Y+17, r25	; 0x11
    3848:	88 8b       	std	Y+16, r24	; 0x10
    384a:	0f c0       	rjmp	.+30     	; 0x386a <main+0x1b4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    384c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    384e:	78 a1       	ldd	r23, Y+32	; 0x20
    3850:	89 a1       	ldd	r24, Y+33	; 0x21
    3852:	9a a1       	ldd	r25, Y+34	; 0x22
    3854:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    3858:	dc 01       	movw	r26, r24
    385a:	cb 01       	movw	r24, r22
    385c:	8e 8f       	std	Y+30, r24	; 0x1e
    385e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3860:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3862:	8f 85       	ldd	r24, Y+15	; 0x0f
    3864:	8a 95       	dec	r24
    3866:	f1 f7       	brne	.-4      	; 0x3864 <main+0x1ae>
    3868:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(10);
	PORTA = ps2data7;
    386a:	e2 e2       	ldi	r30, 0x22	; 34
    386c:	f0 e0       	ldi	r31, 0x00	; 0
    386e:	80 91 04 02 	lds	r24, 0x0204
    3872:	90 91 05 02 	lds	r25, 0x0205
    3876:	80 83       	st	Z, r24
	PORTB = ps2data9;
    3878:	e5 e2       	ldi	r30, 0x25	; 37
    387a:	f0 e0       	ldi	r31, 0x00	; 0
    387c:	80 91 00 02 	lds	r24, 0x0200
    3880:	90 91 01 02 	lds	r25, 0x0201
    3884:	80 83       	st	Z, r24
    3886:	80 e0       	ldi	r24, 0x00	; 0
    3888:	90 e0       	ldi	r25, 0x00	; 0
    388a:	a0 e8       	ldi	r26, 0x80	; 128
    388c:	bf e3       	ldi	r27, 0x3F	; 63
    388e:	8b 87       	std	Y+11, r24	; 0x0b
    3890:	9c 87       	std	Y+12, r25	; 0x0c
    3892:	ad 87       	std	Y+13, r26	; 0x0d
    3894:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3896:	6b 85       	ldd	r22, Y+11	; 0x0b
    3898:	7c 85       	ldd	r23, Y+12	; 0x0c
    389a:	8d 85       	ldd	r24, Y+13	; 0x0d
    389c:	9e 85       	ldd	r25, Y+14	; 0x0e
    389e:	20 e0       	ldi	r18, 0x00	; 0
    38a0:	30 e0       	ldi	r19, 0x00	; 0
    38a2:	4a e7       	ldi	r20, 0x7A	; 122
    38a4:	55 e4       	ldi	r21, 0x45	; 69
    38a6:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    38aa:	dc 01       	movw	r26, r24
    38ac:	cb 01       	movw	r24, r22
    38ae:	8f 83       	std	Y+7, r24	; 0x07
    38b0:	98 87       	std	Y+8, r25	; 0x08
    38b2:	a9 87       	std	Y+9, r26	; 0x09
    38b4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    38b6:	6f 81       	ldd	r22, Y+7	; 0x07
    38b8:	78 85       	ldd	r23, Y+8	; 0x08
    38ba:	89 85       	ldd	r24, Y+9	; 0x09
    38bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    38be:	20 e0       	ldi	r18, 0x00	; 0
    38c0:	30 e0       	ldi	r19, 0x00	; 0
    38c2:	40 e8       	ldi	r20, 0x80	; 128
    38c4:	5f e3       	ldi	r21, 0x3F	; 63
    38c6:	0e 94 1b 1d 	call	0x3a36	; 0x3a36 <__cmpsf2>
    38ca:	88 23       	and	r24, r24
    38cc:	2c f4       	brge	.+10     	; 0x38d8 <main+0x222>
		__ticks = 1;
    38ce:	81 e0       	ldi	r24, 0x01	; 1
    38d0:	90 e0       	ldi	r25, 0x00	; 0
    38d2:	9e 83       	std	Y+6, r25	; 0x06
    38d4:	8d 83       	std	Y+5, r24	; 0x05
    38d6:	3f c0       	rjmp	.+126    	; 0x3956 <main+0x2a0>
	else if (__tmp > 65535)
    38d8:	6f 81       	ldd	r22, Y+7	; 0x07
    38da:	78 85       	ldd	r23, Y+8	; 0x08
    38dc:	89 85       	ldd	r24, Y+9	; 0x09
    38de:	9a 85       	ldd	r25, Y+10	; 0x0a
    38e0:	20 e0       	ldi	r18, 0x00	; 0
    38e2:	3f ef       	ldi	r19, 0xFF	; 255
    38e4:	4f e7       	ldi	r20, 0x7F	; 127
    38e6:	57 e4       	ldi	r21, 0x47	; 71
    38e8:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__gesf2>
    38ec:	18 16       	cp	r1, r24
    38ee:	4c f5       	brge	.+82     	; 0x3942 <main+0x28c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38f0:	6b 85       	ldd	r22, Y+11	; 0x0b
    38f2:	7c 85       	ldd	r23, Y+12	; 0x0c
    38f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    38f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    38f8:	20 e0       	ldi	r18, 0x00	; 0
    38fa:	30 e0       	ldi	r19, 0x00	; 0
    38fc:	40 e2       	ldi	r20, 0x20	; 32
    38fe:	51 e4       	ldi	r21, 0x41	; 65
    3900:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <__mulsf3>
    3904:	dc 01       	movw	r26, r24
    3906:	cb 01       	movw	r24, r22
    3908:	bc 01       	movw	r22, r24
    390a:	cd 01       	movw	r24, r26
    390c:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    3910:	dc 01       	movw	r26, r24
    3912:	cb 01       	movw	r24, r22
    3914:	9e 83       	std	Y+6, r25	; 0x06
    3916:	8d 83       	std	Y+5, r24	; 0x05
    3918:	0f c0       	rjmp	.+30     	; 0x3938 <main+0x282>
    391a:	80 e9       	ldi	r24, 0x90	; 144
    391c:	91 e0       	ldi	r25, 0x01	; 1
    391e:	9c 83       	std	Y+4, r25	; 0x04
    3920:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3922:	8b 81       	ldd	r24, Y+3	; 0x03
    3924:	9c 81       	ldd	r25, Y+4	; 0x04
    3926:	01 97       	sbiw	r24, 0x01	; 1
    3928:	f1 f7       	brne	.-4      	; 0x3926 <main+0x270>
    392a:	9c 83       	std	Y+4, r25	; 0x04
    392c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    392e:	8d 81       	ldd	r24, Y+5	; 0x05
    3930:	9e 81       	ldd	r25, Y+6	; 0x06
    3932:	01 97       	sbiw	r24, 0x01	; 1
    3934:	9e 83       	std	Y+6, r25	; 0x06
    3936:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3938:	8d 81       	ldd	r24, Y+5	; 0x05
    393a:	9e 81       	ldd	r25, Y+6	; 0x06
    393c:	00 97       	sbiw	r24, 0x00	; 0
    393e:	69 f7       	brne	.-38     	; 0x391a <main+0x264>
    3940:	d4 ce       	rjmp	.-600    	; 0x36ea <main+0x34>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3942:	6f 81       	ldd	r22, Y+7	; 0x07
    3944:	78 85       	ldd	r23, Y+8	; 0x08
    3946:	89 85       	ldd	r24, Y+9	; 0x09
    3948:	9a 85       	ldd	r25, Y+10	; 0x0a
    394a:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__fixunssfsi>
    394e:	dc 01       	movw	r26, r24
    3950:	cb 01       	movw	r24, r22
    3952:	9e 83       	std	Y+6, r25	; 0x06
    3954:	8d 83       	std	Y+5, r24	; 0x05
    3956:	8d 81       	ldd	r24, Y+5	; 0x05
    3958:	9e 81       	ldd	r25, Y+6	; 0x06
    395a:	9a 83       	std	Y+2, r25	; 0x02
    395c:	89 83       	std	Y+1, r24	; 0x01
    395e:	89 81       	ldd	r24, Y+1	; 0x01
    3960:	9a 81       	ldd	r25, Y+2	; 0x02
    3962:	01 97       	sbiw	r24, 0x01	; 1
    3964:	f1 f7       	brne	.-4      	; 0x3962 <main+0x2ac>
    3966:	9a 83       	std	Y+2, r25	; 0x02
    3968:	89 83       	std	Y+1, r24	; 0x01
    396a:	bf ce       	rjmp	.-642    	; 0x36ea <main+0x34>

0000396c <__subsf3>:
    396c:	50 58       	subi	r21, 0x80	; 128

0000396e <__addsf3>:
    396e:	bb 27       	eor	r27, r27
    3970:	aa 27       	eor	r26, r26
    3972:	0e d0       	rcall	.+28     	; 0x3990 <__addsf3x>
    3974:	33 c1       	rjmp	.+614    	; 0x3bdc <__fp_round>
    3976:	24 d1       	rcall	.+584    	; 0x3bc0 <__fp_pscA>
    3978:	30 f0       	brcs	.+12     	; 0x3986 <__addsf3+0x18>
    397a:	29 d1       	rcall	.+594    	; 0x3bce <__fp_pscB>
    397c:	20 f0       	brcs	.+8      	; 0x3986 <__addsf3+0x18>
    397e:	31 f4       	brne	.+12     	; 0x398c <__addsf3+0x1e>
    3980:	9f 3f       	cpi	r25, 0xFF	; 255
    3982:	11 f4       	brne	.+4      	; 0x3988 <__addsf3+0x1a>
    3984:	1e f4       	brtc	.+6      	; 0x398c <__addsf3+0x1e>
    3986:	19 c1       	rjmp	.+562    	; 0x3bba <__fp_nan>
    3988:	0e f4       	brtc	.+2      	; 0x398c <__addsf3+0x1e>
    398a:	e0 95       	com	r30
    398c:	e7 fb       	bst	r30, 7
    398e:	0f c1       	rjmp	.+542    	; 0x3bae <__fp_inf>

00003990 <__addsf3x>:
    3990:	e9 2f       	mov	r30, r25
    3992:	35 d1       	rcall	.+618    	; 0x3bfe <__fp_split3>
    3994:	80 f3       	brcs	.-32     	; 0x3976 <__addsf3+0x8>
    3996:	ba 17       	cp	r27, r26
    3998:	62 07       	cpc	r22, r18
    399a:	73 07       	cpc	r23, r19
    399c:	84 07       	cpc	r24, r20
    399e:	95 07       	cpc	r25, r21
    39a0:	18 f0       	brcs	.+6      	; 0x39a8 <__addsf3x+0x18>
    39a2:	71 f4       	brne	.+28     	; 0x39c0 <__addsf3x+0x30>
    39a4:	9e f5       	brtc	.+102    	; 0x3a0c <__addsf3x+0x7c>
    39a6:	4d c1       	rjmp	.+666    	; 0x3c42 <__fp_zero>
    39a8:	0e f4       	brtc	.+2      	; 0x39ac <__addsf3x+0x1c>
    39aa:	e0 95       	com	r30
    39ac:	0b 2e       	mov	r0, r27
    39ae:	ba 2f       	mov	r27, r26
    39b0:	a0 2d       	mov	r26, r0
    39b2:	0b 01       	movw	r0, r22
    39b4:	b9 01       	movw	r22, r18
    39b6:	90 01       	movw	r18, r0
    39b8:	0c 01       	movw	r0, r24
    39ba:	ca 01       	movw	r24, r20
    39bc:	a0 01       	movw	r20, r0
    39be:	11 24       	eor	r1, r1
    39c0:	ff 27       	eor	r31, r31
    39c2:	59 1b       	sub	r21, r25
    39c4:	99 f0       	breq	.+38     	; 0x39ec <__addsf3x+0x5c>
    39c6:	59 3f       	cpi	r21, 0xF9	; 249
    39c8:	50 f4       	brcc	.+20     	; 0x39de <__addsf3x+0x4e>
    39ca:	50 3e       	cpi	r21, 0xE0	; 224
    39cc:	68 f1       	brcs	.+90     	; 0x3a28 <__addsf3x+0x98>
    39ce:	1a 16       	cp	r1, r26
    39d0:	f0 40       	sbci	r31, 0x00	; 0
    39d2:	a2 2f       	mov	r26, r18
    39d4:	23 2f       	mov	r18, r19
    39d6:	34 2f       	mov	r19, r20
    39d8:	44 27       	eor	r20, r20
    39da:	58 5f       	subi	r21, 0xF8	; 248
    39dc:	f3 cf       	rjmp	.-26     	; 0x39c4 <__addsf3x+0x34>
    39de:	46 95       	lsr	r20
    39e0:	37 95       	ror	r19
    39e2:	27 95       	ror	r18
    39e4:	a7 95       	ror	r26
    39e6:	f0 40       	sbci	r31, 0x00	; 0
    39e8:	53 95       	inc	r21
    39ea:	c9 f7       	brne	.-14     	; 0x39de <__addsf3x+0x4e>
    39ec:	7e f4       	brtc	.+30     	; 0x3a0c <__addsf3x+0x7c>
    39ee:	1f 16       	cp	r1, r31
    39f0:	ba 0b       	sbc	r27, r26
    39f2:	62 0b       	sbc	r22, r18
    39f4:	73 0b       	sbc	r23, r19
    39f6:	84 0b       	sbc	r24, r20
    39f8:	ba f0       	brmi	.+46     	; 0x3a28 <__addsf3x+0x98>
    39fa:	91 50       	subi	r25, 0x01	; 1
    39fc:	a1 f0       	breq	.+40     	; 0x3a26 <__addsf3x+0x96>
    39fe:	ff 0f       	add	r31, r31
    3a00:	bb 1f       	adc	r27, r27
    3a02:	66 1f       	adc	r22, r22
    3a04:	77 1f       	adc	r23, r23
    3a06:	88 1f       	adc	r24, r24
    3a08:	c2 f7       	brpl	.-16     	; 0x39fa <__addsf3x+0x6a>
    3a0a:	0e c0       	rjmp	.+28     	; 0x3a28 <__addsf3x+0x98>
    3a0c:	ba 0f       	add	r27, r26
    3a0e:	62 1f       	adc	r22, r18
    3a10:	73 1f       	adc	r23, r19
    3a12:	84 1f       	adc	r24, r20
    3a14:	48 f4       	brcc	.+18     	; 0x3a28 <__addsf3x+0x98>
    3a16:	87 95       	ror	r24
    3a18:	77 95       	ror	r23
    3a1a:	67 95       	ror	r22
    3a1c:	b7 95       	ror	r27
    3a1e:	f7 95       	ror	r31
    3a20:	9e 3f       	cpi	r25, 0xFE	; 254
    3a22:	08 f0       	brcs	.+2      	; 0x3a26 <__addsf3x+0x96>
    3a24:	b3 cf       	rjmp	.-154    	; 0x398c <__addsf3+0x1e>
    3a26:	93 95       	inc	r25
    3a28:	88 0f       	add	r24, r24
    3a2a:	08 f0       	brcs	.+2      	; 0x3a2e <__addsf3x+0x9e>
    3a2c:	99 27       	eor	r25, r25
    3a2e:	ee 0f       	add	r30, r30
    3a30:	97 95       	ror	r25
    3a32:	87 95       	ror	r24
    3a34:	08 95       	ret

00003a36 <__cmpsf2>:
    3a36:	97 d0       	rcall	.+302    	; 0x3b66 <__fp_cmp>
    3a38:	08 f4       	brcc	.+2      	; 0x3a3c <__cmpsf2+0x6>
    3a3a:	81 e0       	ldi	r24, 0x01	; 1
    3a3c:	08 95       	ret

00003a3e <__divsf3>:
    3a3e:	0c d0       	rcall	.+24     	; 0x3a58 <__divsf3x>
    3a40:	cd c0       	rjmp	.+410    	; 0x3bdc <__fp_round>
    3a42:	c5 d0       	rcall	.+394    	; 0x3bce <__fp_pscB>
    3a44:	40 f0       	brcs	.+16     	; 0x3a56 <__divsf3+0x18>
    3a46:	bc d0       	rcall	.+376    	; 0x3bc0 <__fp_pscA>
    3a48:	30 f0       	brcs	.+12     	; 0x3a56 <__divsf3+0x18>
    3a4a:	21 f4       	brne	.+8      	; 0x3a54 <__divsf3+0x16>
    3a4c:	5f 3f       	cpi	r21, 0xFF	; 255
    3a4e:	19 f0       	breq	.+6      	; 0x3a56 <__divsf3+0x18>
    3a50:	ae c0       	rjmp	.+348    	; 0x3bae <__fp_inf>
    3a52:	51 11       	cpse	r21, r1
    3a54:	f7 c0       	rjmp	.+494    	; 0x3c44 <__fp_szero>
    3a56:	b1 c0       	rjmp	.+354    	; 0x3bba <__fp_nan>

00003a58 <__divsf3x>:
    3a58:	d2 d0       	rcall	.+420    	; 0x3bfe <__fp_split3>
    3a5a:	98 f3       	brcs	.-26     	; 0x3a42 <__divsf3+0x4>

00003a5c <__divsf3_pse>:
    3a5c:	99 23       	and	r25, r25
    3a5e:	c9 f3       	breq	.-14     	; 0x3a52 <__divsf3+0x14>
    3a60:	55 23       	and	r21, r21
    3a62:	b1 f3       	breq	.-20     	; 0x3a50 <__divsf3+0x12>
    3a64:	95 1b       	sub	r25, r21
    3a66:	55 0b       	sbc	r21, r21
    3a68:	bb 27       	eor	r27, r27
    3a6a:	aa 27       	eor	r26, r26
    3a6c:	62 17       	cp	r22, r18
    3a6e:	73 07       	cpc	r23, r19
    3a70:	84 07       	cpc	r24, r20
    3a72:	38 f0       	brcs	.+14     	; 0x3a82 <__divsf3_pse+0x26>
    3a74:	9f 5f       	subi	r25, 0xFF	; 255
    3a76:	5f 4f       	sbci	r21, 0xFF	; 255
    3a78:	22 0f       	add	r18, r18
    3a7a:	33 1f       	adc	r19, r19
    3a7c:	44 1f       	adc	r20, r20
    3a7e:	aa 1f       	adc	r26, r26
    3a80:	a9 f3       	breq	.-22     	; 0x3a6c <__divsf3_pse+0x10>
    3a82:	33 d0       	rcall	.+102    	; 0x3aea <__divsf3_pse+0x8e>
    3a84:	0e 2e       	mov	r0, r30
    3a86:	3a f0       	brmi	.+14     	; 0x3a96 <__divsf3_pse+0x3a>
    3a88:	e0 e8       	ldi	r30, 0x80	; 128
    3a8a:	30 d0       	rcall	.+96     	; 0x3aec <__divsf3_pse+0x90>
    3a8c:	91 50       	subi	r25, 0x01	; 1
    3a8e:	50 40       	sbci	r21, 0x00	; 0
    3a90:	e6 95       	lsr	r30
    3a92:	00 1c       	adc	r0, r0
    3a94:	ca f7       	brpl	.-14     	; 0x3a88 <__divsf3_pse+0x2c>
    3a96:	29 d0       	rcall	.+82     	; 0x3aea <__divsf3_pse+0x8e>
    3a98:	fe 2f       	mov	r31, r30
    3a9a:	27 d0       	rcall	.+78     	; 0x3aea <__divsf3_pse+0x8e>
    3a9c:	66 0f       	add	r22, r22
    3a9e:	77 1f       	adc	r23, r23
    3aa0:	88 1f       	adc	r24, r24
    3aa2:	bb 1f       	adc	r27, r27
    3aa4:	26 17       	cp	r18, r22
    3aa6:	37 07       	cpc	r19, r23
    3aa8:	48 07       	cpc	r20, r24
    3aaa:	ab 07       	cpc	r26, r27
    3aac:	b0 e8       	ldi	r27, 0x80	; 128
    3aae:	09 f0       	breq	.+2      	; 0x3ab2 <__divsf3_pse+0x56>
    3ab0:	bb 0b       	sbc	r27, r27
    3ab2:	80 2d       	mov	r24, r0
    3ab4:	bf 01       	movw	r22, r30
    3ab6:	ff 27       	eor	r31, r31
    3ab8:	93 58       	subi	r25, 0x83	; 131
    3aba:	5f 4f       	sbci	r21, 0xFF	; 255
    3abc:	2a f0       	brmi	.+10     	; 0x3ac8 <__divsf3_pse+0x6c>
    3abe:	9e 3f       	cpi	r25, 0xFE	; 254
    3ac0:	51 05       	cpc	r21, r1
    3ac2:	68 f0       	brcs	.+26     	; 0x3ade <__divsf3_pse+0x82>
    3ac4:	74 c0       	rjmp	.+232    	; 0x3bae <__fp_inf>
    3ac6:	be c0       	rjmp	.+380    	; 0x3c44 <__fp_szero>
    3ac8:	5f 3f       	cpi	r21, 0xFF	; 255
    3aca:	ec f3       	brlt	.-6      	; 0x3ac6 <__divsf3_pse+0x6a>
    3acc:	98 3e       	cpi	r25, 0xE8	; 232
    3ace:	dc f3       	brlt	.-10     	; 0x3ac6 <__divsf3_pse+0x6a>
    3ad0:	86 95       	lsr	r24
    3ad2:	77 95       	ror	r23
    3ad4:	67 95       	ror	r22
    3ad6:	b7 95       	ror	r27
    3ad8:	f7 95       	ror	r31
    3ada:	9f 5f       	subi	r25, 0xFF	; 255
    3adc:	c9 f7       	brne	.-14     	; 0x3ad0 <__divsf3_pse+0x74>
    3ade:	88 0f       	add	r24, r24
    3ae0:	91 1d       	adc	r25, r1
    3ae2:	96 95       	lsr	r25
    3ae4:	87 95       	ror	r24
    3ae6:	97 f9       	bld	r25, 7
    3ae8:	08 95       	ret
    3aea:	e1 e0       	ldi	r30, 0x01	; 1
    3aec:	66 0f       	add	r22, r22
    3aee:	77 1f       	adc	r23, r23
    3af0:	88 1f       	adc	r24, r24
    3af2:	bb 1f       	adc	r27, r27
    3af4:	62 17       	cp	r22, r18
    3af6:	73 07       	cpc	r23, r19
    3af8:	84 07       	cpc	r24, r20
    3afa:	ba 07       	cpc	r27, r26
    3afc:	20 f0       	brcs	.+8      	; 0x3b06 <__divsf3_pse+0xaa>
    3afe:	62 1b       	sub	r22, r18
    3b00:	73 0b       	sbc	r23, r19
    3b02:	84 0b       	sbc	r24, r20
    3b04:	ba 0b       	sbc	r27, r26
    3b06:	ee 1f       	adc	r30, r30
    3b08:	88 f7       	brcc	.-30     	; 0x3aec <__divsf3_pse+0x90>
    3b0a:	e0 95       	com	r30
    3b0c:	08 95       	ret

00003b0e <__fixunssfsi>:
    3b0e:	7f d0       	rcall	.+254    	; 0x3c0e <__fp_splitA>
    3b10:	88 f0       	brcs	.+34     	; 0x3b34 <__fixunssfsi+0x26>
    3b12:	9f 57       	subi	r25, 0x7F	; 127
    3b14:	90 f0       	brcs	.+36     	; 0x3b3a <__fixunssfsi+0x2c>
    3b16:	b9 2f       	mov	r27, r25
    3b18:	99 27       	eor	r25, r25
    3b1a:	b7 51       	subi	r27, 0x17	; 23
    3b1c:	a0 f0       	brcs	.+40     	; 0x3b46 <__fixunssfsi+0x38>
    3b1e:	d1 f0       	breq	.+52     	; 0x3b54 <__fixunssfsi+0x46>
    3b20:	66 0f       	add	r22, r22
    3b22:	77 1f       	adc	r23, r23
    3b24:	88 1f       	adc	r24, r24
    3b26:	99 1f       	adc	r25, r25
    3b28:	1a f0       	brmi	.+6      	; 0x3b30 <__fixunssfsi+0x22>
    3b2a:	ba 95       	dec	r27
    3b2c:	c9 f7       	brne	.-14     	; 0x3b20 <__fixunssfsi+0x12>
    3b2e:	12 c0       	rjmp	.+36     	; 0x3b54 <__fixunssfsi+0x46>
    3b30:	b1 30       	cpi	r27, 0x01	; 1
    3b32:	81 f0       	breq	.+32     	; 0x3b54 <__fixunssfsi+0x46>
    3b34:	86 d0       	rcall	.+268    	; 0x3c42 <__fp_zero>
    3b36:	b1 e0       	ldi	r27, 0x01	; 1
    3b38:	08 95       	ret
    3b3a:	83 c0       	rjmp	.+262    	; 0x3c42 <__fp_zero>
    3b3c:	67 2f       	mov	r22, r23
    3b3e:	78 2f       	mov	r23, r24
    3b40:	88 27       	eor	r24, r24
    3b42:	b8 5f       	subi	r27, 0xF8	; 248
    3b44:	39 f0       	breq	.+14     	; 0x3b54 <__fixunssfsi+0x46>
    3b46:	b9 3f       	cpi	r27, 0xF9	; 249
    3b48:	cc f3       	brlt	.-14     	; 0x3b3c <__fixunssfsi+0x2e>
    3b4a:	86 95       	lsr	r24
    3b4c:	77 95       	ror	r23
    3b4e:	67 95       	ror	r22
    3b50:	b3 95       	inc	r27
    3b52:	d9 f7       	brne	.-10     	; 0x3b4a <__fixunssfsi+0x3c>
    3b54:	3e f4       	brtc	.+14     	; 0x3b64 <__fixunssfsi+0x56>
    3b56:	90 95       	com	r25
    3b58:	80 95       	com	r24
    3b5a:	70 95       	com	r23
    3b5c:	61 95       	neg	r22
    3b5e:	7f 4f       	sbci	r23, 0xFF	; 255
    3b60:	8f 4f       	sbci	r24, 0xFF	; 255
    3b62:	9f 4f       	sbci	r25, 0xFF	; 255
    3b64:	08 95       	ret

00003b66 <__fp_cmp>:
    3b66:	99 0f       	add	r25, r25
    3b68:	00 08       	sbc	r0, r0
    3b6a:	55 0f       	add	r21, r21
    3b6c:	aa 0b       	sbc	r26, r26
    3b6e:	e0 e8       	ldi	r30, 0x80	; 128
    3b70:	fe ef       	ldi	r31, 0xFE	; 254
    3b72:	16 16       	cp	r1, r22
    3b74:	17 06       	cpc	r1, r23
    3b76:	e8 07       	cpc	r30, r24
    3b78:	f9 07       	cpc	r31, r25
    3b7a:	c0 f0       	brcs	.+48     	; 0x3bac <__fp_cmp+0x46>
    3b7c:	12 16       	cp	r1, r18
    3b7e:	13 06       	cpc	r1, r19
    3b80:	e4 07       	cpc	r30, r20
    3b82:	f5 07       	cpc	r31, r21
    3b84:	98 f0       	brcs	.+38     	; 0x3bac <__fp_cmp+0x46>
    3b86:	62 1b       	sub	r22, r18
    3b88:	73 0b       	sbc	r23, r19
    3b8a:	84 0b       	sbc	r24, r20
    3b8c:	95 0b       	sbc	r25, r21
    3b8e:	39 f4       	brne	.+14     	; 0x3b9e <__fp_cmp+0x38>
    3b90:	0a 26       	eor	r0, r26
    3b92:	61 f0       	breq	.+24     	; 0x3bac <__fp_cmp+0x46>
    3b94:	23 2b       	or	r18, r19
    3b96:	24 2b       	or	r18, r20
    3b98:	25 2b       	or	r18, r21
    3b9a:	21 f4       	brne	.+8      	; 0x3ba4 <__fp_cmp+0x3e>
    3b9c:	08 95       	ret
    3b9e:	0a 26       	eor	r0, r26
    3ba0:	09 f4       	brne	.+2      	; 0x3ba4 <__fp_cmp+0x3e>
    3ba2:	a1 40       	sbci	r26, 0x01	; 1
    3ba4:	a6 95       	lsr	r26
    3ba6:	8f ef       	ldi	r24, 0xFF	; 255
    3ba8:	81 1d       	adc	r24, r1
    3baa:	81 1d       	adc	r24, r1
    3bac:	08 95       	ret

00003bae <__fp_inf>:
    3bae:	97 f9       	bld	r25, 7
    3bb0:	9f 67       	ori	r25, 0x7F	; 127
    3bb2:	80 e8       	ldi	r24, 0x80	; 128
    3bb4:	70 e0       	ldi	r23, 0x00	; 0
    3bb6:	60 e0       	ldi	r22, 0x00	; 0
    3bb8:	08 95       	ret

00003bba <__fp_nan>:
    3bba:	9f ef       	ldi	r25, 0xFF	; 255
    3bbc:	80 ec       	ldi	r24, 0xC0	; 192
    3bbe:	08 95       	ret

00003bc0 <__fp_pscA>:
    3bc0:	00 24       	eor	r0, r0
    3bc2:	0a 94       	dec	r0
    3bc4:	16 16       	cp	r1, r22
    3bc6:	17 06       	cpc	r1, r23
    3bc8:	18 06       	cpc	r1, r24
    3bca:	09 06       	cpc	r0, r25
    3bcc:	08 95       	ret

00003bce <__fp_pscB>:
    3bce:	00 24       	eor	r0, r0
    3bd0:	0a 94       	dec	r0
    3bd2:	12 16       	cp	r1, r18
    3bd4:	13 06       	cpc	r1, r19
    3bd6:	14 06       	cpc	r1, r20
    3bd8:	05 06       	cpc	r0, r21
    3bda:	08 95       	ret

00003bdc <__fp_round>:
    3bdc:	09 2e       	mov	r0, r25
    3bde:	03 94       	inc	r0
    3be0:	00 0c       	add	r0, r0
    3be2:	11 f4       	brne	.+4      	; 0x3be8 <__fp_round+0xc>
    3be4:	88 23       	and	r24, r24
    3be6:	52 f0       	brmi	.+20     	; 0x3bfc <__fp_round+0x20>
    3be8:	bb 0f       	add	r27, r27
    3bea:	40 f4       	brcc	.+16     	; 0x3bfc <__fp_round+0x20>
    3bec:	bf 2b       	or	r27, r31
    3bee:	11 f4       	brne	.+4      	; 0x3bf4 <__fp_round+0x18>
    3bf0:	60 ff       	sbrs	r22, 0
    3bf2:	04 c0       	rjmp	.+8      	; 0x3bfc <__fp_round+0x20>
    3bf4:	6f 5f       	subi	r22, 0xFF	; 255
    3bf6:	7f 4f       	sbci	r23, 0xFF	; 255
    3bf8:	8f 4f       	sbci	r24, 0xFF	; 255
    3bfa:	9f 4f       	sbci	r25, 0xFF	; 255
    3bfc:	08 95       	ret

00003bfe <__fp_split3>:
    3bfe:	57 fd       	sbrc	r21, 7
    3c00:	90 58       	subi	r25, 0x80	; 128
    3c02:	44 0f       	add	r20, r20
    3c04:	55 1f       	adc	r21, r21
    3c06:	59 f0       	breq	.+22     	; 0x3c1e <__fp_splitA+0x10>
    3c08:	5f 3f       	cpi	r21, 0xFF	; 255
    3c0a:	71 f0       	breq	.+28     	; 0x3c28 <__fp_splitA+0x1a>
    3c0c:	47 95       	ror	r20

00003c0e <__fp_splitA>:
    3c0e:	88 0f       	add	r24, r24
    3c10:	97 fb       	bst	r25, 7
    3c12:	99 1f       	adc	r25, r25
    3c14:	61 f0       	breq	.+24     	; 0x3c2e <__fp_splitA+0x20>
    3c16:	9f 3f       	cpi	r25, 0xFF	; 255
    3c18:	79 f0       	breq	.+30     	; 0x3c38 <__fp_splitA+0x2a>
    3c1a:	87 95       	ror	r24
    3c1c:	08 95       	ret
    3c1e:	12 16       	cp	r1, r18
    3c20:	13 06       	cpc	r1, r19
    3c22:	14 06       	cpc	r1, r20
    3c24:	55 1f       	adc	r21, r21
    3c26:	f2 cf       	rjmp	.-28     	; 0x3c0c <__fp_split3+0xe>
    3c28:	46 95       	lsr	r20
    3c2a:	f1 df       	rcall	.-30     	; 0x3c0e <__fp_splitA>
    3c2c:	08 c0       	rjmp	.+16     	; 0x3c3e <__fp_splitA+0x30>
    3c2e:	16 16       	cp	r1, r22
    3c30:	17 06       	cpc	r1, r23
    3c32:	18 06       	cpc	r1, r24
    3c34:	99 1f       	adc	r25, r25
    3c36:	f1 cf       	rjmp	.-30     	; 0x3c1a <__fp_splitA+0xc>
    3c38:	86 95       	lsr	r24
    3c3a:	71 05       	cpc	r23, r1
    3c3c:	61 05       	cpc	r22, r1
    3c3e:	08 94       	sec
    3c40:	08 95       	ret

00003c42 <__fp_zero>:
    3c42:	e8 94       	clt

00003c44 <__fp_szero>:
    3c44:	bb 27       	eor	r27, r27
    3c46:	66 27       	eor	r22, r22
    3c48:	77 27       	eor	r23, r23
    3c4a:	cb 01       	movw	r24, r22
    3c4c:	97 f9       	bld	r25, 7
    3c4e:	08 95       	ret

00003c50 <__gesf2>:
    3c50:	8a df       	rcall	.-236    	; 0x3b66 <__fp_cmp>
    3c52:	08 f4       	brcc	.+2      	; 0x3c56 <__gesf2+0x6>
    3c54:	8f ef       	ldi	r24, 0xFF	; 255
    3c56:	08 95       	ret

00003c58 <__mulsf3>:
    3c58:	0b d0       	rcall	.+22     	; 0x3c70 <__mulsf3x>
    3c5a:	c0 cf       	rjmp	.-128    	; 0x3bdc <__fp_round>
    3c5c:	b1 df       	rcall	.-158    	; 0x3bc0 <__fp_pscA>
    3c5e:	28 f0       	brcs	.+10     	; 0x3c6a <__mulsf3+0x12>
    3c60:	b6 df       	rcall	.-148    	; 0x3bce <__fp_pscB>
    3c62:	18 f0       	brcs	.+6      	; 0x3c6a <__mulsf3+0x12>
    3c64:	95 23       	and	r25, r21
    3c66:	09 f0       	breq	.+2      	; 0x3c6a <__mulsf3+0x12>
    3c68:	a2 cf       	rjmp	.-188    	; 0x3bae <__fp_inf>
    3c6a:	a7 cf       	rjmp	.-178    	; 0x3bba <__fp_nan>
    3c6c:	11 24       	eor	r1, r1
    3c6e:	ea cf       	rjmp	.-44     	; 0x3c44 <__fp_szero>

00003c70 <__mulsf3x>:
    3c70:	c6 df       	rcall	.-116    	; 0x3bfe <__fp_split3>
    3c72:	a0 f3       	brcs	.-24     	; 0x3c5c <__mulsf3+0x4>

00003c74 <__mulsf3_pse>:
    3c74:	95 9f       	mul	r25, r21
    3c76:	d1 f3       	breq	.-12     	; 0x3c6c <__mulsf3+0x14>
    3c78:	95 0f       	add	r25, r21
    3c7a:	50 e0       	ldi	r21, 0x00	; 0
    3c7c:	55 1f       	adc	r21, r21
    3c7e:	62 9f       	mul	r22, r18
    3c80:	f0 01       	movw	r30, r0
    3c82:	72 9f       	mul	r23, r18
    3c84:	bb 27       	eor	r27, r27
    3c86:	f0 0d       	add	r31, r0
    3c88:	b1 1d       	adc	r27, r1
    3c8a:	63 9f       	mul	r22, r19
    3c8c:	aa 27       	eor	r26, r26
    3c8e:	f0 0d       	add	r31, r0
    3c90:	b1 1d       	adc	r27, r1
    3c92:	aa 1f       	adc	r26, r26
    3c94:	64 9f       	mul	r22, r20
    3c96:	66 27       	eor	r22, r22
    3c98:	b0 0d       	add	r27, r0
    3c9a:	a1 1d       	adc	r26, r1
    3c9c:	66 1f       	adc	r22, r22
    3c9e:	82 9f       	mul	r24, r18
    3ca0:	22 27       	eor	r18, r18
    3ca2:	b0 0d       	add	r27, r0
    3ca4:	a1 1d       	adc	r26, r1
    3ca6:	62 1f       	adc	r22, r18
    3ca8:	73 9f       	mul	r23, r19
    3caa:	b0 0d       	add	r27, r0
    3cac:	a1 1d       	adc	r26, r1
    3cae:	62 1f       	adc	r22, r18
    3cb0:	83 9f       	mul	r24, r19
    3cb2:	a0 0d       	add	r26, r0
    3cb4:	61 1d       	adc	r22, r1
    3cb6:	22 1f       	adc	r18, r18
    3cb8:	74 9f       	mul	r23, r20
    3cba:	33 27       	eor	r19, r19
    3cbc:	a0 0d       	add	r26, r0
    3cbe:	61 1d       	adc	r22, r1
    3cc0:	23 1f       	adc	r18, r19
    3cc2:	84 9f       	mul	r24, r20
    3cc4:	60 0d       	add	r22, r0
    3cc6:	21 1d       	adc	r18, r1
    3cc8:	82 2f       	mov	r24, r18
    3cca:	76 2f       	mov	r23, r22
    3ccc:	6a 2f       	mov	r22, r26
    3cce:	11 24       	eor	r1, r1
    3cd0:	9f 57       	subi	r25, 0x7F	; 127
    3cd2:	50 40       	sbci	r21, 0x00	; 0
    3cd4:	8a f0       	brmi	.+34     	; 0x3cf8 <__mulsf3_pse+0x84>
    3cd6:	e1 f0       	breq	.+56     	; 0x3d10 <__mulsf3_pse+0x9c>
    3cd8:	88 23       	and	r24, r24
    3cda:	4a f0       	brmi	.+18     	; 0x3cee <__mulsf3_pse+0x7a>
    3cdc:	ee 0f       	add	r30, r30
    3cde:	ff 1f       	adc	r31, r31
    3ce0:	bb 1f       	adc	r27, r27
    3ce2:	66 1f       	adc	r22, r22
    3ce4:	77 1f       	adc	r23, r23
    3ce6:	88 1f       	adc	r24, r24
    3ce8:	91 50       	subi	r25, 0x01	; 1
    3cea:	50 40       	sbci	r21, 0x00	; 0
    3cec:	a9 f7       	brne	.-22     	; 0x3cd8 <__mulsf3_pse+0x64>
    3cee:	9e 3f       	cpi	r25, 0xFE	; 254
    3cf0:	51 05       	cpc	r21, r1
    3cf2:	70 f0       	brcs	.+28     	; 0x3d10 <__mulsf3_pse+0x9c>
    3cf4:	5c cf       	rjmp	.-328    	; 0x3bae <__fp_inf>
    3cf6:	a6 cf       	rjmp	.-180    	; 0x3c44 <__fp_szero>
    3cf8:	5f 3f       	cpi	r21, 0xFF	; 255
    3cfa:	ec f3       	brlt	.-6      	; 0x3cf6 <__mulsf3_pse+0x82>
    3cfc:	98 3e       	cpi	r25, 0xE8	; 232
    3cfe:	dc f3       	brlt	.-10     	; 0x3cf6 <__mulsf3_pse+0x82>
    3d00:	86 95       	lsr	r24
    3d02:	77 95       	ror	r23
    3d04:	67 95       	ror	r22
    3d06:	b7 95       	ror	r27
    3d08:	f7 95       	ror	r31
    3d0a:	e7 95       	ror	r30
    3d0c:	9f 5f       	subi	r25, 0xFF	; 255
    3d0e:	c1 f7       	brne	.-16     	; 0x3d00 <__mulsf3_pse+0x8c>
    3d10:	fe 2b       	or	r31, r30
    3d12:	88 0f       	add	r24, r24
    3d14:	91 1d       	adc	r25, r1
    3d16:	96 95       	lsr	r25
    3d18:	87 95       	ror	r24
    3d1a:	97 f9       	bld	r25, 7
    3d1c:	08 95       	ret

00003d1e <_exit>:
    3d1e:	f8 94       	cli

00003d20 <__stop_program>:
    3d20:	ff cf       	rjmp	.-2      	; 0x3d20 <__stop_program>
